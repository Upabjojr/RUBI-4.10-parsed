List[RuleDelayed[HoldPattern[Int[Power[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[b, IntPart[p]], Power[Times[b, Power[x, n]], FracPart[p]], Power[Power[x, Times[n, FracPart[p]]], -1]], Int[Power[x, Times[n, p]], x], x], FreeQ[List[b, n, p], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[x, Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[a, -1]], x], And[FreeQ[List[a, b, n, p], x], ZeroQ[Plus[Times[1, Power[n, -1]], p, 1]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, n, Plus[p, 1]], -1]], x]], Dist[Times[Plus[Times[n, Plus[p, 1]], 1], Power[Times[a, n, Plus[p, 1]], -1]], Int[Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], x], x]], And[FreeQ[List[a, b, n, p], x], NegativeIntegerQ[Plus[Times[1, Power[n, -1]], p, 1]], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], 2], Pattern[x, Blank[Symbol]]]], Condition[Int[Plus[Power[a, 2], Times[2, a, b, Power[x, n]], Times[Power[b, 2], Power[x, Times[2, n]]]], x], And[FreeQ[List[a, b, n], x], NonzeroQ[Plus[Times[3, n], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Times[n, p]], Power[Plus[b, Times[a, Power[x, Times[-1, n]]]], p]], x], And[FreeQ[List[a, b], x], RationalQ[n], Less[n, 0], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[a, Times[b, Power[x, n]]], p], x], x], And[FreeQ[List[a, b], x], PositiveIntegerQ[n, p]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[Times[n, p], 1], -1]], x], Dist[Times[a, n, p, Power[Plus[Times[n, p], 1], -1]], Int[Power[Plus[a, Times[b, Power[x, n]]], Plus[p, -1]], x], x]], And[FreeQ[List[a, b], x], PositiveIntegerQ[n], RationalQ[p], Greater[p, 0], Or[IntegerQ[Times[2, p]], And[Equal[n, 2], IntegerQ[Times[4, p]]], And[Equal[n, 2], IntegerQ[Times[3, p]]], Less[Denominator[Plus[p, Times[1, Power[n, -1]]]], Denominator[p]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-5, 4]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[2, Power[Times[Power[a, Times[5, Power[4, -1]]], Rt[Times[b, Power[a, -1]], 2]], -1], EllipticE[Times[1, Power[2, -1], ArcTan[Times[Rt[Times[b, Power[a, -1]], 2], x]]], 2]], x], And[FreeQ[List[a, b], x], PosQ[Times[b, Power[a, -1]]], PositiveQ[a]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-5, 4]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[1, Times[b, Power[x, 2], Power[a, -1]]], Times[1, Power[4, -1]]], Power[Times[a, Power[Plus[a, Times[b, Power[x, 2]]], Times[1, Power[4, -1]]]], -1]], Int[Times[1, Power[Power[Plus[1, Times[b, Power[x, 2], Power[a, -1]]], Times[5, Power[4, -1]]], -1]], x], x], And[FreeQ[List[a, b], x], PosQ[Times[b, Power[a, -1]]], Not[PositiveQ[a]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-7, 6]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[Plus[a, Times[b, Power[x, 2]]], Times[2, Power[3, -1]]], Power[Times[a, Power[Plus[a, Times[b, Power[x, 2]]], -1]], Times[2, Power[3, -1]]]], -1]], Subst[Int[Times[1, Power[Power[Plus[1, Times[-1, b, Power[x, 2]]], Times[1, Power[3, -1]]], -1]], x], x, Times[x, Power[Sqrt[Plus[a, Times[b, Power[x, 2]]]], -1]]], x], FreeQ[List[a, b], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, n, Plus[p, 1]], -1]], x]], Dist[Times[Plus[Times[n, Plus[p, 1]], 1], Power[Times[a, n, Plus[p, 1]], -1]], Int[Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], x], x]], And[FreeQ[List[a, b], x], PositiveIntegerQ[n], RationalQ[p], Less[p, -1], Or[IntegerQ[Times[2, p]], And[Equal[n, 2], IntegerQ[Times[4, p]]], And[Equal[n, 2], IntegerQ[Times[3, p]]], Less[Denominator[Plus[p, Times[1, Power[n, -1]]]], Denominator[p]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[Times[3, Power[Rt[a, 3], 2]], -1]], Int[Times[1, Power[Plus[Rt[a, 3], Times[Rt[b, 3], x]], -1]], x], x], Dist[Times[1, Power[Times[3, Power[Rt[a, 3], 2]], -1]], Int[Times[Plus[Times[2, Rt[a, 3]], Times[-1, Rt[b, 3], x]], Power[Plus[Power[Rt[a, 3], 2], Times[-1, Rt[a, 3], Rt[b, 3], x], Times[Power[Rt[b, 3], 2], Power[x, 2]]], -1]], x], x]], FreeQ[List[a, b], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[r, Numerator[Rt[Times[a, Power[b, -1]], n]]], Set[s, Denominator[Rt[Times[a, Power[b, -1]], n]]], k, u], Simp[CompoundExpression[Set[u, Int[Times[Plus[r, Times[-1, s, Cos[Times[Plus[Times[2, k], -1], Pi, Power[n, -1]]], x]], Power[Plus[Power[r, 2], Times[-1, 2, r, s, Cos[Times[Plus[Times[2, k], -1], Pi, Power[n, -1]]], x], Times[Power[s, 2], Power[x, 2]]], -1]], x]], Plus[Times[r, Power[Times[a, n], -1], Int[Times[1, Power[Plus[r, Times[s, x]], -1]], x]], Dist[Times[2, r, Power[Times[a, n], -1]], Sum[u, List[k, 1, Times[Plus[n, -1], Power[2, -1]]]], x]]], x]], And[FreeQ[List[a, b], x], PositiveIntegerQ[Times[Plus[n, -3], Power[2, -1]]], PosQ[Times[a, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[r, Numerator[Rt[Times[-1, a, Power[b, -1]], n]]], Set[s, Denominator[Rt[Times[-1, a, Power[b, -1]], n]]], k, u], Simp[CompoundExpression[Set[u, Int[Times[Plus[r, Times[s, Cos[Times[Plus[Times[2, k], -1], Pi, Power[n, -1]]], x]], Power[Plus[Power[r, 2], Times[2, r, s, Cos[Times[Plus[Times[2, k], -1], Pi, Power[n, -1]]], x], Times[Power[s, 2], Power[x, 2]]], -1]], x]], Plus[Times[r, Power[Times[a, n], -1], Int[Times[1, Power[Plus[r, Times[-1, s, x]], -1]], x]], Dist[Times[2, r, Power[Times[a, n], -1]], Sum[u, List[k, 1, Times[Plus[n, -1], Power[2, -1]]]], x]]], x]], And[FreeQ[List[a, b], x], PositiveIntegerQ[Times[Plus[n, -3], Power[2, -1]]], NegQ[Times[a, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[1, Power[Times[Rt[a, 2], Rt[b, 2]], -1], ArcTan[Times[Rt[b, 2], x, Power[Rt[a, 2], -1]]]], x], And[FreeQ[List[a, b], x], PosQ[Times[a, Power[b, -1]]], Or[PositiveQ[a], PositiveQ[b]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Power[Times[Rt[Times[-1, a], 2], Rt[Times[-1, b], 2]], -1], ArcTan[Times[Rt[Times[-1, b], 2], x, Power[Rt[Times[-1, a], 2], -1]]]], x]], And[FreeQ[List[a, b], x], PosQ[Times[a, Power[b, -1]]], Or[NegativeQ[a], NegativeQ[b]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Rt[Times[a, Power[b, -1]], 2], Power[a, -1], ArcTan[Times[x, Power[Rt[Times[a, Power[b, -1]], 2], -1]]]], x], And[FreeQ[List[a, b], x], PosQ[Times[a, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[1, Power[Times[Rt[a, 2], Rt[Times[-1, b], 2]], -1], ArcTanh[Times[Rt[Times[-1, b], 2], x, Power[Rt[a, 2], -1]]]], x], And[FreeQ[List[a, b], x], NegQ[Times[a, Power[b, -1]]], Or[PositiveQ[a], NegativeQ[b]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Power[Times[Rt[Times[-1, a], 2], Rt[b, 2]], -1], ArcTanh[Times[Rt[b, 2], x, Power[Rt[Times[-1, a], 2], -1]]]], x]], And[FreeQ[List[a, b], x], NegQ[Times[a, Power[b, -1]]], Or[NegativeQ[a], PositiveQ[b]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Rt[Times[-1, a, Power[b, -1]], 2], Power[a, -1], ArcTanh[Times[x, Power[Rt[Times[-1, a, Power[b, -1]], 2], -1]]]], x], And[FreeQ[List[a, b], x], NegQ[Times[a, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[r, Numerator[Rt[Times[a, Power[b, -1]], n]]], Set[s, Denominator[Rt[Times[a, Power[b, -1]], n]]], k, u, v], Simp[CompoundExpression[Set[u, Plus[Int[Times[Plus[r, Times[-1, s, Cos[Times[Plus[Times[2, k], -1], Pi, Power[n, -1]]], x]], Power[Plus[Power[r, 2], Times[-1, 2, r, s, Cos[Times[Plus[Times[2, k], -1], Pi, Power[n, -1]]], x], Times[Power[s, 2], Power[x, 2]]], -1]], x], Int[Times[Plus[r, Times[s, Cos[Times[Plus[Times[2, k], -1], Pi, Power[n, -1]]], x]], Power[Plus[Power[r, 2], Times[2, r, s, Cos[Times[Plus[Times[2, k], -1], Pi, Power[n, -1]]], x], Times[Power[s, 2], Power[x, 2]]], -1]], x]]], Plus[Times[2, Power[r, 2], Power[Times[a, n], -1], Int[Times[1, Power[Plus[Power[r, 2], Times[Power[s, 2], Power[x, 2]]], -1]], x]], Dist[Times[2, r, Power[Times[a, n], -1]], Sum[u, List[k, 1, Times[Plus[n, -2], Power[4, -1]]]], x]]], x]], And[FreeQ[List[a, b], x], PositiveIntegerQ[Times[Plus[n, -2], Power[4, -1]]], PosQ[Times[a, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[r, Numerator[Rt[Times[-1, a, Power[b, -1]], n]]], Set[s, Denominator[Rt[Times[-1, a, Power[b, -1]], n]]], k, u], Simp[CompoundExpression[Set[u, Plus[Int[Times[Plus[r, Times[-1, s, Cos[Times[Times[2, k, Pi], Power[n, -1]]], x]], Power[Plus[Power[r, 2], Times[-1, 2, r, s, Cos[Times[Times[2, k, Pi], Power[n, -1]]], x], Times[Power[s, 2], Power[x, 2]]], -1]], x], Int[Times[Plus[r, Times[s, Cos[Times[Times[2, k, Pi], Power[n, -1]]], x]], Power[Plus[Power[r, 2], Times[2, r, s, Cos[Times[Times[2, k, Pi], Power[n, -1]]], x], Times[Power[s, 2], Power[x, 2]]], -1]], x]]], Plus[Times[2, Power[r, 2], Power[Times[a, n], -1], Int[Times[1, Power[Plus[Power[r, 2], Times[-1, Power[s, 2], Power[x, 2]]], -1]], x]], Dist[Times[2, r, Power[Times[a, n], -1]], Sum[u, List[k, 1, Times[Plus[n, -2], Power[4, -1]]]], x]]], x]], And[FreeQ[List[a, b], x], PositiveIntegerQ[Times[Plus[n, -2], Power[4, -1]]], NegQ[Times[a, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numerator[Rt[Times[a, Power[b, -1]], 2]]], Set[s, Denominator[Rt[Times[a, Power[b, -1]], 2]]]], Plus[Dist[Times[1, Power[Times[2, r], -1]], Int[Times[Plus[r, Times[-1, s, Power[x, 2]]], Power[Plus[a, Times[b, Power[x, 4]]], -1]], x], x], Dist[Times[1, Power[Times[2, r], -1]], Int[Times[Plus[r, Times[s, Power[x, 2]]], Power[Plus[a, Times[b, Power[x, 4]]], -1]], x], x]]], And[FreeQ[List[a, b], x], Or[PositiveQ[Times[a, Power[b, -1]]], And[PosQ[Times[a, Power[b, -1]]], AtomQ[SplitProduct[SumBaseQ, a]], AtomQ[SplitProduct[SumBaseQ, b]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numerator[Rt[Times[-1, a, Power[b, -1]], 2]]], Set[s, Denominator[Rt[Times[-1, a, Power[b, -1]], 2]]]], Plus[Dist[Times[r, Power[Times[2, a], -1]], Int[Times[1, Power[Plus[r, Times[-1, s, Power[x, 2]]], -1]], x], x], Dist[Times[r, Power[Times[2, a], -1]], Int[Times[1, Power[Plus[r, Times[s, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b], x], Not[PositiveQ[Times[a, Power[b, -1]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numerator[Rt[Times[a, Power[b, -1]], 4]]], Set[s, Denominator[Rt[Times[a, Power[b, -1]], 4]]]], Plus[Dist[Times[r, Power[Times[2, Sqrt[2], a], -1]], Int[Times[Plus[Times[Sqrt[2], r], Times[-1, s, Power[x, Times[n, Power[4, -1]]]]], Power[Plus[Power[r, 2], Times[-1, Sqrt[2], r, s, Power[x, Times[n, Power[4, -1]]]], Times[Power[s, 2], Power[x, Times[n, Power[2, -1]]]]], -1]], x], x], Dist[Times[r, Power[Times[2, Sqrt[2], a], -1]], Int[Times[Plus[Times[Sqrt[2], r], Times[s, Power[x, Times[n, Power[4, -1]]]]], Power[Plus[Power[r, 2], Times[Sqrt[2], r, s, Power[x, Times[n, Power[4, -1]]]], Times[Power[s, 2], Power[x, Times[n, Power[2, -1]]]]], -1]], x], x]]], And[FreeQ[List[a, b], x], PositiveIntegerQ[Plus[Times[n, Power[4, -1]], -1]], PositiveQ[Times[a, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numerator[Rt[Times[-1, a, Power[b, -1]], 2]]], Set[s, Denominator[Rt[Times[-1, a, Power[b, -1]], 2]]]], Plus[Dist[Times[r, Power[Times[2, a], -1]], Int[Times[1, Power[Plus[r, Times[-1, s, Power[x, Times[n, Power[2, -1]]]]], -1]], x], x], Dist[Times[r, Power[Times[2, a], -1]], Int[Times[1, Power[Plus[r, Times[s, Power[x, Times[n, Power[2, -1]]]]], -1]], x], x]]], And[FreeQ[List[a, b], x], PositiveIntegerQ[Plus[Times[n, Power[4, -1]], -1]], Not[PositiveQ[Times[a, Power[b, -1]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[ArcSinh[Times[Rt[b, 2], x, Power[Sqrt[a], -1]]], Power[Rt[b, 2], -1]], x], And[FreeQ[List[a, b], x], PositiveQ[a], PosQ[b]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[ArcSin[Times[Rt[Times[-1, b], 2], x, Power[Sqrt[a], -1]]], Power[Rt[Times[-1, b], 2], -1]], x], And[FreeQ[List[a, b], x], PositiveQ[a], NegQ[b]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Subst[Int[Times[1, Power[Plus[1, Times[-1, b, Power[x, 2]]], -1]], x], x, Times[x, Power[Sqrt[Plus[a, Times[b, Power[x, 2]]]], -1]]], And[FreeQ[List[a, b], x], Not[PositiveQ[a]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numer[Rt[Times[b, Power[a, -1]], 3]]], Set[s, Denom[Rt[Times[b, Power[a, -1]], 3]]]], Simp[Times[2, Sqrt[Plus[2, Sqrt[3]]], Plus[s, Times[r, x]], Sqrt[Times[Plus[Power[s, 2], Times[-1, r, s, x], Times[Power[r, 2], Power[x, 2]]], Power[Power[Plus[Times[Plus[1, Sqrt[3]], s], Times[r, x]], 2], -1]]], Power[Times[Power[3, Times[1, Power[4, -1]]], r, Sqrt[Plus[a, Times[b, Power[x, 3]]]], Sqrt[Times[s, Plus[s, Times[r, x]], Power[Power[Plus[Times[Plus[1, Sqrt[3]], s], Times[r, x]], 2], -1]]]], -1], EllipticF[ArcSin[Times[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], s], Times[r, x]], Power[Plus[Times[Plus[1, Sqrt[3]], s], Times[r, x]], -1]]], Plus[-7, Times[-1, 4, Sqrt[3]]]]], x]], And[FreeQ[List[a, b], x], PosQ[a]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numer[Rt[Times[b, Power[a, -1]], 3]]], Set[s, Denom[Rt[Times[b, Power[a, -1]], 3]]]], Simp[Times[2, Sqrt[Plus[2, Times[-1, Sqrt[3]]]], Plus[s, Times[r, x]], Sqrt[Times[Plus[Power[s, 2], Times[-1, r, s, x], Times[Power[r, 2], Power[x, 2]]], Power[Power[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], s], Times[r, x]], 2], -1]]], Power[Times[Power[3, Times[1, Power[4, -1]]], r, Sqrt[Plus[a, Times[b, Power[x, 3]]]], Sqrt[Times[-1, s, Plus[s, Times[r, x]], Power[Power[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], s], Times[r, x]], 2], -1]]]], -1], EllipticF[ArcSin[Times[Plus[Times[Plus[1, Sqrt[3]], s], Times[r, x]], Power[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], s], Times[r, x]], -1]]], Plus[-7, Times[4, Sqrt[3]]]]], x]], And[FreeQ[List[a, b], x], NegQ[a]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[b, Power[a, -1]], 4]]], Simp[Times[Plus[1, Times[Power[q, 2], Power[x, 2]]], Sqrt[Times[Plus[a, Times[b, Power[x, 4]]], Power[Times[a, Power[Plus[1, Times[Power[q, 2], Power[x, 2]]], 2]], -1]]], Power[Times[2, q, Sqrt[Plus[a, Times[b, Power[x, 4]]]]], -1], EllipticF[Times[2, ArcTan[Times[q, x]]], Times[1, Power[2, -1]]]], x]], And[FreeQ[List[a, b], x], PosQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[EllipticF[ArcSin[Times[Rt[Times[-1, b], 4], x, Power[Rt[a, 4], -1]]], -1], Power[Times[Rt[a, 4], Rt[Times[-1, b], 4]], -1]], x], And[FreeQ[List[a, b], x], NegQ[Times[b, Power[a, -1]]], PositiveQ[a]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, a, b], 2]]], Condition[Simp[Times[Sqrt[Plus[Times[-1, a], Times[q, Power[x, 2]]]], Sqrt[Times[Plus[a, Times[q, Power[x, 2]]], Power[q, -1]]], Power[Times[Sqrt[2], Sqrt[Times[-1, a]], Sqrt[Plus[a, Times[b, Power[x, 4]]]]], -1], EllipticF[ArcSin[Times[x, Power[Sqrt[Times[Plus[a, Times[q, Power[x, 2]]], Power[Times[2, q], -1]]], -1]]], Times[1, Power[2, -1]]]], x], IntegerQ[q]]], And[FreeQ[List[a, b], x], NegativeQ[a], PositiveQ[b]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, a, b], 2]]], Simp[Times[Sqrt[Times[Plus[a, Times[-1, q, Power[x, 2]]], Power[Plus[a, Times[q, Power[x, 2]]], -1]]], Sqrt[Times[Plus[a, Times[q, Power[x, 2]]], Power[q, -1]]], Power[Times[Sqrt[2], Sqrt[Plus[a, Times[b, Power[x, 4]]]], Sqrt[Times[a, Power[Plus[a, Times[q, Power[x, 2]]], -1]]]], -1], EllipticF[ArcSin[Times[x, Power[Sqrt[Times[Plus[a, Times[q, Power[x, 2]]], Power[Times[2, q], -1]]], -1]]], Times[1, Power[2, -1]]]], x]], And[FreeQ[List[a, b], x], NegativeQ[a], PositiveQ[b]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[1, Times[b, Power[x, 4], Power[a, -1]]]], Power[Sqrt[Plus[a, Times[b, Power[x, 4]]]], -1]], Int[Times[1, Power[Sqrt[Plus[1, Times[b, Power[x, 4], Power[a, -1]]]], -1]], x], x], And[FreeQ[List[a, b], x], NegQ[Times[b, Power[a, -1]]], Not[PositiveQ[a]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 6]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numer[Rt[Times[b, Power[a, -1]], 3]]], Set[s, Denom[Rt[Times[b, Power[a, -1]], 3]]]], Simp[Times[x, Plus[s, Times[r, Power[x, 2]]], Sqrt[Times[Plus[Power[s, 2], Times[-1, r, s, Power[x, 2]], Times[Power[r, 2], Power[x, 4]]], Power[Power[Plus[s, Times[Plus[1, Sqrt[3]], r, Power[x, 2]]], 2], -1]]], Power[Times[2, Power[3, Times[1, Power[4, -1]]], s, Sqrt[Plus[a, Times[b, Power[x, 6]]]], Sqrt[Times[r, Power[x, 2], Plus[s, Times[r, Power[x, 2]]], Power[Power[Plus[s, Times[Plus[1, Sqrt[3]], r, Power[x, 2]]], 2], -1]]]], -1], EllipticF[ArcCos[Times[Plus[s, Times[Plus[1, Times[-1, Sqrt[3]]], r, Power[x, 2]]], Power[Plus[s, Times[Plus[1, Sqrt[3]], r, Power[x, 2]]], -1]]], Times[Plus[2, Sqrt[3]], Power[4, -1]]]], x]], FreeQ[List[a, b], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 8]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Plus[1, Times[-1, Rt[Times[b, Power[a, -1]], 4], Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 8]]]], -1]], x], x], Dist[Times[1, Power[2, -1]], Int[Times[Plus[1, Times[Rt[Times[b, Power[a, -1]], 4], Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 8]]]], -1]], x], x]], FreeQ[List[a, b], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 4]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, x, Power[Power[Plus[a, Times[b, Power[x, 2]]], Times[1, Power[4, -1]]], -1]], x], Times[-1, Dist[a, Int[Times[1, Power[Power[Plus[a, Times[b, Power[x, 2]]], Times[5, Power[4, -1]]], -1]], x], x]]], And[FreeQ[List[a, b], x], PosQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 4]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[2, Power[Times[Power[a, Times[1, Power[4, -1]]], Rt[Times[-1, b, Power[a, -1]], 2]], -1], EllipticE[Times[1, Power[2, -1], ArcSin[Times[Rt[Times[-1, b, Power[a, -1]], 2], x]]], 2]], x], And[FreeQ[List[a, b], x], NegQ[Times[b, Power[a, -1]]], PositiveQ[a]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 4]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[1, Times[b, Power[x, 2], Power[a, -1]]], Times[1, Power[4, -1]]], Power[Power[Plus[a, Times[b, Power[x, 2]]], Times[1, Power[4, -1]]], -1]], Int[Times[1, Power[Power[Plus[1, Times[b, Power[x, 2], Power[a, -1]]], Times[1, Power[4, -1]]], -1]], x], x], And[FreeQ[List[a, b], x], NegQ[Times[b, Power[a, -1]]], Not[PositiveQ[a]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 4]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[2, Power[Times[Power[a, Times[3, Power[4, -1]]], Rt[Times[b, Power[a, -1]], 2]], -1], EllipticF[Times[1, Power[2, -1], ArcTan[Times[Rt[Times[b, Power[a, -1]], 2], x]]], 2]], x], And[FreeQ[List[a, b], x], PositiveQ[a], PosQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 4]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[2, Power[Times[Power[a, Times[3, Power[4, -1]]], Rt[Times[-1, b, Power[a, -1]], 2]], -1], EllipticF[Times[1, Power[2, -1], ArcSin[Times[Rt[Times[-1, b, Power[a, -1]], 2], x]]], 2]], x], And[FreeQ[List[a, b], x], PositiveQ[a], NegQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 4]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[1, Times[b, Power[x, 2], Power[a, -1]]], Times[3, Power[4, -1]]], Power[Power[Plus[a, Times[b, Power[x, 2]]], Times[3, Power[4, -1]]], -1]], Int[Times[1, Power[Power[Plus[1, Times[b, Power[x, 2], Power[a, -1]]], Times[3, Power[4, -1]]], -1]], x], x], And[FreeQ[List[a, b], x], Not[PositiveQ[a]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 3]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[3, Sqrt[Times[b, Power[x, 2]]], Power[Times[2, b, x], -1]], Subst[Int[Times[x, Power[Sqrt[Plus[Times[-1, a], Power[x, 3]]], -1]], x], x, Power[Plus[a, Times[b, Power[x, 2]]], Times[1, Power[3, -1]]]], x], FreeQ[List[a, b], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-2, 3]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[3, Sqrt[Times[b, Power[x, 2]]], Power[Times[2, b, x], -1]], Subst[Int[Times[1, Power[Sqrt[Plus[Times[-1, a], Power[x, 3]]], -1]], x], x, Power[Plus[a, Times[b, Power[x, 2]]], Times[1, Power[3, -1]]]], x], FreeQ[List[a, b], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-3, 4]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[x, 3], Power[Plus[1, Times[a, Power[Times[b, Power[x, 4]], -1]]], Times[3, Power[4, -1]]], Power[Power[Plus[a, Times[b, Power[x, 4]]], Times[3, Power[4, -1]]], -1]], Int[Times[1, Power[Times[Power[x, 3], Power[Plus[1, Times[a, Power[Times[b, Power[x, 4]], -1]]], Times[3, Power[4, -1]]]], -1]], x], x], FreeQ[List[a, b], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 6]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[3, x, Power[Times[2, Power[Plus[a, Times[b, Power[x, 2]]], Times[1, Power[6, -1]]]], -1]], x], Times[-1, Dist[Times[a, Power[2, -1]], Int[Times[1, Power[Power[Plus[a, Times[b, Power[x, 2]]], Times[7, Power[6, -1]]], -1]], x], x]]], FreeQ[List[a, b], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[a, Plus[p, Times[1, Power[n, -1]]]], Subst[Int[Times[1, Power[Power[Plus[1, Times[-1, b, Power[x, n]]], Plus[p, Times[1, Power[n, -1]], 1]], -1]], x], x, Times[x, Power[Power[Plus[a, Times[b, Power[x, n]]], Times[1, Power[n, -1]]], -1]]], x], And[FreeQ[List[a, b], x], PositiveIntegerQ[n], RationalQ[p], Less[-1, p, 0], Unequal[p, Times[-1, Power[2, -1]]], IntegerQ[Plus[p, Times[1, Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[a, Power[Plus[a, Times[b, Power[x, n]]], -1]], Plus[p, Times[1, Power[n, -1]]]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, Times[1, Power[n, -1]]]]], Subst[Int[Times[1, Power[Power[Plus[1, Times[-1, b, Power[x, n]]], Plus[p, Times[1, Power[n, -1]], 1]], -1]], x], x, Times[x, Power[Power[Plus[a, Times[b, Power[x, n]]], Times[1, Power[n, -1]]], -1]]], x], And[FreeQ[List[a, b], x], PositiveIntegerQ[n], RationalQ[p], Less[-1, p, 0], Unequal[p, Times[-1, Power[2, -1]]], Less[Denominator[Plus[p, Times[1, Power[n, -1]]]], Denominator[p]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[a, Times[b, Power[x, Times[-1, n]]]], p], Power[Power[x, 2], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, b, p], x], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[n]]], Dist[k, Subst[Int[Times[Power[x, Plus[k, -1]], Power[Plus[a, Times[b, Power[x, Times[k, n]]]], p]], x], x, Power[x, Times[1, Power[k, -1]]]], x]], And[FreeQ[List[a, b, p], x], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[a, Times[b, Power[x, n]]], p], x], x], And[FreeQ[List[a, b, n], x], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[a, p], x, Hypergeometric2F1[Times[-1, p], Times[1, Power[n, -1]], Plus[Times[1, Power[n, -1]], 1], Times[-1, b, Power[x, n], Power[a, -1]]]], x], And[FreeQ[List[a, b, n, p], x], Not[PositiveIntegerQ[p]], Not[IntegerQ[Times[1, Power[n, -1]]]], Not[NegativeIntegerQ[Simplify[Plus[Times[1, Power[n, -1]], p]]]], Or[IntegerQ[p], PositiveQ[a]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, IntPart[p]], Power[Plus[a, Times[b, Power[x, n]]], FracPart[p]], Power[Power[Plus[1, Times[b, Power[x, n], Power[a, -1]]], FracPart[p]], -1]], Int[Power[Plus[1, Times[b, Power[x, n], Power[a, -1]]], p], x], x], And[FreeQ[List[a, b, n, p], x], Not[PositiveIntegerQ[p]], Not[IntegerQ[Times[1, Power[n, -1]]]], Not[NegativeIntegerQ[Simplify[Plus[Times[1, Power[n, -1]], p]]]], Not[Or[IntegerQ[p], PositiveQ[a]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Power[Plus[a, Times[b, Power[x, n]]], p], x], x, u], x], And[FreeQ[List[a, b, n, p], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a1, Blank[]]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[a2, Blank[]]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[Times[a1, a2], Times[b1, b2, Power[x, Times[2, n]]]], p], x], And[FreeQ[List[a1, b1, a2, b2, n, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], Or[IntegerQ[p], And[PositiveQ[a1], PositiveQ[a2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[a1, Times[b1, Power[x, n]]], p], Power[Plus[a2, Times[b2, Power[x, n]]], p], Power[Plus[Times[2, n, p], 1], -1]], x], Dist[Times[2, a1, a2, n, p, Power[Plus[Times[2, n, p], 1], -1]], Int[Times[Power[Plus[a1, Times[b1, Power[x, n]]], Plus[p, -1]], Power[Plus[a2, Times[b2, Power[x, n]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a1, b1, a2, b2], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], PositiveIntegerQ[Times[2, n]], RationalQ[p], Greater[p, 0], Or[IntegerQ[Times[2, p]], Less[Denominator[Plus[p, Times[1, Power[n, -1]]]], Denominator[p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Power[Plus[a1, Times[b1, Power[x, n]]], Plus[p, 1]], Power[Plus[a2, Times[b2, Power[x, n]]], Plus[p, 1]], Power[Times[2, a1, a2, n, Plus[p, 1]], -1]], x]], Dist[Times[Plus[Times[2, n, Plus[p, 1]], 1], Power[Times[2, a1, a2, n, Plus[p, 1]], -1]], Int[Times[Power[Plus[a1, Times[b1, Power[x, n]]], Plus[p, 1]], Power[Plus[a2, Times[b2, Power[x, n]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a1, b1, a2, b2], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], PositiveIntegerQ[Times[2, n]], RationalQ[p], Less[p, -1], Or[IntegerQ[Times[2, p]], Less[Denominator[Plus[p, Times[1, Power[n, -1]]]], Denominator[p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[a1, Times[b1, Power[x, Times[-1, n]]]], p], Power[Plus[a2, Times[b2, Power[x, Times[-1, n]]]], p], Power[Power[x, 2], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a1, b1, a2, b2, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], NegativeIntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[Times[2, n]]]], Dist[k, Subst[Int[Times[Power[x, Plus[k, -1]], Power[Plus[a1, Times[b1, Power[x, Times[k, n]]]], p], Power[Plus[a2, Times[b2, Power[x, Times[k, n]]]], p]], x], x, Power[x, Times[1, Power[k, -1]]]], x]], And[FreeQ[List[a1, b1, a2, b2, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], FractionQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a1, Blank[]]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[a2, Blank[]]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a1, Times[b1, Power[x, n]]], FracPart[p]], Power[Plus[a2, Times[b2, Power[x, n]]], FracPart[p]], Power[Power[Plus[Times[a1, a2], Times[b1, b2, Power[x, Times[2, n]]]], FracPart[p]], -1]], Int[Power[Plus[Times[a1, a2], Times[b1, b2, Power[x, Times[2, n]]]], p], x], x], And[FreeQ[List[a1, b1, a2, b2, n, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[c, x], m], Power[Plus[Times[a1, a2], Times[b1, b2, Power[x, Times[2, n]]]], p]], x], And[FreeQ[List[a1, b1, a2, b2, c, m, n, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], Or[IntegerQ[p], And[PositiveQ[a1], PositiveQ[a2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, m], Power[Times[n, Power[b, Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]]], -1]], Subst[Int[Power[Times[b, x], Plus[p, Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]], x], x, Power[x, n]], x], And[FreeQ[List[b, c, m, n, p], x], Or[IntegerQ[m], PositiveQ[c]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, m], Power[b, IntPart[p]], Power[Times[b, Power[x, n]], FracPart[p]], Power[Power[x, Times[n, FracPart[p]]], -1]], Int[Power[x, Plus[m, Times[n, p]]], x], x], And[FreeQ[List[b, c, m, n, p], x], Or[IntegerQ[m], PositiveQ[c]], Not[IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[m]], Power[Times[c, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Times[b, Power[x, n]], p]], x], x], And[FreeQ[List[b, c, m, n, p], x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Plus[m, Times[n, p]]], Power[Plus[b, Times[a, Power[x, Times[-1, n]]]], p]], x], And[FreeQ[List[a, b, m, n], x], IntegerQ[p], NegQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Times[c, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, c, Plus[m, 1]], -1]], x], And[FreeQ[List[a, b, c, m, n, p], x], ZeroQ[Plus[Times[Plus[m, 1], Power[n, -1]], p, 1]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Times[c, x], Plus[m, 1]], Power[Plus[a1, Times[b1, Power[x, n]]], Plus[p, 1]], Power[Plus[a2, Times[b2, Power[x, n]]], Plus[p, 1]], Power[Times[a1, a2, c, Plus[m, 1]], -1]], x], And[FreeQ[List[a1, b1, a2, b2, c, m, n, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], ZeroQ[Plus[Times[Plus[m, 1], Power[Times[2, n], -1]], p, 1]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]], Power[Plus[a, Times[b, x]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, m, n, p], x], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]], Power[Plus[a1, Times[b1, x]], p], Power[Plus[a2, Times[b2, x]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a1, b1, a2, b2, m, n, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], IntegerQ[Simplify[Times[Plus[m, 1], Power[Times[2, n], -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[m]], Power[Times[c, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, m, n, p], x], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[m]], Power[Times[c, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a1, Times[b1, Power[x, n]]], p], Power[Plus[a2, Times[b2, Power[x, n]]], p]], x], x], And[FreeQ[List[a1, b1, a2, b2, c, m, n, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], IntegerQ[Simplify[Times[Plus[m, 1], Power[Times[2, n], -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[c, x], m], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, m, n], x], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, Plus[m, Times[n, Plus[p, 1]], 1], Power[Times[a, Plus[m, 1]], -1]], Int[Times[Power[x, Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x]]], And[FreeQ[List[a, b, m, n, p], x], NegativeIntegerQ[Simplify[Plus[Times[Plus[m, 1], Power[n, -1]], p, 1]]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Power[Plus[a1, Times[b1, Power[x, n]]], Plus[p, 1]], Power[Plus[a2, Times[b2, Power[x, n]]], Plus[p, 1]], Power[Times[a1, a2, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b1, b2, Plus[m, Times[2, n, Plus[p, 1]], 1], Power[Times[a1, a2, Plus[m, 1]], -1]], Int[Times[Power[x, Plus[m, Times[2, n]]], Power[Plus[a1, Times[b1, Power[x, n]]], p], Power[Plus[a2, Times[b2, Power[x, n]]], p]], x], x]]], And[FreeQ[List[a1, b1, a2, b2, m, n, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], NegativeIntegerQ[Simplify[Plus[Times[Plus[m, 1], Power[Times[2, n], -1]], p, 1]]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[c, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, c, n, Plus[p, 1]], -1]], x]], Dist[Times[Plus[m, Times[n, Plus[p, 1]], 1], Power[Times[a, n, Plus[p, 1]], -1]], Int[Times[Power[Times[c, x], m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, m, n, p], x], NegativeIntegerQ[Simplify[Plus[Times[Plus[m, 1], Power[n, -1]], p, 1]]], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[c, x], Plus[m, 1]], Power[Plus[a1, Times[b1, Power[x, n]]], Plus[p, 1]], Power[Plus[a2, Times[b2, Power[x, n]]], Plus[p, 1]], Power[Times[2, a1, a2, c, n, Plus[p, 1]], -1]], x]], Dist[Times[Plus[m, Times[2, n, Plus[p, 1]], 1], Power[Times[2, a1, a2, n, Plus[p, 1]], -1]], Int[Times[Power[Times[c, x], m], Power[Plus[a1, Times[b1, Power[x, n]]], Plus[p, 1]], Power[Plus[a2, Times[b2, Power[x, n]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a1, b1, a2, b2, c, m, n, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], NegativeIntegerQ[Simplify[Plus[Times[Plus[m, 1], Power[Times[2, n], -1]], p, 1]]], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, GCD[Plus[m, 1], n]]], Condition[Dist[Times[1, Power[k, -1]], Subst[Int[Times[Power[x, Plus[Times[Plus[m, 1], Power[k, -1]], -1]], Power[Plus[a, Times[b, Power[x, Times[n, Power[k, -1]]]]], p]], x], x, Power[x, k]], x], Unequal[k, 1]]], And[FreeQ[List[a, b, p], x], PositiveIntegerQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, GCD[Plus[m, 1], Times[2, n]]]], Condition[Dist[Times[1, Power[k, -1]], Subst[Int[Times[Power[x, Plus[Times[Plus[m, 1], Power[k, -1]], -1]], Power[Plus[a1, Times[b1, Power[x, Times[n, Power[k, -1]]]]], p], Power[Plus[a2, Times[b2, Power[x, Times[n, Power[k, -1]]]]], p]], x], x, Power[x, k]], x], Unequal[k, 1]]], And[FreeQ[List[a1, b1, a2, b2, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], PositiveIntegerQ[Times[2, n]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[c, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Times[c, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, n, p, Power[Times[Power[c, n], Plus[m, 1]], -1]], Int[Times[Power[Times[c, x], Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, c], x], PositiveIntegerQ[n], RationalQ[m, p], Greater[p, 0], Less[m, -1], Not[NegativeIntegerQ[Times[Plus[m, Times[n, p], n, 1], Power[n, -1]]]], IntBinomialQ[a, b, c, n, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[c, x], Plus[m, 1]], Power[Plus[a1, Times[b1, Power[x, n]]], p], Power[Plus[a2, Times[b2, Power[x, n]]], p], Power[Times[c, Plus[m, Times[2, n, p], 1]], -1]], x], Dist[Times[2, a1, a2, n, p, Power[Plus[m, Times[2, n, p], 1], -1]], Int[Times[Power[Times[c, x], m], Power[Plus[a1, Times[b1, Power[x, n]]], Plus[p, -1]], Power[Plus[a2, Times[b2, Power[x, n]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a1, b1, a2, b2, c, m], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], PositiveIntegerQ[Times[2, n]], RationalQ[m, p], Greater[p, 0], NonzeroQ[Plus[m, Times[2, n, p], 1]], IntBinomialQ[Times[a1, a2], Times[b1, b2], c, n, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[c, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Times[c, Plus[m, Times[n, p], 1]], -1]], x], Dist[Times[a, n, p, Power[Plus[m, Times[n, p], 1], -1]], Int[Times[Power[Times[c, x], m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, m], x], PositiveIntegerQ[n], RationalQ[m, p], Greater[p, 0], NonzeroQ[Plus[m, Times[n, p], 1]], IntBinomialQ[a, b, c, n, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-5, 4]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[x, Power[Plus[1, Times[a, Power[Times[b, Power[x, 4]], -1]]], Times[1, Power[4, -1]]], Power[Times[b, Power[Plus[a, Times[b, Power[x, 4]]], Times[1, Power[4, -1]]]], -1]], Int[Times[1, Power[Times[Power[x, 3], Power[Plus[1, Times[a, Power[Times[b, Power[x, 4]], -1]]], Times[5, Power[4, -1]]]], -1]], x], x], And[FreeQ[List[a, b], x], PosQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-5, 4]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, -3]], Power[Times[b, Plus[m, -4], Power[Plus[a, Times[b, Power[x, 4]]], Times[1, Power[4, -1]]]], -1]], x], Times[-1, Dist[Times[a, Plus[m, -3], Power[Times[b, Plus[m, -4]], -1]], Int[Times[Power[x, Plus[m, -4]], Power[Power[Plus[a, Times[b, Power[x, 4]]], Times[5, Power[4, -1]]], -1]], x], x]]], And[FreeQ[List[a, b], x], PosQ[Times[b, Power[a, -1]]], PositiveIntegerQ[Times[Plus[m, -2], Power[4, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-5, 4]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Power[Times[a, Plus[m, 1], Power[Plus[a, Times[b, Power[x, 4]]], Times[1, Power[4, -1]]]], -1]], x], Times[-1, Dist[Times[b, m, Power[Times[a, Plus[m, 1]], -1]], Int[Times[Power[x, Plus[m, 4]], Power[Power[Plus[a, Times[b, Power[x, 4]]], Times[5, Power[4, -1]]], -1]], x], x]]], And[FreeQ[List[a, b], x], PosQ[Times[b, Power[a, -1]]], NegativeIntegerQ[Times[Plus[m, -2], Power[4, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Rational[1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-5, 4]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Times[c, x]], Power[Plus[1, Times[a, Power[Times[b, Power[x, 2]], -1]]], Times[1, Power[4, -1]]], Power[Times[b, Power[Plus[a, Times[b, Power[x, 2]]], Times[1, Power[4, -1]]]], -1]], Int[Times[1, Power[Times[Power[x, 2], Power[Plus[1, Times[a, Power[Times[b, Power[x, 2]], -1]]], Times[5, Power[4, -1]]]], -1]], x], x], And[FreeQ[List[a, b, c], x], PosQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-5, 4]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, c, Power[Times[c, x], Plus[m, -1]], Power[Times[b, Plus[Times[2, m], -3], Power[Plus[a, Times[b, Power[x, 2]]], Times[1, Power[4, -1]]]], -1]], x], Times[-1, Dist[Times[2, a, Power[c, 2], Plus[m, -1], Power[Times[b, Plus[Times[2, m], -3]], -1]], Int[Times[Power[Times[c, x], Plus[m, -2]], Power[Power[Plus[a, Times[b, Power[x, 2]]], Times[5, Power[4, -1]]], -1]], x], x]]], And[FreeQ[List[a, b, c], x], PosQ[Times[b, Power[a, -1]]], IntegerQ[Times[2, m]], Greater[m, Times[3, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-5, 4]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[c, x], Plus[m, 1]], Power[Times[a, c, Plus[m, 1], Power[Plus[a, Times[b, Power[x, 2]]], Times[1, Power[4, -1]]]], -1]], x], Times[-1, Dist[Times[b, Plus[Times[2, m], 1], Power[Times[2, a, Power[c, 2], Plus[m, 1]], -1]], Int[Times[Power[Times[c, x], Plus[m, 2]], Power[Power[Plus[a, Times[b, Power[x, 2]]], Times[5, Power[4, -1]]], -1]], x], x]]], And[FreeQ[List[a, b, c], x], PosQ[Times[b, Power[a, -1]]], IntegerQ[Times[2, m]], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-5, 4]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Power[Times[b, x, Power[Plus[a, Times[b, Power[x, 4]]], Times[1, Power[4, -1]]]], -1], x]], Times[-1, Dist[Times[1, Power[b, -1]], Int[Times[1, Power[Times[Power[x, 2], Power[Plus[a, Times[b, Power[x, 4]]], Times[1, Power[4, -1]]]], -1]], x], x]]], And[FreeQ[List[a, b], x], NegQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[c, Plus[n, -1]], Power[Times[c, x], Plus[m, Times[-1, n], 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[b, n, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[Power[c, n], Plus[m, Times[-1, n], 1], Power[Times[b, n, Plus[p, 1]], -1]], Int[Times[Power[Times[c, x], Plus[m, Times[-1, n]]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, c], x], PositiveIntegerQ[n], RationalQ[m, p], Less[p, -1], Greater[Plus[m, 1], n], Not[NegativeIntegerQ[Times[Plus[m, Times[n, Plus[p, 1]], 1], Power[n, -1]]]], IntBinomialQ[a, b, c, n, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[c, Plus[Times[2, n], -1]], Power[Times[c, x], Plus[m, Times[-1, 2, n], 1]], Power[Plus[a1, Times[b1, Power[x, n]]], Plus[p, 1]], Power[Plus[a2, Times[b2, Power[x, n]]], Plus[p, 1]], Power[Times[2, b1, b2, n, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[Power[c, Times[2, n]], Plus[m, Times[-1, 2, n], 1], Power[Times[2, b1, b2, n, Plus[p, 1]], -1]], Int[Times[Power[Times[c, x], Plus[m, Times[-1, 2, n]]], Power[Plus[a1, Times[b1, Power[x, n]]], Plus[p, 1]], Power[Plus[a2, Times[b2, Power[x, n]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a1, b1, a2, b2, c], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], PositiveIntegerQ[Times[2, n]], RationalQ[m, p], Less[p, -1], Greater[Plus[m, 1], Times[2, n]], Not[NegativeIntegerQ[Times[Plus[m, Times[2, n, Plus[p, 1]], 1], Power[Times[2, n], -1]]]], IntBinomialQ[Times[a1, a2], Times[b1, b2], c, n, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[c, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, c, n, Plus[p, 1]], -1]], x]], Dist[Times[Plus[m, Times[n, Plus[p, 1]], 1], Power[Times[a, n, Plus[p, 1]], -1]], Int[Times[Power[Times[c, x], m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, m], x], PositiveIntegerQ[n], RationalQ[m, p], Less[p, -1], IntBinomialQ[a, b, c, n, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[c, x], Plus[m, 1]], Power[Plus[a1, Times[b1, Power[x, n]]], Plus[p, 1]], Power[Plus[a2, Times[b2, Power[x, n]]], Plus[p, 1]], Power[Times[2, a1, a2, c, n, Plus[p, 1]], -1]], x]], Dist[Times[Plus[m, Times[2, n, Plus[p, 1]], 1], Power[Times[2, a1, a2, n, Plus[p, 1]], -1]], Int[Times[Power[Times[c, x], m], Power[Plus[a1, Times[b1, Power[x, n]]], Plus[p, 1]], Power[Plus[a2, Times[b2, Power[x, n]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a1, b1, a2, b2, c, m], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], PositiveIntegerQ[Times[2, n]], RationalQ[m, p], Less[p, -1], IntBinomialQ[Times[a1, a2], Times[b1, b2], c, n, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[x, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Power[Times[3, Rt[a, 3], Rt[b, 3]], -1], Int[Times[1, Power[Plus[Rt[a, 3], Times[Rt[b, 3], x]], -1]], x], x]], Dist[Times[1, Power[Times[3, Rt[a, 3], Rt[b, 3]], -1]], Int[Times[Plus[Rt[a, 3], Times[Rt[b, 3], x]], Power[Plus[Power[Rt[a, 3], 2], Times[-1, Rt[a, 3], Rt[b, 3], x], Times[Power[Rt[b, 3], 2], Power[x, 2]]], -1]], x], x]], FreeQ[List[a, b], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[r, Numerator[Rt[Times[a, Power[b, -1]], n]]], Set[s, Denominator[Rt[Times[a, Power[b, -1]], n]]], k, u], Simp[CompoundExpression[Set[u, Int[Times[Plus[Times[r, Cos[Times[Plus[Times[2, k], -1], m, Pi, Power[n, -1]]]], Times[-1, s, Cos[Times[Plus[Times[2, k], -1], Plus[m, 1], Pi, Power[n, -1]]], x]], Power[Plus[Power[r, 2], Times[-1, 2, r, s, Cos[Times[Plus[Times[2, k], -1], Pi, Power[n, -1]]], x], Times[Power[s, 2], Power[x, 2]]], -1]], x]], Plus[Times[-1, Power[Times[-1, r], Plus[m, 1]], Power[Times[a, n, Power[s, m]], -1], Int[Times[1, Power[Plus[r, Times[s, x]], -1]], x]], Dist[Times[2, Power[r, Plus[m, 1]], Power[Times[a, n, Power[s, m]], -1]], Sum[u, List[k, 1, Times[Plus[n, -1], Power[2, -1]]]], x]]], x]], And[FreeQ[List[a, b], x], PositiveIntegerQ[Times[Plus[n, -1], Power[2, -1]]], PositiveIntegerQ[m], Less[m, Plus[n, -1]], PosQ[Times[a, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[r, Numerator[Rt[Times[-1, a, Power[b, -1]], n]]], Set[s, Denominator[Rt[Times[-1, a, Power[b, -1]], n]]], k, u], Simp[CompoundExpression[Set[u, Int[Times[Plus[Times[r, Cos[Times[Plus[Times[2, k], -1], m, Pi, Power[n, -1]]]], Times[s, Cos[Times[Plus[Times[2, k], -1], Plus[m, 1], Pi, Power[n, -1]]], x]], Power[Plus[Power[r, 2], Times[2, r, s, Cos[Times[Plus[Times[2, k], -1], Pi, Power[n, -1]]], x], Times[Power[s, 2], Power[x, 2]]], -1]], x]], Plus[Times[Power[r, Plus[m, 1]], Power[Times[a, n, Power[s, m]], -1], Int[Times[1, Power[Plus[r, Times[-1, s, x]], -1]], x]], Times[-1, Dist[Times[2, Power[Times[-1, r], Plus[m, 1]], Power[Times[a, n, Power[s, m]], -1]], Sum[u, List[k, 1, Times[Plus[n, -1], Power[2, -1]]]], x]]]], x]], And[FreeQ[List[a, b], x], PositiveIntegerQ[m, Times[Plus[n, -1], Power[2, -1]]], PositiveIntegerQ[m], Less[m, Plus[n, -1]], NegQ[Times[a, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[r, Numerator[Rt[Times[a, Power[b, -1]], n]]], Set[s, Denominator[Rt[Times[a, Power[b, -1]], n]]], k, u], Simp[CompoundExpression[Set[u, Plus[Int[Times[Plus[Times[r, Cos[Times[Plus[Times[2, k], -1], m, Pi, Power[n, -1]]]], Times[-1, s, Cos[Times[Plus[Times[2, k], -1], Plus[m, 1], Pi, Power[n, -1]]], x]], Power[Plus[Power[r, 2], Times[-1, 2, r, s, Cos[Times[Plus[Times[2, k], -1], Pi, Power[n, -1]]], x], Times[Power[s, 2], Power[x, 2]]], -1]], x], Int[Times[Plus[Times[r, Cos[Times[Plus[Times[2, k], -1], m, Pi, Power[n, -1]]]], Times[s, Cos[Times[Plus[Times[2, k], -1], Plus[m, 1], Pi, Power[n, -1]]], x]], Power[Plus[Power[r, 2], Times[2, r, s, Cos[Times[Plus[Times[2, k], -1], Pi, Power[n, -1]]], x], Times[Power[s, 2], Power[x, 2]]], -1]], x]]], Plus[Times[2, Power[-1, Times[m, Power[2, -1]]], Power[r, Plus[m, 2]], Power[Times[a, n, Power[s, m]], -1], Int[Times[1, Power[Plus[Power[r, 2], Times[Power[s, 2], Power[x, 2]]], -1]], x]], Dist[Times[2, Power[r, Plus[m, 1]], Power[Times[a, n, Power[s, m]], -1]], Sum[u, List[k, 1, Times[Plus[n, -2], Power[4, -1]]]], x]]], x]], And[FreeQ[List[a, b], x], PositiveIntegerQ[m, Times[Plus[n, -2], Power[4, -1]]], PositiveIntegerQ[m], Less[m, Plus[n, -1]], PosQ[Times[a, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[r, Numerator[Rt[Times[-1, a, Power[b, -1]], n]]], Set[s, Denominator[Rt[Times[-1, a, Power[b, -1]], n]]], k, u], Simp[CompoundExpression[Set[u, Plus[Int[Times[Plus[Times[r, Cos[Times[2, k, m, Pi, Power[n, -1]]]], Times[-1, s, Cos[Times[2, k, Plus[m, 1], Pi, Power[n, -1]]], x]], Power[Plus[Power[r, 2], Times[-1, 2, r, s, Cos[Times[2, k, Pi, Power[n, -1]]], x], Times[Power[s, 2], Power[x, 2]]], -1]], x], Int[Times[Plus[Times[r, Cos[Times[2, k, m, Pi, Power[n, -1]]]], Times[s, Cos[Times[2, k, Plus[m, 1], Pi, Power[n, -1]]], x]], Power[Plus[Power[r, 2], Times[2, r, s, Cos[Times[2, k, Pi, Power[n, -1]]], x], Times[Power[s, 2], Power[x, 2]]], -1]], x]]], Plus[Times[2, Power[r, Plus[m, 2]], Power[Times[a, n, Power[s, m]], -1], Int[Times[1, Power[Plus[Power[r, 2], Times[-1, Power[s, 2], Power[x, 2]]], -1]], x]], Dist[Times[2, Power[r, Plus[m, 1]], Power[Times[a, n, Power[s, m]], -1]], Sum[u, List[k, 1, Times[Plus[n, -2], Power[4, -1]]]], x]]], x]], And[FreeQ[List[a, b], x], PositiveIntegerQ[m, Times[Plus[n, -2], Power[4, -1]]], PositiveIntegerQ[m], Less[m, Plus[n, -1]], NegQ[Times[a, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numerator[Rt[Times[a, Power[b, -1]], 2]]], Set[s, Denominator[Rt[Times[a, Power[b, -1]], 2]]]], Plus[Dist[Times[1, Power[Times[2, s], -1]], Int[Times[Plus[r, Times[s, Power[x, 2]]], Power[Plus[a, Times[b, Power[x, 4]]], -1]], x], x], Times[-1, Dist[Times[1, Power[Times[2, s], -1]], Int[Times[Plus[r, Times[-1, s, Power[x, 2]]], Power[Plus[a, Times[b, Power[x, 4]]], -1]], x], x]]]], And[FreeQ[List[a, b], x], Or[PositiveQ[Times[a, Power[b, -1]]], And[PosQ[Times[a, Power[b, -1]]], AtomQ[SplitProduct[SumBaseQ, a]], AtomQ[SplitProduct[SumBaseQ, b]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numerator[Rt[Times[-1, a, Power[b, -1]], 2]]], Set[s, Denominator[Rt[Times[-1, a, Power[b, -1]], 2]]]], Plus[Dist[Times[s, Power[Times[2, b], -1]], Int[Times[1, Power[Plus[r, Times[s, Power[x, 2]]], -1]], x], x], Times[-1, Dist[Times[s, Power[Times[2, b], -1]], Int[Times[1, Power[Plus[r, Times[-1, s, Power[x, 2]]], -1]], x], x]]]], And[FreeQ[List[a, b], x], Not[PositiveQ[Times[a, Power[b, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numerator[Rt[Times[a, Power[b, -1]], 4]]], Set[s, Denominator[Rt[Times[a, Power[b, -1]], 4]]]], Plus[Dist[Times[Power[s, 3], Power[Times[2, Sqrt[2], b, r], -1]], Int[Times[Power[x, Plus[m, Times[-1, n, Power[4, -1]]]], Power[Plus[Power[r, 2], Times[-1, Sqrt[2], r, s, Power[x, Times[n, Power[4, -1]]]], Times[Power[s, 2], Power[x, Times[n, Power[2, -1]]]]], -1]], x], x], Times[-1, Dist[Times[Power[s, 3], Power[Times[2, Sqrt[2], b, r], -1]], Int[Times[Power[x, Plus[m, Times[-1, n, Power[4, -1]]]], Power[Plus[Power[r, 2], Times[Sqrt[2], r, s, Power[x, Times[n, Power[4, -1]]]], Times[Power[s, 2], Power[x, Times[n, Power[2, -1]]]]], -1]], x], x]]]], And[FreeQ[List[a, b], x], PositiveIntegerQ[m, Times[n, Power[4, -1]]], PositiveIntegerQ[m], Less[m, Plus[n, -1]], PositiveQ[Times[a, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numerator[Rt[Times[-1, a, Power[b, -1]], 2]]], Set[s, Denominator[Rt[Times[-1, a, Power[b, -1]], 2]]]], Plus[Dist[Times[r, Power[Times[2, a], -1]], Int[Times[Power[x, m], Power[Plus[r, Times[s, Power[x, Times[n, Power[2, -1]]]]], -1]], x], x], Dist[Times[r, Power[Times[2, a], -1]], Int[Times[Power[x, m], Power[Plus[r, Times[-1, s, Power[x, Times[n, Power[2, -1]]]]], -1]], x], x]]], And[FreeQ[List[a, b], x], PositiveIntegerQ[m, Times[n, Power[4, -1]]], PositiveIntegerQ[m], Less[m, Times[n, Power[2, -1]]], Not[PositiveQ[Times[a, Power[b, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numerator[Rt[Times[-1, a, Power[b, -1]], 2]]], Set[s, Denominator[Rt[Times[-1, a, Power[b, -1]], 2]]]], Plus[Dist[Times[s, Power[Times[2, b], -1]], Int[Times[Power[x, Plus[m, Times[-1, n, Power[2, -1]]]], Power[Plus[r, Times[s, Power[x, Times[n, Power[2, -1]]]]], -1]], x], x], Times[-1, Dist[Times[s, Power[Times[2, b], -1]], Int[Times[Power[x, Plus[m, Times[-1, n, Power[2, -1]]]], Power[Plus[r, Times[-1, s, Power[x, Times[n, Power[2, -1]]]]], -1]], x], x]]]], And[FreeQ[List[a, b], x], PositiveIntegerQ[m, Times[n, Power[4, -1]]], PositiveIntegerQ[m], Inequality[Times[n, Power[2, -1]], LessEqual, m, Less, n], Not[PositiveQ[Times[a, Power[b, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[PolynomialDivide[Power[x, m], Plus[a, Times[b, Power[x, n]]], x], x], And[FreeQ[List[a, b], x], PositiveIntegerQ[m, n], Greater[m, Plus[Times[2, n], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[x, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numer[Rt[Times[b, Power[a, -1]], 3]]], Set[s, Denom[Rt[Times[b, Power[a, -1]], 3]]]], Plus[Dist[Times[Sqrt[2], s, Power[Times[Sqrt[Plus[2, Sqrt[3]]], r], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 3]]]], -1]], x], x], Dist[Times[1, Power[r, -1]], Int[Times[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], s], Times[r, x]], Power[Sqrt[Plus[a, Times[b, Power[x, 3]]]], -1]], x], x]]], And[FreeQ[List[a, b], x], PosQ[a]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[x, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numer[Rt[Times[b, Power[a, -1]], 3]]], Set[s, Denom[Rt[Times[b, Power[a, -1]], 3]]]], Plus[Times[-1, Dist[Times[Sqrt[2], s, Power[Times[Sqrt[Plus[2, Times[-1, Sqrt[3]]]], r], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 3]]]], -1]], x], x]], Dist[Times[1, Power[r, -1]], Int[Times[Plus[Times[Plus[1, Sqrt[3]], s], Times[r, x]], Power[Sqrt[Plus[a, Times[b, Power[x, 3]]]], -1]], x], x]]], And[FreeQ[List[a, b], x], NegQ[a]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[b, Power[a, -1]], 2]]], Plus[Dist[Times[1, Power[q, -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 4]]]], -1]], x], x], Times[-1, Dist[Times[1, Power[q, -1]], Int[Times[Plus[1, Times[-1, q, Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 4]]]], -1]], x], x]]]], And[FreeQ[List[a, b], x], PosQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, b, Power[a, -1]], 2]]], Plus[Dist[Times[1, Power[q, -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 4]]]], -1]], x], x], Times[-1, Dist[Times[1, Power[q, -1]], Int[Times[Plus[1, Times[-1, q, Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 4]]]], -1]], x], x]]]], And[FreeQ[List[a, b], x], NegativeQ[a], PositiveQ[b]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, b, Power[a, -1]], 2]]], Plus[Times[-1, Dist[Power[q, -1], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 4]]]], -1]], x], x]], Dist[Times[1, Power[q, -1]], Int[Times[Plus[1, Times[q, Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 4]]]], -1]], x], x]]], And[FreeQ[List[a, b], x], NegQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 4], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 6]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numer[Rt[Times[b, Power[a, -1]], 3]]], Set[s, Denom[Rt[Times[b, Power[a, -1]], 3]]]], Plus[Dist[Times[Plus[Sqrt[3], -1], Power[s, 2], Power[Times[2, Power[r, 2]], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 6]]]], -1]], x], x], Times[-1, Dist[Times[1, Power[Times[2, Power[r, 2]], -1]], Int[Times[Plus[Times[Plus[Sqrt[3], -1], Power[s, 2]], Times[-1, 2, Power[r, 2], Power[x, 4]]], Power[Sqrt[Plus[a, Times[b, Power[x, 6]]]], -1]], x], x]]]], FreeQ[List[a, b], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 8]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[Times[2, Rt[Times[b, Power[a, -1]], 4]], -1]], Int[Times[Plus[1, Times[Rt[Times[b, Power[a, -1]], 4], Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 8]]]], -1]], x], x], Times[-1, Dist[Times[1, Power[Times[2, Rt[Times[b, Power[a, -1]], 4]], -1]], Int[Times[Plus[1, Times[-1, Rt[Times[b, Power[a, -1]], 4], Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 8]]]], -1]], x], x]]], FreeQ[List[a, b], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 4]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, 3], Power[Times[2, Power[Plus[a, Times[b, Power[x, 4]]], Times[1, Power[4, -1]]]], -1]], x], Times[-1, Dist[Times[a, Power[2, -1]], Int[Times[Power[x, 2], Power[Power[Plus[a, Times[b, Power[x, 4]]], Times[5, Power[4, -1]]], -1]], x], x]]], And[FreeQ[List[a, b], x], PosQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 4]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, Power[x, 4]]], Times[3, Power[4, -1]]], Power[Times[2, b, x], -1]], x], Dist[Times[a, Power[Times[2, b], -1]], Int[Times[1, Power[Times[Power[x, 2], Power[Plus[a, Times[b, Power[x, 4]]], Times[1, Power[4, -1]]]], -1]], x], x]], And[FreeQ[List[a, b], x], NegQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], -2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 4]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Power[Times[x, Power[Plus[a, Times[b, Power[x, 4]]], Times[1, Power[4, -1]]]], -1], x]], Times[-1, Dist[b, Int[Times[Power[x, 2], Power[Power[Plus[a, Times[b, Power[x, 4]]], Times[5, Power[4, -1]]], -1]], x], x]]], And[FreeQ[List[a, b], x], PosQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], -2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 4]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[x, Power[Plus[1, Times[a, Power[Times[b, Power[x, 4]], -1]]], Times[1, Power[4, -1]]], Power[Power[Plus[a, Times[b, Power[x, 4]]], Times[1, Power[4, -1]]], -1]], Int[Times[1, Power[Times[Power[x, 3], Power[Plus[1, Times[a, Power[Times[b, Power[x, 4]], -1]]], Times[1, Power[4, -1]]]], -1]], x], x], And[FreeQ[List[a, b], x], NegQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Rational[1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 4]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Sqrt[Times[c, x]], Power[Power[Plus[a, Times[b, Power[x, 2]]], Times[1, Power[4, -1]]], -1]], x], Times[-1, Dist[Times[a, Power[2, -1]], Int[Times[Sqrt[Times[c, x]], Power[Power[Plus[a, Times[b, Power[x, 2]]], Times[5, Power[4, -1]]], -1]], x], x]]], And[FreeQ[List[a, b, c], x], PosQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Rational[1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 4]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[c, Power[Plus[a, Times[b, Power[x, 2]]], Times[3, Power[4, -1]]], Power[Times[b, Sqrt[Times[c, x]]], -1]], x], Dist[Times[a, Power[c, 2], Power[Times[2, b], -1]], Int[Times[1, Power[Times[Power[Times[c, x], Times[3, Power[2, -1]]], Power[Plus[a, Times[b, Power[x, 2]]], Times[1, Power[4, -1]]]], -1]], x], x]], And[FreeQ[List[a, b, c], x], NegQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Rational[-3, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 4]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, Power[Times[c, Sqrt[Times[c, x]], Power[Plus[a, Times[b, Power[x, 2]]], Times[1, Power[4, -1]]]], -1]], x], Times[-1, Dist[Times[b, Power[Power[c, 2], -1]], Int[Times[Sqrt[Times[c, x]], Power[Power[Plus[a, Times[b, Power[x, 2]]], Times[5, Power[4, -1]]], -1]], x], x]]], And[FreeQ[List[a, b, c], x], PosQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Rational[-3, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 4]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Times[c, x]], Power[Plus[1, Times[a, Power[Times[b, Power[x, 2]], -1]]], Times[1, Power[4, -1]]], Power[Times[Power[c, 2], Power[Plus[a, Times[b, Power[x, 2]]], Times[1, Power[4, -1]]]], -1]], Int[Times[1, Power[Times[Power[x, 2], Power[Plus[1, Times[a, Power[Times[b, Power[x, 2]], -1]]], Times[1, Power[4, -1]]]], -1]], x], x], And[FreeQ[List[a, b, c], x], NegQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[c, Plus[n, -1]], Power[Times[c, x], Plus[m, Times[-1, n], 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[b, Plus[m, Times[n, p], 1]], -1]], x], Times[-1, Dist[Times[a, Power[c, n], Plus[m, Times[-1, n], 1], Power[Times[b, Plus[m, Times[n, p], 1]], -1]], Int[Times[Power[Times[c, x], Plus[m, Times[-1, n]]], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x]]], And[FreeQ[List[a, b, c, p], x], PositiveIntegerQ[n], RationalQ[m], Greater[m, Plus[n, -1]], NonzeroQ[Plus[m, Times[n, p], 1]], IntBinomialQ[a, b, c, n, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[c, Plus[n, -1]], Power[Times[c, x], Plus[m, Times[-1, n], 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[b, Plus[m, Times[n, p], 1]], -1]], x], Times[-1, Dist[Times[a, Power[c, n], Plus[m, Times[-1, n], 1], Power[Times[b, Plus[m, Times[n, p], 1]], -1]], Int[Times[Power[Times[c, x], Plus[m, Times[-1, n]]], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x]]], And[FreeQ[List[a, b, c, m, p], x], PositiveIntegerQ[n], SumSimplerQ[m, Times[-1, n]], NonzeroQ[Plus[m, Times[n, p], 1]], NegativeIntegerQ[Simplify[Plus[Times[Plus[m, 1], Power[n, -1]], p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[c, Plus[Times[2, n], -1]], Power[Times[c, x], Plus[m, Times[-1, 2, n], 1]], Power[Plus[a1, Times[b1, Power[x, n]]], Plus[p, 1]], Power[Plus[a2, Times[b2, Power[x, n]]], Plus[p, 1]], Power[Times[b1, b2, Plus[m, Times[2, n, p], 1]], -1]], x], Times[-1, Dist[Times[a1, a2, Power[c, Times[2, n]], Plus[m, Times[-1, 2, n], 1], Power[Times[b1, b2, Plus[m, Times[2, n, p], 1]], -1]], Int[Times[Power[Times[c, x], Plus[m, Times[-1, 2, n]]], Power[Plus[a1, Times[b1, Power[x, n]]], p], Power[Plus[a2, Times[b2, Power[x, n]]], p]], x], x]]], And[FreeQ[List[a1, b1, a2, b2, c, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], PositiveIntegerQ[Times[2, n]], RationalQ[m], Greater[m, Plus[Times[2, n], -1]], NonzeroQ[Plus[m, Times[2, n, p], 1]], IntBinomialQ[Times[a1, a2], Times[b1, b2], c, n, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[c, Plus[Times[2, n], -1]], Power[Times[c, x], Plus[m, Times[-1, 2, n], 1]], Power[Plus[a1, Times[b1, Power[x, n]]], Plus[p, 1]], Power[Plus[a2, Times[b2, Power[x, n]]], Plus[p, 1]], Power[Times[b1, b2, Plus[m, Times[2, n, p], 1]], -1]], x], Times[-1, Dist[Times[a1, a2, Power[c, Times[2, n]], Plus[m, Times[-1, 2, n], 1], Power[Times[b1, b2, Plus[m, Times[2, n, p], 1]], -1]], Int[Times[Power[Times[c, x], Plus[m, Times[-1, 2, n]]], Power[Plus[a1, Times[b1, Power[x, n]]], p], Power[Plus[a2, Times[b2, Power[x, n]]], p]], x], x]]], And[FreeQ[List[a1, b1, a2, b2, c, m, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], PositiveIntegerQ[Times[2, n]], SumSimplerQ[m, Times[-2, n]], NonzeroQ[Plus[m, Times[2, n, p], 1]], NegativeIntegerQ[Simplify[Plus[Times[Plus[m, 1], Power[Times[2, n], -1]], p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[c, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, c, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, Plus[m, Times[n, Plus[p, 1]], 1], Power[Times[a, Power[c, n], Plus[m, 1]], -1]], Int[Times[Power[Times[c, x], Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x]]], And[FreeQ[List[a, b, c, p], x], PositiveIntegerQ[n], RationalQ[m], Less[m, -1], IntBinomialQ[a, b, c, n, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[c, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, c, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, Plus[m, Times[n, Plus[p, 1]], 1], Power[Times[a, Power[c, n], Plus[m, 1]], -1]], Int[Times[Power[Times[c, x], Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x]]], And[FreeQ[List[a, b, c, m, p], x], PositiveIntegerQ[n], SumSimplerQ[m, n], NegativeIntegerQ[Simplify[Plus[Times[Plus[m, 1], Power[n, -1]], p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[c, x], Plus[m, 1]], Power[Plus[a1, Times[b1, Power[x, n]]], Plus[p, 1]], Power[Plus[a2, Times[b2, Power[x, n]]], Plus[p, 1]], Power[Times[a1, a2, c, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b1, b2, Plus[m, Times[2, n, Plus[p, 1]], 1], Power[Times[a1, a2, Power[c, Times[2, n]], Plus[m, 1]], -1]], Int[Times[Power[Times[c, x], Plus[m, Times[2, n]]], Power[Plus[a1, Times[b1, Power[x, n]]], p], Power[Plus[a2, Times[b2, Power[x, n]]], p]], x], x]]], And[FreeQ[List[a1, b1, a2, b2, c, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], PositiveIntegerQ[Times[2, n]], RationalQ[m], Less[m, -1], IntBinomialQ[Times[a1, a2], Times[b1, b2], c, n, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[c, x], Plus[m, 1]], Power[Plus[a1, Times[b1, Power[x, n]]], Plus[p, 1]], Power[Plus[a2, Times[b2, Power[x, n]]], Plus[p, 1]], Power[Times[a1, a2, c, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b1, b2, Plus[m, Times[2, n, Plus[p, 1]], 1], Power[Times[a1, a2, Power[c, Times[2, n]], Plus[m, 1]], -1]], Int[Times[Power[Times[c, x], Plus[m, Times[2, n]]], Power[Plus[a1, Times[b1, Power[x, n]]], p], Power[Plus[a2, Times[b2, Power[x, n]]], p]], x], x]]], And[FreeQ[List[a1, b1, a2, b2, c, m, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], PositiveIntegerQ[Times[2, n]], SumSimplerQ[m, Times[2, n]], NegativeIntegerQ[Simplify[Plus[Times[Plus[m, 1], Power[Times[2, n], -1]], p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[m]]], Dist[Times[k, Power[c, -1]], Subst[Int[Times[Power[x, Plus[Times[k, Plus[m, 1]], -1]], Power[Plus[a, Times[b, Power[x, Times[k, n]], Power[Power[c, n], -1]]], p]], x], x, Power[Times[c, x], Times[1, Power[k, -1]]]], x]], And[FreeQ[List[a, b, c, p], x], PositiveIntegerQ[n], FractionQ[m], IntBinomialQ[a, b, c, n, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[m]]], Dist[Times[k, Power[c, -1]], Subst[Int[Times[Power[x, Plus[Times[k, Plus[m, 1]], -1]], Power[Plus[a1, Times[b1, Power[x, Times[k, n]], Power[Power[c, n], -1]]], p], Power[Plus[a2, Times[b2, Power[x, Times[k, n]], Power[Power[c, n], -1]]], p]], x], x, Power[Times[c, x], Times[1, Power[k, -1]]]], x]], And[FreeQ[List[a1, b1, a2, b2, c, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], PositiveIntegerQ[Times[2, n]], FractionQ[m], IntBinomialQ[Times[a1, a2], Times[b1, b2], c, n, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[a, Plus[p, Times[Plus[m, 1], Power[n, -1]]]], Subst[Int[Times[Power[x, m], Power[Power[Plus[1, Times[-1, b, Power[x, n]]], Plus[p, Times[Plus[m, 1], Power[n, -1]], 1]], -1]], x], x, Times[x, Power[Power[Plus[a, Times[b, Power[x, n]]], Times[1, Power[n, -1]]], -1]]], x], And[FreeQ[List[a, b], x], PositiveIntegerQ[n], RationalQ[p], Less[-1, p, 0], Unequal[p, Times[-1, Power[2, -1]]], IntegersQ[m, Plus[p, Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Times[a1, a2], Plus[p, Times[Plus[m, 1], Power[Times[2, n], -1]]]], Subst[Int[Times[Power[x, m], Power[Times[Power[Plus[1, Times[-1, b1, Power[x, n]]], Plus[p, Times[Plus[m, 1], Power[Times[2, n], -1]], 1]], Power[Plus[1, Times[-1, b2, Power[x, n]]], Plus[p, Times[Plus[m, 1], Power[Times[2, n], -1]], 1]]], -1]], x], x, Times[x, Power[Times[Power[Plus[a1, Times[b1, Power[x, n]]], Times[1, Power[Times[2, n], -1]]], Power[Plus[a2, Times[b2, Power[x, n]]], Times[1, Power[Times[2, n], -1]]]], -1]]], x], And[FreeQ[List[a1, b1, a2, b2], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], PositiveIntegerQ[Times[2, n]], RationalQ[p], Less[-1, p, 0], Unequal[p, Times[-1, Power[2, -1]]], IntegersQ[m, Plus[p, Times[Plus[m, 1], Power[Times[2, n], -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[a, Power[Plus[a, Times[b, Power[x, n]]], -1]], Plus[p, Times[Plus[m, 1], Power[n, -1]]]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, Times[Plus[m, 1], Power[n, -1]]]]], Subst[Int[Times[Power[x, m], Power[Power[Plus[1, Times[-1, b, Power[x, n]]], Plus[p, Times[Plus[m, 1], Power[n, -1]], 1]], -1]], x], x, Times[x, Power[Power[Plus[a, Times[b, Power[x, n]]], Times[1, Power[n, -1]]], -1]]], x], And[FreeQ[List[a, b], x], PositiveIntegerQ[n], RationalQ[p], Less[-1, p, 0], Unequal[p, Times[-1, Power[2, -1]]], IntegerQ[m], Less[Denominator[Plus[p, Times[Plus[m, 1], Power[n, -1]]]], Denominator[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[a1, Power[Plus[a1, Times[b1, Power[x, n]]], -1]], Plus[p, Times[Plus[m, 1], Power[Times[2, n], -1]]]], Power[Plus[a1, Times[b1, Power[x, n]]], Plus[p, Times[Plus[m, 1], Power[Times[2, n], -1]]]], Power[Times[a2, Power[Plus[a2, Times[b2, Power[x, n]]], -1]], Plus[p, Times[Plus[m, 1], Power[Times[2, n], -1]]]], Power[Plus[a2, Times[b2, Power[x, n]]], Plus[p, Times[Plus[m, 1], Power[Times[2, n], -1]]]]], Subst[Int[Times[Power[x, m], Power[Times[Power[Plus[1, Times[-1, b1, Power[x, n]]], Plus[p, Times[Plus[m, 1], Power[Times[2, n], -1]], 1]], Power[Plus[1, Times[-1, b2, Power[x, n]]], Plus[p, Times[Plus[m, 1], Power[Times[2, n], -1]], 1]]], -1]], x], x, Times[x, Power[Times[Power[Plus[a1, Times[b1, Power[x, n]]], Times[1, Power[Times[2, n], -1]]], Power[Plus[a2, Times[b2, Power[x, n]]], Times[1, Power[Times[2, n], -1]]]], -1]]], x], And[FreeQ[List[a1, b1, a2, b2], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], PositiveIntegerQ[Times[2, n]], RationalQ[p], Less[-1, p, 0], Unequal[p, Times[-1, Power[2, -1]]], IntegerQ[m], Less[Denominator[Plus[p, Times[Plus[m, 1], Power[Times[2, n], -1]]]], Denominator[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[a, Times[b, Power[x, Times[-1, n]]]], p], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, b, p], x], NegativeIntegerQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[a1, Times[b1, Power[x, Times[-1, n]]]], p], Power[Plus[a2, Times[b2, Power[x, Times[-1, n]]]], p], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a1, b1, a2, b2, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], NegativeIntegerQ[Times[2, n]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[m]]], Times[-1, Dist[Times[k, Power[c, -1]], Subst[Int[Times[Power[Plus[a, Times[b, Power[c, Times[-1, n]], Power[x, Times[-1, k, n]]]], p], Power[Power[x, Plus[Times[k, Plus[m, 1]], 1]], -1]], x], x, Times[1, Power[Power[Times[c, x], Times[1, Power[k, -1]]], -1]]], x]]], And[FreeQ[List[a, b, c, p], x], NegativeIntegerQ[n], FractionQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[m]]], Times[-1, Dist[Times[k, Power[c, -1]], Subst[Int[Times[Power[Plus[a1, Times[b1, Power[c, Times[-1, n]], Power[x, Times[-1, k, n]]]], p], Power[Plus[a2, Times[b2, Power[c, Times[-1, n]], Power[x, Times[-1, k, n]]]], p], Power[Power[x, Plus[Times[k, Plus[m, 1]], 1]], -1]], x], x, Times[1, Power[Power[Times[c, x], Times[1, Power[k, -1]]], -1]]], x]]], And[FreeQ[List[a1, b1, a2, b2, c, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], NegativeIntegerQ[Times[2, n]], FractionQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[Times[c, x], m], Power[Power[x, -1], m]], Subst[Int[Times[Power[Plus[a, Times[b, Power[x, Times[-1, n]]]], p], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, m, p], x], NegativeIntegerQ[n], Not[RationalQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[Times[c, x], m], Power[Power[x, -1], m]], Subst[Int[Times[Power[Plus[a1, Times[b1, Power[x, Times[-1, n]]]], p], Power[Plus[a2, Times[b2, Power[x, Times[-1, n]]]], p], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a1, b1, a2, b2, c, m, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], NegativeIntegerQ[Times[2, n]], Not[RationalQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[n]]], Dist[k, Subst[Int[Times[Power[x, Plus[Times[k, Plus[m, 1]], -1]], Power[Plus[a, Times[b, Power[x, Times[k, n]]]], p]], x], x, Power[x, Times[1, Power[k, -1]]]], x]], And[FreeQ[List[a, b, m, p], x], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[Times[2, n]]]], Dist[k, Subst[Int[Times[Power[x, Plus[Times[k, Plus[m, 1]], -1]], Power[Plus[a1, Times[b1, Power[x, Times[k, n]]]], p], Power[Plus[a2, Times[b2, Power[x, Times[k, n]]]], p]], x], x, Power[x, Times[1, Power[k, -1]]]], x]], And[FreeQ[List[a1, b1, a2, b2, m, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], FractionQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[m]], Power[Times[c, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, m, p], x], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[m]], Power[Times[c, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a1, Times[b1, Power[x, n]]], p], Power[Plus[a2, Times[b2, Power[x, n]]], p]], x], x], And[FreeQ[List[a1, b1, a2, b2, c, m, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], FractionQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Plus[m, 1], -1]], Subst[Int[Power[Plus[a, Times[b, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]]], p], x], x, Power[x, Plus[m, 1]]], x], And[FreeQ[List[a, b, m, n, p], x], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Plus[m, 1], -1]], Subst[Int[Times[Power[Plus[a1, Times[b1, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]]], p], Power[Plus[a2, Times[b2, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]]], p]], x], x, Power[x, Plus[m, 1]]], x], And[FreeQ[List[a1, b1, a2, b2, m, n, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], IntegerQ[Simplify[Times[2, n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[Times[2, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[m]], Power[Times[c, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, m, n, p], x], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[m]], Power[Times[c, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a1, Times[b1, Power[x, n]]], p], Power[Plus[a2, Times[b2, Power[x, n]]], p]], x], x], And[FreeQ[List[a1, b1, a2, b2, c, m, n, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], IntegerQ[Simplify[Times[2, n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[Times[2, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[m, 1], -1]], x], Times[-1, Dist[Times[b, n, p, Power[Plus[m, 1], -1]], Int[Times[Power[x, Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, m, n], x], ZeroQ[Plus[Times[Plus[m, 1], Power[n, -1]], p]], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Power[Plus[a1, Times[b1, Power[x, n]]], p], Power[Plus[a2, Times[b2, Power[x, n]]], p], Power[Plus[m, 1], -1]], x], Times[-1, Dist[Times[2, b1, b2, n, p, Power[Plus[m, 1], -1]], Int[Times[Power[x, Plus[m, n]], Power[Plus[a1, Times[b1, Power[x, n]]], Plus[p, -1]], Power[Plus[a2, Times[b2, Power[x, n]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a1, b1, a2, b2, m, n], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], ZeroQ[Plus[Times[Plus[m, 1], Power[Times[2, n], -1]], p]], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[m]], Power[Times[c, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, m, n], x], ZeroQ[Plus[Times[Plus[m, 1], Power[n, -1]], p]], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[m]], Power[Times[c, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a1, Times[b1, Power[x, n]]], p], Power[Plus[a2, Times[b2, Power[x, n]]], p]], x], x], And[FreeQ[List[a1, b1, a2, b2, c, m, n], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], ZeroQ[Plus[Times[Plus[m, 1], Power[Times[2, n], -1]], p]], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[c, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Times[c, Plus[m, Times[n, p], 1]], -1]], x], Dist[Times[a, n, p, Power[Plus[m, Times[n, p], 1], -1]], Int[Times[Power[Times[c, x], m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, m, n], x], IntegerQ[Plus[p, Simplify[Times[Plus[m, 1], Power[n, -1]]]]], RationalQ[p], Greater[p, 0], NonzeroQ[Plus[m, Times[n, p], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[c, x], Plus[m, 1]], Power[Plus[a1, Times[b1, Power[x, n]]], p], Power[Plus[a2, Times[b2, Power[x, n]]], p], Power[Times[c, Plus[m, Times[2, n, p], 1]], -1]], x], Dist[Times[2, a1, a2, n, p, Power[Plus[m, Times[2, n, p], 1], -1]], Int[Times[Power[Times[c, x], m], Power[Plus[a1, Times[b1, Power[x, n]]], Plus[p, -1]], Power[Plus[a2, Times[b2, Power[x, n]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a1, b1, a2, b2, c, m, n], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], IntegerQ[Plus[p, Simplify[Times[Plus[m, 1], Power[Times[2, n], -1]]]]], RationalQ[p], Greater[p, 0], NonzeroQ[Plus[m, Times[2, n, p], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[p]]], Dist[Times[k, Power[a, Plus[p, Simplify[Times[Plus[m, 1], Power[n, -1]]]]], Power[n, -1]], Subst[Int[Times[Power[x, Plus[Times[k, Simplify[Times[Plus[m, 1], Power[n, -1]]]], -1]], Power[Power[Plus[1, Times[-1, b, Power[x, k]]], Plus[p, Simplify[Times[Plus[m, 1], Power[n, -1]]], 1]], -1]], x], x, Times[Power[x, Times[n, Power[k, -1]]], Power[Power[Plus[a, Times[b, Power[x, n]]], Times[1, Power[k, -1]]], -1]]], x]], And[FreeQ[List[a, b, m, n], x], IntegerQ[Plus[p, Simplify[Times[Plus[m, 1], Power[n, -1]]]]], RationalQ[p], Less[-1, p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[p]]], Dist[Times[k, Power[Times[a1, a2], Plus[p, Simplify[Times[Plus[m, 1], Power[Times[2, n], -1]]]]], Power[Times[2, n], -1]], Subst[Int[Times[Power[x, Plus[Times[k, Simplify[Times[Plus[m, 1], Power[Times[2, n], -1]]]], -1]], Power[Times[Power[Plus[1, Times[-1, b1, Power[x, k]]], Plus[p, Simplify[Times[Plus[m, 1], Power[Times[2, n], -1]]], 1]], Power[Plus[1, Times[-1, b2, Power[x, k]]], Plus[p, Simplify[Times[Plus[m, 1], Power[Times[2, n], -1]]], 1]]], -1]], x], x, Times[Power[x, Times[2, n, Power[k, -1]]], Power[Times[Power[Plus[a1, Times[b1, Power[x, n]]], Times[1, Power[k, -1]]], Power[Plus[a2, Times[b2, Power[x, n]]], Times[1, Power[k, -1]]]], -1]]], x]], And[FreeQ[List[a1, b1, a2, b2, m, n], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], IntegerQ[Plus[p, Simplify[Times[Plus[m, 1], Power[Times[2, n], -1]]]]], RationalQ[p], Less[-1, p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[m]], Power[Times[c, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, m, n], x], IntegerQ[Plus[p, Simplify[Times[Plus[m, 1], Power[n, -1]]]]], RationalQ[p], Less[-1, p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[m]], Power[Times[c, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a1, Times[b1, Power[x, n]]], p], Power[Plus[a2, Times[b2, Power[x, n]]], p]], x], x], And[FreeQ[List[a1, b1, a2, b2, c, m, n], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], IntegerQ[Plus[p, Simplify[Times[Plus[m, 1], Power[Times[2, n], -1]]]]], RationalQ[p], Less[-1, p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[c, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, c, n, Plus[p, 1]], -1]], x]], Dist[Times[Plus[m, Times[n, Plus[p, 1]], 1], Power[Times[a, n, Plus[p, 1]], -1]], Int[Times[Power[Times[c, x], m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, m, n], x], IntegerQ[Plus[p, Simplify[Times[Plus[m, 1], Power[n, -1]]]]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[c, x], Plus[m, 1]], Power[Plus[a1, Times[b1, Power[x, n]]], Plus[p, 1]], Power[Plus[a2, Times[b2, Power[x, n]]], Plus[p, 1]], Power[Times[2, a1, a2, c, n, Plus[p, 1]], -1]], x]], Dist[Times[Plus[m, Times[2, n, Plus[p, 1]], 1], Power[Times[2, a1, a2, n, Plus[p, 1]], -1]], Int[Times[Power[Times[c, x], m], Power[Plus[a1, Times[b1, Power[x, n]]], Plus[p, 1]], Power[Plus[a2, Times[b2, Power[x, n]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a1, b1, a2, b2, c, m, n], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], IntegerQ[Plus[p, Simplify[Times[Plus[m, 1], Power[n, -1]]]]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[mn, Simplify[Plus[m, Times[-1, n]]]]], Plus[Simp[Times[Power[x, Plus[mn, 1]], Power[Times[b, Plus[mn, 1]], -1]], x], Times[-1, Dist[Times[a, Power[b, -1]], Int[Times[Power[x, mn], Power[Plus[a, Times[b, Power[x, n]]], -1]], x], x]]]], And[FreeQ[List[a, b, m, n], x], FractionQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]], SumSimplerQ[m, Times[-1, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Power[Times[a, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, Power[a, -1]], Int[Times[Power[x, Simplify[Plus[m, n]]], Power[Plus[a, Times[b, Power[x, n]]], -1]], x], x]]], And[FreeQ[List[a, b, m, n], x], FractionQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]], SumSimplerQ[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[m]], Power[Times[c, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], -1]], x], x], And[FreeQ[List[a, b, c, m, n], x], FractionQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]], Or[SumSimplerQ[m, n], SumSimplerQ[m, Times[-1, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[a, p], Power[Times[c, x], Plus[m, 1]], Power[Times[c, Plus[m, 1]], -1], Hypergeometric2F1[Times[-1, p], Times[Plus[m, 1], Power[n, -1]], Plus[Times[Plus[m, 1], Power[n, -1]], 1], Times[-1, b, Power[x, n], Power[a, -1]]]], x], And[FreeQ[List[a, b, c, m, n, p], x], Not[PositiveIntegerQ[p]], Or[NegativeIntegerQ[p], PositiveQ[a]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, IntPart[p]], Power[Plus[a, Times[b, Power[x, n]]], FracPart[p]], Power[Power[Plus[1, Times[b, Power[x, n], Power[a, -1]]], FracPart[p]], -1]], Int[Times[Power[Times[c, x], m], Power[Plus[1, Times[b, Power[x, n], Power[a, -1]]], p]], x], x], And[FreeQ[List[a, b, c, m, n, p], x], Not[PositiveIntegerQ[p]], Not[Or[NegativeIntegerQ[p], PositiveQ[a]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[Coefficient[v, x, 1], Plus[m, 1]], -1]], Subst[Int[SimplifyIntegrand[Times[Power[Plus[x, Times[-1, Coefficient[v, x, 0]]], m], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x], x, v], x], And[FreeQ[List[a, b, n, p], x], LinearQ[v, x], IntegerQ[m], NonzeroQ[Plus[v, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[u, m], Power[Times[Coefficient[v, x, 1], Power[v, m]], -1]], Subst[Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x, v], x], And[FreeQ[List[a, b, m, n, p], x], LinearPairQ[u, v, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a1, Times[b1, Power[x, n]]], FracPart[p]], Power[Plus[a2, Times[b2, Power[x, n]]], FracPart[p]], Power[Power[Plus[Times[a1, a2], Times[b1, b2, Power[x, Times[2, n]]]], FracPart[p]], -1]], Int[Times[Power[Times[c, x], m], Power[Plus[Times[a1, a2], Times[b1, b2, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a1, b1, a2, b2, c, m, n, p], x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x], And[FreeQ[List[a, b, c, d, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[p, q]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Times[n, Plus[p, q]]], Power[Plus[b, Times[a, Power[x, Times[-1, n]]]], p], Power[Plus[d, Times[c, Power[x, Times[-1, n]]]], q]], x], And[FreeQ[List[a, b, c, d, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], IntegersQ[p, q], NegQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[a, Times[b, Power[x, Times[-1, n]]]], p], Power[Plus[c, Times[d, Power[x, Times[-1, n]]]], q], Power[Power[x, 2], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, b, c, d, p, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[g, Denominator[n]]], Dist[g, Subst[Int[Times[Power[x, Plus[g, -1]], Power[Plus[a, Times[b, Power[x, Times[g, n]]]], p], Power[Plus[c, Times[d, Power[x, Times[g, n]]]], q]], x], x, Power[x, Times[1, Power[g, -1]]]], x]], And[FreeQ[List[a, b, c, d, p, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Subst[Int[Times[1, Power[Plus[c, Times[-1, Plus[Times[b, c], Times[-1, a, d]], Power[x, n]]], -1]], x], x, Times[x, Power[Power[Plus[a, Times[b, Power[x, n]]], Times[1, Power[n, -1]]], -1]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[n, p], 1]], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Times[a, n, Plus[p, 1]], -1]], x]], Times[-1, Dist[Times[c, q, Power[Times[a, Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, n, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[n, Plus[p, q, 1]], 1]], RationalQ[q], Greater[q, 0], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[a, p], x, Power[Times[Power[c, Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Times[1, Power[n, -1]]]], -1], Hypergeometric2F1[Times[1, Power[n, -1]], Times[-1, p], Plus[1, Times[1, Power[n, -1]]], Times[-1, Plus[Times[b, c], Times[-1, a, d]], Power[x, n], Power[Times[a, Plus[c, Times[d, Power[x, n]]]], -1]]]], x], And[FreeQ[List[a, b, c, d, n, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[n, Plus[p, q, 1]], 1]], NegativeIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[x, Power[Plus[a, Times[b, Power[x, n]]], p], Power[Times[c, Power[Times[c, Plus[a, Times[b, Power[x, n]]], Power[Times[a, Plus[c, Times[d, Power[x, n]]]], -1]], p], Power[Plus[c, Times[d, Power[x, n]]], Plus[Times[1, Power[n, -1]], p]]], -1], Hypergeometric2F1[Times[1, Power[n, -1]], Times[-1, p], Plus[1, Times[1, Power[n, -1]]], Times[-1, Plus[Times[b, c], Times[-1, a, d]], Power[x, n], Power[Times[a, Plus[c, Times[d, Power[x, n]]]], -1]]]], x], And[FreeQ[List[a, b, c, d, n, p, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[n, Plus[p, q, 1]], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[x, Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, 1]], Power[Times[a, c], -1]], x], And[FreeQ[List[a, b, c, d, n, p, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[n, Plus[p, q, 2]], 1]], ZeroQ[Plus[Times[a, d, Plus[p, 1]], Times[b, c, Plus[q, 1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, x, Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, 1]], Power[Times[a, n, Plus[p, 1], Plus[Times[b, c], Times[-1, a, d]]], -1]], x]], Dist[Times[Plus[Times[b, c], Times[n, Plus[p, 1], Plus[Times[b, c], Times[-1, a, d]]]], Power[Times[a, n, Plus[p, 1], Plus[Times[b, c], Times[-1, a, d]]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x]], And[FreeQ[List[a, b, c, d, n, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[n, Plus[p, q, 2]], 1]], Or[And[RationalQ[p], Less[p, -1]], Not[And[RationalQ[q], Less[q, -1]]]], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[c, x, Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[a, -1]], x], And[FreeQ[List[a, b, c, d, n, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[a, d], Times[-1, b, c, Plus[Times[n, Plus[p, 1]], 1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[b, c], Times[-1, a, d]], x, Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, b, n, Plus[p, 1]], -1]], x]], Times[-1, Dist[Times[Plus[Times[a, d], Times[-1, b, c, Plus[Times[n, Plus[p, 1]], 1]]], Power[Times[a, b, n, Plus[p, 1]], -1]], Int[Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], x], x]]], And[FreeQ[List[a, b, c, d, n, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], Or[And[RationalQ[p], Less[p, -1]], NegativeIntegerQ[Plus[Times[1, Power[n, -1]], p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[c, x, Power[a, -1]], x], Times[-1, Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[a, -1]], Int[Times[1, Power[Plus[b, Times[a, Power[x, Times[-1, n]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[n], Less[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[d, x, Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[b, Plus[Times[n, Plus[p, 1]], 1]], -1]], x], Times[-1, Dist[Times[Plus[Times[a, d], Times[-1, b, c, Plus[Times[n, Plus[p, 1]], 1]]], Power[Times[b, Plus[Times[n, Plus[p, 1]], 1]], -1]], Int[Power[Plus[a, Times[b, Power[x, n]]], p], x], x]]], And[FreeQ[List[a, b, c, d, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Times[n, Plus[p, 1]], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[PolynomialDivide[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], Times[-1, q]], x], x], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n, p], NegativeIntegerQ[q], GreaterEqual[p, Times[-1, q]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[1, Power[Plus[a, Times[b, Power[x, n]]], -1]], x], x], Times[-1, Dist[Times[d, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[1, Power[Plus[c, Times[d, Power[x, n]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 3]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Sqrt[3], Power[Times[2, c], -1]], Int[Times[1, Power[Times[Power[Plus[a, Times[b, Power[x, 2]]], Times[1, Power[3, -1]]], Plus[Sqrt[3], Times[-1, Rt[Times[b, Power[a, -1]], 2], x]]], -1]], x], x], Dist[Times[Sqrt[3], Power[Times[2, c], -1]], Int[Times[1, Power[Times[Power[Plus[a, Times[b, Power[x, 2]]], Times[1, Power[3, -1]]], Plus[Sqrt[3], Times[Rt[Times[b, Power[a, -1]], 2], x]]], -1]], x], x]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[b, c], Times[3, a, d]]], PosQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 3]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[6, -1]], Int[Times[Plus[3, Times[Rt[Times[-1, b, Power[a, -1]], 2], x]], Power[Times[Power[Plus[a, Times[b, Power[x, 2]]], Times[1, Power[3, -1]]], Plus[c, Times[d, Power[x, 2]]]], -1]], x], x], Dist[Times[1, Power[6, -1]], Int[Times[Plus[3, Times[-1, Rt[Times[-1, b, Power[a, -1]], 2], x]], Power[Times[Power[Plus[a, Times[b, Power[x, 2]]], Times[1, Power[3, -1]]], Plus[c, Times[d, Power[x, 2]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[b, c], Times[3, a, d]]], NegQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[2, 3]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[d, -1]], Int[Times[1, Power[Power[Plus[a, Times[b, Power[x, 2]]], Times[1, Power[3, -1]]], -1]], x], x], Times[-1, Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[d, -1]], Int[Times[1, Power[Times[Power[Plus[a, Times[b, Power[x, 2]]], Times[1, Power[3, -1]]], Plus[c, Times[d, Power[x, 2]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[b, c], Times[3, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 4]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Times[-1, b, Power[x, 2], Power[a, -1]]], Power[Times[2, x], -1]], Subst[Int[Times[1, Power[Times[Sqrt[Times[-1, b, x, Power[a, -1]]], Power[Plus[a, Times[b, x]], Times[1, Power[4, -1]]], Plus[c, Times[d, x]]], -1]], x], x, Power[x, 2]], x], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 4]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Times[-1, b, Power[x, 2], Power[a, -1]]], Power[Times[2, x], -1]], Subst[Int[Times[1, Power[Times[Sqrt[Times[-1, b, x, Power[a, -1]]], Power[Plus[a, Times[b, x]], Times[3, Power[4, -1]]], Plus[c, Times[d, x]]], -1]], x], x, Power[x, 2]], x], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[d, -1]], Int[Power[Plus[a, Times[b, Power[x, 2]]], Plus[p, -1]], x], x], Times[-1, Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[d, -1]], Int[Times[Power[Plus[a, Times[b, Power[x, 2]]], Plus[p, -1]], Power[Plus[c, Times[d, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Greater[p, 0], Or[Equal[p, Times[1, Power[2, -1]]], Equal[Denominator[p], 4]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Power[Plus[a, Times[b, Power[x, 2]]], p], x], x], Times[-1, Dist[Times[d, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, 2]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Less[p, -1], Equal[Denominator[p], 4], Or[Equal[p, Times[-5, Power[4, -1]]], Equal[p, Times[-7, Power[4, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[a, Power[c, -1]], Subst[Int[Times[1, Power[Plus[1, Times[-1, 4, a, b, Power[x, 4]]], -1]], x], x, Times[x, Power[Sqrt[Plus[a, Times[b, Power[x, 4]]]], -1]]], x], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], PosQ[Times[a, b]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, a, b], 4]]], Plus[Simp[Times[a, Power[Times[2, c, q], -1], ArcTan[Times[q, x, Plus[a, Times[Power[q, 2], Power[x, 2]]], Power[Times[a, Sqrt[Plus[a, Times[b, Power[x, 4]]]]], -1]]]], x], Simp[Times[a, Power[Times[2, c, q], -1], ArcTanh[Times[q, x, Plus[a, Times[-1, Power[q, 2], Power[x, 2]]], Power[Times[a, Sqrt[Plus[a, Times[b, Power[x, 4]]]]], -1]]]], x]]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], NegQ[Times[a, b]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[d, -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 4]]]], -1]], x], x], Times[-1, Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[d, -1]], Int[Times[1, Power[Times[Sqrt[Plus[a, Times[b, Power[x, 4]]]], Plus[c, Times[d, Power[x, 4]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[1, 4]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[a, Times[b, Power[x, 4]]]], Sqrt[Times[a, Power[Plus[a, Times[b, Power[x, 4]]], -1]]]], Subst[Int[Times[1, Power[Times[Sqrt[Plus[1, Times[-1, b, Power[x, 4]]]], Plus[c, Times[-1, Plus[Times[b, c], Times[-1, a, d]], Power[x, 4]]]], -1]], x], x, Times[x, Power[Power[Plus[a, Times[b, Power[x, 4]]], Times[1, Power[4, -1]]], -1]]], x], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[d, -1]], Int[Power[Plus[a, Times[b, Power[x, 4]]], Plus[p, -1]], x], x], Times[-1, Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[d, -1]], Int[Times[Power[Plus[a, Times[b, Power[x, 4]]], Plus[p, -1]], Power[Plus[c, Times[d, Power[x, 4]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Or[Equal[p, Times[3, Power[4, -1]]], Equal[p, Times[5, Power[4, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[Times[2, c], -1]], Int[Times[1, Power[Times[Sqrt[Plus[a, Times[b, Power[x, 4]]]], Plus[1, Times[-1, Rt[Times[-1, d, Power[c, -1]], 2], Power[x, 2]]]], -1]], x], x], Dist[Times[1, Power[Times[2, c], -1]], Int[Times[1, Power[Times[Sqrt[Plus[a, Times[b, Power[x, 4]]]], Plus[1, Times[Rt[Times[-1, d, Power[c, -1]], 2], Power[x, 2]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-3, 4]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[1, Power[Power[Plus[a, Times[b, Power[x, 4]]], Times[3, Power[4, -1]]], -1]], x], x], Times[-1, Dist[Times[d, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, 4]]], Times[1, Power[4, -1]]], Power[Plus[c, Times[d, Power[x, 4]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Sqrt[Plus[a, Times[b, Power[x, 2]]]], Power[Times[c, Rt[Times[d, Power[c, -1]], 2], Sqrt[Plus[c, Times[d, Power[x, 2]]]], Sqrt[Times[c, Plus[a, Times[b, Power[x, 2]]], Power[Times[a, Plus[c, Times[d, Power[x, 2]]]], -1]]]], -1], EllipticE[ArcTan[Times[Rt[Times[d, Power[c, -1]], 2], x]], Plus[1, Times[-1, b, c, Power[Times[a, d], -1]]]]], x], And[FreeQ[List[a, b, c, d], x], PosQ[Times[b, Power[a, -1]]], PosQ[Times[d, Power[c, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Times[a, n, Plus[p, 1]], -1]], x]], Dist[Times[1, Power[Times[a, n, Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Simp[Plus[Times[c, Plus[Times[n, Plus[p, 1]], 1]], Times[d, Plus[Times[n, Plus[p, q, 1]], 1], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p, q], Less[p, -1], Less[0, q, 1], IntBinomialQ[a, b, c, d, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[a, d], Times[-1, c, b]], x, Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Power[Times[a, b, n, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[a, b, n, Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -2]], Simp[Plus[Times[c, Plus[Times[a, d], Times[-1, c, b, Plus[Times[n, Plus[p, 1]], 1]]]], Times[d, Plus[Times[a, d, Plus[Times[n, Plus[q, -1]], 1]], Times[-1, b, c, Plus[Times[n, Plus[p, q]], 1]]], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p, q], Less[p, -1], Greater[q, 1], IntBinomialQ[a, b, c, d, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, x, Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, 1]], Power[Times[a, n, Plus[p, 1], Plus[Times[b, c], Times[-1, a, d]]], -1]], x]], Dist[Times[1, Power[Times[a, n, Plus[p, 1], Plus[Times[b, c], Times[-1, a, d]]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Simp[Plus[Times[b, c], Times[n, Plus[p, 1], Plus[Times[b, c], Times[-1, a, d]]], Times[d, b, Plus[Times[n, Plus[p, q, 2]], 1], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, n, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Less[p, -1], Not[And[Not[IntegerQ[p]], IntegerQ[q], Less[q, -1]]], IntBinomialQ[a, b, c, d, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n], IntegersQ[p, q], Greater[Plus[p, q], 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[d, x, Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Power[Times[b, Plus[Times[n, Plus[p, q]], 1]], -1]], x], Dist[Times[1, Power[Times[b, Plus[Times[n, Plus[p, q]], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -2]], Simp[Plus[Times[c, Plus[Times[b, c, Plus[Times[n, Plus[p, q]], 1]], Times[-1, a, d]]], Times[d, Plus[Times[b, c, Plus[Times[n, Plus[p, Times[2, q], -1]], 1]], Times[-1, a, d, Plus[Times[n, Plus[q, -1]], 1]]], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, n, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[q], Greater[q, 1], NonzeroQ[Plus[Times[n, Plus[p, q]], 1]], Not[And[IntegerQ[p], Greater[p, 1]]], IntBinomialQ[a, b, c, d, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Plus[Times[n, Plus[p, q]], 1], -1]], x], Dist[Times[n, Power[Plus[Times[n, Plus[p, q]], 1], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]]], Plus[p, -1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Simp[Plus[Times[a, c, Plus[p, q]], Times[Plus[Times[q, Plus[Times[b, c], Times[-1, a, d]]], Times[a, d, Plus[p, q]]], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p, q], Greater[q, 0], Greater[p, 0], IntBinomialQ[a, b, c, d, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Sqrt[Plus[a, Times[b, Power[x, 2]]]], Power[Times[a, Rt[Times[d, Power[c, -1]], 2], Sqrt[Plus[c, Times[d, Power[x, 2]]]], Sqrt[Times[c, Plus[a, Times[b, Power[x, 2]]], Power[Times[a, Plus[c, Times[d, Power[x, 2]]]], -1]]]], -1], EllipticF[ArcTan[Times[Rt[Times[d, Power[c, -1]], 2], x]], Plus[1, Times[-1, b, c, Power[Times[a, d], -1]]]]], x], And[FreeQ[List[a, b, c, d], x], PosQ[Times[d, Power[c, -1]]], PosQ[Times[b, Power[a, -1]]], Not[SimplerSqrtQ[Times[b, Power[a, -1]], Times[d, Power[c, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[1, Power[Times[Sqrt[a], Sqrt[c], Rt[Times[-1, d, Power[c, -1]], 2]], -1], EllipticF[ArcSin[Times[Rt[Times[-1, d, Power[c, -1]], 2], x]], Times[b, c, Power[Times[a, d], -1]]]], x], And[FreeQ[List[a, b, c, d], x], NegQ[Times[d, Power[c, -1]]], PositiveQ[c], PositiveQ[a], Not[And[NegQ[Times[b, Power[a, -1]]], SimplerSqrtQ[Times[-1, b, Power[a, -1]], Times[-1, d, Power[c, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Power[Times[Sqrt[c], Rt[Times[-1, d, Power[c, -1]], 2], Sqrt[Plus[a, Times[-1, b, c, Power[d, -1]]]]], -1], EllipticF[ArcCos[Times[Rt[Times[-1, d, Power[c, -1]], 2], x]], Times[b, c, Power[Plus[Times[b, c], Times[-1, a, d]], -1]]]], x]], And[FreeQ[List[a, b, c, d], x], NegQ[Times[d, Power[c, -1]]], PositiveQ[c], PositiveQ[Plus[a, Times[-1, b, c, Power[d, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[1, Times[d, Power[c, -1], Power[x, 2]]]], Power[Sqrt[Plus[c, Times[d, Power[x, 2]]]], -1]], Int[Times[1, Power[Times[Sqrt[Plus[a, Times[b, Power[x, 2]]]], Sqrt[Plus[1, Times[d, Power[c, -1], Power[x, 2]]]]], -1]], x], x], And[FreeQ[List[a, b, c, d], x], Not[PositiveQ[c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[a, Int[Times[1, Power[Times[Sqrt[Plus[a, Times[b, Power[x, 2]]]], Sqrt[Plus[c, Times[d, Power[x, 2]]]]], -1]], x], x], Dist[b, Int[Times[Power[x, 2], Power[Times[Sqrt[Plus[a, Times[b, Power[x, 2]]]], Sqrt[Plus[c, Times[d, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d], x], PosQ[Times[d, Power[c, -1]]], PosQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[d, -1]], Int[Times[Sqrt[Plus[c, Times[d, Power[x, 2]]]], Power[Sqrt[Plus[a, Times[b, Power[x, 2]]]], -1]], x], x], Times[-1, Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[d, -1]], Int[Times[1, Power[Times[Sqrt[Plus[a, Times[b, Power[x, 2]]]], Sqrt[Plus[c, Times[d, Power[x, 2]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], PosQ[Times[d, Power[c, -1]]], NegQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Sqrt[a], Power[Times[Sqrt[c], Rt[Times[-1, d, Power[c, -1]], 2]], -1], EllipticE[ArcSin[Times[Rt[Times[-1, d, Power[c, -1]], 2], x]], Times[b, c, Power[Times[a, d], -1]]]], x], And[FreeQ[List[a, b, c, d], x], NegQ[Times[d, Power[c, -1]]], PositiveQ[c], PositiveQ[a]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Sqrt[Plus[a, Times[-1, b, c, Power[d, -1]]]], Power[Times[Sqrt[c], Rt[Times[-1, d, Power[c, -1]], 2]], -1], EllipticE[ArcCos[Times[Rt[Times[-1, d, Power[c, -1]], 2], x]], Times[b, c, Power[Plus[Times[b, c], Times[-1, a, d]], -1]]]], x]], And[FreeQ[List[a, b, c, d], x], NegQ[Times[d, Power[c, -1]]], PositiveQ[c], PositiveQ[Plus[a, Times[-1, b, c, Power[d, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[a, Times[b, Power[x, 2]]]], Power[Sqrt[Plus[1, Times[b, Power[a, -1], Power[x, 2]]]], -1]], Int[Times[Sqrt[Plus[1, Times[b, Power[a, -1], Power[x, 2]]]], Power[Sqrt[Plus[c, Times[d, Power[x, 2]]]], -1]], x], x], And[FreeQ[List[a, b, c, d], x], NegQ[Times[d, Power[c, -1]]], PositiveQ[c], Not[PositiveQ[a]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[1, Times[d, Power[c, -1], Power[x, 2]]]], Power[Sqrt[Plus[c, Times[d, Power[x, 2]]]], -1]], Int[Times[Sqrt[Plus[a, Times[b, Power[x, 2]]]], Power[Sqrt[Plus[1, Times[d, Power[c, -1], Power[x, 2]]]], -1]], x], x], And[FreeQ[List[a, b, c, d], x], NegQ[Times[d, Power[c, -1]]], Not[PositiveQ[c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x], And[FreeQ[List[a, b, c, d, n, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[a, p], Power[c, q], x, AppellF1[Times[1, Power[n, -1]], Times[-1, p], Times[-1, q], Plus[1, Times[1, Power[n, -1]]], Times[-1, b, Power[x, n], Power[a, -1]], Times[-1, d, Power[x, n], Power[c, -1]]]], x], And[FreeQ[List[a, b, c, d, n, p, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[n, 1]], PositiveQ[a], PositiveQ[c]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, IntPart[p]], Power[Plus[a, Times[b, Power[x, n]]], FracPart[p]], Power[Power[Plus[1, Times[b, Power[x, n], Power[a, -1]]], FracPart[p]], -1]], Int[Times[Power[Plus[1, Times[b, Power[x, n], Power[a, -1]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x], And[FreeQ[List[a, b, c, d, n, p, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[n, 1]], Not[PositiveQ[a]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[d, Times[c, Power[x, n]]], q], Power[Power[x, Times[n, q]], -1]], x], And[FreeQ[List[a, b, c, d, n, p], x], EqQ[mn, Times[-1, n]], IntegerQ[q], Or[PosQ[n], Not[IntegerQ[p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[x, Times[n, FracPart[q]]], Power[Plus[c, Times[d, Power[x, Times[-1, n]]]], FracPart[q]], Power[Power[Plus[d, Times[c, Power[x, n]]], FracPart[q]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[d, Times[c, Power[x, n]]], q], Power[Power[x, Times[n, q]], -1]], x], x], And[FreeQ[List[a, b, c, d, n, p, q], x], EqQ[mn, Times[-1, n]], Not[IntegerQ[q]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x, u], x], And[FreeQ[List[a, b, c, d, n, p, q], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[p, Blank[]]]], Power[Pattern[v, Blank[]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[NormalizePseudoBinomial[u, x], p], Power[NormalizePseudoBinomial[v, x], q]], x], And[FreeQ[List[p, q], x], PseudoBinomialPairQ[u, v, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[p, Blank[]]]], Power[Pattern[v, Blank[]], Optional[Pattern[q, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[NormalizePseudoBinomial[Times[Power[x, Times[m, Power[p, -1]]], u], x], p], Power[NormalizePseudoBinomial[v, x], q]], x], And[FreeQ[List[p, q], x], IntegersQ[p, Times[m, Power[p, -1]]], PseudoBinomialPairQ[Times[Power[x, Times[m, Power[p, -1]]], u], v, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[e, m], Power[Times[n, Power[b, Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]]], -1]], Subst[Int[Times[Power[Times[b, x], Plus[p, Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]], Power[Plus[c, Times[d, x]], q]], x], x, Power[x, n]], x], And[FreeQ[List[b, c, d, e, m, n, p, q], x], Or[IntegerQ[m], PositiveQ[e]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[e, m], Power[b, IntPart[p]], Power[Times[b, Power[x, n]], FracPart[p]], Power[Power[x, Times[n, FracPart[p]]], -1]], Int[Times[Power[x, Plus[m, Times[n, p]]], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x], And[FreeQ[List[b, c, d, e, m, n, p, q], x], Or[IntegerQ[m], PositiveQ[e]], Not[IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[e, IntPart[m]], Power[Times[e, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Times[b, Power[x, n]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x], And[FreeQ[List[b, c, d, e, m, n, p, q], x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], p], Power[Plus[c, Times[d, x]], q]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, d, m, n, p, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[m, Times[-1, n], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Plus[m, Times[n, Plus[p, q]]]], Power[Plus[b, Times[a, Power[x, Times[-1, n]]]], p], Power[Plus[d, Times[c, Power[x, Times[-1, n]]]], q]], x], And[FreeQ[List[a, b, c, d, m, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], IntegersQ[p, q], NegQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]], Power[Plus[a, Times[b, x]], p], Power[Plus[c, Times[d, x]], q]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, d, m, n, p, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[e, IntPart[m]], Power[Times[e, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x], And[FreeQ[List[a, b, c, d, e, m, n, p, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x], And[FreeQ[List[a, b, c, d, e, m, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[p, q]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[c, Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, e, Plus[m, 1]], -1]], x], And[FreeQ[List[a, b, c, d, e, m, n, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[a, d, Plus[m, 1]], Times[-1, b, c, Plus[m, Times[n, Plus[p, 1]], 1]]]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[c, Power[Times[e, x], Plus[m, 1]], Power[Plus[a1, Times[b1, Power[x, Times[n, Power[2, -1]]]]], Plus[p, 1]], Power[Plus[a2, Times[b2, Power[x, Times[n, Power[2, -1]]]]], Plus[p, 1]], Power[Times[a1, a2, e, Plus[m, 1]], -1]], x], And[FreeQ[List[a1, b1, a2, b2, c, d, e, m, n, p], x], ZeroQ[Plus[non2, Times[-1, n, Power[2, -1]]]], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], ZeroQ[Plus[Times[a1, a2, d, Plus[m, 1]], Times[-1, b1, b2, c, Plus[m, Times[n, Plus[p, 1]], 1]]]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[c, Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, e, Plus[m, 1]], -1]], x], Dist[Times[d, Power[Power[e, n], -1]], Int[Times[Power[Times[e, x], Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[m, Times[n, Plus[p, 1]], 1]], Or[IntegerQ[n], PositiveQ[e]], RationalQ[m, n], Or[And[Greater[n, 0], Less[m, -1]], And[Less[n, 0], Greater[Plus[m, n], -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[b, c], Times[-1, a, d]], Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, b, e, Plus[m, 1]], -1]], x], Dist[Times[d, Power[b, -1]], Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e, m, n, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[m, Times[n, Plus[p, 1]], 1]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[c, Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, e, Plus[m, 1]], -1]], x], Dist[Times[Plus[Times[a, d, Plus[m, 1]], Times[-1, b, c, Plus[m, Times[n, Plus[p, 1]], 1]]], Power[Times[a, Power[e, n], Plus[m, 1]], -1]], Int[Times[Power[Times[e, x], Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], Or[IntegerQ[n], PositiveQ[e]], RationalQ[m, n], Or[And[Greater[n, 0], Less[m, -1]], And[Less[n, 0], Greater[Plus[m, n], -1]]], Not[And[IntegerQ[p], Less[p, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[c, Power[Times[e, x], Plus[m, 1]], Power[Plus[a1, Times[b1, Power[x, Times[n, Power[2, -1]]]]], Plus[p, 1]], Power[Plus[a2, Times[b2, Power[x, Times[n, Power[2, -1]]]]], Plus[p, 1]], Power[Times[a1, a2, e, Plus[m, 1]], -1]], x], Dist[Times[Plus[Times[a1, a2, d, Plus[m, 1]], Times[-1, b1, b2, c, Plus[m, Times[n, Plus[p, 1]], 1]]], Power[Times[a1, a2, Power[e, n], Plus[m, 1]], -1]], Int[Times[Power[Times[e, x], Plus[m, n]], Power[Plus[a1, Times[b1, Power[x, Times[n, Power[2, -1]]]]], p], Power[Plus[a2, Times[b2, Power[x, Times[n, Power[2, -1]]]]], p]], x], x]], And[FreeQ[List[a1, b1, a2, b2, c, d, e, p], x], ZeroQ[Plus[non2, Times[-1, n, Power[2, -1]]]], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], Or[IntegerQ[n], PositiveQ[e]], RationalQ[m, n], Or[And[Greater[n, 0], Less[m, -1]], And[Less[n, 0], Greater[Plus[m, n], -1]]], Not[And[IntegerQ[p], Less[p, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[-1, a], Plus[Times[m, Power[2, -1]], -1]], Plus[Times[b, c], Times[-1, a, d]], x, Power[Plus[a, Times[b, Power[x, 2]]], Plus[p, 1]], Power[Times[2, Power[b, Plus[Times[m, Power[2, -1]], 1]], Plus[p, 1]], -1]], x], Dist[Times[1, Power[Times[2, Power[b, Plus[Times[m, Power[2, -1]], 1]], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, 2]]], Plus[p, 1]], ExpandToSum[Plus[Times[2, b, Plus[p, 1], Power[x, 2], Together[Times[Plus[Times[Power[b, Times[m, Power[2, -1]]], Power[x, Plus[m, -2]], Plus[c, Times[d, Power[x, 2]]]], Times[-1, Power[Times[-1, a], Plus[Times[m, Power[2, -1]], -1]], Plus[Times[b, c], Times[-1, a, d]]]], Power[Plus[a, Times[b, Power[x, 2]]], -1]]]], Times[-1, Power[Times[-1, a], Plus[Times[m, Power[2, -1]], -1]], Plus[Times[b, c], Times[-1, a, d]]]], x]], x], x]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Less[p, -1], PositiveIntegerQ[Times[m, Power[2, -1]]], Or[IntegerQ[p], Equal[Plus[m, Times[2, p], 1], 0]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[-1, a], Plus[Times[m, Power[2, -1]], -1]], Plus[Times[b, c], Times[-1, a, d]], x, Power[Plus[a, Times[b, Power[x, 2]]], Plus[p, 1]], Power[Times[2, Power[b, Plus[Times[m, Power[2, -1]], 1]], Plus[p, 1]], -1]], x], Dist[Times[1, Power[Times[2, Power[b, Plus[Times[m, Power[2, -1]], 1]], Plus[p, 1]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, 2]]], Plus[p, 1]], ExpandToSum[Plus[Times[2, b, Plus[p, 1], Together[Times[Plus[Times[Power[b, Times[m, Power[2, -1]]], Plus[c, Times[d, Power[x, 2]]]], Times[-1, Power[Times[-1, a], Plus[Times[m, Power[2, -1]], -1]], Plus[Times[b, c], Times[-1, a, d]], Power[x, Plus[Times[-1, m], 2]]]], Power[Plus[a, Times[b, Power[x, 2]]], -1]]]], Times[-1, Power[Times[-1, a], Plus[Times[m, Power[2, -1]], -1]], Plus[Times[b, c], Times[-1, a, d]], Power[x, Times[-1, m]]]], x]], x], x]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Less[p, -1], NegativeIntegerQ[Times[m, Power[2, -1]]], Or[IntegerQ[p], Equal[Plus[m, Times[2, p], 1], 0]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[b, c], Times[-1, a, d]], Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, b, e, n, Plus[p, 1]], -1]], x]], Times[-1, Dist[Times[Plus[Times[a, d, Plus[m, 1]], Times[-1, b, c, Plus[m, Times[n, Plus[p, 1]], 1]]], Power[Times[a, b, n, Plus[p, 1]], -1]], Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, m, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Less[p, -1], Or[IntegerQ[p], Not[RationalQ[m]], And[PositiveIntegerQ[n], NegativeIntegerQ[Plus[p, Times[1, Power[2, -1]]]], LessEqual[-1, m, Times[-1, n, Plus[p, 1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[b1, b2, c], Times[-1, a1, a2, d]], Power[Times[e, x], Plus[m, 1]], Power[Plus[a1, Times[b1, Power[x, Times[n, Power[2, -1]]]]], Plus[p, 1]], Power[Plus[a2, Times[b2, Power[x, Times[n, Power[2, -1]]]]], Plus[p, 1]], Power[Times[a1, a2, b1, b2, e, n, Plus[p, 1]], -1]], x]], Times[-1, Dist[Times[Plus[Times[a1, a2, d, Plus[m, 1]], Times[-1, b1, b2, c, Plus[m, Times[n, Plus[p, 1]], 1]]], Power[Times[a1, a2, b1, b2, n, Plus[p, 1]], -1]], Int[Times[Power[Times[e, x], m], Power[Plus[a1, Times[b1, Power[x, Times[n, Power[2, -1]]]]], Plus[p, 1]], Power[Plus[a2, Times[b2, Power[x, Times[n, Power[2, -1]]]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a1, b1, a2, b2, c, d, e, m, n], x], ZeroQ[Plus[non2, Times[-1, n, Power[2, -1]]]], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], RationalQ[p], Less[p, -1], Or[IntegerQ[p], Not[RationalQ[m]], And[PositiveIntegerQ[n], NegativeIntegerQ[Plus[p, Times[1, Power[2, -1]]]], LessEqual[-1, m, Times[-1, n, Plus[p, 1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[d, Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[b, e, Plus[m, Times[n, Plus[p, 1]], 1]], -1]], x], Times[-1, Dist[Times[Plus[Times[a, d, Plus[m, 1]], Times[-1, b, c, Plus[m, Times[n, Plus[p, 1]], 1]]], Power[Times[b, Plus[m, Times[n, Plus[p, 1]], 1]], -1]], Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x]]], And[FreeQ[List[a, b, c, d, e, m, n, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[m, Times[n, Plus[p, 1]], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[d, Power[Times[e, x], Plus[m, 1]], Power[Plus[a1, Times[b1, Power[x, Times[n, Power[2, -1]]]]], Plus[p, 1]], Power[Plus[a2, Times[b2, Power[x, Times[n, Power[2, -1]]]]], Plus[p, 1]], Power[Times[b1, b2, e, Plus[m, Times[n, Plus[p, 1]], 1]], -1]], x], Times[-1, Dist[Times[Plus[Times[a1, a2, d, Plus[m, 1]], Times[-1, b1, b2, c, Plus[m, Times[n, Plus[p, 1]], 1]]], Power[Times[b1, b2, Plus[m, Times[n, Plus[p, 1]], 1]], -1]], Int[Times[Power[Times[e, x], m], Power[Plus[a1, Times[b1, Power[x, Times[n, Power[2, -1]]]]], p], Power[Plus[a2, Times[b2, Power[x, Times[n, Power[2, -1]]]]], p]], x], x]]], And[FreeQ[List[a1, b1, a2, b2, c, d, e, m, n, p], x], ZeroQ[Plus[non2, Times[-1, n, Power[2, -1]]]], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], NonzeroQ[Plus[m, Times[n, Plus[p, 1]], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, m], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n], PositiveIntegerQ[p], Or[IntegerQ[m], PositiveIntegerQ[Times[2, Plus[m, 1]]], Not[RationalQ[m]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[c, 2], Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, e, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[a, Power[e, n], Plus[m, 1]], -1]], Int[Times[Power[Times[e, x], Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]]], p], Simp[Plus[Times[b, Power[c, 2], n, Plus[p, 1]], Times[c, Plus[Times[b, c], Times[-1, 2, a, d]], Plus[m, 1]], Times[-1, a, Plus[m, 1], Power[d, 2], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n], RationalQ[m, n], Less[m, -1], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[Times[b, c], Times[-1, a, d]], 2], Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, Power[b, 2], e, n, Plus[p, 1]], -1]], x]], Dist[Times[1, Power[Times[a, Power[b, 2], n, Plus[p, 1]], -1]], Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Simp[Plus[Times[Power[Plus[Times[b, c], Times[-1, a, d]], 2], Plus[m, 1]], Times[Power[b, 2], Power[c, 2], n, Plus[p, 1]], Times[a, b, Power[d, 2], n, Plus[p, 1], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, m, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[d, 2], Power[Times[e, x], Plus[m, n, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[b, Power[e, Plus[n, 1]], Plus[m, Times[n, Plus[p, 2]], 1]], -1]], x], Dist[Times[1, Power[Times[b, Plus[m, Times[n, Plus[p, 2]], 1]], -1]], Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], p], Simp[Plus[Times[b, Power[c, 2], Plus[m, Times[n, Plus[p, 2]], 1]], Times[d, Plus[Times[Plus[Times[2, b, c], Times[-1, a, d]], Plus[m, n, 1]], Times[2, b, c, n, Plus[p, 1]]], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, m, n, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n], NonzeroQ[Plus[m, Times[n, Plus[p, 2]], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, GCD[Plus[m, 1], n]]], Condition[Dist[Times[1, Power[k, -1]], Subst[Int[Times[Power[x, Plus[Times[Plus[m, 1], Power[k, -1]], -1]], Power[Plus[a, Times[b, Power[x, Times[n, Power[k, -1]]]]], p], Power[Plus[c, Times[d, Power[x, Times[n, Power[k, -1]]]]], q]], x], x, Power[x, k]], x], Unequal[k, 1]]], And[FreeQ[List[a, b, c, d, p, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[m]]], Dist[Times[k, Power[e, -1]], Subst[Int[Times[Power[x, Plus[Times[k, Plus[m, 1]], -1]], Power[Plus[a, Times[b, Power[x, Times[k, n]], Power[Power[e, n], -1]]], p], Power[Plus[c, Times[d, Power[x, Times[k, n]], Power[Power[e, n], -1]]], q]], x], x, Power[Times[e, x], Times[1, Power[k, -1]]]], x]], And[FreeQ[List[a, b, c, d, e, p, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n], FractionQ[m], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[e, Plus[n, -1]], Power[Times[e, x], Plus[m, Times[-1, n], 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Times[b, n, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[Power[e, n], Power[Times[b, n, Plus[p, 1]], -1]], Int[Times[Power[Times[e, x], Plus[m, Times[-1, n]]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Simp[Plus[Times[c, Plus[m, Times[-1, n], 1]], Times[d, Plus[m, Times[n, Plus[q, -1]], 1], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n], RationalQ[m, p, q], Less[p, -1], Greater[q, 0], Greater[Plus[m, Times[-1, n], 1], 0], IntBinomialQ[a, b, c, d, e, m, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[c, b], Times[-1, a, d]], Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Power[Times[a, b, e, n, Plus[p, 1]], -1]], x]], Dist[Times[1, Power[Times[a, b, n, Plus[p, 1]], -1]], Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -2]], Simp[Plus[Times[c, Plus[Times[c, b, n, Plus[p, 1]], Times[Plus[Times[c, b], Times[-1, a, d]], Plus[m, 1]]]], Times[d, Plus[Times[c, b, n, Plus[p, 1]], Times[Plus[Times[c, b], Times[-1, a, d]], Plus[m, Times[n, Plus[q, -1]], 1]]], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, m], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n], RationalQ[p, q], Less[p, -1], Greater[q, 1], IntBinomialQ[a, b, c, d, e, m, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Times[a, e, n, Plus[p, 1]], -1]], x]], Dist[Times[1, Power[Times[a, n, Plus[p, 1]], -1]], Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Simp[Plus[Times[c, Plus[m, Times[n, Plus[p, 1]], 1]], Times[d, Plus[m, Times[n, Plus[p, q, 1]], 1], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, m], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n], RationalQ[p, q], Less[p, -1], Less[0, q, 1], IntBinomialQ[a, b, c, d, e, m, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[a, Power[e, Plus[Times[2, n], -1]], Power[Times[e, x], Plus[m, Times[-1, 2, n], 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, 1]], Power[Times[b, n, Plus[Times[b, c], Times[-1, a, d]], Plus[p, 1]], -1]], x]], Dist[Times[Power[e, Times[2, n]], Power[Times[b, n, Plus[Times[b, c], Times[-1, a, d]], Plus[p, 1]], -1]], Int[Times[Power[Times[e, x], Plus[m, Times[-1, 2, n]]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Simp[Plus[Times[a, c, Plus[m, Times[-1, 2, n], 1]], Times[Plus[Times[a, d, Plus[m, Times[-1, n], Times[n, q], 1]], Times[b, c, n, Plus[p, 1]]], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n], RationalQ[m, p], Less[p, -1], Greater[Plus[m, Times[-1, n], 1], n], IntBinomialQ[a, b, c, d, e, m, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[e, Plus[n, -1]], Power[Times[e, x], Plus[m, Times[-1, n], 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, 1]], Power[Times[n, Plus[Times[b, c], Times[-1, a, d]], Plus[p, 1]], -1]], x], Times[-1, Dist[Times[Power[e, n], Power[Times[n, Plus[Times[b, c], Times[-1, a, d]], Plus[p, 1]], -1]], Int[Times[Power[Times[e, x], Plus[m, Times[-1, n]]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Simp[Plus[Times[c, Plus[m, Times[-1, n], 1]], Times[d, Plus[m, Times[n, Plus[p, q, 1]], 1], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n], RationalQ[m, p], Less[p, -1], Inequality[n, GreaterEqual, Plus[m, Times[-1, n], 1], Greater, 0], IntBinomialQ[a, b, c, d, e, m, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, 1]], Power[Times[a, e, n, Plus[Times[b, c], Times[-1, a, d]], Plus[p, 1]], -1]], x]], Dist[Times[1, Power[Times[a, n, Plus[Times[b, c], Times[-1, a, d]], Plus[p, 1]], -1]], Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Simp[Plus[Times[c, b, Plus[m, 1]], Times[n, Plus[Times[b, c], Times[-1, a, d]], Plus[p, 1]], Times[d, b, Plus[m, Times[n, Plus[p, q, 2]], 1], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, m, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n], RationalQ[p], Less[p, -1], IntBinomialQ[a, b, c, d, e, m, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Times[e, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[n, Power[Times[Power[e, n], Plus[m, 1]], -1]], Int[Times[Power[Times[e, x], Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, -1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Simp[Plus[Times[b, c, p], Times[a, d, q], Times[b, d, Plus[p, q], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n], RationalQ[m, p, q], Greater[q, 0], Less[m, -1], Greater[p, 0], IntBinomialQ[a, b, c, d, e, m, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[c, Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Power[Times[a, e, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[a, Power[e, n], Plus[m, 1]], -1]], Int[Times[Power[Times[e, x], Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -2]], Simp[Plus[Times[c, Plus[Times[c, b], Times[-1, a, d]], Plus[m, 1]], Times[c, n, Plus[Times[b, c, Plus[p, 1]], Times[a, d, Plus[q, -1]]]], Times[d, Plus[Times[Plus[Times[c, b], Times[-1, a, d]], Plus[m, 1]], Times[c, b, n, Plus[p, q]]], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n], RationalQ[m, q], Greater[q, 1], Less[m, -1], IntBinomialQ[a, b, c, d, e, m, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Times[a, e, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[a, Power[e, n], Plus[m, 1]], -1]], Int[Times[Power[Times[e, x], Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Simp[Plus[Times[c, b, Plus[m, 1]], Times[n, Plus[Times[b, c, Plus[p, 1]], Times[a, d, q]]], Times[d, Plus[Times[b, Plus[m, 1]], Times[b, n, Plus[p, q, 1]]], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n], RationalQ[m, q], Less[0, q, 1], Less[m, -1], IntBinomialQ[a, b, c, d, e, m, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Times[e, Plus[m, Times[n, Plus[p, q]], 1]], -1]], x], Dist[Times[n, Power[Plus[m, Times[n, Plus[p, q]], 1], -1]], Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, -1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Simp[Plus[Times[a, c, Plus[p, q]], Times[Plus[Times[q, Plus[Times[b, c], Times[-1, a, d]]], Times[a, d, Plus[p, q]]], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, m], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n], RationalQ[p, q], Greater[q, 0], Greater[p, 0], IntBinomialQ[a, b, c, d, e, m, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[d, Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Power[Times[b, e, Plus[m, Times[n, Plus[p, q]], 1]], -1]], x], Dist[Times[1, Power[Times[b, Plus[m, Times[n, Plus[p, q]], 1]], -1]], Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -2]], Simp[Plus[Times[c, Plus[Times[Plus[Times[c, b], Times[-1, a, d]], Plus[m, 1]], Times[c, b, n, Plus[p, q]]]], Times[Plus[Times[d, Plus[Times[c, b], Times[-1, a, d]], Plus[m, 1]], Times[d, n, Plus[q, -1], Plus[Times[b, c], Times[-1, a, d]]], Times[c, b, d, n, Plus[p, q]]], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, m, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n], RationalQ[q], Greater[q, 1], IntBinomialQ[a, b, c, d, e, m, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[e, Plus[n, -1]], Power[Times[e, x], Plus[m, Times[-1, n], 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Times[b, Plus[m, Times[n, Plus[p, q]], 1]], -1]], x], Times[-1, Dist[Times[Power[e, n], Power[Times[b, Plus[m, Times[n, Plus[p, q]], 1]], -1]], Int[Times[Power[Times[e, x], Plus[m, Times[-1, n]]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Simp[Plus[Times[a, c, Plus[m, Times[-1, n], 1]], Times[Plus[Times[a, d, Plus[m, Times[-1, n], 1]], Times[-1, n, q, Plus[Times[b, c], Times[-1, a, d]]]], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n], RationalQ[m, q], Greater[q, 0], Greater[Plus[m, Times[-1, n], 1], 0], IntBinomialQ[a, b, c, d, e, m, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[e, Plus[Times[2, n], -1]], Power[Times[e, x], Plus[m, Times[-1, 2, n], 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, 1]], Power[Times[b, d, Plus[m, Times[n, Plus[p, q]], 1]], -1]], x], Times[-1, Dist[Times[Power[e, Times[2, n]], Power[Times[b, d, Plus[m, Times[n, Plus[p, q]], 1]], -1]], Int[Times[Power[Times[e, x], Plus[m, Times[-1, 2, n]]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Simp[Plus[Times[a, c, Plus[m, Times[-1, 2, n], 1]], Times[Plus[Times[a, d, Plus[m, Times[n, Plus[q, -1]], 1]], Times[b, c, Plus[m, Times[n, Plus[p, -1]], 1]]], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, p, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n], RationalQ[m], Greater[Plus[m, Times[-1, n], 1], n], IntBinomialQ[a, b, c, d, e, m, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, 1]], Power[Times[a, c, e, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[a, c, Power[e, n], Plus[m, 1]], -1]], Int[Times[Power[Times[e, x], Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Simp[Plus[Times[Plus[Times[b, c], Times[a, d]], Plus[m, n, 1]], Times[n, Plus[Times[b, c, p], Times[a, d, q]]], Times[b, d, Plus[m, Times[n, Plus[p, q, 2]], 1], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, p, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n], RationalQ[m], Less[m, -1], IntBinomialQ[a, b, c, d, e, m, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[a, Power[e, n], Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Power[Times[e, x], Plus[m, Times[-1, n]]], Power[Plus[a, Times[b, Power[x, n]]], -1]], x], x]], Dist[Times[c, Power[e, n], Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Power[Times[e, x], Plus[m, Times[-1, n]]], Power[Plus[c, Times[d, Power[x, n]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, m, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n], RationalQ[m], LessEqual[n, m, Plus[Times[2, n], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], -1]], x], x], Times[-1, Dist[Times[d, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Power[Times[e, x], m], Power[Plus[c, Times[d, Power[x, n]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, m], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[b, -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Power[Sqrt[Plus[c, Times[d, Power[x, n]]]], -1]], x], x], Times[-1, Dist[Times[a, Power[b, -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Power[Times[Plus[a, Times[b, Power[x, n]]], Sqrt[Plus[c, Times[d, Power[x, n]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], IntegersQ[Times[m, Power[2, -1]], Times[n, Power[2, -1]]], Less[0, Plus[m, Times[-1, n], 1], n], LessEqual[n, 4]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numerator[Rt[Times[-1, a, Power[b, -1]], 2]]], Set[s, Denominator[Rt[Times[-1, a, Power[b, -1]], 2]]]], Plus[Dist[Times[s, Power[Times[2, b], -1]], Int[Times[1, Power[Times[Plus[r, Times[s, Power[x, 2]]], Sqrt[Plus[c, Times[d, Power[x, 4]]]]], -1]], x], x], Times[-1, Dist[Times[s, Power[Times[2, b], -1]], Int[Times[1, Power[Times[Plus[r, Times[-1, s, Power[x, 2]]], Sqrt[Plus[c, Times[d, Power[x, 4]]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[x, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[d, Power[c, -1]], 3]]], Plus[Times[-1, Simp[Times[q, ArcTan[Plus[Times[1, Power[Sqrt[3], -1]], Times[Power[2, Times[2, Power[3, -1]]], Plus[Sqrt[c], Times[-1, Sqrt[Plus[c, Times[d, Power[x, 3]]]]]], Power[Times[Sqrt[3], Sqrt[c], q, x], -1]]]], Power[Times[3, Power[2, Times[2, Power[3, -1]]], Sqrt[3], b, Sqrt[c]], -1]], x]], Plus[Simp[Times[q, Log[Plus[1, Times[-1, Power[2, Times[1, Power[3, -1]]], q, x], Times[-1, Sqrt[Plus[c, Times[d, Power[x, 3]]]], Power[Sqrt[c], -1]]]], Power[Times[6, Power[2, Times[2, Power[3, -1]]], b, Sqrt[c]], -1]], x], Times[-1, Simp[Times[q, Log[Plus[1, Times[-1, Power[2, Times[1, Power[3, -1]]], q, x], Times[Sqrt[Plus[c, Times[d, Power[x, 3]]]], Power[Sqrt[c], -1]]]], Power[Times[6, Power[2, Times[2, Power[3, -1]]], b, Sqrt[c]], -1]], x]], Simp[Times[q, ArcTanh[Times[Sqrt[Plus[c, Times[d, Power[x, 3]]]], Power[Sqrt[c], -1]]], Power[Times[9, Power[2, Times[2, Power[3, -1]]], b, Sqrt[c]], -1]], x], Simp[Times[q, ArcTan[Plus[Times[1, Power[Sqrt[3], -1]], Times[Power[2, Times[2, Power[3, -1]]], Plus[Sqrt[c], Sqrt[Plus[c, Times[d, Power[x, 3]]]]], Power[Times[Sqrt[3], Sqrt[c], q, x], -1]]]], Power[Times[3, Power[2, Times[2, Power[3, -1]]], Sqrt[3], b, Sqrt[c]], -1]], x]]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[4, b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[b, -1]], Int[Times[Power[x, Plus[m, -3]], Power[Sqrt[Plus[c, Times[d, Power[x, 3]]]], -1]], x], x], Times[-1, Dist[Times[a, Power[b, -1]], Int[Times[Power[x, Plus[m, -3]], Power[Times[Plus[a, Times[b, Power[x, 3]]], Sqrt[Plus[c, Times[d, Power[x, 3]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[4, b, c], Times[-1, a, d]]], PositiveIntegerQ[Times[Plus[m, -1], Power[3, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[a, -1]], Int[Times[Power[x, m], Power[Sqrt[Plus[c, Times[d, Power[x, 3]]]], -1]], x], x], Times[-1, Dist[Times[b, Power[a, -1]], Int[Times[Power[x, Plus[m, 3]], Power[Times[Plus[a, Times[b, Power[x, 3]]], Sqrt[Plus[c, Times[d, Power[x, 3]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[4, b, c], Times[-1, a, d]]], NegativeIntegerQ[Times[Plus[m, -1], Power[3, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[d, Power[b, -1]], Int[Times[Power[x, 2], Power[Sqrt[Plus[c, Times[d, Power[x, 4]]]], -1]], x], x], Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[b, -1]], Int[Times[Power[x, 2], Power[Times[Plus[a, Times[b, Power[x, 4]]], Sqrt[Plus[c, Times[d, Power[x, 4]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[d, Power[b, -1]], Int[Times[Power[x, m], Power[Sqrt[Plus[c, Times[d, Power[x, 3]]]], -1]], x], x], Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[b, -1]], Int[Times[Power[x, m], Power[Times[Plus[a, Times[b, Power[x, 3]]], Sqrt[Plus[c, Times[d, Power[x, 3]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[4, b, c], Times[-1, a, d]]], IntegerQ[Times[Plus[m, -1], Power[3, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Sqrt[Plus[a, Times[b, Power[x, 2]]]], Power[Times[b, Sqrt[Plus[c, Times[d, Power[x, 2]]]]], -1]], x], Times[-1, Dist[Times[c, Power[b, -1]], Int[Times[Sqrt[Plus[a, Times[b, Power[x, 2]]]], Power[Power[Plus[c, Times[d, Power[x, 2]]], Times[3, Power[2, -1]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PosQ[Times[b, Power[a, -1]]], PosQ[Times[d, Power[c, -1]]], Not[SimplerSqrtQ[Times[b, Power[a, -1]], Times[d, Power[c, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[b, -1]], Int[Times[Sqrt[Plus[a, Times[b, Power[x, n]]]], Power[Sqrt[Plus[c, Times[d, Power[x, n]]]], -1]], x], x], Times[-1, Dist[Times[a, Power[b, -1]], Int[Times[1, Power[Times[Sqrt[Plus[a, Times[b, Power[x, n]]]], Sqrt[Plus[c, Times[d, Power[x, n]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], Or[EqQ[n, 2], EqQ[n, 4]], Not[And[EqQ[n, 2], SimplerSqrtQ[Times[-1, b, Power[a, -1]], Times[-1, d, Power[c, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[p]]], Dist[Times[k, Power[a, Plus[p, Times[Plus[m, 1], Power[n, -1]]]], Power[n, -1]], Subst[Int[Times[Power[x, Plus[Times[k, Plus[m, 1], Power[n, -1]], -1]], Power[Plus[c, Times[-1, Plus[Times[b, c], Times[-1, a, d]], Power[x, k]]], q], Power[Power[Plus[1, Times[-1, b, Power[x, k]]], Plus[p, q, Times[Plus[m, 1], Power[n, -1]], 1]], -1]], x], x, Times[Power[x, Times[n, Power[k, -1]]], Power[Power[Plus[a, Times[b, Power[x, n]]], Times[1, Power[k, -1]]], -1]]], x]], And[FreeQ[List[a, b, c, d], x], PositiveIntegerQ[n], RationalQ[m, p], IntegersQ[Plus[p, Times[Plus[m, 1], Power[n, -1]]], q], Less[-1, p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[a, Times[b, Power[x, Times[-1, n]]]], p], Power[Plus[c, Times[d, Power[x, Times[-1, n]]]], q], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, b, c, d, p, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NegativeIntegerQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[g, Denominator[m]]], Times[-1, Dist[Times[g, Power[e, -1]], Subst[Int[Times[Power[Plus[a, Times[b, Power[e, Times[-1, n]], Power[x, Times[-1, g, n]]]], p], Power[Plus[c, Times[d, Power[e, Times[-1, n]], Power[x, Times[-1, g, n]]]], q], Power[Power[x, Plus[Times[g, Plus[m, 1]], 1]], -1]], x], x, Times[1, Power[Power[Times[e, x], Times[1, Power[g, -1]]], -1]]], x]]], And[FreeQ[List[a, b, c, d, e, p, q], x], NegativeIntegerQ[n], FractionQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[Times[e, x], m], Power[Power[x, -1], m]], Subst[Int[Times[Power[Plus[a, Times[b, Power[x, Times[-1, n]]]], p], Power[Plus[c, Times[d, Power[x, Times[-1, n]]]], q], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, d, e, m, p, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NegativeIntegerQ[n], Not[RationalQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[g, Denominator[n]]], Dist[g, Subst[Int[Times[Power[x, Plus[Times[g, Plus[m, 1]], -1]], Power[Plus[a, Times[b, Power[x, Times[g, n]]]], p], Power[Plus[c, Times[d, Power[x, Times[g, n]]]], q]], x], x, Power[x, Times[1, Power[g, -1]]]], x]], And[FreeQ[List[a, b, c, d, m, p, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[e, IntPart[m]], Power[Times[e, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x], And[FreeQ[List[a, b, c, d, e, m, p, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Plus[m, 1], -1]], Subst[Int[Times[Power[Plus[a, Times[b, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]]], p], Power[Plus[c, Times[d, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]]], q]], x], x, Power[x, Plus[m, 1]]], x], And[FreeQ[List[a, b, c, d, m, n, p, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[e, IntPart[m]], Power[Times[e, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x], And[FreeQ[List[a, b, c, d, e, m, n, p, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[c, b], Times[-1, a, d]], Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Power[Times[a, b, e, n, Plus[p, 1]], -1]], x]], Dist[Times[1, Power[Times[a, b, n, Plus[p, 1]], -1]], Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -2]], Simp[Plus[Times[c, Plus[Times[c, b, n, Plus[p, 1]], Times[Plus[Times[c, b], Times[-1, a, d]], Plus[m, 1]]]], Times[d, Plus[Times[c, b, n, Plus[p, 1]], Times[Plus[Times[c, b], Times[-1, a, d]], Plus[m, Times[n, Plus[q, -1]], 1]]], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, m, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p, q], Less[p, -1], Greater[q, 1], IntBinomialQ[a, b, c, d, e, m, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Times[a, e, n, Plus[p, 1]], -1]], x]], Dist[Times[1, Power[Times[a, n, Plus[p, 1]], -1]], Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Simp[Plus[Times[c, Plus[m, Times[n, Plus[p, 1]], 1]], Times[d, Plus[m, Times[n, Plus[p, q, 1]], 1], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, m, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p, q], Less[p, -1], Less[0, q, 1], IntBinomialQ[a, b, c, d, e, m, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, 1]], Power[Times[a, e, n, Plus[Times[b, c], Times[-1, a, d]], Plus[p, 1]], -1]], x]], Dist[Times[1, Power[Times[a, n, Plus[Times[b, c], Times[-1, a, d]], Plus[p, 1]], -1]], Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Simp[Plus[Times[c, b, Plus[m, 1]], Times[n, Plus[Times[b, c], Times[-1, a, d]], Plus[p, 1]], Times[d, b, Plus[m, Times[n, Plus[p, q, 2]], 1], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, m, n, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Less[p, -1], IntBinomialQ[a, b, c, d, e, m, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Times[e, Plus[m, Times[n, Plus[p, q]], 1]], -1]], x], Dist[Times[n, Power[Plus[m, Times[n, Plus[p, q]], 1], -1]], Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, -1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Simp[Plus[Times[a, c, Plus[p, q]], Times[Plus[Times[q, Plus[Times[b, c], Times[-1, a, d]]], Times[a, d, Plus[p, q]]], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, m, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p, q], Greater[q, 0], Greater[p, 0], IntBinomialQ[a, b, c, d, e, m, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[d, Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Power[Times[b, e, Plus[m, Times[n, Plus[p, q]], 1]], -1]], x], Dist[Times[1, Power[Times[b, Plus[m, Times[n, Plus[p, q]], 1]], -1]], Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -2]], Simp[Plus[Times[c, Plus[Times[Plus[Times[c, b], Times[-1, a, d]], Plus[m, 1]], Times[c, b, n, Plus[p, q]]]], Times[Plus[Times[d, Plus[Times[c, b], Times[-1, a, d]], Plus[m, 1]], Times[d, n, Plus[q, -1], Plus[Times[b, c], Times[-1, a, d]]], Times[c, b, d, n, Plus[p, q]]], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, m, n, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[q], Greater[q, 1], IntBinomialQ[a, b, c, d, e, m, n, p, q, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[a, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Power[Plus[a, Times[b, Power[x, n]]], -1]], x], x]], Dist[Times[c, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Power[Plus[c, Times[d, Power[x, n]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, m, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], Or[ZeroQ[Plus[m, Times[-1, n]]], ZeroQ[Plus[m, Times[-1, 2, n], 1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], -1]], x], x], Times[-1, Dist[Times[d, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Power[Times[e, x], m], Power[Plus[c, Times[d, Power[x, n]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, n, m], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x], And[FreeQ[List[a, b, c, d, e, m, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], IntegersQ[m, p, q], GreaterEqual[p, -2], Or[GreaterEqual[q, -2], And[Equal[q, -3], IntegerQ[Times[Plus[m, -1], Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Plus[m, Times[-1, n, q]]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[d, Times[c, Power[x, n]]], q]], x], And[FreeQ[List[a, b, c, d, m, n, p], x], EqQ[mn, Times[-1, n]], IntegerQ[q], Or[PosQ[n], Not[IntegerQ[p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[x, Times[n, FracPart[q]]], Power[Plus[c, Times[d, Power[x, Times[-1, n]]]], FracPart[q]], Power[Power[Plus[d, Times[c, Power[x, n]]], FracPart[q]], -1]], Int[Times[Power[x, Plus[m, Times[-1, n, q]]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[d, Times[c, Power[x, n]]], q]], x], x], And[FreeQ[List[a, b, c, d, m, n, p, q], x], EqQ[mn, Times[-1, n]], Not[IntegerQ[q]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[e, IntPart[m]], Power[Times[e, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, Times[-1, n]]]], q]], x], x], And[FreeQ[List[a, b, c, d, e, m, n, p, q], x], EqQ[mn, Times[-1, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[a, p], Power[c, q], Power[Times[e, x], Plus[m, 1]], Power[Times[e, Plus[m, 1]], -1], AppellF1[Times[Plus[m, 1], Power[n, -1]], Times[-1, p], Times[-1, q], Plus[1, Times[Plus[m, 1], Power[n, -1]]], Times[-1, b, Power[x, n], Power[a, -1]], Times[-1, d, Power[x, n], Power[c, -1]]]], x], And[FreeQ[List[a, b, c, d, e, m, n, p, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[m, 1]], NonzeroQ[Plus[m, Times[-1, n], 1]], PositiveQ[a], PositiveQ[c]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, IntPart[p]], Power[Plus[a, Times[b, Power[x, n]]], FracPart[p]], Power[Power[Plus[1, Times[b, Power[x, n], Power[a, -1]]], FracPart[p]], -1]], Int[Times[Power[Times[e, x], m], Power[Plus[1, Times[b, Power[x, n], Power[a, -1]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x], And[FreeQ[List[a, b, c, d, e, m, n, p, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[m, 1]], NonzeroQ[Plus[m, Times[-1, n], 1]], Not[PositiveQ[a]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[Coefficient[v, x, 1], Plus[m, 1]], -1]], Subst[Int[SimplifyIntegrand[Times[Power[Plus[x, Times[-1, Coefficient[v, x, 0]]], m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x], x, v], x], And[FreeQ[List[a, b, c, d, n, p, q], x], LinearQ[v, x], IntegerQ[m], NonzeroQ[Plus[v, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[u, m], Power[Times[Coefficient[v, x, 1], Power[v, m]], -1]], Subst[Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x, v], x], And[FreeQ[List[a, b, c, d, m, n, p, q], x], LinearPairQ[u, v, x]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[Plus[Times[a1, a2], Times[b1, b2, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], And[FreeQ[List[a1, b1, a2, b2, c, d, n, p, q], x], ZeroQ[Plus[non2, Times[-1, n, Power[2, -1]]]], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], Or[IntegerQ[p], And[PositiveQ[a1], PositiveQ[a2]]]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[Plus[Times[a1, a2], Times[b1, b2, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]], Times[e, Power[x, Times[2, n]]]], q]], x], And[FreeQ[List[a1, b1, a2, b2, c, d, e, n, p, q], x], ZeroQ[Plus[non2, Times[-1, n, Power[2, -1]]]], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], Or[IntegerQ[p], And[PositiveQ[a1], PositiveQ[a2]]]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a1, Times[b1, Power[x, Times[n, Power[2, -1]]]]], FracPart[p]], Power[Plus[a2, Times[b2, Power[x, Times[n, Power[2, -1]]]]], FracPart[p]], Power[Power[Plus[Times[a1, a2], Times[b1, b2, Power[x, n]]], FracPart[p]], -1]], Int[Times[u, Power[Plus[Times[a1, a2], Times[b1, b2, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x], And[FreeQ[List[a1, b1, a2, b2, c, d, n, p, q], x], ZeroQ[Plus[non2, Times[-1, n, Power[2, -1]]]], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a1, Times[b1, Power[x, Times[n, Power[2, -1]]]]], FracPart[p]], Power[Plus[a2, Times[b2, Power[x, Times[n, Power[2, -1]]]]], FracPart[p]], Power[Power[Plus[Times[a1, a2], Times[b1, b2, Power[x, n]]], FracPart[p]], -1]], Int[Times[u, Power[Plus[Times[a1, a2], Times[b1, b2, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]], Times[e, Power[x, Times[2, n]]]], q]], x], x], And[FreeQ[List[a1, b1, a2, b2, c, d, e, n, p, q], x], ZeroQ[Plus[non2, Times[-1, n, Power[2, -1]]]], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Plus[e, Times[f, Power[x, n]]], r]], x], x], And[FreeQ[List[a, b, c, d, e, f, n], x], PositiveIntegerQ[p, q, r]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[b, e], Times[-1, a, f]], Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[1, Power[Plus[a, Times[b, Power[x, n]]], -1]], x], x], Times[-1, Dist[Times[Plus[Times[d, e], Times[-1, c, f]], Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[1, Power[Plus[c, Times[d, Power[x, n]]], -1]], x], x]]], FreeQ[List[a, b, c, d, e, f, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Rational[-1, 2]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[f, Power[b, -1]], Int[Times[1, Power[Sqrt[Plus[c, Times[d, Power[x, n]]]], -1]], x], x], Dist[Times[Plus[Times[b, e], Times[-1, a, f]], Power[b, -1]], Int[Times[1, Power[Times[Plus[a, Times[b, Power[x, n]]], Sqrt[Plus[c, Times[d, Power[x, n]]]]], -1]], x], x]], FreeQ[List[a, b, c, d, e, f, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Rational[-1, 2]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[f, Power[b, -1]], Int[Times[Sqrt[Plus[a, Times[b, Power[x, n]]]], Power[Sqrt[Plus[c, Times[d, Power[x, n]]]], -1]], x], x], Dist[Times[Plus[Times[b, e], Times[-1, a, f]], Power[b, -1]], Int[Times[1, Power[Times[Sqrt[Plus[a, Times[b, Power[x, n]]]], Sqrt[Plus[c, Times[d, Power[x, n]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, n], x], Not[And[ZeroQ[Plus[n, -2]], Or[And[PosQ[Times[b, Power[a, -1]]], PosQ[Times[d, Power[c, -1]]]], And[NegQ[Times[b, Power[a, -1]]], Or[PosQ[Times[d, Power[c, -1]]], And[PositiveQ[a], Or[Not[PositiveQ[c]], SimplerSqrtQ[Times[-1, b, Power[a, -1]], Times[-1, d, Power[c, -1]]]]]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 2]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[b, e], Times[-1, a, f]], Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[1, Power[Times[Sqrt[Plus[a, Times[b, Power[x, 2]]]], Sqrt[Plus[c, Times[d, Power[x, 2]]]]], -1]], x], x], Times[-1, Dist[Times[Plus[Times[d, e], Times[-1, c, f]], Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Sqrt[Plus[a, Times[b, Power[x, 2]]]], Power[Power[Plus[c, Times[d, Power[x, 2]]], Times[3, Power[2, -1]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], PosQ[Times[b, Power[a, -1]]], PosQ[Times[d, Power[c, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[b, e], Times[-1, a, f]], x, Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Times[a, b, n, Plus[p, 1]], -1]], x]], Dist[Times[1, Power[Times[a, b, n, Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Simp[Plus[Times[c, Plus[Times[b, e, n, Plus[p, 1]], Times[b, e], Times[-1, a, f]]], Times[d, Plus[Times[b, e, n, Plus[p, 1]], Times[Plus[Times[b, e], Times[-1, a, f]], Plus[Times[n, q], 1]]], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, n], x], RationalQ[p, q], Less[p, -1], Greater[q, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[b, e], Times[-1, a, f]], x, Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, 1]], Power[Times[a, n, Plus[Times[b, c], Times[-1, a, d]], Plus[p, 1]], -1]], x]], Dist[Times[1, Power[Times[a, n, Plus[Times[b, c], Times[-1, a, d]], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Simp[Plus[Times[c, Plus[Times[b, e], Times[-1, a, f]]], Times[e, n, Plus[Times[b, c], Times[-1, a, d]], Plus[p, 1]], Times[d, Plus[Times[b, e], Times[-1, a, f]], Plus[Times[n, Plus[p, q, 2]], 1], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, n, q], x], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[f, x, Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Times[b, Plus[Times[n, Plus[p, q, 1]], 1]], -1]], x], Dist[Times[1, Power[Times[b, Plus[Times[n, Plus[p, q, 1]], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Simp[Plus[Times[c, Plus[Times[b, e], Times[-1, a, f], Times[b, e, n, Plus[p, q, 1]]]], Times[Plus[Times[d, Plus[Times[b, e], Times[-1, a, f]]], Times[f, n, q, Plus[Times[b, c], Times[-1, a, d]]], Times[b, d, e, n, Plus[p, q, 1]]], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, n, p], x], RationalQ[q], Greater[q, 0], NonzeroQ[Plus[Times[n, Plus[p, q, 1]], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-3, 4]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 4]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[b, e], Times[-1, a, f]], Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[1, Power[Power[Plus[a, Times[b, Power[x, 4]]], Times[3, Power[4, -1]]], -1]], x], x], Times[-1, Dist[Times[Plus[Times[d, e], Times[-1, c, f]], Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, 4]]], Times[1, Power[4, -1]]], Power[Plus[c, Times[d, Power[x, 4]]], -1]], x], x]]], FreeQ[List[a, b, c, d, e, f], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[f, Power[d, -1]], Int[Power[Plus[a, Times[b, Power[x, n]]], p], x], x], Dist[Times[Plus[Times[d, e], Times[-1, c, f]], Power[d, -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], -1]], x], x]], FreeQ[List[a, b, c, d, e, f, p, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[e, Int[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x], Dist[f, Int[Times[Power[x, n], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x]], FreeQ[List[a, b, c, d, e, f, n, p, q], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[1, Power[Times[Plus[a, Times[b, Power[x, 2]]], Sqrt[Plus[e, Times[f, Power[x, 2]]]]], -1]], x], x], Times[-1, Dist[Times[d, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[1, Power[Times[Plus[c, Times[d, Power[x, 2]]], Sqrt[Plus[e, Times[f, Power[x, 2]]]]], -1]], x], x]]], FreeQ[List[a, b, c, d, e, f], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], -2], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[c, -1]], Int[Times[1, Power[Times[Power[x, 2], Sqrt[Plus[e, Times[f, Power[x, 2]]]]], -1]], x], x], Times[-1, Dist[Times[d, Power[c, -1]], Int[Times[1, Power[Times[Plus[c, Times[d, Power[x, 2]]], Sqrt[Plus[e, Times[f, Power[x, 2]]]]], -1]], x], x]]], And[FreeQ[List[c, d, e, f], x], NonzeroQ[Plus[Times[d, e], Times[-1, c, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[d, Power[b, -1]], Int[Times[Sqrt[Plus[e, Times[f, Power[x, 2]]]], Power[Sqrt[Plus[c, Times[d, Power[x, 2]]]], -1]], x], x], Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[b, -1]], Int[Times[Sqrt[Plus[e, Times[f, Power[x, 2]]]], Power[Times[Plus[a, Times[b, Power[x, 2]]], Sqrt[Plus[c, Times[d, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveQ[Times[d, Power[c, -1]]], PositiveQ[Times[f, Power[e, -1]]], Not[SimplerSqrtQ[Times[d, Power[c, -1]], Times[f, Power[e, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[d, Power[b, -1]], Int[Times[Sqrt[Plus[e, Times[f, Power[x, 2]]]], Power[Sqrt[Plus[c, Times[d, Power[x, 2]]]], -1]], x], x], Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[b, -1]], Int[Times[Sqrt[Plus[e, Times[f, Power[x, 2]]]], Power[Times[Plus[a, Times[b, Power[x, 2]]], Sqrt[Plus[c, Times[d, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], Not[SimplerSqrtQ[Times[-1, f, Power[e, -1]], Times[-1, d, Power[c, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[f, Power[Plus[Times[b, e], Times[-1, a, f]], -1]], Int[Times[1, Power[Times[Sqrt[Plus[c, Times[d, Power[x, 2]]]], Sqrt[Plus[e, Times[f, Power[x, 2]]]]], -1]], x], x]], Dist[Times[b, Power[Plus[Times[b, e], Times[-1, a, f]], -1]], Int[Times[Sqrt[Plus[e, Times[f, Power[x, 2]]]], Power[Times[Plus[a, Times[b, Power[x, 2]]], Sqrt[Plus[c, Times[d, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], PosQ[Times[d, Power[c, -1]]], PosQ[Times[f, Power[e, -1]]], Not[SimplerSqrtQ[Times[d, Power[c, -1]], Times[f, Power[e, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[1, Power[Times[a, Sqrt[c], Sqrt[e], Rt[Times[-1, d, Power[c, -1]], 2]], -1], EllipticPi[Times[b, c, Power[Times[a, d], -1]], ArcSin[Times[Rt[Times[-1, d, Power[c, -1]], 2], x]], Times[c, f, Power[Times[d, e], -1]]]], x], And[FreeQ[List[a, b, c, d, e, f], x], NegQ[Times[d, Power[c, -1]]], PositiveQ[c], PositiveQ[e], Not[And[NegQ[Times[f, Power[e, -1]]], SimplerSqrtQ[Times[-1, f, Power[e, -1]], Times[-1, d, Power[c, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[1, Times[d, Power[c, -1], Power[x, 2]]]], Power[Sqrt[Plus[c, Times[d, Power[x, 2]]]], -1]], Int[Times[1, Power[Times[Plus[a, Times[b, Power[x, 2]]], Sqrt[Plus[1, Times[d, Power[c, -1], Power[x, 2]]]], Sqrt[Plus[e, Times[f, Power[x, 2]]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], Not[PositiveQ[c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[c, Sqrt[Plus[e, Times[f, Power[x, 2]]]], Power[Times[a, e, Rt[Times[d, Power[c, -1]], 2], Sqrt[Plus[c, Times[d, Power[x, 2]]]], Sqrt[Times[c, Plus[e, Times[f, Power[x, 2]]], Power[Times[e, Plus[c, Times[d, Power[x, 2]]]], -1]]]], -1], EllipticPi[Plus[1, Times[-1, b, c, Power[Times[a, d], -1]]], ArcTan[Times[Rt[Times[d, Power[c, -1]], 2], x]], Plus[1, Times[-1, c, f, Power[Times[d, e], -1]]]]], x], And[FreeQ[List[a, b, c, d, e, f], x], PosQ[Times[d, Power[c, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[d, Power[b, -1]], Int[Times[1, Power[Times[Sqrt[Plus[c, Times[d, Power[x, 2]]]], Sqrt[Plus[e, Times[f, Power[x, 2]]]]], -1]], x], x], Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[b, -1]], Int[Times[1, Power[Times[Plus[a, Times[b, Power[x, 2]]], Sqrt[Plus[c, Times[d, Power[x, 2]]]], Sqrt[Plus[e, Times[f, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NegQ[Times[d, Power[c, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 2]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Sqrt[Plus[e, Times[f, Power[x, 2]]]], Power[Times[Plus[a, Times[b, Power[x, 2]]], Sqrt[Plus[c, Times[d, Power[x, 2]]]]], -1]], x], x], Times[-1, Dist[Times[d, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Sqrt[Plus[e, Times[f, Power[x, 2]]]], Power[Power[Plus[c, Times[d, Power[x, 2]]], Times[3, Power[2, -1]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], PosQ[Times[d, Power[c, -1]]], PosQ[Times[f, Power[e, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 2]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[b, e], Times[-1, a, f]], Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Sqrt[Plus[e, Times[f, Power[x, 2]]]], Power[Times[Plus[a, Times[b, Power[x, 2]]], Sqrt[Plus[c, Times[d, Power[x, 2]]]]], -1]], x], x], Times[-1, Dist[Times[Plus[Times[d, e], Times[-1, c, f]], Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Sqrt[Plus[e, Times[f, Power[x, 2]]]], Power[Power[Plus[c, Times[d, Power[x, 2]]], Times[3, Power[2, -1]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], PosQ[Times[d, Power[c, -1]]], PosQ[Times[f, Power[e, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[3, 2]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Power[Plus[Times[b, c], Times[-1, a, d]], 2], Power[Power[b, 2], -1]], Int[Times[Sqrt[Plus[e, Times[f, Power[x, 2]]]], Power[Times[Plus[a, Times[b, Power[x, 2]]], Sqrt[Plus[c, Times[d, Power[x, 2]]]]], -1]], x], x], Dist[Times[d, Power[Power[b, 2], -1]], Int[Times[Plus[Times[2, b, c], Times[-1, a, d], Times[b, d, Power[x, 2]]], Sqrt[Plus[e, Times[f, Power[x, 2]]]], Power[Sqrt[Plus[c, Times[d, Power[x, 2]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], PosQ[Times[d, Power[c, -1]]], PosQ[Times[f, Power[e, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[r, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Plus[Times[b, e], Times[-1, a, f]], Power[Power[Plus[Times[b, c], Times[-1, a, d]], 2], -1]], Int[Times[Power[Plus[c, Times[d, Power[x, 2]]], Plus[q, 2]], Power[Plus[e, Times[f, Power[x, 2]]], Plus[r, -1]], Power[Plus[a, Times[b, Power[x, 2]]], -1]], x], x], Times[-1, Dist[Times[1, Power[Power[Plus[Times[b, c], Times[-1, a, d]], 2], -1]], Int[Times[Power[Plus[c, Times[d, Power[x, 2]]], q], Power[Plus[e, Times[f, Power[x, 2]]], Plus[r, -1]], Plus[Times[2, b, c, d, e], Times[-1, a, Power[d, 2], e], Times[-1, b, Power[c, 2], f], Times[Power[d, 2], Plus[Times[b, e], Times[-1, a, f]], Power[x, 2]]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], RationalQ[q, r], Less[q, -1], Greater[r, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[r, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[d, Power[b, -1]], Int[Times[Power[Plus[c, Times[d, Power[x, 2]]], Plus[q, -1]], Power[Plus[e, Times[f, Power[x, 2]]], r]], x], x], Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[b, -1]], Int[Times[Power[Plus[c, Times[d, Power[x, 2]]], Plus[q, -1]], Power[Plus[e, Times[f, Power[x, 2]]], r], Power[Plus[a, Times[b, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, r], x], RationalQ[q], Greater[q, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[r, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Power[b, 2], Power[Power[Plus[Times[b, c], Times[-1, a, d]], 2], -1]], Int[Times[Power[Plus[c, Times[d, Power[x, 2]]], Plus[q, 2]], Power[Plus[e, Times[f, Power[x, 2]]], r], Power[Plus[a, Times[b, Power[x, 2]]], -1]], x], x], Times[-1, Dist[Times[d, Power[Power[Plus[Times[b, c], Times[-1, a, d]], 2], -1]], Int[Times[Power[Plus[c, Times[d, Power[x, 2]]], q], Power[Plus[e, Times[f, Power[x, 2]]], r], Plus[Times[2, b, c], Times[-1, a, d], Times[b, d, Power[x, 2]]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, r], x], RationalQ[q], Less[q, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[r, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[d, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Power[Plus[c, Times[d, Power[x, 2]]], q], Power[Plus[e, Times[f, Power[x, 2]]], r]], x], x]], Dist[Times[b, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Power[Plus[c, Times[d, Power[x, 2]]], Plus[q, 1]], Power[Plus[e, Times[f, Power[x, 2]]], r], Power[Plus[a, Times[b, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, r], x], RationalQ[q], LessEqual[q, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -2], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Sqrt[Plus[c, Times[d, Power[x, 2]]]], Sqrt[Plus[e, Times[f, Power[x, 2]]]], Power[Times[2, a, Plus[a, Times[b, Power[x, 2]]]], -1]], x], Plus[Dist[Times[d, f, Power[Times[2, a, Power[b, 2]], -1]], Int[Times[Plus[a, Times[-1, b, Power[x, 2]]], Power[Times[Sqrt[Plus[c, Times[d, Power[x, 2]]]], Sqrt[Plus[e, Times[f, Power[x, 2]]]]], -1]], x], x], Dist[Times[Plus[Times[Power[b, 2], c, e], Times[-1, Power[a, 2], d, f]], Power[Times[2, a, Power[b, 2]], -1]], Int[Times[1, Power[Times[Plus[a, Times[b, Power[x, 2]]], Sqrt[Plus[c, Times[d, Power[x, 2]]]], Sqrt[Plus[e, Times[f, Power[x, 2]]]]], -1]], x], x]]], FreeQ[List[a, b, c, d, e, f], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -2], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[b, 2], x, Sqrt[Plus[c, Times[d, Power[x, 2]]]], Sqrt[Plus[e, Times[f, Power[x, 2]]]], Power[Times[2, a, Plus[Times[b, c], Times[-1, a, d]], Plus[Times[b, e], Times[-1, a, f]], Plus[a, Times[b, Power[x, 2]]]], -1]], x], Plus[Times[-1, Dist[Times[d, f, Power[Times[2, a, Plus[Times[b, c], Times[-1, a, d]], Plus[Times[b, e], Times[-1, a, f]]], -1]], Int[Times[Plus[a, Times[b, Power[x, 2]]], Power[Times[Sqrt[Plus[c, Times[d, Power[x, 2]]]], Sqrt[Plus[e, Times[f, Power[x, 2]]]]], -1]], x], x]], Dist[Times[Plus[Times[Power[b, 2], c, e], Times[3, Power[a, 2], d, f], Times[-1, 2, a, b, Plus[Times[d, e], Times[c, f]]]], Power[Times[2, a, Plus[Times[b, c], Times[-1, a, d]], Plus[Times[b, e], Times[-1, a, f]]], -1]], Int[Times[1, Power[Times[Plus[a, Times[b, Power[x, 2]]], Sqrt[Plus[c, Times[d, Power[x, 2]]]], Sqrt[Plus[e, Times[f, Power[x, 2]]]]], -1]], x], x]]], FreeQ[List[a, b, c, d, e, f], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[r, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[d, Power[b, -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Power[Plus[e, Times[f, Power[x, n]]], r]], x], x], Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[b, -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Power[Plus[e, Times[f, Power[x, n]]], r]], x], x]], And[FreeQ[List[a, b, c, d, e, f, n, r], x], NegativeIntegerQ[p], RationalQ[q], Greater[q, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[r, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, 1]], Power[Plus[e, Times[f, Power[x, n]]], r]], x], x], Times[-1, Dist[Times[d, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Plus[e, Times[f, Power[x, n]]], r]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, n, q], x], NegativeIntegerQ[p], RationalQ[q], LessEqual[q, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[c, Times[d, Power[x, 2]]]], Sqrt[Times[a, Plus[e, Times[f, Power[x, 2]]], Power[Times[e, Plus[a, Times[b, Power[x, 2]]]], -1]]], Power[Times[c, Sqrt[Plus[e, Times[f, Power[x, 2]]]], Sqrt[Times[a, Plus[c, Times[d, Power[x, 2]]], Power[Times[c, Plus[a, Times[b, Power[x, 2]]]], -1]]]], -1]], Subst[Int[Times[1, Power[Times[Sqrt[Plus[1, Times[-1, Plus[Times[b, c], Times[-1, a, d]], Power[x, 2], Power[c, -1]]]], Sqrt[Plus[1, Times[-1, Plus[Times[b, e], Times[-1, a, f]], Power[x, 2], Power[e, -1]]]]], -1]], x], x, Times[x, Power[Sqrt[Plus[a, Times[b, Power[x, 2]]]], -1]]], x], FreeQ[List[a, b, c, d, e, f], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[a, Sqrt[Plus[c, Times[d, Power[x, 2]]]], Sqrt[Times[a, Plus[e, Times[f, Power[x, 2]]], Power[Times[e, Plus[a, Times[b, Power[x, 2]]]], -1]]], Power[Times[c, Sqrt[Plus[e, Times[f, Power[x, 2]]]], Sqrt[Times[a, Plus[c, Times[d, Power[x, 2]]], Power[Times[c, Plus[a, Times[b, Power[x, 2]]]], -1]]]], -1]], Subst[Int[Times[1, Power[Times[Plus[1, Times[-1, b, Power[x, 2]]], Sqrt[Plus[1, Times[-1, Plus[Times[b, c], Times[-1, a, d]], Power[x, 2], Power[c, -1]]]], Sqrt[Plus[1, Times[-1, Plus[Times[b, e], Times[-1, a, f]], Power[x, 2], Power[e, -1]]]]], -1]], x], x, Times[x, Power[Sqrt[Plus[a, Times[b, Power[x, 2]]]], -1]]], x], FreeQ[List[a, b, c, d, e, f], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[c, Times[d, Power[x, 2]]]], Sqrt[Times[a, Plus[e, Times[f, Power[x, 2]]], Power[Times[e, Plus[a, Times[b, Power[x, 2]]]], -1]]], Power[Times[a, Sqrt[Plus[e, Times[f, Power[x, 2]]]], Sqrt[Times[a, Plus[c, Times[d, Power[x, 2]]], Power[Times[c, Plus[a, Times[b, Power[x, 2]]]], -1]]]], -1]], Subst[Int[Times[Sqrt[Plus[1, Times[-1, Plus[Times[b, c], Times[-1, a, d]], Power[x, 2], Power[c, -1]]]], Power[Sqrt[Plus[1, Times[-1, Plus[Times[b, e], Times[-1, a, f]], Power[x, 2], Power[e, -1]]]], -1]], x], x, Times[x, Power[Sqrt[Plus[a, Times[b, Power[x, 2]]]], -1]]], x], FreeQ[List[a, b, c, d, e, f], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[d, x, Sqrt[Plus[a, Times[b, Power[x, 2]]]], Sqrt[Plus[e, Times[f, Power[x, 2]]]], Power[Times[2, f, Sqrt[Plus[c, Times[d, Power[x, 2]]]]], -1]], x], Plus[Times[-1, Dist[Times[c, Plus[Times[d, e], Times[-1, c, f]], Power[Times[2, f], -1]], Int[Times[Sqrt[Plus[a, Times[b, Power[x, 2]]]], Power[Times[Power[Plus[c, Times[d, Power[x, 2]]], Times[3, Power[2, -1]]], Sqrt[Plus[e, Times[f, Power[x, 2]]]]], -1]], x], x]], Dist[Times[b, c, Plus[Times[d, e], Times[-1, c, f]], Power[Times[2, d, f], -1]], Int[Times[1, Power[Times[Sqrt[Plus[a, Times[b, Power[x, 2]]]], Sqrt[Plus[c, Times[d, Power[x, 2]]]], Sqrt[Plus[e, Times[f, Power[x, 2]]]]], -1]], x], x], Times[-1, Dist[Times[Plus[Times[b, d, e], Times[-1, b, c, f], Times[-1, a, d, f]], Power[Times[2, d, f], -1]], Int[Times[Sqrt[Plus[c, Times[d, Power[x, 2]]]], Power[Times[Sqrt[Plus[a, Times[b, Power[x, 2]]]], Sqrt[Plus[e, Times[f, Power[x, 2]]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], PosQ[Times[Plus[Times[d, e], Times[-1, c, f]], Power[c, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Sqrt[Plus[a, Times[b, Power[x, 2]]]], Sqrt[Plus[c, Times[d, Power[x, 2]]]], Power[Times[2, Sqrt[Plus[e, Times[f, Power[x, 2]]]]], -1]], x], Plus[Dist[Times[e, Plus[Times[b, e], Times[-1, a, f]], Power[Times[2, f], -1]], Int[Times[Sqrt[Plus[c, Times[d, Power[x, 2]]]], Power[Times[Sqrt[Plus[a, Times[b, Power[x, 2]]]], Power[Plus[e, Times[f, Power[x, 2]]], Times[3, Power[2, -1]]]], -1]], x], x], Dist[Times[Plus[Times[b, e], Times[-1, a, f]], Plus[Times[d, e], Times[-1, 2, c, f]], Power[Times[2, Power[f, 2]], -1]], Int[Times[1, Power[Times[Sqrt[Plus[a, Times[b, Power[x, 2]]]], Sqrt[Plus[c, Times[d, Power[x, 2]]]], Sqrt[Plus[e, Times[f, Power[x, 2]]]]], -1]], x], x], Times[-1, Dist[Times[Plus[Times[b, d, e], Times[-1, b, c, f], Times[-1, a, d, f]], Power[Times[2, Power[f, 2]], -1]], Int[Times[Sqrt[Plus[e, Times[f, Power[x, 2]]]], Power[Times[Sqrt[Plus[a, Times[b, Power[x, 2]]]], Sqrt[Plus[c, Times[d, Power[x, 2]]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], NegQ[Times[Plus[Times[d, e], Times[-1, c, f]], Power[c, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[f, -1]], Int[Times[Sqrt[Plus[c, Times[d, Power[x, 2]]]], Power[Times[Sqrt[Plus[a, Times[b, Power[x, 2]]]], Sqrt[Plus[e, Times[f, Power[x, 2]]]]], -1]], x], x], Times[-1, Dist[Times[Plus[Times[b, e], Times[-1, a, f]], Power[f, -1]], Int[Times[Sqrt[Plus[c, Times[d, Power[x, 2]]]], Power[Times[Sqrt[Plus[a, Times[b, Power[x, 2]]]], Power[Plus[e, Times[f, Power[x, 2]]], Times[3, Power[2, -1]]]], -1]], x], x]]], FreeQ[List[a, b, c, d, e, f], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[r, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, ExpandIntegrand[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Plus[e, Times[f, Power[x, n]]], r]], x]]], Condition[Int[u, x], SumQ[u]]], And[FreeQ[List[a, b, c, d, e, f, p, q, r], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[r, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[a, Times[b, Power[x, Times[-1, n]]]], p], Power[Plus[c, Times[d, Power[x, Times[-1, n]]]], q], Power[Plus[e, Times[f, Power[x, Times[-1, n]]]], r], Power[Power[x, 2], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, b, c, d, e, f, p, q, r], x], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Plus[e, Times[f, Power[x, n]]], r]], x], FreeQ[List[a, b, c, d, e, f, n, p, q, r], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[w, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Plus[e, Times[f, Power[x, n]]], r]], x], x, u], x], And[FreeQ[List[a, b, c, d, e, f, p, n, q, r], x], ZeroQ[Plus[u, Times[-1, v]]], ZeroQ[Plus[u, Times[-1, w]]], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[d, Times[c, Power[x, n]]], q], Power[Plus[e, Times[f, Power[x, n]]], r], Power[Power[x, Times[n, q]], -1]], x], And[FreeQ[List[a, b, c, d, e, f, n, p, r], x], EqQ[mn, Times[-1, n]], IntegerQ[q]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Times[n, Plus[p, r]]], Power[Plus[b, Times[a, Power[x, Times[-1, n]]]], p], Power[Plus[c, Times[d, Power[x, Times[-1, n]]]], q], Power[Plus[f, Times[e, Power[x, Times[-1, n]]]], r]], x], And[FreeQ[List[a, b, c, d, e, f, n, q], x], EqQ[mn, Times[-1, n]], IntegerQ[p], IntegerQ[r]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Pattern[q, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[x, Times[n, FracPart[q]]], Power[Plus[c, Times[d, Power[x, Times[-1, n]]]], FracPart[q]], Power[Power[Plus[d, Times[c, Power[x, n]]], FracPart[q]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[d, Times[c, Power[x, n]]], q], Power[Plus[e, Times[f, Power[x, n]]], r], Power[Power[x, Times[n, q]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, n, p, q, r], x], EqQ[mn, Times[-1, n]], Not[IntegerQ[q]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[e1, Blank[]], Times[Optional[Pattern[f1, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[r, Blank[]]]], Power[Plus[Pattern[e2, Blank[]], Times[Optional[Pattern[f2, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[r, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Plus[Times[e1, e2], Times[f1, f2, Power[x, n]]], r]], x], And[FreeQ[List[a, b, c, d, e1, f1, e2, f2, n, p, q, r], x], ZeroQ[Plus[n2, Times[-1, n, Power[2, -1]]]], ZeroQ[Plus[Times[e2, f1], Times[e1, f2]]], Or[IntegerQ[r], And[PositiveQ[e1], PositiveQ[e2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[e1, Blank[]], Times[Optional[Pattern[f1, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[r, Blank[]]]], Power[Plus[Pattern[e2, Blank[]], Times[Optional[Pattern[f2, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[r, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[e1, Times[f1, Power[x, Times[n, Power[2, -1]]]]], FracPart[r]], Power[Plus[e2, Times[f2, Power[x, Times[n, Power[2, -1]]]]], FracPart[r]], Power[Power[Plus[Times[e1, e2], Times[f1, f2, Power[x, n]]], FracPart[r]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Plus[Times[e1, e2], Times[f1, f2, Power[x, n]]], r]], x], x], And[FreeQ[List[a, b, c, d, e1, f1, e2, f2, n, p, q, r], x], ZeroQ[Plus[n2, Times[-1, n, Power[2, -1]]]], ZeroQ[Plus[Times[e2, f1], Times[e1, f2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[g, m], Power[Times[n, Power[b, Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]]], -1]], Subst[Int[Times[Power[Times[b, x], Plus[p, Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]], Power[Plus[c, Times[d, x]], q], Power[Plus[e, Times[f, x]], r]], x], x, Power[x, n]], x], And[FreeQ[List[b, c, d, e, f, g, m, n, p, q, r], x], Or[IntegerQ[m], PositiveQ[g]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[g, m], Power[b, IntPart[p]], Power[Times[b, Power[x, n]], FracPart[p]], Power[Power[x, Times[n, FracPart[p]]], -1]], Int[Times[Power[x, Plus[m, Times[n, p]]], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Plus[e, Times[f, Power[x, n]]], r]], x], x], And[FreeQ[List[b, c, d, e, f, g, m, n, p, q, r], x], Or[IntegerQ[m], PositiveQ[g]], Not[IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[g, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[g, IntPart[m]], Power[Times[g, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Times[b, Power[x, n]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Plus[e, Times[f, Power[x, n]]], r]], x], x], And[FreeQ[List[b, c, d, e, f, g, m, n, p, q, r], x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[g, x], m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Plus[e, Times[f, Power[x, n]]], r]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, m, n], x], PositiveIntegerQ[Plus[p, 2], q, r]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], p], Power[Plus[c, Times[d, x]], q], Power[Plus[e, Times[f, x]], r]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, d, e, f, m, n, p, q, r], x], ZeroQ[Plus[m, Times[-1, n], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Plus[m, Times[n, Plus[p, q, r]]]], Power[Plus[b, Times[a, Power[x, Times[-1, n]]]], p], Power[Plus[d, Times[c, Power[x, Times[-1, n]]]], q], Power[Plus[f, Times[e, Power[x, Times[-1, n]]]], r]], x], And[FreeQ[List[a, b, c, d, e, f, m, n], x], IntegersQ[p, q, r], NegQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]], Power[Plus[a, Times[b, x]], p], Power[Plus[c, Times[d, x]], q], Power[Plus[e, Times[f, x]], r]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, d, e, f, m, n, p, q, r], x], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[g, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[g, IntPart[m]], Power[Times[g, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Plus[e, Times[f, Power[x, n]]], r]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p, q, r], x], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, GCD[Plus[m, 1], n]]], Condition[Dist[Times[1, Power[k, -1]], Subst[Int[Times[Power[x, Plus[Times[Plus[m, 1], Power[k, -1]], -1]], Power[Plus[a, Times[b, Power[x, Times[n, Power[k, -1]]]]], p], Power[Plus[c, Times[d, Power[x, Times[n, Power[k, -1]]]]], q], Power[Plus[e, Times[f, Power[x, Times[n, Power[k, -1]]]]], r]], x], x, Power[x, k]], x], Unequal[k, 1]]], And[FreeQ[List[a, b, c, d, e, f, p, q, r], x], PositiveIntegerQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[r, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[m]]], Dist[Times[k, Power[g, -1]], Subst[Int[Times[Power[x, Plus[Times[k, Plus[m, 1]], -1]], Power[Plus[a, Times[b, Power[x, Times[k, n]], Power[Power[g, n], -1]]], p], Power[Plus[c, Times[d, Power[x, Times[k, n]], Power[Power[g, n], -1]]], q], Power[Plus[e, Times[f, Power[x, Times[k, n]], Power[Power[g, n], -1]]], r]], x], x, Power[Times[g, x], Times[1, Power[k, -1]]]], x]], And[FreeQ[List[a, b, c, d, e, f, g, p, q, r], x], PositiveIntegerQ[n], FractionQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[b, e], Times[-1, a, f]], Power[Times[g, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Times[a, b, g, n, Plus[p, 1]], -1]], x]], Dist[Times[1, Power[Times[a, b, n, Plus[p, 1]], -1]], Int[Times[Power[Times[g, x], m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Simp[Plus[Times[c, Plus[Times[b, e, n, Plus[p, 1]], Times[Plus[Times[b, e], Times[-1, a, f]], Plus[m, 1]]]], Times[d, Plus[Times[b, e, n, Plus[p, 1]], Times[Plus[Times[b, e], Times[-1, a, f]], Plus[m, Times[n, q], 1]]], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, m], x], PositiveIntegerQ[n], RationalQ[p, q], Less[p, -1], Greater[q, 0], Not[And[Equal[q, 1], SimplerQ[Plus[Times[b, c], Times[-1, a, d]], Plus[Times[b, e], Times[-1, a, f]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[g, Plus[n, -1]], Plus[Times[b, e], Times[-1, a, f]], Power[Times[g, x], Plus[m, Times[-1, n], 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, 1]], Power[Times[b, n, Plus[Times[b, c], Times[-1, a, d]], Plus[p, 1]], -1]], x], Times[-1, Dist[Times[Power[g, n], Power[Times[b, n, Plus[Times[b, c], Times[-1, a, d]], Plus[p, 1]], -1]], Int[Times[Power[Times[g, x], Plus[m, Times[-1, n]]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Simp[Plus[Times[c, Plus[Times[b, e], Times[-1, a, f]], Plus[m, Times[-1, n], 1]], Times[Plus[Times[d, Plus[Times[b, e], Times[-1, a, f]], Plus[m, Times[n, q], 1]], Times[-1, b, n, Plus[Times[c, f], Times[-1, d, e]], Plus[p, 1]]], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, q], x], PositiveIntegerQ[n], RationalQ[m, p], Less[p, -1], Greater[Plus[m, Times[-1, n], 1], 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[b, e], Times[-1, a, f]], Power[Times[g, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, 1]], Power[Times[a, g, n, Plus[Times[b, c], Times[-1, a, d]], Plus[p, 1]], -1]], x]], Dist[Times[1, Power[Times[a, n, Plus[Times[b, c], Times[-1, a, d]], Plus[p, 1]], -1]], Int[Times[Power[Times[g, x], m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Simp[Plus[Times[c, Plus[Times[b, e], Times[-1, a, f]], Plus[m, 1]], Times[e, n, Plus[Times[b, c], Times[-1, a, d]], Plus[p, 1]], Times[d, Plus[Times[b, e], Times[-1, a, f]], Plus[m, Times[n, Plus[p, q, 2]], 1], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, q], x], PositiveIntegerQ[n], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Times[g, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Times[a, g, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[a, Power[g, n], Plus[m, 1]], -1]], Int[Times[Power[Times[g, x], Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Simp[Plus[Times[c, Plus[Times[b, e], Times[-1, a, f]], Plus[m, 1]], Times[e, n, Plus[Times[b, c, Plus[p, 1]], Times[a, d, q]]], Times[d, Plus[Times[Plus[Times[b, e], Times[-1, a, f]], Plus[m, 1]], Times[b, e, n, Plus[p, q, 1]]], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, p], x], PositiveIntegerQ[n], RationalQ[m, q], Greater[q, 0], Less[m, -1], Not[And[Equal[q, 1], SimplerQ[Plus[e, Times[f, Power[x, n]]], Plus[c, Times[d, Power[x, n]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[f, Power[Times[g, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Times[b, g, Plus[m, Times[n, Plus[p, q, 1]], 1]], -1]], x], Dist[Times[1, Power[Times[b, Plus[m, Times[n, Plus[p, q, 1]], 1]], -1]], Int[Times[Power[Times[g, x], m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Simp[Plus[Times[c, Plus[Times[Plus[Times[b, e], Times[-1, a, f]], Plus[m, 1]], Times[b, e, n, Plus[p, q, 1]]]], Times[Plus[Times[d, Plus[Times[b, e], Times[-1, a, f]], Plus[m, 1]], Times[f, n, q, Plus[Times[b, c], Times[-1, a, d]]], Times[b, e, d, n, Plus[p, q, 1]]], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, p], x], PositiveIntegerQ[n], RationalQ[q], Greater[q, 0], Not[And[Equal[q, 1], SimplerQ[Plus[e, Times[f, Power[x, n]]], Plus[c, Times[d, Power[x, n]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[f, Power[g, Plus[n, -1]], Power[Times[g, x], Plus[m, Times[-1, n], 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, 1]], Power[Times[b, d, Plus[m, Times[n, Plus[p, q, 1]], 1]], -1]], x], Times[-1, Dist[Times[Power[g, n], Power[Times[b, d, Plus[m, Times[n, Plus[p, q, 1]], 1]], -1]], Int[Times[Power[Times[g, x], Plus[m, Times[-1, n]]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Simp[Plus[Times[a, f, c, Plus[m, Times[-1, n], 1]], Times[Plus[Times[a, f, d, Plus[m, Times[n, q], 1]], Times[b, Plus[Times[f, c, Plus[m, Times[n, p], 1]], Times[-1, e, d, Plus[m, Times[n, Plus[p, q, 1]], 1]]]]], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, p, q], x], PositiveIntegerQ[n], RationalQ[m], Greater[m, Plus[n, -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Times[g, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, 1]], Power[Times[a, c, g, Plus[m, 1]], -1]], x], Dist[Times[1, Power[Times[a, c, Power[g, n], Plus[m, 1]], -1]], Int[Times[Power[Times[g, x], Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Simp[Plus[Times[a, f, c, Plus[m, 1]], Times[-1, e, Plus[Times[b, c], Times[a, d]], Plus[m, n, 1]], Times[-1, e, n, Plus[Times[b, c, p], Times[a, d, q]]], Times[-1, b, e, d, Plus[m, Times[n, Plus[p, q, 2]], 1], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, p, q], x], PositiveIntegerQ[n], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[g, x], m], Power[Plus[a, Times[b, Power[x, n]]], p], Plus[e, Times[f, Power[x, n]]], Power[Plus[c, Times[d, Power[x, n]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, m, p], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[e, Int[Times[Power[Times[g, x], m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x], Dist[Times[f, Power[Power[e, n], -1]], Int[Times[Power[Times[g, x], Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, p, q], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[e, Int[Times[Power[Times[g, x], m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Plus[e, Times[f, Power[x, n]]], Plus[r, -1]]], x], x], Dist[Times[f, Power[Power[e, n], -1]], Int[Times[Power[Times[g, x], Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Plus[e, Times[f, Power[x, n]]], Plus[r, -1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, p, q], x], PositiveIntegerQ[n], PositiveIntegerQ[r]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[a, Times[b, Power[x, Times[-1, n]]]], p], Power[Plus[c, Times[d, Power[x, Times[-1, n]]]], q], Power[Plus[e, Times[f, Power[x, Times[-1, n]]]], r], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, b, c, d, e, f, p, q, r], x], NegativeIntegerQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[m]]], Times[-1, Dist[Times[k, Power[g, -1]], Subst[Int[Times[Power[Plus[a, Times[b, Power[g, Times[-1, n]], Power[x, Times[-1, k, n]]]], p], Power[Plus[c, Times[d, Power[g, Times[-1, n]], Power[x, Times[-1, k, n]]]], q], Power[Plus[e, Times[f, Power[g, Times[-1, n]], Power[x, Times[-1, k, n]]]], r], Power[Power[x, Plus[Times[k, Plus[m, 1]], 1]], -1]], x], x, Times[1, Power[Power[Times[g, x], Times[1, Power[k, -1]]], -1]]], x]]], And[FreeQ[List[a, b, c, d, e, f, g, p, q, r], x], NegativeIntegerQ[n], FractionQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[Times[g, x], m], Power[Power[x, -1], m]], Subst[Int[Times[Power[Plus[a, Times[b, Power[x, Times[-1, n]]]], p], Power[Plus[c, Times[d, Power[x, Times[-1, n]]]], q], Power[Plus[e, Times[f, Power[x, Times[-1, n]]]], r], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, p, q, r], x], NegativeIntegerQ[n], Not[RationalQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[n]]], Dist[k, Subst[Int[Times[Power[x, Plus[Times[k, Plus[m, 1]], -1]], Power[Plus[a, Times[b, Power[x, Times[k, n]]]], p], Power[Plus[c, Times[d, Power[x, Times[k, n]]]], q], Power[Plus[e, Times[f, Power[x, Times[k, n]]]], r]], x], x, Power[x, Times[1, Power[k, -1]]]], x]], And[FreeQ[List[a, b, c, d, e, f, m, p, q, r], x], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[g, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[g, IntPart[m]], Power[Times[g, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Plus[e, Times[f, Power[x, n]]], r]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, m, p, q, r], x], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Plus[m, 1], -1]], Subst[Int[Times[Power[Plus[a, Times[b, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]]], p], Power[Plus[c, Times[d, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]]], q], Power[Plus[e, Times[f, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]]], r]], x], x, Power[x, Plus[m, 1]]], x], And[FreeQ[List[a, b, c, d, e, f, m, n, p, q, r], x], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[g, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[g, IntPart[m]], Power[Times[g, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Plus[e, Times[f, Power[x, n]]], r]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p, q, r], x], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[b, e], Times[-1, a, f]], Power[Times[g, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Times[a, b, g, n, Plus[p, 1]], -1]], x]], Dist[Times[1, Power[Times[a, b, n, Plus[p, 1]], -1]], Int[Times[Power[Times[g, x], m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Simp[Plus[Times[c, Plus[Times[b, e, n, Plus[p, 1]], Times[Plus[Times[b, e], Times[-1, a, f]], Plus[m, 1]]]], Times[d, Plus[Times[b, e, n, Plus[p, 1]], Times[Plus[Times[b, e], Times[-1, a, f]], Plus[m, Times[n, q], 1]]], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, n], x], RationalQ[p, q], Less[p, -1], Greater[q, 0], Not[And[Equal[q, 1], SimplerQ[Plus[Times[b, c], Times[-1, a, d]], Plus[Times[b, e], Times[-1, a, f]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[b, e], Times[-1, a, f]], Power[Times[g, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, 1]], Power[Times[a, g, n, Plus[Times[b, c], Times[-1, a, d]], Plus[p, 1]], -1]], x]], Dist[Times[1, Power[Times[a, n, Plus[Times[b, c], Times[-1, a, d]], Plus[p, 1]], -1]], Int[Times[Power[Times[g, x], m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Simp[Plus[Times[c, Plus[Times[b, e], Times[-1, a, f]], Plus[m, 1]], Times[e, n, Plus[Times[b, c], Times[-1, a, d]], Plus[p, 1]], Times[d, Plus[Times[b, e], Times[-1, a, f]], Plus[m, Times[n, Plus[p, q, 2]], 1], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, n, q], x], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[f, Power[Times[g, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Times[b, g, Plus[m, Times[n, Plus[p, q, 1]], 1]], -1]], x], Dist[Times[1, Power[Times[b, Plus[m, Times[n, Plus[p, q, 1]], 1]], -1]], Int[Times[Power[Times[g, x], m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], Plus[q, -1]], Simp[Plus[Times[c, Plus[Times[Plus[Times[b, e], Times[-1, a, f]], Plus[m, 1]], Times[b, e, n, Plus[p, q, 1]]]], Times[Plus[Times[d, Plus[Times[b, e], Times[-1, a, f]], Plus[m, 1]], Times[f, n, q, Plus[Times[b, c], Times[-1, a, d]]], Times[b, e, d, n, Plus[p, q, 1]]], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p], x], RationalQ[q], Greater[q, 0], Not[And[Equal[q, 1], SimplerQ[Plus[e, Times[f, Power[x, n]]], Plus[c, Times[d, Power[x, n]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[g, x], m], Power[Plus[a, Times[b, Power[x, n]]], p], Plus[e, Times[f, Power[x, n]]], Power[Plus[c, Times[d, Power[x, n]]], -1]], x], x], FreeQ[List[a, b, c, d, e, f, g, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[e, Int[Times[Power[Times[g, x], m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x], Dist[Times[f, Power[Times[g, x], m], Power[Power[x, m], -1]], Int[Times[Power[x, Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x]], FreeQ[List[a, b, c, d, e, f, g, m, n, p, q], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Plus[m, Times[-1, n, q]]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[d, Times[c, Power[x, n]]], q], Power[Plus[e, Times[f, Power[x, n]]], r]], x], And[FreeQ[List[a, b, c, d, e, f, m, n, p, r], x], EqQ[mn, Times[-1, n]], IntegerQ[q]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Plus[m, Times[n, Plus[p, r]]]], Power[Plus[b, Times[a, Power[x, Times[-1, n]]]], p], Power[Plus[c, Times[d, Power[x, Times[-1, n]]]], q], Power[Plus[f, Times[e, Power[x, Times[-1, n]]]], r]], x], And[FreeQ[List[a, b, c, d, e, f, m, n, q], x], EqQ[mn, Times[-1, n]], IntegerQ[p], IntegerQ[r]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Pattern[q, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[x, Times[n, FracPart[q]]], Power[Plus[c, Times[d, Power[x, Times[-1, n]]]], FracPart[q]], Power[Power[Plus[d, Times[c, Power[x, n]]], FracPart[q]], -1]], Int[Times[Power[x, Plus[m, Times[-1, n, q]]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[d, Times[c, Power[x, n]]], q], Power[Plus[e, Times[f, Power[x, n]]], r]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, n, p, q, r], x], EqQ[mn, Times[-1, n]], Not[IntegerQ[q]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[g, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[g, IntPart[m]], Power[Times[g, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, Times[-1, n]]]], q], Power[Plus[e, Times[f, Power[x, n]]], r]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p, q, r], x], EqQ[mn, Times[-1, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[g, x], m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Plus[e, Times[f, Power[x, n]]], r]], x], FreeQ[List[a, b, c, d, e, f, g, m, n, p, q, r], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[u, m], Power[Times[Coefficient[v, x, 1], Power[v, m]], -1]], Subst[Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Plus[e, Times[f, Power[x, n]]], r]], x], x, v], x], And[FreeQ[List[a, b, c, d, e, f, m, n, p, q, r], x], LinearPairQ[u, v, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[e1, Blank[]], Times[Optional[Pattern[f1, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[r, Blank[]]]], Power[Plus[Pattern[e2, Blank[]], Times[Optional[Pattern[f2, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[r, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[g, x], m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Plus[Times[e1, e2], Times[f1, f2, Power[x, n]]], r]], x], And[FreeQ[List[a, b, c, d, e1, f1, e2, f2, g, m, n, p, q, r], x], ZeroQ[Plus[n2, Times[-1, n, Power[2, -1]]]], ZeroQ[Plus[Times[e2, f1], Times[e1, f2]]], Or[IntegerQ[r], And[PositiveQ[e1], PositiveQ[e2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[e1, Blank[]], Times[Optional[Pattern[f1, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[r, Blank[]]]], Power[Plus[Pattern[e2, Blank[]], Times[Optional[Pattern[f2, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[r, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[e1, Times[f1, Power[x, Times[n, Power[2, -1]]]]], FracPart[r]], Power[Plus[e2, Times[f2, Power[x, Times[n, Power[2, -1]]]]], FracPart[r]], Power[Power[Plus[Times[e1, e2], Times[f1, f2, Power[x, n]]], FracPart[r]], -1]], Int[Times[Power[Times[g, x], m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q], Power[Plus[Times[e1, e2], Times[f1, f2, Power[x, n]]], r]], x], x], And[FreeQ[List[a, b, c, d, e1, f1, e2, f2, g, m, n, p, q, r], x], ZeroQ[Plus[n2, Times[-1, n, Power[2, -1]]]], ZeroQ[Plus[Times[e2, f1], Times[e1, f2]]]]]]]