List[RuleDelayed[HoldPattern[Int[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[e, Times[f, x]], Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]], Power[f, -1]], x], Times[-1, Simp[Times[p, q, x], x]]], FreeQ[List[c, d, e, f, p, q], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[e, Times[f, x]], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], n], Power[f, -1]], x], Times[-1, Dist[Times[b, n, p, q], Int[Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Plus[n, -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, p, q], x], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Power[Log[Times[Optional[Pattern[d, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[LogIntegral[Times[d, Plus[e, Times[f, x]]]], Power[Times[d, f], -1]], x], FreeQ[List[d, e, f], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Plus[e, Times[f, x]], Power[Times[b, f, p, q, Power[E, Times[a, Power[Times[b, p, q], -1]]], Power[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]], Times[1, Power[Times[p, q], -1]]]], -1], ExpIntegralEi[Times[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Power[Times[b, p, q], -1]]]], x], FreeQ[List[a, b, c, d, e, f, p, q], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Sqrt[Pi], Rt[Times[b, p, q], 2], Plus[e, Times[f, x]], Power[Times[b, f, p, q, Power[E, Times[a, Power[Times[b, p, q], -1]]], Power[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]], Times[1, Power[Times[p, q], -1]]]], -1], Erfi[Times[Sqrt[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]]], Power[Rt[Times[b, p, q], 2], -1]]]], x], And[FreeQ[List[a, b, c, d, e, f, p, q], x], PosQ[Times[b, p, q]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Sqrt[Pi], Rt[Times[-1, b, p, q], 2], Plus[e, Times[f, x]], Power[Times[b, f, p, q, Power[E, Times[a, Power[Times[b, p, q], -1]]], Power[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]], Times[1, Power[Times[p, q], -1]]]], -1], Erf[Times[Sqrt[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]]], Power[Rt[Times[-1, b, p, q], 2], -1]]]], x], And[FreeQ[List[a, b, c, d, e, f, p, q], x], NegQ[Times[b, p, q]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[e, Times[f, x]], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Plus[n, 1]], Power[Times[b, f, p, q, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[b, p, q, Plus[n, 1]], -1]], Int[Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Plus[n, 1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, p, q], x], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Plus[e, Times[f, x]], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], n], Power[Times[f, Power[E, Times[a, Power[Times[b, p, q], -1]]], Power[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]], Times[1, Power[Times[p, q], -1]]], Power[Times[-1, Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Power[Times[b, p, q], -1]], n]], -1], Gamma[Plus[n, 1], Times[-1, Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Power[Times[b, p, q], -1]]]], x], And[FreeQ[List[a, b, c, d, e, f, p, q], x], Not[IntegerQ[Times[2, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], -1], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Log[RemoveContent[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], x]], Power[Times[b, h, p, q], -1]], x], And[FreeQ[List[a, b, c, d, e, f, g, h, p, q], x], ZeroQ[Plus[Times[f, g], Times[-1, e, h]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Plus[n, 1]], Power[Times[b, h, p, q, Plus[n, 1]], -1]], x], And[FreeQ[List[a, b, c, d, e, f, g, h, n, p, q], x], ZeroQ[Plus[Times[f, g], Times[-1, e, h]]], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], n], Power[Times[h, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, n, p, q, Power[Plus[m, 1], -1]], Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Plus[n, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, h, m, p, q], x], ZeroQ[Plus[Times[f, g], Times[-1, e, h]]], NonzeroQ[Plus[m, 1]], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]]], -1], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Times[h, Power[f, -1]], Plus[p, -1]], LogIntegral[Times[d, Power[Plus[e, Times[f, x]], p]]], Power[Times[d, f, p], -1]], x], And[FreeQ[List[d, e, f, g, h, m, p], x], ZeroQ[Plus[m, Times[-1, Plus[p, -1]]]], ZeroQ[Plus[Times[f, g], Times[-1, e, h]]], Or[IntegerQ[p], PositiveQ[Times[h, Power[f, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]]], -1], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[g, Times[h, x]], Plus[p, -1]], Power[Power[Plus[e, Times[f, x]], Plus[p, -1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[p, -1]], Power[Log[Times[d, Power[Plus[e, Times[f, x]], p]]], -1]], x], x], And[FreeQ[List[d, e, f, g, h, m, p], x], ZeroQ[Plus[m, Times[-1, Plus[p, -1]]]], ZeroQ[Plus[Times[f, g], Times[-1, e, h]]], Not[Or[IntegerQ[p], PositiveQ[Times[h, Power[f, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], -1], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Times[b, h, p, q, Power[E, Times[a, Plus[m, 1], Power[Times[b, p, q], -1]]], Power[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]], Times[Plus[m, 1], Power[Times[p, q], -1]]]], -1], ExpIntegralEi[Times[Plus[m, 1], Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Power[Times[b, p, q], -1]]]], x], And[FreeQ[List[a, b, c, d, e, f, g, h, m, p, q], x], ZeroQ[Plus[Times[f, g], Times[-1, e, h]]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Rational[-1, 2]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Sqrt[Pi], Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Times[b, h, p, q, Rt[Times[Plus[m, 1], Power[Times[b, p, q], -1]], 2], Power[E, Times[a, Plus[m, 1], Power[Times[b, p, q], -1]]], Power[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]], Times[Plus[m, 1], Power[Times[p, q], -1]]]], -1], Erfi[Times[Rt[Times[Plus[m, 1], Power[Times[b, p, q], -1]], 2], Sqrt[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]]]]]], x], And[FreeQ[List[a, b, c, d, e, f, g, h, m, p, q], x], ZeroQ[Plus[Times[f, g], Times[-1, e, h]]], NonzeroQ[Plus[m, 1]], PosQ[Times[Plus[m, 1], Power[Times[b, p, q], -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Rational[-1, 2]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Sqrt[Pi], Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Times[b, h, p, q, Rt[Times[-1, Plus[m, 1], Power[Times[b, p, q], -1]], 2], Power[E, Times[a, Plus[m, 1], Power[Times[b, p, q], -1]]], Power[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]], Times[Plus[m, 1], Power[Times[p, q], -1]]]], -1], Erf[Times[Rt[Times[-1, Plus[m, 1], Power[Times[b, p, q], -1]], 2], Sqrt[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]]]]]], x], And[FreeQ[List[a, b, c, d, e, f, g, h, m, p, q], x], ZeroQ[Plus[Times[f, g], Times[-1, e, h]]], NonzeroQ[Plus[m, 1]], NegQ[Times[Plus[m, 1], Power[Times[b, p, q], -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Plus[n, 1]], Power[Times[b, h, p, q, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[Plus[m, 1], Power[Times[b, p, q, Plus[n, 1]], -1]], Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, h, m, p, q], x], ZeroQ[Plus[Times[f, g], Times[-1, e, h]]], NonzeroQ[Plus[m, 1]], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], n], Power[Times[h, Plus[m, 1], Power[E, Times[a, Plus[m, 1], Power[Times[b, p, q], -1]]], Power[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]], Times[Plus[m, 1], Power[Times[p, q], -1]]], Power[Times[-1, Plus[m, 1], Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Power[Times[b, p, q], -1]], n]], -1], Gamma[Plus[n, 1], Times[-1, Plus[m, 1], Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Power[Times[b, p, q], -1]]]], x], And[FreeQ[List[a, b, c, d, e, f, g, h, m, n, p], x], ZeroQ[Plus[Times[f, g], Times[-1, e, h]]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Power[h, -1], PolyLog[2, Times[-1, Together[Times[c, f, Power[h, -1]]], Plus[g, Times[h, x]]]]], x]], And[FreeQ[List[c, e, f, g, h], x], ZeroQ[Plus[h, Times[c, Plus[Times[f, g], Times[-1, e, h]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[a, Times[b, Log[Times[c, Plus[e, Times[-1, f, g, Power[h, -1]]]]]]], Log[Plus[g, Times[h, x]]], Power[h, -1]], x], Dist[b, Int[Times[Log[Times[-1, h, Plus[e, Times[f, x]], Power[Plus[Times[f, g], Times[-1, e, h]], -1]]], Power[Plus[g, Times[h, x]], -1]], x], x]], And[FreeQ[List[a, b, c, e, f, g, h], x], NonzeroQ[Plus[h, Times[c, Plus[Times[f, g], Times[-1, e, h]]]]], PositiveQ[Times[c, Plus[e, Times[-1, f, g, Power[h, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], n], Power[h, -1], Log[Times[f, Plus[g, Times[h, x]], Power[Plus[Times[f, g], Times[-1, e, h]], -1]]]], x], Times[-1, Dist[Times[b, f, n, p, q, Power[h, -1]], Int[Times[Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Plus[n, -1]], Log[Times[f, Plus[g, Times[h, x]], Power[Plus[Times[f, g], Times[-1, e, h]], -1]]], Power[Plus[e, Times[f, x]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, h, p, q], x], NonzeroQ[Plus[Times[f, g], Times[-1, e, h]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[g, Times[h, x]], Plus[m, 1]], Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Power[Times[h, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, f, p, q, Power[Times[h, Plus[m, 1]], -1]], Int[Times[Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[e, Times[f, x]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, h, m, p, q], x], NonzeroQ[Plus[Times[f, g], Times[-1, e, h]]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], -2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[e, Times[f, x]], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], n], Power[Times[Plus[Times[f, g], Times[-1, e, h]], Plus[g, Times[h, x]]], -1]], x], Times[-1, Dist[Times[b, f, n, p, q, Power[Plus[Times[f, g], Times[-1, e, h]], -1]], Int[Times[Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Plus[n, -1]], Power[Plus[g, Times[h, x]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, h, p, q], x], NonzeroQ[Plus[Times[f, g], Times[-1, e, h]]], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], n], Power[Times[h, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, f, n, p, q, Power[Times[h, Plus[m, 1]], -1]], Int[Times[Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Plus[n, -1]], Power[Plus[e, Times[f, x]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, h, m, p, q], x], NonzeroQ[Plus[Times[f, g], Times[-1, e, h]]], RationalQ[n], Greater[n, 0], NonzeroQ[Plus[m, 1]], IntegersQ[Times[2, m], Times[2, n]], Or[Equal[n, 1], Not[PositiveIntegerQ[m]], And[Equal[n, 2], NonzeroQ[Plus[m, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], -1], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, h, p, q], x], NonzeroQ[Plus[Times[f, g], Times[-1, e, h]]], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[e, Times[f, x]], Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Plus[n, 1]], Power[Times[b, f, p, q, Plus[n, 1]], -1]], x], Plus[Times[-1, Dist[Times[Plus[m, 1], Power[Times[b, p, q, Plus[n, 1]], -1]], Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Plus[n, 1]]], x], x]], Dist[Times[m, Plus[Times[f, g], Times[-1, e, h]], Power[Times[b, f, p, q, Plus[n, 1]], -1]], Int[Times[Power[Plus[g, Times[h, x]], Plus[m, -1]], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, h, p, q], x], NonzeroQ[Plus[Times[f, g], Times[-1, e, h]]], RationalQ[m, n], Less[n, -1], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, h, n, p, q], x], NonzeroQ[Plus[Times[f, g], Times[-1, e, h]]], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Pattern[v, Blank[]], Pattern[p, Blank[]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[ExpandToSum[v, x], p]], q]]]]], n]], x], And[FreeQ[List[a, b, c, d, m, n, p, q], x], LinearQ[List[u, v], x], Not[LinearMatchQ[List[u, v], x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], n]], x], FreeQ[List[a, b, c, d, e, f, g, h, m, n, p, q], x]]], RuleDelayed[HoldPattern[Int[Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], -1]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[i, Blank[]]], Times[Optional[Pattern[j, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[f, Power[Times[h, Plus[Times[f, i], Times[-1, e, j]]], -1], PolyLog[2, Simplify[Times[f, Plus[i, Times[j, x]], Power[Times[j, Plus[e, Times[f, x]]], -1]]]]], x], And[FreeQ[List[c, e, f, g, h, i, j], x], ZeroQ[Plus[Times[f, g], Times[-1, e, h]]], ZeroQ[Plus[Times[f, i], Times[j, Plus[c, Times[-1, e]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], -1]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[i, Blank[]]], Times[Optional[Pattern[j, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[a, Int[Times[1, Power[Times[Plus[g, Times[h, x]], Plus[i, Times[j, x]]], -1]], x], x], Dist[b, Int[Times[Log[Times[c, Power[Plus[e, Times[f, x]], -1]]], Power[Times[Plus[g, Times[h, x]], Plus[i, Times[j, x]]], -1]], x], x]], And[FreeQ[List[a, b, c, e, f, g, h, i, j], x], ZeroQ[Plus[Times[f, g], Times[-1, e, h]]], ZeroQ[Plus[Times[f, i], Times[j, Plus[c, Times[-1, e]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[i, Blank[]]], Times[Optional[Pattern[j, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[Plus[i, Times[j, x]], m], Power[Plus[g, Times[h, x]], -1]], x]]], Plus[Dist[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], u, x], Times[-1, Dist[Times[b, h, p, q], Int[SimplifyIntegrand[Times[u, Power[Plus[g, Times[h, x]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, g, h, i, j, p, q], x], ZeroQ[Plus[Times[f, g], Times[-1, e, h]]], IntegerQ[Plus[m, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[i, Blank[]]], Times[Optional[Pattern[j, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[c, m], Power[f, m], h], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Plus[Times[c, f, i], Times[-1, c, e, j], Times[j, Power[E, x]]], m]], x], x, Log[Times[c, Plus[e, Times[f, x]]]]], x], And[FreeQ[List[a, b, c, e, f, g, h, i, j, n], x], ZeroQ[Plus[Times[f, g], Times[-1, e, h]]], PositiveIntegerQ[m], Or[IntegerQ[n], Greater[m, 0]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[i, Blank[]]], Times[Optional[Pattern[j, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, ExpandIntegrand[Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], n], Times[Power[Plus[i, Times[j, x]], m], Power[Plus[g, Times[h, x]], -1]], x]]], Condition[Int[u, x], SumQ[u]]], And[FreeQ[List[a, b, c, d, e, f, g, h, i, j, p, q], x], IntegerQ[m], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[i, Blank[]]], Times[Optional[Pattern[j, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[i, Times[j, x]], m], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], n], Power[Plus[g, Times[h, x]], -1]], x], FreeQ[List[a, b, c, d, e, f, g, h, i, j, m, n, p, q], x]]], RuleDelayed[HoldPattern[Int[Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], -1]]], Power[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[f, Power[Times[2, e, h], -1], PolyLog[2, Simplify[Times[Plus[Times[-1, e], Times[f, x]], Power[Plus[e, Times[f, x]], -1]]]]], x]], And[FreeQ[List[c, e, f, g, h], x], ZeroQ[Plus[Times[Power[f, 2], g], Times[Power[e, 2], h]]], ZeroQ[Plus[c, Times[-1, 2, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], -1]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Plus[a, Times[b, Log[Times[c, Power[Times[2, e], -1]]]]], Int[Times[1, Power[Plus[g, Times[h, Power[x, 2]]], -1]], x], x], Dist[b, Int[Times[Log[Times[2, e, Power[Plus[e, Times[f, x]], -1]]], Power[Plus[g, Times[h, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[c, e, f, g, h], x], ZeroQ[Plus[Times[Power[f, 2], g], Times[Power[e, 2], h]]], PositiveQ[Times[c, Power[Times[2, e], -1]]], Or[NonzeroQ[Plus[c, Times[-1, 2, e]]], NonzeroQ[a]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[i, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[e, f], Int[Times[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Power[Times[Plus[e, Times[f, x]], Plus[Times[f, g], Times[e, i, x]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, h, i, p, q], x], ZeroQ[Plus[Times[Power[f, 2], g], Times[-1, e, f, h], Times[Power[e, 2], i]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[i, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[e, f], Int[Times[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Power[Times[Plus[e, Times[f, x]], Plus[Times[f, g], Times[e, i, x]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, i, p, q], x], ZeroQ[Plus[Times[Power[f, 2], g], Times[Power[e, 2], i]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[1, Power[Sqrt[Plus[g, Times[h, Power[x, 2]]]], -1]], x]]], Plus[Simp[Times[u, Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]]], x], Times[-1, Dist[Times[b, f, p, q], Int[SimplifyIntegrand[Times[u, Power[Plus[e, Times[f, x]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, g, h, p, q], x], PositiveQ[g]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[g1, Blank[]], Times[Optional[Pattern[h1, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Pattern[g2, Blank[]], Times[Optional[Pattern[h2, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[1, Power[Sqrt[Plus[Times[g1, g2], Times[h1, h2, Power[x, 2]]]], -1]], x]]], Plus[Simp[Times[u, Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]]], x], Times[-1, Dist[Times[b, f, p, q], Int[SimplifyIntegrand[Times[u, Power[Plus[e, Times[f, x]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, g1, h1, g2, h2, p, q], x], ZeroQ[Plus[Times[g2, h1], Times[g1, h2]]], PositiveQ[g1], PositiveQ[g2]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[1, Times[h, Power[g, -1], Power[x, 2]]]], Power[Sqrt[Plus[g, Times[h, Power[x, 2]]]], -1]], Int[Times[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Power[Sqrt[Plus[1, Times[h, Power[g, -1], Power[x, 2]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, h, p, q], x], Not[PositiveQ[g]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[g1, Blank[]], Times[Optional[Pattern[h1, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Pattern[g2, Blank[]], Times[Optional[Pattern[h2, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[1, Times[h1, h2, Power[Times[g1, g2], -1], Power[x, 2]]]], Power[Times[Sqrt[Plus[g1, Times[h1, x]]], Sqrt[Plus[g2, Times[h2, x]]]], -1]], Int[Times[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Power[Sqrt[Plus[1, Times[h1, h2, Power[Times[g1, g2], -1], Power[x, 2]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, g1, h1, g2, h2, p, q], x], ZeroQ[Plus[Times[g2, h1], Times[g1, h2]]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Times[Optional[Pattern[i, Blank[]]], Plus[Optional[Pattern[j, Blank[]]], Times[Optional[Pattern[k, Blank[]]], Pattern[x, Blank[]]]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[PolyLog[2, Together[Plus[1, Times[-1, i, Plus[j, Times[k, x]]]]]], Power[h, -1], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], n]], x]], Dist[Times[b, f, n, p, q, Power[h, -1]], Int[Times[PolyLog[2, Together[Plus[1, Times[-1, i, Plus[j, Times[k, x]]]]]], Power[Plus[e, Times[f, x]], -1], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Plus[n, -1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, h, i, j, k, p, q], x], RationalQ[n], Greater[n, 0], ZeroQ[Plus[h, Times[-1, i, Plus[Times[h, j], Times[-1, g, k]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Plus[1, Times[Optional[Pattern[i, Blank[]]], Power[Plus[Optional[Pattern[j, Blank[]]], Times[Optional[Pattern[k, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[PolyLog[2, Times[-1, i, Power[Plus[j, Times[k, x]], m]]], Power[Times[h, m], -1], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], n]], x]], Dist[Times[b, f, n, p, q, Power[Times[h, m], -1]], Int[Times[PolyLog[2, Times[-1, i, Power[Plus[j, Times[k, x]], m]]], Power[Plus[e, Times[f, x]], -1], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Plus[n, -1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, h, i, j, k, m, p, q], x], RationalQ[n], Greater[n, 0], ZeroQ[Plus[Times[h, j], Times[-1, g, k]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], -1], PolyLog[Pattern[r, Blank[]], Times[Optional[Pattern[i, Blank[]]], Power[Plus[Optional[Pattern[j, Blank[]]], Times[Optional[Pattern[k, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[PolyLog[Plus[r, 1], Times[i, Power[Plus[j, Times[k, x]], m]]], Power[Times[h, m], -1], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], n]], x], Times[-1, Dist[Times[b, f, n, p, q, Power[Times[h, m], -1]], Int[Times[PolyLog[Plus[r, 1], Times[i, Power[Plus[j, Times[k, x]], m]]], Power[Plus[e, Times[f, x]], -1], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], Plus[n, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, h, i, j, k, m, p, q, r], x], RationalQ[n], Greater[n, 0], ZeroQ[Plus[Times[h, j], Times[-1, g, k]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[Px, Blank[]]], Power[Pattern[F, Blank[]][Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Px, Power[F[Plus[g, Times[h, x]]], m]], x]]], Plus[Dist[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], u, x], Times[-1, Dist[Times[b, f, p, q], Int[SimplifyIntegrand[Times[u, Power[Plus[e, Times[f, x]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, g, h, p, q], x], PolynomialQ[Px, x], PositiveIntegerQ[m], MemberQ[List[Log, ArcSin, ArcCos, ArcTan, ArcCot, ArcSinh, ArcCosh, ArcTanh, ArcCoth], F]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[m, -1]], Subst[Int[Times[Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], n], Power[x, -1]], x], x, Power[x, m]], x], And[FreeQ[List[a, b, c, d, e, f, m, n, p, q], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Times[Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Plus[Pattern[f, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[m, -1]], Subst[Int[Times[Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], n], Power[x, -1]], x], x, Power[x, m]], x], And[FreeQ[List[a, b, c, d, e, f, m, n, p, q], x], ZeroQ[Plus[m, r]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[r, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[r1, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[r, -1]], Subst[Int[Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], n], x], x, Power[x, r]], x], And[FreeQ[List[a, b, c, d, e, f, n, p, q, r], x], ZeroQ[Plus[r1, Times[-1, Plus[r, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[r, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[r1, Blank[]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], Pattern[r, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[r, -1]], Subst[Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], n]], x], x, Power[x, r]], x], And[FreeQ[List[a, b, c, d, e, f, g, h, m, n, p, q, r], x], ZeroQ[Plus[r1, Times[-1, Plus[r, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[1, Power[Plus[d, Times[e, Power[x, 2]]], -1]], x]]], Plus[Dist[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]], u, x], Times[-1, Dist[Times[b, n], Int[Times[u, Power[x, -1]], x], x]]]], FreeQ[List[a, b, c, d, e, n], x]]], RuleDelayed[HoldPattern[Int[Times[Log[Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[mn, Blank[]]]]]]], Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[1, Power[Times[d, n], -1], PolyLog[2, Times[-1, Together[Times[b, c, Plus[d, Times[e, Power[x, n]]], Power[Times[d, Power[x, n]], -1]]]]]], x], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[n, mn]], ZeroQ[Plus[d, Times[-1, a, c, d], Times[b, c, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[mn, Blank[]]], Plus[Optional[Pattern[b, Blank[]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]]], Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[1, Power[Times[d, n], -1], PolyLog[2, Times[-1, Together[Times[b, c, Plus[d, Times[e, Power[x, n]]], Power[Times[d, Power[x, n]], -1]]]]]], x], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[n, mn]], ZeroQ[Plus[d, Times[-1, a, c, d], Times[b, c, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[Px, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Px, Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, f, n, p, q], x], PolynomialQ[Px, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[RFx, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, ExpandIntegrand[Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], n], RFx, x]]], Condition[Int[u, x], SumQ[u]]], And[FreeQ[List[a, b, c, d, e, f, p, q], x], RationalFunctionQ[RFx, x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[RFx, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, ExpandIntegrand[Times[RFx, Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], n]], x]]], Condition[Int[u, x], SumQ[u]]], And[FreeQ[List[a, b, c, d, e, f, p, q], x], RationalFunctionQ[RFx, x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[f, Times[2, g, x]], Times[2, p]], Power[Times[Power[4, p], Power[g, p]], -1]], q]]]]], n]], x], And[FreeQ[List[a, b, c, d, e, f, g, q, n], x], ZeroQ[Plus[Power[f, 2], Times[-1, 4, e, g]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Pattern[v, Blank[]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[ExpandToSum[v, x], p]], q]]]]], n]], x], And[FreeQ[List[a, b, c, d, n, p, q], x], LinearQ[v, x], Not[MatchQ[Times[c, Power[Times[d, Power[v, p]], q]], Condition[Times[Optional[Pattern[cc, Blank[]]], Power[Times[Optional[Pattern[dd, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], x]], Optional[Pattern[pp, Blank[]]]]], Optional[Pattern[qq, Blank[]]]]], FreeQ[List[cc, dd, e, f, pp, qq], x]]]]]]], RuleDelayed[HoldPattern[Int[Power[Log[Times[Optional[Pattern[a, Blank[]]], Power[Times[Optional[Pattern[b, Blank[]]], Power[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[q, Blank[]]]]], Optional[Pattern[r, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Subst[Int[Power[Log[Power[x, Times[n, p, q]]], r], x], Power[x, Times[n, p, q]], Times[a, Power[Times[b, Power[Times[c, Power[x, n]], p]], q]]], FreeQ[List[a, b, c, n, p, q, r], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[a, Blank[]]], Power[Times[Optional[Pattern[b, Blank[]]], Power[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[q, Blank[]]]]], Optional[Pattern[r, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Subst[Int[Times[Power[x, m], Power[Log[Power[x, Times[n, p, q]]], r]], x], Power[x, Times[n, p, q]], Times[a, Power[Times[b, Power[Times[c, Power[x, n]], p]], q]]], And[FreeQ[List[a, b, c, m, n, p, q, r], x], NonzeroQ[Plus[m, 1]], Not[SameQ[Power[x, Times[n, p, q]], Times[a, Power[Times[b, Power[Times[c, Power[x, n]], p]], q]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Log[Times[e, Power[Times[e1, b, Power[d, -1]], n]]], p], Int[u, x], x], And[FreeQ[List[a, b, c, d, e, n, p, e1], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n1, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n2, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[a, Times[b, x]], Power[b, -1], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], p]], x], Times[-1, Dist[Times[n, n1, p, Plus[Times[b, c], Times[-1, a, d]], Power[b, -1]], Int[Times[Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], Plus[p, -1]], Power[Plus[c, Times[d, x]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, n, e1, n1], x], ZeroQ[Plus[n1, n2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Log[Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[1, Power[g, -1], PolyLog[2, Times[Together[Plus[c, Times[-1, a, e]]], Power[Plus[c, Times[d, x]], -1]]]], x], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, f], Times[-1, c, g]]], ZeroQ[Plus[d, Times[-1, b, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n1, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n2, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[g, -1], Log[Times[Plus[Times[b, c], Times[-1, a, d]], Power[Times[b, Plus[c, Times[d, x]]], -1]]], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], p]], x]], Dist[Times[n, n1, p, Plus[Times[b, c], Times[-1, a, d]], Power[g, -1]], Int[Times[Log[Times[Plus[Times[b, c], Times[-1, a, d]], Power[Times[b, Plus[c, Times[d, x]]], -1]]], Power[Times[Plus[a, Times[b, x]], Plus[c, Times[d, x]]], -1], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, n, e1, n1], x], ZeroQ[Plus[n1, n2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, f], Times[-1, c, g]]], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n1, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n2, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[g, -1], Log[Times[-1, Plus[Times[b, c], Times[-1, a, d]], Power[Times[d, Plus[a, Times[b, x]]], -1]]], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], p]], x]], Dist[Times[n, n1, p, Plus[Times[b, c], Times[-1, a, d]], Power[g, -1]], Int[Times[Log[Times[-1, Plus[Times[b, c], Times[-1, a, d]], Power[Times[d, Plus[a, Times[b, x]]], -1]]], Power[Times[Plus[a, Times[b, x]], Plus[c, Times[d, x]]], -1], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, n, e1, n1], x], ZeroQ[Plus[n1, n2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[b, f], Times[-1, a, g]]], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n1, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n2, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Log[Plus[f, Times[g, x]]], Power[g, -1], Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]]], x], Times[-1, Dist[Times[n, n1, Plus[Times[b, c], Times[-1, a, d]], Power[g, -1]], Int[Times[Log[Plus[f, Times[g, x]]], Power[Times[Plus[a, Times[b, x]], Plus[c, Times[d, x]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, n, e1, n1], x], ZeroQ[Plus[n1, n2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Times[d, f], Times[-1, c, g]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n1, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n2, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[d, Power[g, -1]], Int[Times[1, Power[Plus[c, Times[d, x]], -1], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], p]], x], x], Times[-1, Dist[Times[Plus[Times[d, f], Times[-1, c, g]], Power[g, -1]], Int[Times[Times[1, Power[Times[Plus[c, Times[d, x]], Plus[f, Times[g, x]]], -1]], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], p]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, n, e1, n1], x], ZeroQ[Plus[n1, n2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Times[d, f], Times[-1, c, g]]], IntegerQ[p], Greater[p, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], -2]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[d, 2], Power[Times[Plus[Times[b, c], Times[-1, a, d]], e, Power[g, 2]], -1], LogIntegral[Times[e, Plus[a, Times[b, x]], Power[Plus[c, Times[d, x]], -1]]]], x], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, f], Times[-1, c, g]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n1, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n2, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], -2]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[d, 2], Plus[a, Times[b, x]], Power[Times[Power[g, 2], n, n1, Plus[Times[b, c], Times[-1, a, d]], Plus[c, Times[d, x]]], -1], ExpIntegralEi[Times[1, Power[Times[n, n1], -1], Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]]]], Power[Power[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Plus[c, Times[d, x]], n2]], n]], Times[1, Power[Times[n, n1], -1]]], -1]], x], And[FreeQ[List[a, b, c, d, e, f, g, n, e1, n1], x], ZeroQ[Plus[n1, n2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, f], Times[-1, c, g]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n1, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n2, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], -2]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[b, 2], Plus[c, Times[d, x]], Power[Times[Power[g, 2], n, n1, Plus[Times[b, c], Times[-1, a, d]], Plus[a, Times[b, x]]], -1], Power[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Plus[c, Times[d, x]], n2]], n]], Times[1, Power[Times[n, n1], -1]]], ExpIntegralEi[Times[-1, Power[Times[n, n1], -1], Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]]]]], x], And[FreeQ[List[a, b, c, d, e, f, g, n, e1, n1], x], ZeroQ[Plus[n1, n2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[b, f], Times[-1, a, g]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n1, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n2, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], -2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[a, Times[b, x]], Power[Times[Plus[Times[b, f], Times[-1, a, g]], Plus[f, Times[g, x]]], -1], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], p]], x], Times[-1, Dist[Times[n, n1, p, Plus[Times[b, c], Times[-1, a, d]], Power[Plus[Times[b, f], Times[-1, a, g]], -1]], Int[Times[1, Power[Times[Plus[c, Times[d, x]], Plus[f, Times[g, x]]], -1], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, n, e1, n1], x], ZeroQ[Plus[n1, n2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Times[b, f], Times[-1, a, g]]], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n1, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n2, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], -2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[c, Times[d, x]], Power[Times[Plus[Times[d, f], Times[-1, c, g]], Plus[f, Times[g, x]]], -1], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], p]], x], Times[-1, Dist[Times[n, n1, p, Plus[Times[b, c], Times[-1, a, d]], Power[Plus[Times[d, f], Times[-1, c, g]], -1]], Int[Times[1, Power[Times[Plus[a, Times[b, x]], Plus[f, Times[g, x]]], -1], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, n, e1, n1], x], ZeroQ[Plus[n1, n2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Times[d, f], Times[-1, c, g]]], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n1, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n2, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], -3]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[Plus[Times[b, f], Times[-1, a, g]], -1]], Int[Times[1, Power[Power[Plus[f, Times[g, x]], 2], -1], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], p]], x], x], Times[-1, Dist[Times[g, Power[Plus[Times[b, f], Times[-1, a, g]], -1]], Int[Times[Plus[a, Times[b, x]], Power[Power[Plus[f, Times[g, x]], 3], -1], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], p]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, n, p, e1, n1], x], ZeroQ[Plus[n1, n2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Times[b, f], Times[-1, a, g]]], ZeroQ[Plus[Times[d, f], Times[-1, c, g]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n1, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n2, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], -3]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[d, Power[Plus[Times[d, f], Times[-1, c, g]], -1]], Int[Times[1, Power[Power[Plus[f, Times[g, x]], 2], -1], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], p]], x], x], Times[-1, Dist[Times[g, Power[Plus[Times[d, f], Times[-1, c, g]], -1]], Int[Times[Plus[c, Times[d, x]], Power[Power[Plus[f, Times[g, x]], 3], -1], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], p]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, n, p, e1, n1], x], ZeroQ[Plus[n1, n2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Times[d, f], Times[-1, c, g]]], ZeroQ[Plus[Times[b, f], Times[-1, a, g]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n1, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n2, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[f, Times[g, x]], Plus[m, 1]], Power[Times[g, Plus[m, 1]], -1], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], p]], x], Times[-1, Dist[Times[n, n1, p, Plus[Times[b, c], Times[-1, a, d]], Power[Times[g, Plus[m, 1]], -1]], Int[Times[Power[Plus[f, Times[g, x]], Plus[m, 1]], Power[Times[Plus[a, Times[b, x]], Plus[c, Times[d, x]]], -1], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, n, e1, n1], x], ZeroQ[Plus[n1, n2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[p], IntegerQ[m], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m2, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, x]], Plus[m, 1]], Power[Log[Times[e, Power[u, n]]], p], Power[Times[Plus[m, 1], Plus[Times[b, c], Times[-1, a, d]], Power[Plus[c, Times[d, x]], Plus[m, 1]]], -1]], x], Times[-1, Dist[Times[n, p, Power[Plus[m, 1], -1]], Int[Times[Power[Plus[a, Times[b, x]], m], Power[Power[Plus[c, Times[d, x]], Plus[m, 2]], -1], Power[Log[Times[e, Power[u, n]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, n, Simplify[Times[u, Plus[c, Times[d, x]], Power[Plus[a, Times[b, x]], -1]]]], x], ZeroQ[Plus[m2, m, 2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[m, 1]], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Pattern[u, Blank[]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m2, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, x]], Plus[m, 1]], Power[Log[u], p], Power[Times[Plus[m, 1], Plus[Times[b, c], Times[-1, a, d]], Power[Plus[c, Times[d, x]], Plus[m, 1]]], -1]], x], Times[-1, Dist[Times[p, Power[Plus[m, 1], -1]], Int[Times[Power[Plus[a, Times[b, x]], m], Power[Power[Plus[c, Times[d, x]], Plus[m, 2]], -1], Power[Log[u], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, Simplify[Times[u, Plus[c, Times[d, x]], Power[Plus[a, Times[b, x]], -1]]]], x], ZeroQ[Plus[m2, m, 2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[m, 1]], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]], -1], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m2, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Plus[a, Times[b, x]], Plus[m, 1]], Power[Times[n, Plus[Times[b, c], Times[-1, a, d]], Power[Plus[c, Times[d, x]], Plus[m, 1]]], -1], ExpIntegralEi[Times[Plus[m, 1], Power[n, -1], Log[Times[e, Power[u, n]]]]], Power[Power[Times[e, Power[u, n]], Times[Plus[m, 1], Power[n, -1]]], -1]], x], And[FreeQ[List[a, b, c, d, e, n, Simplify[Times[u, Plus[c, Times[d, x]], Power[Plus[a, Times[b, x]], -1]]]], x], ZeroQ[Plus[m2, m, 2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Pattern[u, Blank[]]], -1], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m2, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Plus[a, Times[b, x]], Plus[m, 1]], Power[Times[Plus[Times[b, c], Times[-1, a, d]], Power[Plus[c, Times[d, x]], Plus[m, 1]]], -1], ExpIntegralEi[Times[Plus[m, 1], Log[u]]], Power[Power[u, Plus[m, 1]], -1]], x], And[FreeQ[List[a, b, c, d, Simplify[Times[u, Plus[c, Times[d, x]], Power[Plus[a, Times[b, x]], -1]]]], x], ZeroQ[Plus[m2, m, 2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m2, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, x]], Plus[m, 1]], Power[Log[Times[e, Power[u, n]]], Plus[p, 1]], Power[Times[n, Plus[p, 1], Plus[Times[b, c], Times[-1, a, d]], Power[Plus[c, Times[d, x]], Plus[m, 1]]], -1]], x], Times[-1, Dist[Times[Plus[m, 1], Power[Times[n, Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, x]], m], Power[Power[Plus[c, Times[d, x]], Plus[m, 2]], -1], Power[Log[Times[e, Power[u, n]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, n, Simplify[Times[u, Plus[c, Times[d, x]], Power[Plus[a, Times[b, x]], -1]]]], x], ZeroQ[Plus[m2, m, 2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[m, 1]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Pattern[u, Blank[]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m2, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, x]], Plus[m, 1]], Power[Log[u], Plus[p, 1]], Power[Times[Plus[p, 1], Plus[Times[b, c], Times[-1, a, d]], Power[Plus[c, Times[d, x]], Plus[m, 1]]], -1]], x], Times[-1, Dist[Times[Plus[m, 1], Power[Plus[p, 1], -1]], Int[Times[Power[Plus[a, Times[b, x]], m], Power[Power[Plus[c, Times[d, x]], Plus[m, 2]], -1], Power[Log[u], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, Simplify[Times[u, Plus[c, Times[d, x]], Power[Plus[a, Times[b, x]], -1]]]], x], ZeroQ[Plus[m2, m, 2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[m, 1]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n1, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n2, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[d, Power[g, -1]], Int[Times[1, Power[Power[Plus[c, Times[d, x]], 2], -1], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, n, e1, n1], x], ZeroQ[Plus[n1, n2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Times[b, f], Times[-1, a, g]]], ZeroQ[Plus[Times[d, f], Times[-1, c, g]]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[1, Power[Plus[Times[d, f], Times[-1, c, g]], -1], PolyLog[2, Simplify[Times[Plus[c, Times[-1, a, e]], Plus[f, Times[g, x]], Power[Times[f, Plus[c, Times[d, x]]], -1]]]]], x], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Times[b, f], Times[-1, a, g]]], NonzeroQ[Plus[Times[d, f], Times[-1, c, g]]], ZeroQ[Plus[Times[d, f], Times[-1, c, g], Times[-1, e, Plus[Times[b, f], Times[-1, a, g]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n1, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n2, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[Times[d, f], Times[-1, c, g]], -1], Log[Times[Plus[Times[b, c], Times[-1, a, d]], Plus[f, Times[g, x]], Power[Times[Plus[Times[b, f], Times[-1, a, g]], Plus[c, Times[d, x]]], -1]]], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], p]], x]], Dist[Times[n, n1, p, Plus[Times[b, c], Times[-1, a, d]], Power[Plus[Times[d, f], Times[-1, c, g]], -1]], Int[Times[Times[1, Power[Times[Plus[a, Times[b, x]], Plus[c, Times[d, x]]], -1]], Log[Times[Plus[Times[b, c], Times[-1, a, d]], Plus[f, Times[g, x]], Power[Times[Plus[Times[b, f], Times[-1, a, g]], Plus[c, Times[d, x]]], -1]]], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, n, e1, n1], x], ZeroQ[Plus[n1, n2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Times[b, f], Times[-1, a, g]]], NonzeroQ[Plus[Times[d, f], Times[-1, c, g]]], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Log[Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[c, Power[Times[2, d, f], -1], PolyLog[2, Simplify[Times[Plus[c, Times[-1, a, e]], Plus[c, Times[-1, d, x]], Power[Times[c, Plus[c, Times[d, x]]], -1]]]]], x], And[FreeQ[List[a, b, c, d, e, f, g], x], ZeroQ[Plus[Times[Power[d, 2], f], Times[Power[c, 2], g]]], ZeroQ[Plus[Times[2, c, d], Times[-1, b, c, e], Times[-1, a, d, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n1, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n2, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[d, 2], Int[Times[1, Power[Times[Plus[c, Times[d, x]], Plus[Times[d, g], Times[-1, c, h], Times[d, h, x]]], -1], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, h, n, p, e1, n1], x], ZeroQ[Plus[n1, n2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[Power[d, 2], f], Times[-1, c, d, g], Times[Power[c, 2], h]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n1, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n2, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[d, 2], Power[h, -1]], Int[Times[1, Power[Times[Plus[c, Times[d, x]], Plus[c, Times[-1, d, x]]], -1], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, f, h, n, p, e1, n1], x], ZeroQ[Plus[n1, n2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[Power[d, 2], f], Times[Power[c, 2], h]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n1, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n2, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[b, Power[Times[g, n, n1, Plus[Times[b, c], Times[-1, a, d]]], -1]], Subst[Int[Power[x, p], x], x, Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]]], x], And[FreeQ[List[a, b, c, d, e, f, g, n, p, e1, n1], x], ZeroQ[Plus[n1, n2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Times[d, f], Times[-1, c, g]]], ZeroQ[Plus[Times[b, f], Times[-1, a, g]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Log[Pattern[v, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[PolyLog[2, Together[Plus[1, Times[-1, v]]]], Power[Plus[Times[b, c], Times[-1, a, d]], -1], Power[Log[Times[e, Power[u, n]]], p]], x]], Dist[Times[n, p], Int[Times[PolyLog[2, Together[Plus[1, Times[-1, v]]]], Power[Times[Plus[a, Times[b, x]], Plus[c, Times[d, x]]], -1], Power[Log[Times[e, Power[u, n]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, d, e, n, Simplify[Times[u, Power[Plus[1, Times[-1, v]], -1]]], Simplify[Times[u, Plus[c, Times[d, x]], Power[Plus[a, Times[b, x]], -1]]]], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Pattern[u, Blank[]]], Optional[Pattern[p, Blank[]]]], Log[Pattern[v, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[PolyLog[2, Together[Plus[1, Times[-1, v]]]], Power[Plus[Times[b, c], Times[-1, a, d]], -1], Power[Log[u], p]], x]], Dist[p, Int[Times[PolyLog[2, Together[Plus[1, Times[-1, v]]]], Power[Times[Plus[a, Times[b, x]], Plus[c, Times[d, x]]], -1], Power[Log[u], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, d, Simplify[Times[u, Power[Plus[1, Times[-1, v]], -1]]], Simplify[Times[u, Plus[c, Times[d, x]], Power[Plus[a, Times[b, x]], -1]]]], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Log[Pattern[v, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[f, Simplify[Times[Plus[1, Times[-1, v]], Power[u, -1]]]]], Plus[Simp[Times[Log[v], Power[Times[n, Plus[p, 1], Plus[Times[b, c], Times[-1, a, d]]], -1], Power[Log[Times[e, Power[u, n]]], Plus[p, 1]]], x], Dist[Times[f, Power[Times[n, Plus[p, 1]], -1]], Int[Times[1, Power[Times[Plus[c, Times[d, x]], Plus[c, Times[-1, a, f], Plus[d, Times[-1, b, f]]]], -1], Power[Log[Times[e, Power[u, n]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, n, Simplify[Times[u, Power[Plus[1, Times[-1, v]], -1]]], Simplify[Times[u, Plus[c, Times[d, x]], Power[Plus[a, Times[b, x]], -1]]]], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Pattern[u, Blank[]]], Pattern[p, Blank[]]], Log[Pattern[v, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[f, Simplify[Times[Plus[1, Times[-1, v]], Power[u, -1]]]]], Plus[Simp[Times[Log[v], Power[Times[Plus[p, 1], Plus[Times[b, c], Times[-1, a, d]]], -1], Power[Log[u], Plus[p, 1]]], x], Dist[Times[f, Power[Plus[p, 1], -1]], Int[Times[1, Power[Times[Plus[c, Times[d, x]], Plus[c, Times[-1, a, f], Plus[d, Times[-1, b, f]]]], -1], Power[Log[u], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, Simplify[Times[u, Power[Plus[1, Times[-1, v]], -1]]], Simplify[Times[u, Plus[c, Times[d, x]], Power[Plus[a, Times[b, x]], -1]]]], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Log[Pattern[v, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[PolyLog[2, Together[Plus[1, Times[-1, v]]]], Power[Plus[Times[b, c], Times[-1, a, d]], -1], Power[Log[Times[e, Power[u, n]]], p]], x], Times[-1, Dist[Times[n, p], Int[Times[PolyLog[2, Together[Plus[1, Times[-1, v]]]], Power[Times[Plus[a, Times[b, x]], Plus[c, Times[d, x]]], -1], Power[Log[Times[e, Power[u, n]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, n, Simplify[Times[u, Plus[1, Times[-1, v]]]], Simplify[Times[u, Plus[c, Times[d, x]], Power[Plus[a, Times[b, x]], -1]]]], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Pattern[u, Blank[]]], Optional[Pattern[p, Blank[]]]], Log[Pattern[v, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[PolyLog[2, Together[Plus[1, Times[-1, v]]]], Power[Plus[Times[b, c], Times[-1, a, d]], -1], Power[Log[u], p]], x], Times[-1, Dist[p, Int[Times[PolyLog[2, Together[Plus[1, Times[-1, v]]]], Power[Times[Plus[a, Times[b, x]], Plus[c, Times[d, x]]], -1], Power[Log[u], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, Simplify[Times[u, Plus[1, Times[-1, v]]]], Simplify[Times[u, Plus[c, Times[d, x]], Power[Plus[a, Times[b, x]], -1]]]], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Log[Pattern[v, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[f, Simplify[Times[u, Plus[1, Times[-1, v]]]]]], Plus[Simp[Times[Log[v], Power[Times[n, Plus[p, 1], Plus[Times[b, c], Times[-1, a, d]]], -1], Power[Log[Times[e, Power[u, n]]], Plus[p, 1]]], x], Times[-1, Dist[Times[f, Power[Times[n, Plus[p, 1]], -1]], Int[Times[1, Power[Times[Plus[a, Times[b, x]], Plus[a, Times[-1, c, f], Plus[b, Times[-1, d, f]]]], -1], Power[Log[Times[e, Power[u, n]]], Plus[p, 1]]], x], x]]]], And[FreeQ[List[a, b, c, d, e, n, Simplify[Times[u, Plus[1, Times[-1, v]]]], Simplify[Times[u, Plus[c, Times[d, x]], Power[Plus[a, Times[b, x]], -1]]]], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Pattern[u, Blank[]]], Pattern[p, Blank[]]], Log[Pattern[v, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[f, Simplify[Times[u, Plus[1, Times[-1, v]]]]]], Plus[Simp[Times[Log[v], Power[Times[Plus[p, 1], Plus[Times[b, c], Times[-1, a, d]]], -1], Power[Log[u], Plus[p, 1]]], x], Times[-1, Dist[Times[f, Power[Plus[p, 1], -1]], Int[Times[1, Power[Times[Plus[a, Times[b, x]], Plus[a, Times[-1, c, f], Plus[b, Times[-1, d, f]]]], -1], Power[Log[u], Plus[p, 1]]], x], x]]]], And[FreeQ[List[a, b, c, d, Simplify[Times[u, Plus[1, Times[-1, v]]]], Simplify[Times[u, Plus[c, Times[d, x]], Power[Plus[a, Times[b, x]], -1]]]], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], PolyLog[Pattern[q, Blank[]], Pattern[v, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[PolyLog[Plus[q, 1], v], Power[Plus[Times[b, c], Times[-1, a, d]], -1], Power[Log[Times[e, Power[u, n]]], p]], x], Times[-1, Dist[Times[n, p], Int[Times[PolyLog[Plus[q, 1], v], Power[Times[Plus[a, Times[b, x]], Plus[c, Times[d, x]]], -1], Power[Log[Times[e, Power[u, n]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, n, q, Simplify[Times[u, Power[v, -1]]], Simplify[Times[u, Plus[c, Times[d, x]], Power[Plus[a, Times[b, x]], -1]]]], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Greater[p, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Pattern[u, Blank[]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], PolyLog[Pattern[q, Blank[]], Pattern[v, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[PolyLog[Plus[q, 1], v], Power[Plus[Times[b, c], Times[-1, a, d]], -1], Power[Log[u], p]], x], Times[-1, Dist[p, Int[Times[PolyLog[Plus[q, 1], v], Power[Times[Plus[a, Times[b, x]], Plus[c, Times[d, x]]], -1], Power[Log[u], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, q, Simplify[Times[u, Power[v, -1]]], Simplify[Times[u, Plus[c, Times[d, x]], Power[Plus[a, Times[b, x]], -1]]]], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Greater[p, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], PolyLog[Pattern[q, Blank[]], Pattern[v, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[PolyLog[q, v], Power[Times[n, Plus[p, 1], Plus[Times[b, c], Times[-1, a, d]]], -1], Power[Log[Times[e, Power[u, n]]], Plus[p, 1]]], x], Times[-1, Dist[Times[1, Power[Times[n, Plus[p, 1]], -1]], Int[Times[PolyLog[Plus[q, -1], v], Power[Times[Plus[a, Times[b, x]], Plus[c, Times[d, x]]], -1], Power[Log[Times[e, Power[u, n]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, n, q, Simplify[Times[u, Power[v, -1]]], Simplify[Times[u, Plus[c, Times[d, x]], Power[Plus[a, Times[b, x]], -1]]]], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Pattern[u, Blank[]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], PolyLog[Pattern[q, Blank[]], Pattern[v, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[PolyLog[q, v], Power[Times[Plus[p, 1], Plus[Times[b, c], Times[-1, a, d]]], -1], Power[Log[u], Plus[p, 1]]], x], Times[-1, Dist[Times[1, Power[Plus[p, 1], -1]], Int[Times[PolyLog[Plus[q, -1], v], Power[Times[Plus[a, Times[b, x]], Plus[c, Times[d, x]]], -1], Power[Log[u], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, q, Simplify[Times[u, Power[v, -1]]], Simplify[Times[u, Plus[c, Times[d, x]], Power[Plus[a, Times[b, x]], -1]]]], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], PolyLog[Pattern[q, Blank[]], Pattern[v, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[PolyLog[Plus[q, 1], v], Power[Plus[Times[b, c], Times[-1, a, d]], -1], Power[Log[Times[e, Power[u, n]]], p]], x]], Dist[Times[n, p], Int[Times[PolyLog[Plus[q, 1], v], Power[Times[Plus[a, Times[b, x]], Plus[c, Times[d, x]]], -1], Power[Log[Times[e, Power[u, n]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, d, e, n, q, Simplify[Times[u, v]], Simplify[Times[u, Plus[c, Times[d, x]], Power[Plus[a, Times[b, x]], -1]]]], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Greater[p, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Pattern[u, Blank[]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], PolyLog[Pattern[q, Blank[]], Pattern[v, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[PolyLog[Plus[q, 1], v], Power[Plus[Times[b, c], Times[-1, a, d]], -1], Power[Log[u], p]], x]], Dist[p, Int[Times[PolyLog[Plus[q, 1], v], Power[Times[Plus[a, Times[b, x]], Plus[c, Times[d, x]]], -1], Power[Log[u], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, d, q, Simplify[Times[u, v]], Simplify[Times[u, Plus[c, Times[d, x]], Power[Plus[a, Times[b, x]], -1]]]], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Greater[p, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], PolyLog[Pattern[q, Blank[]], Pattern[v, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[PolyLog[q, v], Power[Times[n, Plus[p, 1], Plus[Times[b, c], Times[-1, a, d]]], -1], Power[Log[Times[e, Power[u, n]]], Plus[p, 1]]], x], Dist[Times[1, Power[Times[n, Plus[p, 1]], -1]], Int[Times[PolyLog[Plus[q, -1], v], Power[Times[Plus[a, Times[b, x]], Plus[c, Times[d, x]]], -1], Power[Log[Times[e, Power[u, n]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e, n, q, Simplify[Times[u, v]], Simplify[Times[u, Plus[c, Times[d, x]], Power[Plus[a, Times[b, x]], -1]]]], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Pattern[u, Blank[]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], PolyLog[Pattern[q, Blank[]], Pattern[v, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[PolyLog[q, v], Power[Times[Plus[p, 1], Plus[Times[b, c], Times[-1, a, d]]], -1], Power[Log[u], Plus[p, 1]]], x], Dist[Times[1, Power[Plus[p, 1], -1]], Int[Times[PolyLog[Plus[q, -1], v], Power[Times[Plus[a, Times[b, x]], Plus[c, Times[d, x]]], -1], Power[Log[u], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, d, q, Simplify[Times[u, v]], Simplify[Times[u, Plus[c, Times[d, x]], Power[Plus[a, Times[b, x]], -1]]]], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n1, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n2, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[b, d, Power[h, -1]], Int[Times[u, Power[Times[Plus[a, Times[b, x]], Plus[c, Times[d, x]]], -1], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, h, n, p, e1, n1], x], ZeroQ[Plus[n1, n2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[b, d, f], Times[-1, a, c, h]]], ZeroQ[Plus[Times[b, d, g], Times[-1, b, c, h], Times[-1, a, d, h]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n1, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n2, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[b, d, Power[h, -1]], Int[Times[u, Power[Times[Plus[a, Times[b, x]], Plus[c, Times[d, x]]], -1], Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Power[Plus[c, Times[d, x]], n1], -1]], n]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, h, n, p, e1, n1], x], ZeroQ[Plus[n1, n2]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[b, d, f], Times[-1, a, c, h]]], ZeroQ[Plus[Times[b, c], Times[a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n1, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n2, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[1, Power[Plus[f, Times[g, x], Times[h, Power[x, 2]]], -1]], x]]], Plus[Simp[Times[u, Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Plus[c, Times[d, x]], n2]], n]]]], x], Times[-1, Dist[Times[n, Plus[Times[b, c], Times[-1, a, d]]], Int[Times[u, Power[Times[Plus[a, Times[b, x]], Plus[c, Times[d, x]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, e1, f, g, h, n, n1], x], ZeroQ[Plus[n1, n2]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n1, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n2, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[1, Power[Plus[f, Times[h, Power[x, 2]]], -1]], x]]], Plus[Simp[Times[u, Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Plus[c, Times[d, x]], n2]], n]]]], x], Times[-1, Dist[Times[n, Plus[Times[b, c], Times[-1, a, d]]], Int[Times[u, Power[Times[Plus[a, Times[b, x]], Plus[c, Times[d, x]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, e1, f, h, n, n1], x], ZeroQ[Plus[n1, n2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[e, Blank[]]], Power[Times[Optional[Pattern[e1, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n1, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n2, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[RFx, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, ExpandIntegrand[Power[Log[Times[e, Power[Times[e1, Power[Plus[a, Times[b, x]], n1], Power[Plus[c, Times[d, x]], n2]], n]]], p], RFx, x]]], Condition[Int[u, x], SumQ[u]]], And[FreeQ[List[a, b, c, d, e, n, e1, n1], x], ZeroQ[Plus[n1, n2]], RationalFunctionQ[RFx, x], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Pattern[v, Blank[]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[lst, QuotientOfLinearsParts[v, x]]], Condition[Int[Times[u, Power[Log[Times[Plus[Part[lst, 1], Times[Part[lst, 2], x]], Power[Plus[Part[lst, 3], Times[Part[lst, 4], x]], -1]]], p]], x], Not[And[OneQ[p], ZeroQ[Part[lst, 3]]]]]], And[FreeQ[p, x], QuotientOfLinearsQ[v, x], Not[QuotientOfLinearsMatchQ[v, x]]]]], RuleDelayed[HoldPattern[Int[Log[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Log[Times[c, Power[Plus[a, Times[b, Power[x, n]]], p]]]], x], Times[-1, Dist[Times[b, n, p], Int[Times[Power[x, n], Power[Plus[a, Times[b, Power[x, n]]], -1]], x], x]]], FreeQ[List[a, b, c, n, p], x]]], RuleDelayed[HoldPattern[Int[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[v, Blank[]], Optional[Pattern[p, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Log[Times[c, Power[ExpandToSum[v, x], p]]], x], And[FreeQ[List[c, p], x], BinomialQ[v, x], Not[BinomialMatchQ[v, x]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Log[Plus[f, Times[g, x]]], Plus[a, Times[b, Log[Times[c, Power[Plus[d, Times[e, Power[x, n]]], p]]]]], Power[g, -1]], x], Times[-1, Dist[Times[b, e, n, p, Power[g, -1]], Int[Times[Power[x, Plus[n, -1]], Log[Plus[f, Times[g, x]]], Power[Plus[d, Times[e, Power[x, n]]], -1]], x], x]]], FreeQ[List[a, b, c, d, e, f, g, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[f, Times[g, x]], Plus[m, 1]], Plus[a, Times[b, Log[Times[c, Power[Plus[d, Times[e, Power[x, n]]], p]]]]], Power[Times[g, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, e, n, p, Power[Times[g, Plus[m, 1]], -1]], Int[Times[Power[x, Plus[n, -1]], Power[Plus[f, Times[g, x]], Plus[m, 1]], Power[Plus[d, Times[e, Power[x, n]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p], x], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[v, Blank[]], Optional[Pattern[p, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Plus[a, Times[b, Log[Times[c, Power[ExpandToSum[v, x], p]]]]]], x], And[FreeQ[List[a, b, c, m, p], x], LinearQ[u, x], BinomialQ[v, x], Not[And[LinearMatchQ[u, x], BinomialMatchQ[v, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcSin[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[w, IntHide[Power[ArcSin[Plus[f, Times[g, x]]], m], x]]], Plus[Dist[Plus[a, Times[b, Log[Times[c, Power[Plus[d, Times[e, Power[x, n]]], p]]]]], w, x], Times[-1, Dist[Times[b, e, n, p], Int[SimplifyIntegrand[Times[Power[x, Plus[n, -1]], w, Power[Plus[d, Times[e, Power[x, n]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, g, n, p], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[1, Power[Plus[f, Times[g, Power[x, 2]]], -1]], x]]], Plus[Simp[Times[u, Plus[a, Times[b, Log[Times[c, Power[Plus[d, Times[e, Power[x, 2]]], p]]]]]], x], Times[-1, Dist[Times[2, b, e, p], Int[Times[Times[x, u], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]]], FreeQ[List[a, b, c, d, e, f, g, p], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[a, Times[b, Log[Times[c, Power[Plus[d, Times[e, Power[x, 2]]], p]]]]], n]], x], Times[-1, Dist[Times[2, b, e, n, p], Int[Times[Power[x, 2], Power[Plus[a, Times[b, Log[Times[c, Power[Plus[d, Times[e, Power[x, 2]]], p]]]]], Plus[n, -1]], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, p], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[2, -1]], Subst[Int[Times[Power[x, Times[Plus[m, -1], Power[2, -1]]], Power[Plus[a, Times[b, Log[Times[c, Power[Plus[d, Times[e, x]], p]]]]], n]], x], x, Power[x, 2]], x], And[FreeQ[List[a, b, c, d, e, p], x], PositiveIntegerQ[n], IntegerQ[Times[Plus[m, -1], Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Power[Plus[a, Times[b, Log[Times[c, Power[Plus[d, Times[e, Power[x, 2]]], p]]]]], n], Power[Plus[m, 1], -1]], x], Times[-1, Dist[Times[2, b, e, n, p, Power[Plus[m, 1], -1]], Int[Times[Power[x, Plus[m, 2]], Power[Plus[a, Times[b, Log[Times[c, Power[Plus[d, Times[e, Power[x, 2]]], p]]]]], Plus[n, -1]], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, m, p], x], PositiveIntegerQ[n], Not[IntegerQ[Times[Plus[m, -1], Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Pattern[v, Blank[]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], With[List[Set[w, DerivativeDivides[v, Times[u, Plus[1, Times[-1, v]]], x]]], Condition[Simp[Times[w, PolyLog[2, Together[Plus[1, Times[-1, v]]]]], x], Not[FalseQ[w]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Pattern[v, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Log[Pattern[u, Blank[]]], Optional[Pattern[b, Blank[]]]]], Pattern[w, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[z, DerivativeDivides[v, Times[w, Plus[1, Times[-1, v]]], x]]], Condition[Plus[Simp[Times[z, Plus[a, Times[b, Log[u]]], PolyLog[2, Together[Plus[1, Times[-1, v]]]]], x], Times[-1, Dist[b, Int[SimplifyIntegrand[Times[z, PolyLog[2, Together[Plus[1, Times[-1, v]]]], D[u, x], Power[u, -1]], x], x], x]]], Not[FalseQ[z]]]], And[FreeQ[List[a, b], x], InverseFunctionFreeQ[u, x]]]], RuleDelayed[HoldPattern[Int[Log[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[d, Times[e, x]], Log[Times[c, Power[Plus[a, Times[b, Power[Plus[d, Times[e, x]], n]]], p]]], Power[e, -1]], x], Times[-1, Dist[Times[b, n, p], Int[Times[1, Power[Plus[b, Times[a, Power[Plus[d, Times[e, x]], Times[-1, n]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, p], x], RationalQ[n], Less[n, 0]]]], RuleDelayed[HoldPattern[Int[Log[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[d, Times[e, x]], Log[Times[c, Power[Plus[a, Times[b, Power[Plus[d, Times[e, x]], n]]], p]]], Power[e, -1]], x], Plus[Dist[Times[a, n, p], Int[Times[1, Power[Plus[a, Times[b, Power[Plus[d, Times[e, x]], n]]], -1]], x], x], Times[-1, Simp[Times[n, p, x], x]]]], And[FreeQ[List[a, b, c, d, e, n, p], x], Not[And[RationalQ[n], Less[n, 0]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], -1]]], Optional[Pattern[p, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[e, Times[d, Plus[f, Times[g, x]]]], Power[Plus[a, Times[b, Log[Times[c, Power[Plus[d, Times[e, Power[Plus[f, Times[g, x]], -1]]], p]]]]], n], Power[Times[d, g], -1]], x], Times[-1, Dist[Times[b, e, n, p, Power[Times[d, g], -1]], Subst[Int[Times[Power[Plus[a, Times[b, Log[Times[c, Power[Plus[d, Times[e, x]], p]]]]], Plus[n, -1]], Power[x, -1]], x], x, Times[1, Power[Plus[f, Times[g, x]], -1]]], x]]], And[FreeQ[List[a, b, c, d, e, f, g, p], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[RFx, Blank[]], Optional[Pattern[p, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[a, Times[b, Log[Times[c, Power[RFx, p]]]]], n]], x], Times[-1, Dist[Times[b, n, p], Int[SimplifyIntegrand[Times[x, Power[Plus[a, Times[b, Log[Times[c, Power[RFx, p]]]]], Plus[n, -1]], D[RFx, x], Power[RFx, -1]], x], x], x]]], And[FreeQ[List[a, b, c, p], x], RationalFunctionQ[RFx, x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[RFx, Blank[]], Optional[Pattern[p, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Log[Plus[d, Times[e, x]]], Power[Plus[a, Times[b, Log[Times[c, Power[RFx, p]]]]], n], Power[e, -1]], x], Times[-1, Dist[Times[b, n, p, Power[e, -1]], Int[Times[Log[Plus[d, Times[e, x]]], Power[Plus[a, Times[b, Log[Times[c, Power[RFx, p]]]]], Plus[n, -1]], D[RFx, x], Power[RFx, -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, p], x], RationalFunctionQ[RFx, x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[RFx, Blank[]], Optional[Pattern[p, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, Log[Times[c, Power[RFx, p]]]]], n], Power[Times[e, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, n, p, Power[Times[e, Plus[m, 1]], -1]], Int[SimplifyIntegrand[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, Log[Times[c, Power[RFx, p]]]]], Plus[n, -1]], D[RFx, x], Power[RFx, -1]], x], x], x]]], And[FreeQ[List[a, b, c, d, e, m, p], x], RationalFunctionQ[RFx, x], PositiveIntegerQ[n], Or[Equal[n, 1], IntegerQ[m]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[RFx, Blank[]], Optional[Pattern[n, Blank[]]]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[1, Power[Plus[d, Times[e, Power[x, 2]]], -1]], x]]], Plus[Simp[Times[u, Log[Times[c, Power[RFx, n]]]], x], Times[-1, Dist[n, Int[SimplifyIntegrand[Times[u, D[RFx, x], Power[RFx, -1]], x], x], x]]]], And[FreeQ[List[c, d, e, n], x], RationalFunctionQ[RFx, x], Not[PolynomialQ[RFx, x]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[Px, Blank[]], Optional[Pattern[n, Blank[]]]]]], Power[Pattern[Qx, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[1, Power[Qx, -1]], x]]], Plus[Simp[Times[u, Log[Times[c, Power[Px, n]]]], x], Times[-1, Dist[n, Int[SimplifyIntegrand[Times[u, D[Px, x], Power[Px, -1]], x], x], x]]]], And[FreeQ[List[c, n], x], QuadraticQ[List[Qx, Px], x], ZeroQ[D[Times[Px, Power[Qx, -1]], x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[RFx, Blank[]], Optional[Pattern[p, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[RGx, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, ExpandIntegrand[Power[Plus[a, Times[b, Log[Times[c, Power[RFx, p]]]]], n], RGx, x]]], Condition[Int[u, x], SumQ[u]]], And[FreeQ[List[a, b, c, p], x], RationalFunctionQ[RFx, x], RationalFunctionQ[RGx, x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[RFx, Blank[]], Optional[Pattern[p, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[RGx, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, ExpandIntegrand[Times[RGx, Power[Plus[a, Times[b, Log[Times[c, Power[RFx, p]]]]], n]], x]]], Condition[Int[u, x], SumQ[u]]], And[FreeQ[List[a, b, c, p], x], RationalFunctionQ[RFx, x], RationalFunctionQ[RGx, x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Pattern[u, Blank[]]], Optional[Pattern[b, Blank[]]]]], Pattern[RFx, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[lst, SubstForFractionalPowerOfLinear[Times[RFx, Plus[a, Times[b, Log[u]]]], x]]], Condition[Dist[Times[Part[lst, 2], Part[lst, 4]], Subst[Int[Part[lst, 1], x], x, Power[Part[lst, 3], Times[1, Power[Part[lst, 2], -1]]]], x], Not[FalseQ[lst]]]], And[FreeQ[List[a, b], x], RationalFunctionQ[RFx, x]]]], RuleDelayed[HoldPattern[Int[Times[Log[Plus[1, Times[Optional[Pattern[e, Blank[]]], Power[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[f, Times[g, x]], m], PolyLog[2, Times[-1, e, Power[Power[F, Times[c, Plus[a, Times[b, x]]]], n]]], Power[Times[b, c, n, Log[F]], -1]], x]], Dist[Times[g, m, Power[Times[b, c, n, Log[F]], -1]], Int[Times[Power[Plus[f, Times[g, x]], Plus[m, -1]], PolyLog[2, Times[-1, e, Power[Power[F, Times[c, Plus[a, Times[b, x]]]], n]]]], x], x]], And[FreeQ[List[F, a, b, c, e, f, g, n], x], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Log[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[f, Times[g, x]], Plus[m, 1]], Log[Plus[d, Times[e, Power[Power[F, Times[c, Plus[a, Times[b, x]]]], n]]]], Power[Times[g, Plus[m, 1]], -1]], x], Plus[Int[Times[Power[Plus[f, Times[g, x]], m], Log[Plus[1, Times[e, Power[d, -1], Power[Power[F, Times[c, Plus[a, Times[b, x]]]], n]]]]], x], Times[-1, Simp[Times[Power[Plus[f, Times[g, x]], Plus[m, 1]], Log[Plus[1, Times[e, Power[d, -1], Power[Power[F, Times[c, Plus[a, Times[b, x]]]], n]]]], Power[Times[g, Plus[m, 1]], -1]], x]]]], And[FreeQ[List[F, a, b, c, d, e, f, g, n], x], RationalQ[m], Greater[m, 0], NonzeroQ[Plus[d, -1]]]]], RuleDelayed[HoldPattern[Int[Log[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Log[Plus[d, Times[e, x], Times[f, Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]]]]], x], Dist[Times[Power[f, 2], Plus[Power[b, 2], Times[-1, 4, a, c]], Power[2, -1]], Int[Times[x, Power[Plus[Times[Plus[Times[2, d, e], Times[-1, b, Power[f, 2]]], Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Times[-1, f, Plus[Times[b, d], Times[-1, 2, a, e], Times[Plus[Times[2, c, d], Times[-1, b, e]], x]], Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Power[e, 2], Times[-1, c, Power[f, 2]]]]]]], RuleDelayed[HoldPattern[Int[Log[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Log[Plus[d, Times[e, x], Times[f, Sqrt[Plus[a, Times[c, Power[x, 2]]]]]]]], x], Times[-1, Dist[Times[a, c, Power[f, 2]], Int[Times[x, Power[Plus[Times[d, e, Plus[a, Times[c, Power[x, 2]]]], Times[f, Plus[Times[a, e], Times[-1, c, d, x]], Sqrt[Plus[a, Times[c, Power[x, 2]]]]]], -1]], x], x]]], And[FreeQ[List[a, c, d, e, f], x], ZeroQ[Plus[Power[e, 2], Times[-1, c, Power[f, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]]]], Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[g, x], Plus[m, 1]], Log[Plus[d, Times[e, x], Times[f, Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]]]], Power[Times[g, Plus[m, 1]], -1]], x], Dist[Times[Power[f, 2], Plus[Power[b, 2], Times[-1, 4, a, c]], Power[Times[2, g, Plus[m, 1]], -1]], Int[Times[Power[Times[g, x], Plus[m, 1]], Power[Plus[Times[Plus[Times[2, d, e], Times[-1, b, Power[f, 2]]], Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Times[-1, f, Plus[Times[b, d], Times[-1, 2, a, e], Times[Plus[Times[2, c, d], Times[-1, b, e]], x]], Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, m], x], ZeroQ[Plus[Power[e, 2], Times[-1, c, Power[f, 2]]]], NonzeroQ[Plus[m, 1]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]]]], Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[g, x], Plus[m, 1]], Log[Plus[d, Times[e, x], Times[f, Sqrt[Plus[a, Times[c, Power[x, 2]]]]]]], Power[Times[g, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[a, c, Power[f, 2], Power[Times[g, Plus[m, 1]], -1]], Int[Times[Power[Times[g, x], Plus[m, 1]], Power[Plus[Times[d, e, Plus[a, Times[c, Power[x, 2]]]], Times[f, Plus[Times[a, e], Times[-1, c, d, x]], Sqrt[Plus[a, Times[c, Power[x, 2]]]]]], -1]], x], x]]], And[FreeQ[List[a, c, d, e, f, g, m], x], ZeroQ[Plus[Power[e, 2], Times[-1, c, Power[f, 2]]]], NonzeroQ[Plus[m, 1]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[u, Blank[]], Rational[1, 2]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[v, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[v, Log[Plus[d, Times[e, x], Times[f, Sqrt[ExpandToSum[u, x]]]]]], x], And[FreeQ[List[d, e, f], x], QuadraticQ[u, x], Not[QuadraticMatchQ[u, x]], Or[ZeroQ[Plus[v, -1]], MatchQ[v, Condition[Power[Times[Optional[Pattern[g, Blank[]]], x], Optional[Pattern[m, Blank[]]]], FreeQ[List[g, m], x]]]]]]], RuleDelayed[HoldPattern[Int[Log[Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Log[u]], x], Times[-1, Int[SimplifyIntegrand[Times[x, D[u, x], Power[u, -1]], x], x]]], InverseFunctionFreeQ[u, x]]], RuleDelayed[HoldPattern[Int[Times[Log[Pattern[u, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Log[Plus[a, Times[b, x]]], Log[u], Power[b, -1]], x], Times[-1, Dist[Times[1, Power[b, -1]], Int[SimplifyIntegrand[Times[Log[Plus[a, Times[b, x]]], D[u, x], Power[u, -1]], x], x], x]]], And[FreeQ[List[a, b], x], RationalFunctionQ[Times[D[u, x], Power[u, -1]], x], Or[NonzeroQ[a], Not[And[BinomialQ[u, x], ZeroQ[Plus[Power[BinomialDegree[u, x], 2], -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Pattern[u, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, x]], Plus[m, 1]], Log[u], Power[Times[b, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[b, Plus[m, 1]], -1]], Int[SimplifyIntegrand[Times[Power[Plus[a, Times[b, x]], Plus[m, 1]], D[u, x], Power[u, -1]], x], x], x]]], And[FreeQ[List[a, b, m], x], InverseFunctionFreeQ[u, x], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Pattern[u, Blank[]]], Power[Pattern[Qx, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[v, IntHide[Times[1, Power[Qx, -1]], x]]], Plus[Simp[Times[v, Log[u]], x], Times[-1, Int[SimplifyIntegrand[Times[v, D[u, x], Power[u, -1]], x], x]]]], And[QuadraticQ[Qx, x], InverseFunctionFreeQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Log[Pattern[u, Blank[]]], Power[Pattern[u, Blank[]], Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[u, Times[a, x]], Power[a, -1]], x], Times[-1, Int[SimplifyIntegrand[Times[x, Power[u, Plus[Times[a, x], -1]], D[u, x]], x], x]]], And[FreeQ[a, x], InverseFunctionFreeQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Log[Pattern[u, Blank[]]], Pattern[v, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[w, IntHide[v, x]]], Condition[Plus[Dist[Log[u], w, x], Times[-1, Int[SimplifyIntegrand[Times[w, D[u, x], Power[u, -1]], x], x]]], InverseFunctionFreeQ[w, x]]], InverseFunctionFreeQ[u, x]]], RuleDelayed[HoldPattern[Int[Times[Log[Pattern[v, Blank[]]], Log[Pattern[w, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Log[v], Log[w]], x], Plus[Times[-1, Int[SimplifyIntegrand[Times[x, Log[w], D[v, x], Power[v, -1]], x], x]], Times[-1, Int[SimplifyIntegrand[Times[x, Log[v], D[w, x], Power[w, -1]], x], x]]]], And[InverseFunctionFreeQ[v, x], InverseFunctionFreeQ[w, x]]]], RuleDelayed[HoldPattern[Int[Times[Log[Pattern[v, Blank[]]], Log[Pattern[w, Blank[]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[z, IntHide[u, x]]], Condition[Plus[Dist[Times[Log[v], Log[w]], z, x], Plus[Times[-1, Int[SimplifyIntegrand[Times[z, Log[w], D[v, x], Power[v, -1]], x], x]], Times[-1, Int[SimplifyIntegrand[Times[z, Log[v], D[w, x], Power[w, -1]], x], x]]]], InverseFunctionFreeQ[z, x]]], And[InverseFunctionFreeQ[v, x], InverseFunctionFreeQ[w, x]]]], RuleDelayed[HoldPattern[Int[Log[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[a, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Log[Times[a, Power[Log[Times[b, Power[x, n]]], p]]]], x], Times[-1, Dist[Times[n, p], Int[Times[1, Power[Log[Times[b, Power[x, n]]], -1]], x], x]]], FreeQ[List[a, b, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Log[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[a, Blank[]]]]], Power[Pattern[x, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Log[Times[b, Power[x, n]]], Plus[Times[-1, p], Log[Times[a, Power[Log[Times[b, Power[x, n]]], p]]]], Power[n, -1]], x], FreeQ[List[a, b, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Log[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[a, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Log[Times[a, Power[Log[Times[b, Power[x, n]]], p]]], Power[Plus[m, 1], -1]], x], Times[-1, Dist[Times[n, p, Power[Plus[m, 1], -1]], Int[Times[Power[x, m], Power[Log[Times[b, Power[x, n]]], -1]], x], x]]], And[FreeQ[List[a, b, m, n, p], x], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Log[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]]], Power[Plus[Times[Log[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[b, A], Times[-1, a, B]], Power[b, -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Log[Plus[c, Times[d, x]]]]]], -1]], x], x], Dist[Times[B, Power[b, -1]], Int[Sqrt[Plus[a, Times[b, Log[Plus[c, Times[d, x]]]]]], x], x]], And[FreeQ[List[a, b, c, d, A, B], x], NonzeroQ[Plus[Times[b, A], Times[-1, a, B]]]]]], RuleDelayed[HoldPattern[Int[Power[Pattern[f, Blank[]], Times[Log[Pattern[u, Blank[]]], Optional[Pattern[a, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[u, Times[a, Log[f]]], x], FreeQ[List[a, f], x]]], RuleDelayed[HoldPattern[Int[Pattern[u, Blank[]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[lst, FunctionOfLog[Cancel[Times[x, u]], x]]], Condition[Dist[Times[1, Power[Part[lst, 3], -1]], Subst[Int[Part[lst, 1], x], x, Log[Part[lst, 2]]], x], Not[FalseQ[lst]]]], NonsumQ[u]]], RuleDelayed[HoldPattern[Int[Times[Log[Gamma[Pattern[v, Blank[]]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Plus[Dist[Plus[Log[Gamma[v]], Times[-1, LogGamma[v]]], Int[u, x], x], Int[Times[u, LogGamma[v]], x]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Pattern[w, Blank[]]], Times[Power[Log[Pattern[v, Blank[]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[b, Blank[]]], Pattern[w, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[w, p], Power[Plus[a, Times[b, Power[Log[v], n]]], p]], x], And[FreeQ[List[a, b, n], x], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[Plus[a, Times[b, Log[Times[c, Power[Times[d, Power[Plus[e, Times[f, x]], p]], q]]]]], n]], x], And[FreeQ[List[a, b, c, d, e, f, n, p, q], x], AlgebraicFunctionQ[u, x]]]]]