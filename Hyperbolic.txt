List[RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Sinh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], m], Cosh[Plus[e, Times[f, x]]], Power[f, -1]], x], Times[-1, Dist[Times[d, m, Power[f, -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Cosh[Plus[e, Times[f, x]]]], x], x]]], And[FreeQ[List[c, d, e, f], x], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], m], Sinh[Plus[e, Times[f, x]]], Power[f, -1]], x], Times[-1, Dist[Times[d, m, Power[f, -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Sinh[Plus[e, Times[f, x]]]], x], x]]], And[FreeQ[List[c, d, e, f], x], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Sinh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Sinh[Plus[e, Times[f, x]]], Power[Times[d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[f, Power[Times[d, Plus[m, 1]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Cosh[Plus[e, Times[f, x]]]], x], x]]], And[FreeQ[List[c, d, e, f], x], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Cosh[Plus[e, Times[f, x]]], Power[Times[d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[f, Power[Times[d, Plus[m, 1]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Sinh[Plus[e, Times[f, x]]]], x], x]]], And[FreeQ[List[c, d, e, f], x], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], Sinh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[SinhIntegral[Plus[e, Times[f, x]]], Power[d, -1]], x], And[FreeQ[List[c, d, e, f], x], ZeroQ[Plus[Times[d, e], Times[-1, c, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[CoshIntegral[Plus[e, Times[f, x]]], Power[d, -1]], x], And[FreeQ[List[c, d, e, f], x], ZeroQ[Plus[Times[d, e], Times[-1, c, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], Sinh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Cosh[Times[Plus[Times[d, e], Times[-1, c, f]], Power[d, -1]]], Int[Times[Sinh[Plus[Times[c, f, Power[d, -1]], Times[f, x]]], Power[Plus[c, Times[d, x]], -1]], x], x], Dist[Sinh[Times[Plus[Times[d, e], Times[-1, c, f]], Power[d, -1]]], Int[Times[Cosh[Plus[Times[c, f, Power[d, -1]], Times[f, x]]], Power[Plus[c, Times[d, x]], -1]], x], x]], And[FreeQ[List[c, d, e, f], x], NonzeroQ[Plus[Times[d, e], Times[-1, c, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Cosh[Times[Plus[Times[d, e], Times[-1, c, f]], Power[d, -1]]], Int[Times[Cosh[Plus[Times[c, f, Power[d, -1]], Times[f, x]]], Power[Plus[c, Times[d, x]], -1]], x], x], Dist[Sinh[Times[Plus[Times[d, e], Times[-1, c, f]], Power[d, -1]]], Int[Times[Sinh[Plus[Times[c, f, Power[d, -1]], Times[f, x]]], Power[Plus[c, Times[d, x]], -1]], x], x]], And[FreeQ[List[c, d, e, f], x], NonzeroQ[Plus[Times[d, e], Times[-1, c, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Sinh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[E, Plus[e, Times[f, x]]]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[E, Times[-1, Plus[e, Times[f, x]]]]], x], x]]], FreeQ[List[c, d, e, f, m], x]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[E, Plus[e, Times[f, x]]]], x], x], Dist[Times[1, Power[2, -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[E, Times[-1, Plus[e, Times[f, x]]]]], x], x]], FreeQ[List[c, d, e, f, m], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Power[Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[d, Power[Times[b, Sinh[Plus[e, Times[f, x]]]], n], Power[Times[Power[f, 2], Power[n, 2]], -1]], x]], Plus[Times[-1, Dist[Times[Power[b, 2], Plus[n, -1], Power[n, -1]], Int[Times[Plus[c, Times[d, x]], Power[Times[b, Sinh[Plus[e, Times[f, x]]]], Plus[n, -2]]], x], x]], Simp[Times[b, Plus[c, Times[d, x]], Cosh[Plus[e, Times[f, x]]], Power[Times[b, Sinh[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, n], -1]], x]]], And[FreeQ[List[b, c, d, e, f], x], RationalQ[n], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Cosh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[n, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[d, Power[Times[b, Cosh[Plus[e, Times[f, x]]]], n], Power[Times[Power[f, 2], Power[n, 2]], -1]], x]], Plus[Dist[Times[Power[b, 2], Plus[n, -1], Power[n, -1]], Int[Times[Plus[c, Times[d, x]], Power[Times[b, Cosh[Plus[e, Times[f, x]]]], Plus[n, -2]]], x], x], Simp[Times[b, Plus[c, Times[d, x]], Sinh[Plus[e, Times[f, x]]], Power[Times[b, Cosh[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, n], -1]], x]]], And[FreeQ[List[b, c, d, e, f], x], RationalQ[n], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[d, m, Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Times[b, Sinh[Plus[e, Times[f, x]]]], n], Power[Times[Power[f, 2], Power[n, 2]], -1]], x]], Plus[Times[-1, Dist[Times[Power[b, 2], Plus[n, -1], Power[n, -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Times[b, Sinh[Plus[e, Times[f, x]]]], Plus[n, -2]]], x], x]], Dist[Times[Power[d, 2], m, Plus[m, -1], Power[Times[Power[f, 2], Power[n, 2]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -2]], Power[Times[b, Sinh[Plus[e, Times[f, x]]]], n]], x], x], Simp[Times[b, Power[Plus[c, Times[d, x]], m], Cosh[Plus[e, Times[f, x]]], Power[Times[b, Sinh[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, n], -1]], x]]], And[FreeQ[List[b, c, d, e, f], x], RationalQ[m, n], Greater[n, 1], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Cosh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[d, m, Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Times[b, Cosh[Plus[e, Times[f, x]]]], n], Power[Times[Power[f, 2], Power[n, 2]], -1]], x]], Plus[Dist[Times[Power[b, 2], Plus[n, -1], Power[n, -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Times[b, Cosh[Plus[e, Times[f, x]]]], Plus[n, -2]]], x], x], Dist[Times[Power[d, 2], m, Plus[m, -1], Power[Times[Power[f, 2], Power[n, 2]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -2]], Power[Times[b, Cosh[Plus[e, Times[f, x]]]], n]], x], x], Simp[Times[b, Power[Plus[c, Times[d, x]], m], Sinh[Plus[e, Times[f, x]]], Power[Times[b, Cosh[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, n], -1]], x]]], And[FreeQ[List[b, c, d, e, f], x], RationalQ[m, n], Greater[n, 1], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Sinh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[Plus[c, Times[d, x]], m], Power[Sinh[Plus[e, Times[f, x]]], n], x], x], And[FreeQ[List[c, d, e, f, m], x], IntegerQ[n], Greater[n, 1], Or[Not[RationalQ[m]], Inequality[-1, LessEqual, m, Less, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[Plus[c, Times[d, x]], m], Power[Cosh[Plus[e, Times[f, x]]], n], x], x], And[FreeQ[List[c, d, e, f, m], x], IntegerQ[n], Greater[n, 1], Or[Not[RationalQ[m]], Inequality[-1, LessEqual, m, Less, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Sinh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Power[Sinh[Plus[e, Times[f, x]]], n], Power[Times[d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[f, n, Power[Times[d, Plus[m, 1]], -1]], Int[ExpandTrigReduce[Power[Plus[c, Times[d, x]], Plus[m, 1]], Times[Cosh[Plus[e, Times[f, x]]], Power[Sinh[Plus[e, Times[f, x]]], Plus[n, -1]]], x], x], x]]], And[FreeQ[List[c, d, e, f, m], x], IntegerQ[n], Greater[n, 1], RationalQ[m], Inequality[-2, LessEqual, m, Less, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Power[Cosh[Plus[e, Times[f, x]]], n], Power[Times[d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[f, n, Power[Times[d, Plus[m, 1]], -1]], Int[ExpandTrigReduce[Power[Plus[c, Times[d, x]], Plus[m, 1]], Times[Sinh[Plus[e, Times[f, x]]], Power[Cosh[Plus[e, Times[f, x]]], Plus[n, -1]]], x], x], x]]], And[FreeQ[List[c, d, e, f, m], x], IntegerQ[n], Greater[n, 1], RationalQ[m], Inequality[-2, LessEqual, m, Less, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Power[Times[b, Sinh[Plus[e, Times[f, x]]]], n], Power[Times[d, Plus[m, 1]], -1]], x], Plus[Dist[Times[Power[b, 2], Power[f, 2], n, Plus[n, -1], Power[Times[Power[d, 2], Plus[m, 1], Plus[m, 2]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, 2]], Power[Times[b, Sinh[Plus[e, Times[f, x]]]], Plus[n, -2]]], x], x], Dist[Times[Power[f, 2], Power[n, 2], Power[Times[Power[d, 2], Plus[m, 1], Plus[m, 2]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, 2]], Power[Times[b, Sinh[Plus[e, Times[f, x]]]], n]], x], x], Times[-1, Simp[Times[b, f, n, Power[Plus[c, Times[d, x]], Plus[m, 2]], Cosh[Plus[e, Times[f, x]]], Power[Times[b, Sinh[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[Power[d, 2], Plus[m, 1], Plus[m, 2]], -1]], x]]]], And[FreeQ[List[b, c, d, e, f], x], RationalQ[m, n], Greater[n, 1], Less[m, -2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Cosh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Power[Times[b, Cosh[Plus[e, Times[f, x]]]], n], Power[Times[d, Plus[m, 1]], -1]], x], Plus[Times[-1, Dist[Times[Power[b, 2], Power[f, 2], n, Plus[n, -1], Power[Times[Power[d, 2], Plus[m, 1], Plus[m, 2]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, 2]], Power[Times[b, Cosh[Plus[e, Times[f, x]]]], Plus[n, -2]]], x], x]], Dist[Times[Power[f, 2], Power[n, 2], Power[Times[Power[d, 2], Plus[m, 1], Plus[m, 2]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, 2]], Power[Times[b, Cosh[Plus[e, Times[f, x]]]], n]], x], x], Times[-1, Simp[Times[b, f, n, Power[Plus[c, Times[d, x]], Plus[m, 2]], Sinh[Plus[e, Times[f, x]]], Power[Times[b, Cosh[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[Power[d, 2], Plus[m, 1], Plus[m, 2]], -1]], x]]]], And[FreeQ[List[b, c, d, e, f], x], RationalQ[m, n], Greater[n, 1], Less[m, -2]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Power[Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[c, Times[d, x]], Cosh[Plus[e, Times[f, x]]], Power[Times[b, Sinh[Plus[e, Times[f, x]]]], Plus[n, 1]], Power[Times[b, f, Plus[n, 1]], -1]], x], Plus[Times[-1, Dist[Times[Plus[n, 2], Power[Times[Power[b, 2], Plus[n, 1]], -1]], Int[Times[Plus[c, Times[d, x]], Power[Times[b, Sinh[Plus[e, Times[f, x]]]], Plus[n, 2]]], x], x]], Times[-1, Simp[Times[d, Power[Times[b, Sinh[Plus[e, Times[f, x]]]], Plus[n, 2]], Power[Times[Power[b, 2], Power[f, 2], Plus[n, 1], Plus[n, 2]], -1]], x]]]], And[FreeQ[List[b, c, d, e, f], x], RationalQ[n], Less[n, -1], Unequal[n, -2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Cosh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[n, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[c, Times[d, x]], Sinh[Plus[e, Times[f, x]]], Power[Times[b, Cosh[Plus[e, Times[f, x]]]], Plus[n, 1]], Power[Times[b, f, Plus[n, 1]], -1]], x]], Plus[Dist[Times[Plus[n, 2], Power[Times[Power[b, 2], Plus[n, 1]], -1]], Int[Times[Plus[c, Times[d, x]], Power[Times[b, Cosh[Plus[e, Times[f, x]]]], Plus[n, 2]]], x], x], Simp[Times[d, Power[Times[b, Cosh[Plus[e, Times[f, x]]]], Plus[n, 2]], Power[Times[Power[b, 2], Power[f, 2], Plus[n, 1], Plus[n, 2]], -1]], x]]], And[FreeQ[List[b, c, d, e, f], x], RationalQ[n], Less[n, -1], Unequal[n, -2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], m], Cosh[Plus[e, Times[f, x]]], Power[Times[b, Sinh[Plus[e, Times[f, x]]]], Plus[n, 1]], Power[Times[b, f, Plus[n, 1]], -1]], x], Plus[Times[-1, Dist[Times[Plus[n, 2], Power[Times[Power[b, 2], Plus[n, 1]], -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Times[b, Sinh[Plus[e, Times[f, x]]]], Plus[n, 2]]], x], x]], Dist[Times[Power[d, 2], m, Plus[m, -1], Power[Times[Power[b, 2], Power[f, 2], Plus[n, 1], Plus[n, 2]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -2]], Power[Times[b, Sinh[Plus[e, Times[f, x]]]], Plus[n, 2]]], x], x], Times[-1, Simp[Times[d, m, Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Times[b, Sinh[Plus[e, Times[f, x]]]], Plus[n, 2]], Power[Times[Power[b, 2], Power[f, 2], Plus[n, 1], Plus[n, 2]], -1]], x]]]], And[FreeQ[List[b, c, d, e, f], x], RationalQ[m, n], Less[n, -1], Unequal[n, -2], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Cosh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[c, Times[d, x]], m], Sinh[Plus[e, Times[f, x]]], Power[Times[b, Cosh[Plus[e, Times[f, x]]]], Plus[n, 1]], Power[Times[b, f, Plus[n, 1]], -1]], x]], Plus[Dist[Times[Plus[n, 2], Power[Times[Power[b, 2], Plus[n, 1]], -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Times[b, Cosh[Plus[e, Times[f, x]]]], Plus[n, 2]]], x], x], Times[-1, Dist[Times[Power[d, 2], m, Plus[m, -1], Power[Times[Power[b, 2], Power[f, 2], Plus[n, 1], Plus[n, 2]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -2]], Power[Times[b, Cosh[Plus[e, Times[f, x]]]], Plus[n, 2]]], x], x]], Simp[Times[d, m, Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Times[b, Cosh[Plus[e, Times[f, x]]]], Plus[n, 2]], Power[Times[Power[b, 2], Power[f, 2], Plus[n, 1], Plus[n, 2]], -1]], x]]], And[FreeQ[List[b, c, d, e, f], x], RationalQ[m, n], Less[n, -1], Unequal[n, -2], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[c, Times[d, x]], m], Power[Plus[a, Times[b, Sinh[Plus[e, Times[f, x]]]]], n], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], PositiveIntegerQ[n], Or[Equal[n, 1], PositiveIntegerQ[m], NonzeroQ[Plus[Power[a, 2], Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cosh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[c, Times[d, x]], m], Power[Plus[a, Times[b, Cosh[Plus[e, Times[f, x]]]]], n], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], PositiveIntegerQ[n], Or[Equal[n, 1], PositiveIntegerQ[m], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Times[2, a], n], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Cosh[Plus[Times[-1, Pi, a, Power[Times[4, b], -1]], Times[e, Power[2, -1]], Times[f, x, Power[2, -1]]]], Times[2, n]]], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[Power[a, 2], Power[b, 2]]], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[2, a], IntPart[n]], Power[Plus[a, Times[b, Sinh[Plus[e, Times[f, x]]]]], FracPart[n]], Power[Power[Cosh[Plus[Times[-1, Pi, a, Power[Times[4, b], -1]], Times[e, Power[2, -1]], Times[f, x, Power[2, -1]]]], Times[2, FracPart[n]]], -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Cosh[Plus[Times[-1, Pi, a, Power[Times[4, b], -1]], Times[e, Power[2, -1]], Times[f, x, Power[2, -1]]]], Times[2, n]]], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[Power[a, 2], Power[b, 2]]], IntegerQ[Times[2, n]], Or[Greater[n, 0], PositiveIntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cosh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Times[2, a], n], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Cosh[Plus[Times[e, Power[2, -1]], Times[f, x, Power[2, -1]]]], Times[2, n]]], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[a, Times[-1, b]]], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cosh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Times[-2, a], n], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Sinh[Plus[Times[e, Power[2, -1]], Times[f, x, Power[2, -1]]]], Times[2, n]]], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[a, b]], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cosh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[2, a], IntPart[n]], Power[Plus[a, Times[b, Cosh[Plus[e, Times[f, x]]]]], FracPart[n]], Power[Power[Cosh[Plus[Times[e, Power[2, -1]], Times[f, x, Power[2, -1]]]], Times[2, FracPart[n]]], -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Cosh[Plus[Times[e, Power[2, -1]], Times[f, x, Power[2, -1]]]], Times[2, n]]], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[a, Times[-1, b]]], IntegerQ[Times[2, n]], Or[Greater[n, 0], PositiveIntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cosh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[-2, a], IntPart[n]], Power[Plus[a, Times[b, Cosh[Plus[e, Times[f, x]]]]], FracPart[n]], Power[Power[Sinh[Plus[Times[e, Power[2, -1]], Times[f, x, Power[2, -1]]]], Times[2, FracPart[n]]], -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Sinh[Plus[Times[e, Power[2, -1]], Times[f, x, Power[2, -1]]]], Times[2, n]]], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[a, b]], IntegerQ[Times[2, n]], Or[Greater[n, 0], PositiveIntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[-2, Int[Times[Power[Plus[c, Times[d, x]], m], Power[E, Plus[e, Times[f, x]]], Power[Plus[b, Times[-1, 2, a, Power[E, Plus[e, Times[f, x]]]], Times[-1, b, Power[E, Times[2, Plus[e, Times[f, x]]]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Power[b, 2]]], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cosh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[2, Int[Times[Power[Plus[c, Times[d, x]], m], Power[E, Plus[e, Times[f, x]]], Power[Plus[b, Times[2, a, Power[E, Plus[e, Times[f, x]]]], Times[b, Power[E, Times[2, Plus[e, Times[f, x]]]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, Power[Plus[c, Times[d, x]], m], Cosh[Plus[e, Times[f, x]]], Power[Times[f, Plus[Power[a, 2], Power[b, 2]], Plus[a, Times[b, Sinh[Plus[e, Times[f, x]]]]]], -1]], x]], Plus[Dist[Times[a, Power[Plus[Power[a, 2], Power[b, 2]], -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Plus[a, Times[b, Sinh[Plus[e, Times[f, x]]]]], -1]], x], x], Dist[Times[b, d, m, Power[Times[f, Plus[Power[a, 2], Power[b, 2]]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Cosh[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sinh[Plus[e, Times[f, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Power[b, 2]]], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cosh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -2], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, Power[Plus[c, Times[d, x]], m], Sinh[Plus[e, Times[f, x]]], Power[Times[f, Plus[Power[a, 2], Times[-1, Power[b, 2]]], Plus[a, Times[b, Cosh[Plus[e, Times[f, x]]]]]], -1]], x]], Plus[Dist[Times[a, Power[Plus[Power[a, 2], Times[-1, Power[b, 2]]], -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Plus[a, Times[b, Cosh[Plus[e, Times[f, x]]]]], -1]], x], x], Dist[Times[b, d, m, Power[Times[f, Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Sinh[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Cosh[Plus[e, Times[f, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, Power[Plus[c, Times[d, x]], m], Cosh[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sinh[Plus[e, Times[f, x]]]]], Plus[n, 1]], Power[Times[f, Plus[n, 1], Plus[Power[a, 2], Power[b, 2]]], -1]], x], Plus[Dist[Times[a, Power[Plus[Power[a, 2], Power[b, 2]], -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Plus[a, Times[b, Sinh[Plus[e, Times[f, x]]]]], Plus[n, 1]]], x], x], Times[-1, Dist[Times[b, Plus[n, 2], Power[Times[Plus[n, 1], Plus[Power[a, 2], Power[b, 2]]], -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Sinh[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sinh[Plus[e, Times[f, x]]]]], Plus[n, 1]]], x], x]], Times[-1, Dist[Times[b, d, m, Power[Times[f, Plus[n, 1], Plus[Power[a, 2], Power[b, 2]]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Cosh[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sinh[Plus[e, Times[f, x]]]]], Plus[n, 1]]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Power[b, 2]]], NegativeIntegerQ[Plus[n, 2]], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cosh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, Power[Plus[c, Times[d, x]], m], Sinh[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Cosh[Plus[e, Times[f, x]]]]], Plus[n, 1]], Power[Times[f, Plus[n, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Plus[Dist[Times[a, Power[Plus[Power[a, 2], Times[-1, Power[b, 2]]], -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Plus[a, Times[b, Cosh[Plus[e, Times[f, x]]]]], Plus[n, 1]]], x], x], Times[-1, Dist[Times[b, Plus[n, 2], Power[Times[Plus[n, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Cosh[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Cosh[Plus[e, Times[f, x]]]]], Plus[n, 1]]], x], x]], Times[-1, Dist[Times[b, d, m, Power[Times[f, Plus[n, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Sinh[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Cosh[Plus[e, Times[f, x]]]]], Plus[n, 1]]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NegativeIntegerQ[Plus[n, 2]], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Pattern[v, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Power[Plus[a, Times[b, Sinh[ExpandToSum[v, x]]]], n]], x], And[FreeQ[List[a, b, m, n], x], LinearQ[List[u, v], x], Not[LinearMatchQ[List[u, v], x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Pattern[v, Blank[]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Power[Plus[a, Times[b, Cosh[ExpandToSum[v, x]]]], n]], x], And[FreeQ[List[a, b, m, n], x], LinearQ[List[u, v], x], Not[LinearMatchQ[List[u, v], x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[c, Times[d, x]], m], Power[Plus[a, Times[b, Sinh[Plus[e, Times[f, x]]]]], n]], x], FreeQ[List[a, b, c, d, e, f, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[c, Times[d, x]], m], Power[Plus[a, Times[b, Cosh[Plus[e, Times[f, x]]]]], n]], x], FreeQ[List[a, b, c, d, e, f, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Sinh[Plus[c, Times[d, x]]], Power[Plus[a, Times[b, Power[x, n]]], p], x], x], And[FreeQ[List[a, b, c, d, n], x], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Cosh[Plus[c, Times[d, x]]], Power[Plus[a, Times[b, Power[x, n]]], p], x], x], And[FreeQ[List[a, b, c, d, n], x], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[Times[-1, n], 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Sinh[Plus[c, Times[d, x]]], Power[Times[b, n, Plus[p, 1]], -1]], x], Plus[Times[-1, Dist[Times[Plus[Times[-1, n], 1], Power[Times[b, n, Plus[p, 1]], -1]], Int[Times[Power[x, Times[-1, n]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Sinh[Plus[c, Times[d, x]]]], x], x]], Times[-1, Dist[Times[d, Power[Times[b, n, Plus[p, 1]], -1]], Int[Times[Power[x, Plus[Times[-1, n], 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Cosh[Plus[c, Times[d, x]]]], x], x]]]], And[FreeQ[List[a, b, c, d], x], IntegerQ[p], PositiveIntegerQ[n], Less[p, -1], Greater[n, 2]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[Times[-1, n], 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Cosh[Plus[c, Times[d, x]]], Power[Times[b, n, Plus[p, 1]], -1]], x], Plus[Times[-1, Dist[Times[Plus[Times[-1, n], 1], Power[Times[b, n, Plus[p, 1]], -1]], Int[Times[Power[x, Times[-1, n]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Cosh[Plus[c, Times[d, x]]]], x], x]], Times[-1, Dist[Times[d, Power[Times[b, n, Plus[p, 1]], -1]], Int[Times[Power[x, Plus[Times[-1, n], 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Sinh[Plus[c, Times[d, x]]]], x], x]]]], And[FreeQ[List[a, b, c, d], x], IntegerQ[p], PositiveIntegerQ[n], Less[p, -1], Greater[n, 2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Sinh[Plus[c, Times[d, x]]], Power[Plus[a, Times[b, Power[x, n]]], p], x], x], And[FreeQ[List[a, b, c, d], x], NegativeIntegerQ[p], PositiveIntegerQ[n], Or[Equal[n, 2], Equal[p, -1]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Cosh[Plus[c, Times[d, x]]], Power[Plus[a, Times[b, Power[x, n]]], p], x], x], And[FreeQ[List[a, b, c, d], x], NegativeIntegerQ[p], PositiveIntegerQ[n], Or[Equal[n, 2], Equal[p, -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Times[n, p]], Power[Plus[b, Times[a, Power[x, Times[-1, n]]]], p], Sinh[Plus[c, Times[d, x]]]], x], And[FreeQ[List[a, b, c, d], x], NegativeIntegerQ[p], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Times[n, p]], Power[Plus[b, Times[a, Power[x, Times[-1, n]]]], p], Cosh[Plus[c, Times[d, x]]]], x], And[FreeQ[List[a, b, c, d], x], NegativeIntegerQ[p], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Sinh[Plus[c, Times[d, x]]]], x], FreeQ[List[a, b, c, d, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Cosh[Plus[c, Times[d, x]]]], x], FreeQ[List[a, b, c, d, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Sinh[Plus[c, Times[d, x]]], Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, m, n], x], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Cosh[Plus[c, Times[d, x]]], Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, m, n], x], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[e, m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Sinh[Plus[c, Times[d, x]]], Power[Times[b, n, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[d, Power[e, m], Power[Times[b, n, Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Cosh[Plus[c, Times[d, x]]]], x], x]]], And[FreeQ[List[a, b, c, d, e, m, n], x], IntegerQ[p], ZeroQ[Plus[m, Times[-1, n], 1]], RationalQ[p], Less[p, -1], Or[IntegerQ[n], PositiveQ[e]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[e, m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Cosh[Plus[c, Times[d, x]]], Power[Times[b, n, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[d, Power[e, m], Power[Times[b, n, Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Sinh[Plus[c, Times[d, x]]]], x], x]]], And[FreeQ[List[a, b, c, d, e, m, n], x], IntegerQ[p], ZeroQ[Plus[m, Times[-1, n], 1]], RationalQ[p], Less[p, -1], Or[IntegerQ[n], PositiveQ[e]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Sinh[Plus[c, Times[d, x]]], Power[Times[b, n, Plus[p, 1]], -1]], x], Plus[Times[-1, Dist[Times[Plus[m, Times[-1, n], 1], Power[Times[b, n, Plus[p, 1]], -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Sinh[Plus[c, Times[d, x]]]], x], x]], Times[-1, Dist[Times[d, Power[Times[b, n, Plus[p, 1]], -1]], Int[Times[Power[x, Plus[m, Times[-1, n], 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Cosh[Plus[c, Times[d, x]]]], x], x]]]], And[FreeQ[List[a, b, c, d], x], IntegerQ[p], PositiveIntegerQ[n], RationalQ[m], Less[p, -1], Or[Greater[Plus[m, Times[-1, n], 1], 0], Greater[n, 2]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Cosh[Plus[c, Times[d, x]]], Power[Times[b, n, Plus[p, 1]], -1]], x], Plus[Times[-1, Dist[Times[Plus[m, Times[-1, n], 1], Power[Times[b, n, Plus[p, 1]], -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Cosh[Plus[c, Times[d, x]]]], x], x]], Times[-1, Dist[Times[d, Power[Times[b, n, Plus[p, 1]], -1]], Int[Times[Power[x, Plus[m, Times[-1, n], 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Sinh[Plus[c, Times[d, x]]]], x], x]]]], And[FreeQ[List[a, b, c, d], x], IntegerQ[p], PositiveIntegerQ[n], RationalQ[m], Less[p, -1], Or[Greater[Plus[m, Times[-1, n], 1], 0], Greater[n, 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Sinh[Plus[c, Times[d, x]]], Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, d], x], NegativeIntegerQ[p], IntegerQ[m], PositiveIntegerQ[n], Or[Equal[n, 2], Equal[p, -1]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Cosh[Plus[c, Times[d, x]]], Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, d], x], NegativeIntegerQ[p], IntegerQ[m], PositiveIntegerQ[n], Or[Equal[n, 2], Equal[p, -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Plus[m, Times[n, p]]], Power[Plus[b, Times[a, Power[x, Times[-1, n]]]], p], Sinh[Plus[c, Times[d, x]]]], x], And[FreeQ[List[a, b, c, d, m], x], NegativeIntegerQ[p], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Plus[m, Times[n, p]]], Power[Plus[b, Times[a, Power[x, Times[-1, n]]]], p], Cosh[Plus[c, Times[d, x]]]], x], And[FreeQ[List[a, b, c, d, m], x], NegativeIntegerQ[p], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], p], Sinh[Plus[c, Times[d, x]]]], x], FreeQ[List[a, b, c, d, e, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Power[x, n]]], p], Cosh[Plus[c, Times[d, x]]]], x], FreeQ[List[a, b, c, d, e, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Power[E, Plus[c, Times[d, Power[x, n]]]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Power[E, Plus[Times[-1, c], Times[-1, d, Power[x, n]]]], x], x]]], And[FreeQ[List[c, d], x], IntegerQ[n], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Power[E, Plus[c, Times[d, Power[x, n]]]], x], x], Dist[Times[1, Power[2, -1]], Int[Power[E, Plus[Times[-1, c], Times[-1, d, Power[x, n]]]], x], x]], And[FreeQ[List[c, d], x], IntegerQ[n], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, Power[x, n]]]]]], p], x], x], And[FreeQ[List[a, b, c, d], x], IntegersQ[n, p], Greater[n, 1], Greater[p, 1]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, Power[x, n]]]]]], p], x], x], And[FreeQ[List[a, b, c, d], x], IntegersQ[n, p], Greater[n, 1], Greater[p, 1]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, Power[x, Times[-1, n]]]]]]], p], Power[Power[x, 2], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, b, c, d], x], IntegerQ[p], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, Power[x, Times[-1, n]]]]]]], p], Power[Power[x, 2], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, b, c, d], x], IntegerQ[p], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[k, Denominator[n]]], Dist[k, Subst[Int[Times[Power[x, Plus[k, -1]], Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, Power[x, Times[k, n]]]]]]], p]], x], x, Power[x, Times[1, Power[k, -1]]]], x]], And[FreeQ[List[a, b, c, d], x], IntegerQ[p], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[k, Denominator[n]]], Dist[k, Subst[Int[Times[Power[x, Plus[k, -1]], Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, Power[x, Times[k, n]]]]]]], p]], x], x, Power[x, Times[1, Power[k, -1]]]], x]], And[FreeQ[List[a, b, c, d], x], IntegerQ[p], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Power[E, Plus[c, Times[d, Power[x, n]]]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Power[E, Plus[Times[-1, c], Times[-1, d, Power[x, n]]]], x], x]]], FreeQ[List[c, d, n], x]]], RuleDelayed[HoldPattern[Int[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Power[E, Plus[c, Times[d, Power[x, n]]]], x], x], Dist[Times[1, Power[2, -1]], Int[Power[E, Plus[Times[-1, c], Times[-1, d, Power[x, n]]]], x], x]], FreeQ[List[c, d, n], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, Power[x, n]]]]]], p], x], x], And[FreeQ[List[a, b, c, d, n], x], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, Power[x, n]]]]]], p], x], x], And[FreeQ[List[a, b, c, d, n], x], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, Power[x, n]]]]]], p], x], x, u], x], And[FreeQ[List[a, b, c, d, n], x], IntegerQ[p], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, Power[x, n]]]]]], p], x], x, u], x], And[FreeQ[List[a, b, c, d, n], x], IntegerQ[p], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, Power[u, n]]]]]], p], x], And[FreeQ[List[a, b, c, d, n, p], x], LinearQ[u, x]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, Power[u, n]]]]]], p], x], And[FreeQ[List[a, b, c, d, n, p], x], LinearQ[u, x]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Pattern[u, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[a, Times[b, Sinh[ExpandToSum[u, x]]]], p], x], And[FreeQ[List[a, b, p], x], BinomialQ[u, x], Not[BinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Pattern[u, Blank[]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[a, Times[b, Cosh[ExpandToSum[u, x]]]], p], x], And[FreeQ[List[a, b, p], x], BinomialQ[u, x], Not[BinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], -1], Sinh[Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[SinhIntegral[Times[d, Power[x, n]]], Power[n, -1]], x], FreeQ[List[d, n], x]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Pattern[x, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[CoshIntegral[Times[d, Power[x, n]]], Power[n, -1]], x], FreeQ[List[d, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], -1], Sinh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Sinh[c], Int[Times[Cosh[Times[d, Power[x, n]]], Power[x, -1]], x], x], Dist[Cosh[c], Int[Times[Sinh[Times[d, Power[x, n]]], Power[x, -1]], x], x]], FreeQ[List[c, d, n], x]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Power[Pattern[x, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Cosh[c], Int[Times[Cosh[Times[d, Power[x, n]]], Power[x, -1]], x], x], Dist[Sinh[c], Int[Times[Sinh[Times[d, Power[x, n]]], Power[x, -1]], x], x]], FreeQ[List[c, d, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[mn, Simplify[Times[Plus[m, 1], Power[n, -1]]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[mn, -1]], Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, x]]]]], p]], x], x, Power[x, n]], x], And[IntegerQ[mn], Or[Equal[p, 1], Greater[mn, 0]]]]], And[FreeQ[List[a, b, c, d, m, n], x], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[mn, Simplify[Times[Plus[m, 1], Power[n, -1]]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[mn, -1]], Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, x]]]]], p]], x], x, Power[x, n]], x], And[IntegerQ[mn], Or[Equal[p, 1], Greater[mn, 0]]]]], And[FreeQ[List[a, b, c, d, m, n], x], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[mn, Simplify[Times[Plus[m, 1], Power[n, -1]]]]], Condition[Dist[Times[Power[e, IntPart[m]], Power[Times[e, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, Power[x, n]]]]]], p]], x], x], And[IntegerQ[mn], Or[Equal[p, 1], Greater[mn, 0]]]]], And[FreeQ[List[a, b, c, d, e, m, n], x], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[mn, Simplify[Times[Plus[m, 1], Power[n, -1]]]]], Condition[Dist[Times[Power[e, IntPart[m]], Power[Times[e, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, Power[x, n]]]]]], p]], x], x], And[IntegerQ[mn], Or[Equal[p, 1], Greater[mn, 0]]]]], And[FreeQ[List[a, b, c, d, e, m, n], x], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[e, Plus[n, -1]], Power[Times[e, x], Plus[m, Times[-1, n], 1]], Cosh[Plus[c, Times[d, Power[x, n]]]], Power[Times[d, n], -1]], x], Times[-1, Dist[Times[Power[e, n], Plus[m, Times[-1, n], 1], Power[Times[d, n], -1]], Int[Times[Power[Times[e, x], Plus[m, Times[-1, n]]], Cosh[Plus[c, Times[d, Power[x, n]]]]], x], x]]], And[FreeQ[List[c, d, e], x], PositiveIntegerQ[n], RationalQ[m], Less[0, n, Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[e, Plus[n, -1]], Power[Times[e, x], Plus[m, Times[-1, n], 1]], Sinh[Plus[c, Times[d, Power[x, n]]]], Power[Times[d, n], -1]], x], Times[-1, Dist[Times[Power[e, n], Plus[m, Times[-1, n], 1], Power[Times[d, n], -1]], Int[Times[Power[Times[e, x], Plus[m, Times[-1, n]]], Sinh[Plus[c, Times[d, Power[x, n]]]]], x], x]]], And[FreeQ[List[c, d, e], x], PositiveIntegerQ[n], RationalQ[m], Less[0, n, Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[e, x], Plus[m, 1]], Sinh[Plus[c, Times[d, Power[x, n]]]], Power[Times[e, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[d, n, Power[Times[Power[e, n], Plus[m, 1]], -1]], Int[Times[Power[Times[e, x], Plus[m, n]], Cosh[Plus[c, Times[d, Power[x, n]]]]], x], x]]], And[FreeQ[List[c, d, e], x], PositiveIntegerQ[n], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[e, x], Plus[m, 1]], Cosh[Plus[c, Times[d, Power[x, n]]]], Power[Times[e, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[d, n, Power[Times[Power[e, n], Plus[m, 1]], -1]], Int[Times[Power[Times[e, x], Plus[m, n]], Sinh[Plus[c, Times[d, Power[x, n]]]]], x], x]]], And[FreeQ[List[c, d, e], x], PositiveIntegerQ[n], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Power[Times[e, x], m], Power[E, Plus[c, Times[d, Power[x, n]]]]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Times[Power[Times[e, x], m], Power[E, Plus[Times[-1, c], Times[-1, d, Power[x, n]]]]], x], x]]], And[FreeQ[List[c, d, e, m], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Power[Times[e, x], m], Power[E, Plus[c, Times[d, Power[x, n]]]]], x], x], Dist[Times[1, Power[2, -1]], Int[Times[Power[Times[e, x], m], Power[E, Plus[Times[-1, c], Times[-1, d, Power[x, n]]]]], x], x]], And[FreeQ[List[c, d, e, m], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Sinh[Plus[a, Times[b, Power[x, n]]]], p], Power[Times[Plus[n, -1], Power[x, Plus[n, -1]]], -1]], x]], Dist[Times[b, n, p, Power[Plus[n, -1], -1]], Int[Times[Power[Sinh[Plus[a, Times[b, Power[x, n]]]], Plus[p, -1]], Cosh[Plus[a, Times[b, Power[x, n]]]]], x], x]], And[FreeQ[List[a, b], x], IntegersQ[n, p], ZeroQ[Plus[m, n]], Greater[p, 1], NonzeroQ[Plus[n, -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Cosh[Plus[a, Times[b, Power[x, n]]]], p], Power[Times[Plus[n, -1], Power[x, Plus[n, -1]]], -1]], x]], Dist[Times[b, n, p, Power[Plus[n, -1], -1]], Int[Times[Power[Cosh[Plus[a, Times[b, Power[x, n]]]], Plus[p, -1]], Sinh[Plus[a, Times[b, Power[x, n]]]]], x], x]], And[FreeQ[List[a, b], x], IntegersQ[n, p], ZeroQ[Plus[m, n]], Greater[p, 1], NonzeroQ[Plus[n, -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[n, Power[Sinh[Plus[a, Times[b, Power[x, n]]]], p], Power[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1]], x]], Plus[Times[-1, Dist[Times[Plus[p, -1], Power[p, -1]], Int[Times[Power[x, m], Power[Sinh[Plus[a, Times[b, Power[x, n]]]], Plus[p, -2]]], x], x]], Simp[Times[Power[x, n], Cosh[Plus[a, Times[b, Power[x, n]]]], Power[Sinh[Plus[a, Times[b, Power[x, n]]]], Plus[p, -1]], Power[Times[b, n, p], -1]], x]]], And[FreeQ[List[a, b, m, n], x], ZeroQ[Plus[m, Times[-1, 2, n], 1]], RationalQ[p], Greater[p, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[n, Power[Cosh[Plus[a, Times[b, Power[x, n]]]], p], Power[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1]], x]], Plus[Dist[Times[Plus[p, -1], Power[p, -1]], Int[Times[Power[x, m], Power[Cosh[Plus[a, Times[b, Power[x, n]]]], Plus[p, -2]]], x], x], Simp[Times[Power[x, n], Sinh[Plus[a, Times[b, Power[x, n]]]], Power[Cosh[Plus[a, Times[b, Power[x, n]]]], Plus[p, -1]], Power[Times[b, n, p], -1]], x]]], And[FreeQ[List[a, b, m, n], x], ZeroQ[Plus[m, Times[-1, 2, n], 1]], RationalQ[p], Greater[p, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[m, Times[-1, n], 1], Power[x, Plus[m, Times[-1, 2, n], 1]], Power[Sinh[Plus[a, Times[b, Power[x, n]]]], p], Power[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1]], x]], Plus[Times[-1, Dist[Times[Plus[p, -1], Power[p, -1]], Int[Times[Power[x, m], Power[Sinh[Plus[a, Times[b, Power[x, n]]]], Plus[p, -2]]], x], x]], Dist[Times[Plus[m, Times[-1, n], 1], Plus[m, Times[-1, 2, n], 1], Power[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1]], Int[Times[Power[x, Plus[m, Times[-1, 2, n]]], Power[Sinh[Plus[a, Times[b, Power[x, n]]]], p]], x], x], Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Cosh[Plus[a, Times[b, Power[x, n]]]], Power[Sinh[Plus[a, Times[b, Power[x, n]]]], Plus[p, -1]], Power[Times[b, n, p], -1]], x]]], And[FreeQ[List[a, b], x], IntegersQ[m, n], RationalQ[p], Greater[p, 1], Less[0, Times[2, n], Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[m, Times[-1, n], 1], Power[x, Plus[m, Times[-1, 2, n], 1]], Power[Cosh[Plus[a, Times[b, Power[x, n]]]], p], Power[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1]], x]], Plus[Dist[Times[Plus[p, -1], Power[p, -1]], Int[Times[Power[x, m], Power[Cosh[Plus[a, Times[b, Power[x, n]]]], Plus[p, -2]]], x], x], Dist[Times[Plus[m, Times[-1, n], 1], Plus[m, Times[-1, 2, n], 1], Power[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1]], Int[Times[Power[x, Plus[m, Times[-1, 2, n]]], Power[Cosh[Plus[a, Times[b, Power[x, n]]]], p]], x], x], Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Sinh[Plus[a, Times[b, Power[x, n]]]], Power[Cosh[Plus[a, Times[b, Power[x, n]]]], Plus[p, -1]], Power[Times[b, n, p], -1]], x]]], And[FreeQ[List[a, b], x], IntegersQ[m, n], RationalQ[p], Greater[p, 1], Less[0, Times[2, n], Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Power[Sinh[Plus[a, Times[b, Power[x, n]]]], p], Power[Plus[m, 1], -1]], x], Plus[Dist[Times[Power[b, 2], Power[n, 2], p, Plus[p, -1], Power[Times[Plus[m, 1], Plus[m, n, 1]], -1]], Int[Times[Power[x, Plus[m, Times[2, n]]], Power[Sinh[Plus[a, Times[b, Power[x, n]]]], Plus[p, -2]]], x], x], Dist[Times[Power[b, 2], Power[n, 2], Power[p, 2], Power[Times[Plus[m, 1], Plus[m, n, 1]], -1]], Int[Times[Power[x, Plus[m, Times[2, n]]], Power[Sinh[Plus[a, Times[b, Power[x, n]]]], p]], x], x], Times[-1, Simp[Times[b, n, p, Power[x, Plus[m, n, 1]], Cosh[Plus[a, Times[b, Power[x, n]]]], Power[Sinh[Plus[a, Times[b, Power[x, n]]]], Plus[p, -1]], Power[Times[Plus[m, 1], Plus[m, n, 1]], -1]], x]]]], And[FreeQ[List[a, b], x], IntegersQ[m, n], RationalQ[p], Greater[p, 1], Less[0, Times[2, n], Plus[1, Times[-1, m]]], NonzeroQ[Plus[m, n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Power[Cosh[Plus[a, Times[b, Power[x, n]]]], p], Power[Plus[m, 1], -1]], x], Plus[Times[-1, Dist[Times[Power[b, 2], Power[n, 2], p, Plus[p, -1], Power[Times[Plus[m, 1], Plus[m, n, 1]], -1]], Int[Times[Power[x, Plus[m, Times[2, n]]], Power[Cosh[Plus[a, Times[b, Power[x, n]]]], Plus[p, -2]]], x], x]], Dist[Times[Power[b, 2], Power[n, 2], Power[p, 2], Power[Times[Plus[m, 1], Plus[m, n, 1]], -1]], Int[Times[Power[x, Plus[m, Times[2, n]]], Power[Cosh[Plus[a, Times[b, Power[x, n]]]], p]], x], x], Times[-1, Simp[Times[b, n, p, Power[x, Plus[m, n, 1]], Sinh[Plus[a, Times[b, Power[x, n]]]], Power[Cosh[Plus[a, Times[b, Power[x, n]]]], Plus[p, -1]], Power[Times[Plus[m, 1], Plus[m, n, 1]], -1]], x]]]], And[FreeQ[List[a, b], x], IntegersQ[m, n], RationalQ[p], Greater[p, 1], Less[0, Times[2, n], Plus[1, Times[-1, m]]], NonzeroQ[Plus[m, n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[m]]], Dist[Times[k, Power[e, -1]], Subst[Int[Times[Power[x, Plus[Times[k, Plus[m, 1]], -1]], Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, Power[x, Times[k, n]], Power[Power[e, n], -1]]]]]], p]], x], x, Power[Times[e, x], Times[1, Power[k, -1]]]], x]], And[FreeQ[List[a, b, c, d, e], x], IntegerQ[p], PositiveIntegerQ[n], FractionQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[m]]], Dist[Times[k, Power[e, -1]], Subst[Int[Times[Power[x, Plus[Times[k, Plus[m, 1]], -1]], Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, Power[x, Times[k, n]], Power[Power[e, n], -1]]]]]], p]], x], x, Power[Times[e, x], Times[1, Power[k, -1]]]], x]], And[FreeQ[List[a, b, c, d, e], x], IntegerQ[p], PositiveIntegerQ[n], FractionQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[Times[e, x], m], Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, Power[x, n]]]]]], p], x], x], And[FreeQ[List[a, b, c, d, e, m], x], IntegerQ[p], PositiveIntegerQ[n], Greater[p, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Pattern[p, Blank[]]], Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[Times[e, x], m], Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, Power[x, n]]]]]], p], x], x], And[FreeQ[List[a, b, c, d, e, m], x], IntegerQ[p], PositiveIntegerQ[n], Greater[p, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, n], Cosh[Plus[a, Times[b, Power[x, n]]]], Power[Sinh[Plus[a, Times[b, Power[x, n]]]], Plus[p, 1]], Power[Times[b, n, Plus[p, 1]], -1]], x], Plus[Times[-1, Dist[Times[Plus[p, 2], Power[Plus[p, 1], -1]], Int[Times[Power[x, m], Power[Sinh[Plus[a, Times[b, Power[x, n]]]], Plus[p, 2]]], x], x]], Times[-1, Simp[Times[n, Power[Sinh[Plus[a, Times[b, Power[x, n]]]], Plus[p, 2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, 1], Plus[p, 2]], -1]], x]]]], And[FreeQ[List[a, b, m, n], x], ZeroQ[Plus[m, Times[-1, 2, n], 1]], RationalQ[p], Less[p, -1], Unequal[p, -2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, n], Sinh[Plus[a, Times[b, Power[x, n]]]], Power[Cosh[Plus[a, Times[b, Power[x, n]]]], Plus[p, 1]], Power[Times[b, n, Plus[p, 1]], -1]], x]], Plus[Dist[Times[Plus[p, 2], Power[Plus[p, 1], -1]], Int[Times[Power[x, m], Power[Cosh[Plus[a, Times[b, Power[x, n]]]], Plus[p, 2]]], x], x], Simp[Times[n, Power[Cosh[Plus[a, Times[b, Power[x, n]]]], Plus[p, 2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, 1], Plus[p, 2]], -1]], x]]], And[FreeQ[List[a, b, m, n], x], ZeroQ[Plus[m, Times[-1, 2, n], 1]], RationalQ[p], Less[p, -1], Unequal[p, -2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Cosh[Plus[a, Times[b, Power[x, n]]]], Power[Sinh[Plus[a, Times[b, Power[x, n]]]], Plus[p, 1]], Power[Times[b, n, Plus[p, 1]], -1]], x], Plus[Times[-1, Dist[Times[Plus[p, 2], Power[Plus[p, 1], -1]], Int[Times[Power[x, m], Power[Sinh[Plus[a, Times[b, Power[x, n]]]], Plus[p, 2]]], x], x]], Dist[Times[Plus[m, Times[-1, n], 1], Plus[m, Times[-1, 2, n], 1], Power[Times[Power[b, 2], Power[n, 2], Plus[p, 1], Plus[p, 2]], -1]], Int[Times[Power[x, Plus[m, Times[-1, 2, n]]], Power[Sinh[Plus[a, Times[b, Power[x, n]]]], Plus[p, 2]]], x], x], Times[-1, Simp[Times[Plus[m, Times[-1, n], 1], Power[x, Plus[m, Times[-1, 2, n], 1]], Power[Sinh[Plus[a, Times[b, Power[x, n]]]], Plus[p, 2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, 1], Plus[p, 2]], -1]], x]]]], And[FreeQ[List[a, b], x], IntegersQ[m, n], RationalQ[p], Less[p, -1], Unequal[p, -2], Less[0, Times[2, n], Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Sinh[Plus[a, Times[b, Power[x, n]]]], Power[Cosh[Plus[a, Times[b, Power[x, n]]]], Plus[p, 1]], Power[Times[b, n, Plus[p, 1]], -1]], x]], Plus[Dist[Times[Plus[p, 2], Power[Plus[p, 1], -1]], Int[Times[Power[x, m], Power[Cosh[Plus[a, Times[b, Power[x, n]]]], Plus[p, 2]]], x], x], Times[-1, Dist[Times[Plus[m, Times[-1, n], 1], Plus[m, Times[-1, 2, n], 1], Power[Times[Power[b, 2], Power[n, 2], Plus[p, 1], Plus[p, 2]], -1]], Int[Times[Power[x, Plus[m, Times[-1, 2, n]]], Power[Cosh[Plus[a, Times[b, Power[x, n]]]], Plus[p, 2]]], x], x]], Simp[Times[Plus[m, Times[-1, n], 1], Power[x, Plus[m, Times[-1, 2, n], 1]], Power[Cosh[Plus[a, Times[b, Power[x, n]]]], Plus[p, 2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, 1], Plus[p, 2]], -1]], x]]], And[FreeQ[List[a, b], x], IntegersQ[m, n], RationalQ[p], Less[p, -1], Unequal[p, -2], Less[0, Times[2, n], Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, Power[x, Times[-1, n]]]]]]], p], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, b, c, d], x], IntegerQ[p], NegativeIntegerQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, Power[x, Times[-1, n]]]]]]], p], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, b, c, d], x], IntegerQ[p], NegativeIntegerQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[m]]], Times[-1, Dist[Times[k, Power[e, -1]], Subst[Int[Times[Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, Power[Times[Power[e, n], Power[x, Times[k, n]]], -1]]]]]], p], Power[Power[x, Plus[Times[k, Plus[m, 1]], 1]], -1]], x], x, Times[1, Power[Power[Times[e, x], Times[1, Power[k, -1]]], -1]]], x]]], And[FreeQ[List[a, b, c, d, e], x], IntegerQ[p], NegativeIntegerQ[n], FractionQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[m]]], Times[-1, Dist[Times[k, Power[e, -1]], Subst[Int[Times[Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, Power[Times[Power[e, n], Power[x, Times[k, n]]], -1]]]]]], p], Power[Power[x, Plus[Times[k, Plus[m, 1]], 1]], -1]], x], x, Times[1, Power[Power[Times[e, x], Times[1, Power[k, -1]]], -1]]], x]]], And[FreeQ[List[a, b, c, d, e], x], IntegerQ[p], NegativeIntegerQ[n], FractionQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[Times[e, x], m], Power[Power[x, -1], m]], Subst[Int[Times[Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, Power[x, Times[-1, n]]]]]]], p], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, d, e, m], x], IntegerQ[p], NegativeIntegerQ[n], Not[RationalQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[Times[e, x], m], Power[Power[x, -1], m]], Subst[Int[Times[Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, Power[x, Times[-1, n]]]]]]], p], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, d, e, m], x], IntegerQ[p], NegativeIntegerQ[n], Not[RationalQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[k, Denominator[n]]], Dist[k, Subst[Int[Times[Power[x, Plus[Times[k, Plus[m, 1]], -1]], Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, Power[x, Times[k, n]]]]]]], p]], x], x, Power[x, Times[1, Power[k, -1]]]], x]], And[FreeQ[List[a, b, c, d, m], x], IntegerQ[p], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[k, Denominator[n]]], Dist[k, Subst[Int[Times[Power[x, Plus[Times[k, Plus[m, 1]], -1]], Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, Power[x, Times[k, n]]]]]]], p]], x], x, Power[x, Times[1, Power[k, -1]]]], x]], And[FreeQ[List[a, b, c, d, m], x], IntegerQ[p], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[e, IntPart[m]], Power[Times[e, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, Power[x, n]]]]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, m], x], IntegerQ[p], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[e, IntPart[m]], Power[Times[e, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, Power[x, n]]]]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, m], x], IntegerQ[p], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Plus[m, 1], -1]], Subst[Int[Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]]]]]], p], x], x, Power[x, Plus[m, 1]]], x], And[FreeQ[List[a, b, c, d, m, n], x], IntegerQ[p], NonzeroQ[Plus[m, 1]], PositiveIntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Plus[m, 1], -1]], Subst[Int[Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]]]]]], p], x], x, Power[x, Plus[m, 1]]], x], And[FreeQ[List[a, b, c, d, m, n], x], IntegerQ[p], NonzeroQ[Plus[m, 1]], PositiveIntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[e, IntPart[m]], Power[Times[e, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, Power[x, n]]]]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, m, n], x], IntegerQ[p], NonzeroQ[Plus[m, 1]], PositiveIntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[e, IntPart[m]], Power[Times[e, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, Power[x, n]]]]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, m, n], x], IntegerQ[p], NonzeroQ[Plus[m, 1]], PositiveIntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Power[Times[e, x], m], Power[E, Plus[c, Times[d, Power[x, n]]]]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Times[Power[Times[e, x], m], Power[E, Plus[Times[-1, c], Times[-1, d, Power[x, n]]]]], x], x]]], FreeQ[List[c, d, e, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Power[Times[e, x], m], Power[E, Plus[c, Times[d, Power[x, n]]]]], x], x], Dist[Times[1, Power[2, -1]], Int[Times[Power[Times[e, x], m], Power[E, Plus[Times[-1, c], Times[-1, d, Power[x, n]]]]], x], x]], FreeQ[List[c, d, e, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[Times[e, x], m], Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, Power[x, n]]]]]], p], x], x], And[FreeQ[List[a, b, c, d, e, m, n], x], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Pattern[p, Blank[]]], Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[Times[e, x], m], Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, Power[x, n]]]]]], p], x], x], And[FreeQ[List[a, b, c, d, e, m, n], x], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[Coefficient[u, x, 1], Plus[m, 1]], -1]], Subst[Int[Times[Power[Plus[x, Times[-1, Coefficient[u, x, 0]]], m], Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, Power[x, n]]]]]], p]], x], x, u], x], And[FreeQ[List[a, b, c, d, n, p], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[Coefficient[u, x, 1], Plus[m, 1]], -1]], Subst[Int[Times[Power[Plus[x, Times[-1, Coefficient[u, x, 0]]], m], Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, Power[x, n]]]]]], p]], x], x, u], x], And[FreeQ[List[a, b, c, d, n, p], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, Power[u, n]]]]]], p]], x], And[FreeQ[List[a, b, c, d, e, m, n, p], x], LinearQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, Power[u, n]]]]]], p]], x], And[FreeQ[List[a, b, c, d, e, m, n, p], x], LinearQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Pattern[u, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Sinh[ExpandToSum[u, x]]]], p]], x], And[FreeQ[List[a, b, e, m, p], x], BinomialQ[u, x], Not[BinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Cosh[Pattern[u, Blank[]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Cosh[ExpandToSum[u, x]]]], p]], x], And[FreeQ[List[a, b, e, m, p], x], BinomialQ[u, x], Not[BinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Sinh[Plus[a, Times[b, Power[x, n]]]], Plus[p, 1]], Power[Times[b, n, Plus[p, 1]], -1]], x], And[FreeQ[List[a, b, m, n, p], x], ZeroQ[Plus[m, Times[-1, n], 1]], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Cosh[Plus[a, Times[b, Power[x, n]]]], Plus[p, 1]], Power[Times[b, n, Plus[p, 1]], -1]], x], And[FreeQ[List[a, b, m, n, p], x], ZeroQ[Plus[m, Times[-1, n], 1]], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Power[Sinh[Plus[a, Times[b, Power[x, n]]]], Plus[p, 1]], Power[Times[b, n, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[Plus[m, Times[-1, n], 1], Power[Times[b, n, Plus[p, 1]], -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Power[Sinh[Plus[a, Times[b, Power[x, n]]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, p], x], RationalQ[m, n], Less[0, n, Plus[m, 1]], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Power[Cosh[Plus[a, Times[b, Power[x, n]]]], Plus[p, 1]], Power[Times[b, n, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[Plus[m, Times[-1, n], 1], Power[Times[b, n, Plus[p, 1]], -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Power[Cosh[Plus[a, Times[b, Power[x, n]]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, p], x], RationalQ[m, n], Less[0, n, Plus[m, 1]], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Power[E, Plus[a, Times[b, x], Times[c, Power[x, 2]]]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Power[E, Plus[Times[-1, a], Times[-1, b, x], Times[-1, c, Power[x, 2]]]], x], x]]], FreeQ[List[a, b, c], x]]], RuleDelayed[HoldPattern[Int[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Power[E, Plus[a, Times[b, x], Times[c, Power[x, 2]]]], x], x], Dist[Times[1, Power[2, -1]], Int[Power[E, Plus[Times[-1, a], Times[-1, b, x], Times[-1, c, Power[x, 2]]]], x], x]], FreeQ[List[a, b, c], x]]], RuleDelayed[HoldPattern[Int[Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[Sinh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], n], x], x], And[FreeQ[List[a, b, c], x], IntegerQ[n], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[Cosh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], n], x], x], And[FreeQ[List[a, b, c], x], IntegerQ[n], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Power[Sinh[Pattern[v, Blank[]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Sinh[ExpandToSum[v, x]], n], x], And[PositiveIntegerQ[n], QuadraticQ[v, x], Not[QuadraticMatchQ[v, x]]]]], RuleDelayed[HoldPattern[Int[Power[Cosh[Pattern[v, Blank[]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Cosh[ExpandToSum[v, x]], n], x], And[PositiveIntegerQ[n], QuadraticQ[v, x], Not[QuadraticMatchQ[v, x]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[e, Cosh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Times[2, c], -1]], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[b, e], Times[-1, 2, c, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[e, Sinh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Times[2, c], -1]], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[b, e], Times[-1, 2, c, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Cosh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Times[2, c], -1]], x], Times[-1, Dist[Times[Plus[Times[b, e], Times[-1, 2, c, d]], Power[Times[2, c], -1]], Int[Sinh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Times[b, e], Times[-1, 2, c, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Sinh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Times[2, c], -1]], x], Times[-1, Dist[Times[Plus[Times[b, e], Times[-1, 2, c, d]], Power[Times[2, c], -1]], Int[Cosh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Times[b, e], Times[-1, 2, c, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Cosh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Times[2, c], -1]], x], Times[-1, Dist[Times[Power[e, 2], Plus[m, -1], Power[Times[2, c], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -2]], Cosh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], RationalQ[m], Greater[m, 1], ZeroQ[Plus[Times[b, e], Times[-1, 2, c, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Sinh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Times[2, c], -1]], x], Times[-1, Dist[Times[Power[e, 2], Plus[m, -1], Power[Times[2, c], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -2]], Sinh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], RationalQ[m], Greater[m, 1], ZeroQ[Plus[Times[b, e], Times[-1, 2, c, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Cosh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Times[2, c], -1]], x], Plus[Times[-1, Dist[Times[Power[e, 2], Plus[m, -1], Power[Times[2, c], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -2]], Cosh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], x], x]], Times[-1, Dist[Times[Plus[Times[b, e], Times[-1, 2, c, d]], Power[Times[2, c], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Sinh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], RationalQ[m], Greater[m, 1], NonzeroQ[Plus[Times[b, e], Times[-1, 2, c, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Sinh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Times[2, c], -1]], x], Plus[Times[-1, Dist[Times[Power[e, 2], Plus[m, -1], Power[Times[2, c], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -2]], Sinh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], x], x]], Times[-1, Dist[Times[Plus[Times[b, e], Times[-1, 2, c, d]], Power[Times[2, c], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Cosh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], RationalQ[m], Greater[m, 1], NonzeroQ[Plus[Times[b, e], Times[-1, 2, c, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Sinh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Times[e, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[2, c, Power[Times[Power[e, 2], Plus[m, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 2]], Cosh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], RationalQ[m], Less[m, -1], ZeroQ[Plus[Times[b, e], Times[-1, 2, c, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Cosh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Times[e, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[2, c, Power[Times[Power[e, 2], Plus[m, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 2]], Sinh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], RationalQ[m], Less[m, -1], ZeroQ[Plus[Times[b, e], Times[-1, 2, c, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Sinh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Times[e, Plus[m, 1]], -1]], x], Plus[Times[-1, Dist[Times[2, c, Power[Times[Power[e, 2], Plus[m, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 2]], Cosh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], x], x]], Times[-1, Dist[Times[Plus[Times[b, e], Times[-1, 2, c, d]], Power[Times[Power[e, 2], Plus[m, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Cosh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], RationalQ[m], Less[m, -1], NonzeroQ[Plus[Times[b, e], Times[-1, 2, c, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Cosh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Times[e, Plus[m, 1]], -1]], x], Plus[Times[-1, Dist[Times[2, c, Power[Times[Power[e, 2], Plus[m, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 2]], Sinh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], x], x]], Times[-1, Dist[Times[Plus[Times[b, e], Times[-1, 2, c, d]], Power[Times[Power[e, 2], Plus[m, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Sinh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], RationalQ[m], Less[m, -1], NonzeroQ[Plus[Times[b, e], Times[-1, 2, c, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, x]], m], Sinh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], x], FreeQ[List[a, b, c, d, e, m], x]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, x]], m], Cosh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], x], FreeQ[List[a, b, c, d, e, m], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[Plus[d, Times[e, x]], m], Power[Sinh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], n], x], x], And[FreeQ[List[a, b, c, d, e, m], x], IntegerQ[n], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[Plus[d, Times[e, x]], m], Power[Cosh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], n], x], x], And[FreeQ[List[a, b, c, d, e, m], x], IntegerQ[n], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Pattern[v, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Power[Sinh[ExpandToSum[v, x]], n]], x], And[FreeQ[m, x], PositiveIntegerQ[n], LinearQ[u, x], QuadraticQ[v, x], Not[And[LinearMatchQ[u, x], QuadraticMatchQ[v, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Pattern[v, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Power[Cosh[ExpandToSum[v, x]], n]], x], And[FreeQ[m, x], PositiveIntegerQ[n], LinearQ[u, x], QuadraticQ[v, x], Not[And[LinearMatchQ[u, x], QuadraticMatchQ[v, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Tanh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[a, Times[b, x]], Plus[m, 1]], Power[Times[b, Plus[m, 1]], -1]], x]], Dist[2, Int[Times[Power[Plus[a, Times[b, x]], m], Power[E, Plus[Times[2, e], Times[2, f, x]]], Power[Plus[1, Power[E, Plus[Times[2, e], Times[2, f, x]]]], -1]], x], x]], And[FreeQ[List[a, b, e, f], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Coth[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[a, Times[b, x]], Plus[m, 1]], Power[Times[b, Plus[m, 1]], -1]], x]], Times[-1, Dist[2, Int[Times[Power[Plus[a, Times[b, x]], m], Power[E, Plus[Times[2, e], Times[2, f, x]]], Power[Plus[1, Times[-1, Power[E, Plus[Times[2, e], Times[2, f, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, e, f], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[c, Blank[]]], Tanh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[c, Power[Plus[a, Times[b, x]], m], Power[Times[c, Tanh[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, Plus[n, -1]], -1]], x]], Plus[Dist[Times[b, c, m, Power[Times[f, Plus[n, -1]], -1]], Int[Times[Power[Plus[a, Times[b, x]], Plus[m, -1]], Power[Times[c, Tanh[Plus[e, Times[f, x]]]], Plus[n, -1]]], x], x], Dist[Power[c, 2], Int[Times[Power[Plus[a, Times[b, x]], m], Power[Times[c, Tanh[Plus[e, Times[f, x]]]], Plus[n, -2]]], x], x]]], And[FreeQ[List[a, b, c, e, f], x], RationalQ[m, n], Greater[n, 1], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Coth[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[c, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[c, Power[Plus[a, Times[b, x]], m], Power[Times[c, Coth[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, Plus[n, -1]], -1]], x]], Plus[Dist[Times[b, c, m, Power[Times[f, Plus[n, -1]], -1]], Int[Times[Power[Plus[a, Times[b, x]], Plus[m, -1]], Power[Times[c, Coth[Plus[e, Times[f, x]]]], Plus[n, -1]]], x], x], Dist[Power[c, 2], Int[Times[Power[Plus[a, Times[b, x]], m], Power[Times[c, Coth[Plus[e, Times[f, x]]]], Plus[n, -2]]], x], x]]], And[FreeQ[List[a, b, c, e, f], x], RationalQ[m, n], Greater[n, 1], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[c, Blank[]]], Tanh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, x]], m], Power[Times[c, Tanh[Plus[e, Times[f, x]]]], Plus[n, 1]], Power[Times[c, f, Plus[n, 1]], -1]], x], Plus[Times[-1, Dist[Times[b, m, Power[Times[c, f, Plus[n, 1]], -1]], Int[Times[Power[Plus[a, Times[b, x]], Plus[m, -1]], Power[Times[c, Tanh[Plus[e, Times[f, x]]]], Plus[n, 1]]], x], x]], Dist[Times[1, Power[Power[c, 2], -1]], Int[Times[Power[Plus[a, Times[b, x]], m], Power[Times[c, Tanh[Plus[e, Times[f, x]]]], Plus[n, 2]]], x], x]]], And[FreeQ[List[a, b, c, e, f], x], RationalQ[m, n], Less[n, -1], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Coth[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[c, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, x]], m], Power[Times[c, Coth[Plus[e, Times[f, x]]]], Plus[n, 1]], Power[Times[c, f, Plus[n, 1]], -1]], x], Plus[Times[-1, Dist[Times[b, m, Power[Times[c, f, Plus[n, 1]], -1]], Int[Times[Power[Plus[a, Times[b, x]], Plus[m, -1]], Power[Times[c, Coth[Plus[e, Times[f, x]]]], Plus[n, 1]]], x], x]], Dist[Times[1, Power[Power[c, 2], -1]], Int[Times[Power[Plus[a, Times[b, x]], m], Power[Times[c, Coth[Plus[e, Times[f, x]]]], Plus[n, 2]]], x], x]]], And[FreeQ[List[a, b, c, e, f], x], RationalQ[m, n], Less[n, -1], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Tanh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[c, Times[d, x]], m], Power[Plus[a, Times[b, Tanh[Plus[e, Times[f, x]]]]], n], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], PositiveIntegerQ[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Coth[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[c, Times[d, x]], m], Power[Plus[a, Times[b, Coth[Plus[e, Times[f, x]]]]], n], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], PositiveIntegerQ[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Tanh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Power[Times[2, a, d, Plus[m, 1]], -1]], x], Plus[Dist[Times[a, d, m, Power[Times[2, b, f], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Plus[a, Times[b, Tanh[Plus[e, Times[f, x]]]]], -1]], x], x], Times[-1, Simp[Times[a, Power[Plus[c, Times[d, x]], m], Power[Times[2, b, f, Plus[a, Times[b, Tanh[Plus[e, Times[f, x]]]]]], -1]], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Coth[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Power[Times[2, a, d, Plus[m, 1]], -1]], x], Plus[Dist[Times[a, d, m, Power[Times[2, b, f], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Plus[a, Times[b, Coth[Plus[e, Times[f, x]]]]], -1]], x], x], Times[-1, Simp[Times[a, Power[Plus[c, Times[d, x]], m], Power[Times[2, b, f, Plus[a, Times[b, Coth[Plus[e, Times[f, x]]]]]], -1]], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Tanh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Power[Times[d, Plus[c, Times[d, x]], Plus[a, Times[b, Tanh[Plus[e, Times[f, x]]]]]], -1], x]], Plus[Dist[Times[f, Power[Times[a, d], -1]], Int[Times[Sinh[Plus[Times[2, e], Times[2, f, x]]], Power[Plus[c, Times[d, x]], -1]], x], x], Times[-1, Dist[Times[f, Power[Times[b, d], -1]], Int[Times[Cosh[Plus[Times[2, e], Times[2, f, x]]], Power[Plus[c, Times[d, x]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Coth[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Power[Times[d, Plus[c, Times[d, x]], Plus[a, Times[b, Coth[Plus[e, Times[f, x]]]]]], -1], x]], Plus[Times[-1, Dist[Times[f, Power[Times[a, d], -1]], Int[Times[Sinh[Plus[Times[2, e], Times[2, f, x]]], Power[Plus[c, Times[d, x]], -1]], x], x]], Dist[Times[f, Power[Times[b, d], -1]], Int[Times[Cosh[Plus[Times[2, e], Times[2, f, x]]], Power[Plus[c, Times[d, x]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Tanh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[f, Power[Plus[c, Times[d, x]], Plus[m, 2]], Power[Times[b, Power[d, 2], Plus[m, 1], Plus[m, 2]], -1]], x]], Plus[Dist[Times[2, b, f, Power[Times[a, d, Plus[m, 1]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Power[Plus[a, Times[b, Tanh[Plus[e, Times[f, x]]]]], -1]], x], x], Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Power[Times[d, Plus[m, 1], Plus[a, Times[b, Tanh[Plus[e, Times[f, x]]]]]], -1]], x]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1], Unequal[m, -2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Coth[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[f, Power[Plus[c, Times[d, x]], Plus[m, 2]], Power[Times[b, Power[d, 2], Plus[m, 1], Plus[m, 2]], -1]], x]], Plus[Dist[Times[2, b, f, Power[Times[a, d, Plus[m, 1]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Power[Plus[a, Times[b, Coth[Plus[e, Times[f, x]]]]], -1]], x], x], Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Power[Times[d, Plus[m, 1], Plus[a, Times[b, Coth[Plus[e, Times[f, x]]]]]], -1]], x]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1], Unequal[m, -2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Tanh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Log[Plus[c, Times[d, x]]], Power[Times[2, a, d], -1]], x], Plus[Dist[Times[1, Power[Times[2, a], -1]], Int[Times[Cosh[Plus[Times[2, e], Times[2, f, x]]], Power[Plus[c, Times[d, x]], -1]], x], x], Times[-1, Dist[Times[1, Power[Times[2, b], -1]], Int[Times[Sinh[Plus[Times[2, e], Times[2, f, x]]], Power[Plus[c, Times[d, x]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Coth[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Log[Plus[c, Times[d, x]]], Power[Times[2, a, d], -1]], x], Plus[Times[-1, Dist[Times[1, Power[Times[2, a], -1]], Int[Times[Cosh[Plus[Times[2, e], Times[2, f, x]]], Power[Plus[c, Times[d, x]], -1]], x], x]], Dist[Times[1, Power[Times[2, b], -1]], Int[Times[Sinh[Plus[Times[2, e], Times[2, f, x]]], Power[Plus[c, Times[d, x]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Tanh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Power[Times[2, a, d, Plus[m, 1]], -1]], x], Dist[Times[1, Power[Times[2, a], -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Power[E, Times[2, a, Power[b, -1], Plus[e, Times[f, x]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Coth[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Power[Times[2, a, d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[2, a], -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Power[E, Times[2, a, Power[b, -1], Plus[e, Times[f, x]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Tanh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[c, Times[d, x]], m], Power[Plus[Times[1, Power[Times[2, a], -1]], Times[Cosh[Plus[Times[2, e], Times[2, f, x]]], Power[Times[2, a], -1]], Times[-1, Sinh[Plus[Times[2, e], Times[2, f, x]]], Power[Times[2, b], -1]]], Times[-1, n]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NegativeIntegerQ[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Coth[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[c, Times[d, x]], m], Power[Plus[Times[1, Power[Times[2, a], -1]], Times[-1, Cosh[Plus[Times[2, e], Times[2, f, x]]], Power[Times[2, a], -1]], Times[Sinh[Plus[Times[2, e], Times[2, f, x]]], Power[Times[2, b], -1]]], Times[-1, n]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NegativeIntegerQ[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Tanh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[c, Times[d, x]], m], Power[Plus[Times[1, Power[Times[2, a], -1]], Times[1, Power[Times[2, a, Power[E, Times[2, a, Power[b, -1], Plus[e, Times[f, x]]]]], -1]]], Times[-1, n]], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Coth[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[c, Times[d, x]], m], Power[Plus[Times[1, Power[Times[2, a], -1]], Times[-1, 1, Power[Times[2, a, Power[E, Times[2, a, Power[b, -1], Plus[e, Times[f, x]]]]], -1]]], Times[-1, n]], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Tanh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Power[Plus[a, Times[b, Tanh[Plus[e, Times[f, x]]]]], n], x]]], Plus[Dist[Power[Plus[c, Times[d, x]], m], u, x], Times[-1, Dist[Times[d, m], Int[Dist[Power[Plus[c, Times[d, x]], Plus[m, -1]], u, x], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NegativeIntegerQ[Plus[n, 1]], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Coth[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Power[Plus[a, Times[b, Coth[Plus[e, Times[f, x]]]]], n], x]]], Plus[Dist[Power[Plus[c, Times[d, x]], m], u, x], Times[-1, Dist[Times[d, m], Int[Dist[Power[Plus[c, Times[d, x]], Plus[m, -1]], u, x], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NegativeIntegerQ[Plus[n, 1]], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Tanh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Power[Times[d, Plus[m, 1], Plus[a, Times[-1, b]]], -1]], x], Times[-1, Dist[Times[2, b], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Plus[Power[a, 2], Times[-1, Power[b, 2]], Times[Power[Plus[a, Times[-1, b]], 2], Power[E, Times[-2, Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Coth[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Power[Times[d, Plus[m, 1], Plus[a, b]], -1]], x], Dist[Times[2, b], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Plus[Power[a, 2], Times[-1, Power[b, 2]], Times[-1, Power[Plus[a, b], 2], Power[E, Times[2, Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Tanh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[c, Times[d, x]], 2], Power[Times[2, d, Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Plus[Times[-1, Dist[Times[1, Power[Times[f, Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Plus[Times[b, d], Times[-1, 2, a, c, f], Times[-1, 2, a, d, f, x]], Power[Plus[a, Times[b, Tanh[Plus[e, Times[f, x]]]]], -1]], x], x]], Simp[Times[b, Plus[c, Times[d, x]], Power[Times[f, Plus[Power[a, 2], Times[-1, Power[b, 2]]], Plus[a, Times[b, Tanh[Plus[e, Times[f, x]]]]]], -1]], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Coth[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -2], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[c, Times[d, x]], 2], Power[Times[2, d, Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Plus[Times[-1, Dist[Times[1, Power[Times[f, Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Plus[Times[b, d], Times[-1, 2, a, c, f], Times[-1, 2, a, d, f, x]], Power[Plus[a, Times[b, Coth[Plus[e, Times[f, x]]]]], -1]], x], x]], Simp[Times[b, Plus[c, Times[d, x]], Power[Times[f, Plus[Power[a, 2], Times[-1, Power[b, 2]]], Plus[a, Times[b, Coth[Plus[e, Times[f, x]]]]]], -1]], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Tanh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[c, Times[d, x]], m], Power[Plus[Times[1, Power[Plus[a, Times[-1, b]], -1]], Times[-1, 2, b, Power[Plus[Power[a, 2], Times[-1, Power[b, 2]], Times[Power[Plus[a, Times[-1, b]], 2], Power[Power[E, Times[2, Plus[e, Times[f, x]]]], -1]]], -1]]], Times[-1, n]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NegativeIntegerQ[n], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Coth[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[c, Times[d, x]], m], Power[Plus[Times[1, Power[Plus[a, b], -1]], Times[2, b, Power[Plus[Power[a, 2], Times[-1, Power[b, 2]], Times[-1, Power[Plus[a, b], 2], Power[E, Times[2, Plus[e, Times[f, x]]]]]], -1]]], Times[-1, n]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NegativeIntegerQ[n], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Tanh[Pattern[v, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Power[Plus[a, Times[b, Tanh[ExpandToSum[v, x]]]], n]], x], And[FreeQ[List[a, b, m, n], x], LinearQ[List[u, v], x], Not[LinearMatchQ[List[u, v], x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Coth[Pattern[v, Blank[]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Power[Plus[a, Times[b, Coth[ExpandToSum[v, x]]]], n]], x], And[FreeQ[List[a, b, m, n], x], LinearQ[List[u, v], x], Not[LinearMatchQ[List[u, v], x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Tanh[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[c, Times[d, x]], m], Power[Plus[a, Times[b, Tanh[Plus[e, Times[f, x]]]]], n]], x], FreeQ[List[a, b, c, d, e, f, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Coth[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[c, Times[d, x]], m], Power[Plus[a, Times[b, Coth[Plus[e, Times[f, x]]]]], n]], x], FreeQ[List[a, b, c, d, e, f, m, n], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Tanh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Times[1, Power[n, -1]], -1]], Power[Plus[a, Times[b, Tanh[Plus[c, Times[d, x]]]]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, d, p], x], PositiveIntegerQ[Times[1, Power[n, -1]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Coth[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Times[1, Power[n, -1]], -1]], Power[Plus[a, Times[b, Coth[Plus[c, Times[d, x]]]]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, d, p], x], PositiveIntegerQ[Times[1, Power[n, -1]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Tanh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[a, Times[b, Tanh[Plus[c, Times[d, Power[x, n]]]]]], p], x], FreeQ[List[a, b, c, d, n, p], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Coth[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[a, Times[b, Coth[Plus[c, Times[d, Power[x, n]]]]]], p], x], FreeQ[List[a, b, c, d, n, p], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Tanh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Power[Plus[a, Times[b, Tanh[Plus[c, Times[d, Power[x, n]]]]]], p], x], x, u], x], And[FreeQ[List[a, b, c, d, n, p], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Coth[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Power[Plus[a, Times[b, Coth[Plus[c, Times[d, Power[x, n]]]]]], p], x], x, u], x], And[FreeQ[List[a, b, c, d, n, p], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Tanh[Pattern[u, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[a, Times[b, Tanh[ExpandToSum[u, x]]]], p], x], And[FreeQ[List[a, b, p], x], BinomialQ[u, x], Not[BinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Coth[Pattern[u, Blank[]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[a, Times[b, Coth[ExpandToSum[u, x]]]], p], x], And[FreeQ[List[a, b, p], x], BinomialQ[u, x], Not[BinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Tanh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]], Power[Plus[a, Times[b, Tanh[Plus[c, Times[d, x]]]]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, d, m, n, p], x], PositiveIntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Coth[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]], Power[Plus[a, Times[b, Coth[Plus[c, Times[d, x]]]]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, d, m, n, p], x], PositiveIntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Tanh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Tanh[Plus[c, Times[d, Power[x, n]]]], Power[Times[d, n], -1]], x]], Plus[Dist[Times[Plus[m, Times[-1, n], 1], Power[Times[d, n], -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Tanh[Plus[c, Times[d, Power[x, n]]]]], x], x], Int[Power[x, m], x]]], FreeQ[List[c, d, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Coth[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], 2], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Coth[Plus[c, Times[d, Power[x, n]]]], Power[Times[d, n], -1]], x]], Plus[Dist[Times[Plus[m, Times[-1, n], 1], Power[Times[d, n], -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Coth[Plus[c, Times[d, Power[x, n]]]]], x], x], Int[Power[x, m], x]]], FreeQ[List[c, d, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Tanh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[Plus[a, Times[b, Tanh[Plus[c, Times[d, Power[x, n]]]]]], p]], x], FreeQ[List[a, b, c, d, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Coth[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[Plus[a, Times[b, Coth[Plus[c, Times[d, Power[x, n]]]]]], p]], x], FreeQ[List[a, b, c, d, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Tanh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[e, IntPart[m]], Power[Times[e, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Tanh[Plus[c, Times[d, Power[x, n]]]]]], p]], x], x], FreeQ[List[a, b, c, d, e, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Coth[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[e, IntPart[m]], Power[Times[e, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Coth[Plus[c, Times[d, Power[x, n]]]]]], p]], x], x], FreeQ[List[a, b, c, d, e, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Tanh[Pattern[u, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Tanh[ExpandToSum[u, x]]]], p]], x], And[FreeQ[List[a, b, e, m, p], x], BinomialQ[u, x], Not[BinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Coth[Pattern[u, Blank[]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Coth[ExpandToSum[u, x]]]], p]], x], And[FreeQ[List[a, b, e, m, p], x], BinomialQ[u, x], Not[BinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Optional[Pattern[p, Blank[]]]], Power[Tanh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Power[Sech[Plus[a, Times[b, Power[x, n]]]], p], Power[Times[b, n, p], -1]], x]], Dist[Times[Plus[m, Times[-1, n], 1], Power[Times[b, n, p], -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Power[Sech[Plus[a, Times[b, Power[x, n]]]], p]], x], x]], And[FreeQ[List[a, b, p], x], RationalQ[m], IntegerQ[n], GreaterEqual[Plus[m, Times[-1, n]], 0], SameQ[q, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Coth[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Optional[Pattern[q, Blank[]]]], Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Power[Csch[Plus[a, Times[b, Power[x, n]]]], p], Power[Times[b, n, p], -1]], x]], Dist[Times[Plus[m, Times[-1, n], 1], Power[Times[b, n, p], -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Power[Csch[Plus[a, Times[b, Power[x, n]]]], p]], x], x]], And[FreeQ[List[a, b, p], x], RationalQ[m], IntegerQ[n], GreaterEqual[Plus[m, Times[-1, n]], 0], SameQ[q, 1]]]], RuleDelayed[HoldPattern[Int[Power[Tanh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Tanh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], n], x], FreeQ[List[a, b, c, n], x]]], RuleDelayed[HoldPattern[Int[Power[Coth[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Coth[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], n], x], FreeQ[List[a, b, c, n], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Tanh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Log[Cosh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], Power[Times[2, c], -1]], x], Dist[Times[Plus[Times[2, c, d], Times[-1, b, e]], Power[Times[2, c], -1]], Int[Tanh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], x], x]], FreeQ[List[a, b, c, d, e], x]]], RuleDelayed[HoldPattern[Int[Times[Coth[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Log[Sinh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], Power[Times[2, c], -1]], x], Dist[Times[Plus[Times[2, c, d], Times[-1, b, e]], Power[Times[2, c], -1]], Int[Coth[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], x], x]], FreeQ[List[a, b, c, d, e], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Tanh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, x]], m], Power[Tanh[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], n]], x], FreeQ[List[a, b, c, d, e, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Coth[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, x]], m], Power[Coth[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], n]], x], FreeQ[List[a, b, c, d, e, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, Power[Plus[c, Times[d, x]], m], ArcTan[Power[E, Plus[a, Times[b, x]]]], Power[b, -1]], x], Plus[Times[-1, Dist[Times[I, d, m, Power[b, -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Log[Plus[1, Times[-1, I, Power[E, Plus[a, Times[b, x]]]]]]], x], x]], Dist[Times[I, d, m, Power[b, -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Log[Plus[1, Times[I, Power[E, Plus[a, Times[b, x]]]]]]], x], x]]], And[FreeQ[List[a, b, c, d], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, Power[Plus[c, Times[d, x]], m], ArcTanh[Power[E, Plus[a, Times[b, x]]]], Power[b, -1]], x], Plus[Times[-1, Dist[Times[d, m, Power[b, -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Log[Plus[1, Times[-1, Power[E, Plus[a, Times[b, x]]]]]]], x], x]], Dist[Times[d, m, Power[b, -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Log[Plus[1, Power[E, Plus[a, Times[b, x]]]]]], x], x]]], And[FreeQ[List[a, b, c, d], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], m], Tanh[Plus[a, Times[b, x]]], Power[b, -1]], x], Times[-1, Dist[Times[d, m, Power[b, -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Tanh[Plus[a, Times[b, x]]]], x], x]]], And[FreeQ[List[a, b, c, d], x], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[c, Times[d, x]], m], Coth[Plus[a, Times[b, x]]], Power[b, -1]], x]], Dist[Times[d, m, Power[b, -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Coth[Plus[a, Times[b, x]]]], x], x]], And[FreeQ[List[a, b, c, d], x], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[c, Times[d, x]], Tanh[Plus[a, Times[b, x]]], Power[Sech[Plus[a, Times[b, x]]], Plus[n, -2]], Power[Times[b, Plus[n, -1]], -1]], x], Plus[Dist[Times[Plus[n, -2], Power[Plus[n, -1], -1]], Int[Times[Plus[c, Times[d, x]], Power[Sech[Plus[a, Times[b, x]]], Plus[n, -2]]], x], x], Simp[Times[d, Power[Sech[Plus[a, Times[b, x]]], Plus[n, -2]], Power[Times[Power[b, 2], Plus[n, -1], Plus[n, -2]], -1]], x]]], And[FreeQ[List[a, b, c, d], x], RationalQ[n], Greater[n, 1], Unequal[n, 2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[c, Times[d, x]], Coth[Plus[a, Times[b, x]]], Power[Csch[Plus[a, Times[b, x]]], Plus[n, -2]], Power[Times[b, Plus[n, -1]], -1]], x]], Plus[Times[-1, Dist[Times[Plus[n, -2], Power[Plus[n, -1], -1]], Int[Times[Plus[c, Times[d, x]], Power[Csch[Plus[a, Times[b, x]]], Plus[n, -2]]], x], x]], Times[-1, Simp[Times[d, Power[Csch[Plus[a, Times[b, x]]], Plus[n, -2]], Power[Times[Power[b, 2], Plus[n, -1], Plus[n, -2]], -1]], x]]]], And[FreeQ[List[a, b, c, d], x], RationalQ[n], Greater[n, 1], Unequal[n, 2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], m], Tanh[Plus[a, Times[b, x]]], Power[Sech[Plus[a, Times[b, x]]], Plus[n, -2]], Power[Times[b, Plus[n, -1]], -1]], x], Plus[Times[-1, Dist[Times[Power[d, 2], m, Plus[m, -1], Power[Times[Power[b, 2], Plus[n, -1], Plus[n, -2]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -2]], Power[Sech[Plus[a, Times[b, x]]], Plus[n, -2]]], x], x]], Dist[Times[Plus[n, -2], Power[Plus[n, -1], -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Sech[Plus[a, Times[b, x]]], Plus[n, -2]]], x], x], Simp[Times[d, m, Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Sech[Plus[a, Times[b, x]]], Plus[n, -2]], Power[Times[Power[b, 2], Plus[n, -1], Plus[n, -2]], -1]], x]]], And[FreeQ[List[a, b, c, d], x], RationalQ[m, n], Greater[n, 1], Unequal[n, 2], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[c, Times[d, x]], m], Coth[Plus[a, Times[b, x]]], Power[Csch[Plus[a, Times[b, x]]], Plus[n, -2]], Power[Times[b, Plus[n, -1]], -1]], x]], Plus[Dist[Times[Power[d, 2], m, Plus[m, -1], Power[Times[Power[b, 2], Plus[n, -1], Plus[n, -2]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -2]], Power[Csch[Plus[a, Times[b, x]]], Plus[n, -2]]], x], x], Times[-1, Dist[Times[Plus[n, -2], Power[Plus[n, -1], -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Csch[Plus[a, Times[b, x]]], Plus[n, -2]]], x], x]], Times[-1, Simp[Times[d, m, Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Csch[Plus[a, Times[b, x]]], Plus[n, -2]], Power[Times[Power[b, 2], Plus[n, -1], Plus[n, -2]], -1]], x]]]], And[FreeQ[List[a, b, c, d], x], RationalQ[m, n], Greater[n, 1], Unequal[n, 2], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[d, Power[Sech[Plus[a, Times[b, x]]], n], Power[Times[Power[b, 2], Power[n, 2]], -1]], x]], Plus[Dist[Times[Plus[n, 1], Power[n, -1]], Int[Times[Plus[c, Times[d, x]], Power[Sech[Plus[a, Times[b, x]]], Plus[n, 2]]], x], x], Times[-1, Simp[Times[Plus[c, Times[d, x]], Sinh[Plus[a, Times[b, x]]], Power[Sech[Plus[a, Times[b, x]]], Plus[n, 1]], Power[Times[b, n], -1]], x]]]], And[FreeQ[List[a, b, c, d], x], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[d, Power[Csch[Plus[a, Times[b, x]]], n], Power[Times[Power[b, 2], Power[n, 2]], -1]], x]], Plus[Times[-1, Dist[Times[Plus[n, 1], Power[n, -1]], Int[Times[Plus[c, Times[d, x]], Power[Csch[Plus[a, Times[b, x]]], Plus[n, 2]]], x], x]], Times[-1, Simp[Times[Plus[c, Times[d, x]], Cosh[Plus[a, Times[b, x]]], Power[Csch[Plus[a, Times[b, x]]], Plus[n, 1]], Power[Times[b, n], -1]], x]]]], And[FreeQ[List[a, b, c, d], x], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[d, m, Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Sech[Plus[a, Times[b, x]]], n], Power[Times[Power[b, 2], Power[n, 2]], -1]], x]], Plus[Dist[Times[Plus[n, 1], Power[n, -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Sech[Plus[a, Times[b, x]]], Plus[n, 2]]], x], x], Dist[Times[Power[d, 2], m, Plus[m, -1], Power[Times[Power[b, 2], Power[n, 2]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -2]], Power[Sech[Plus[a, Times[b, x]]], n]], x], x], Times[-1, Simp[Times[Power[Plus[c, Times[d, x]], m], Sinh[Plus[a, Times[b, x]]], Power[Sech[Plus[a, Times[b, x]]], Plus[n, 1]], Power[Times[b, n], -1]], x]]]], And[FreeQ[List[a, b, c, d], x], RationalQ[m, n], Less[n, -1], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[d, m, Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Csch[Plus[a, Times[b, x]]], n], Power[Times[Power[b, 2], Power[n, 2]], -1]], x]], Plus[Times[-1, Dist[Times[Plus[n, 1], Power[n, -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Csch[Plus[a, Times[b, x]]], Plus[n, 2]]], x], x]], Dist[Times[Power[d, 2], m, Plus[m, -1], Power[Times[Power[b, 2], Power[n, 2]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -2]], Power[Csch[Plus[a, Times[b, x]]], n]], x], x], Times[-1, Simp[Times[Power[Plus[c, Times[d, x]], m], Cosh[Plus[a, Times[b, x]]], Power[Csch[Plus[a, Times[b, x]]], Plus[n, 1]], Power[Times[b, n], -1]], x]]]], And[FreeQ[List[a, b, c, d], x], RationalQ[m, n], Less[n, -1], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Cosh[Plus[a, Times[b, x]]], n], Power[Sech[Plus[a, Times[b, x]]], n]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Power[Cosh[Plus[a, Times[b, x]]], n], -1]], x], x], And[FreeQ[List[a, b, c, d, m, n], x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Sinh[Plus[a, Times[b, x]]], n], Power[Csch[Plus[a, Times[b, x]]], n]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Power[Sinh[Plus[a, Times[b, x]]], n], -1]], x], x], And[FreeQ[List[a, b, c, d, m, n], x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sech[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[c, Times[d, x]], m], Power[Plus[a, Times[b, Sech[Plus[e, Times[f, x]]]]], n], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], PositiveIntegerQ[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Csch[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[c, Times[d, x]], m], Power[Plus[a, Times[b, Csch[Plus[e, Times[f, x]]]]], n], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], PositiveIntegerQ[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sech[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[c, Times[d, x]], m], Times[Power[Cosh[Plus[e, Times[f, x]]], Times[-1, n]], Power[Power[Plus[b, Times[a, Cosh[Plus[e, Times[f, x]]]]], Times[-1, n]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], NegativeIntegerQ[n], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Csch[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[c, Times[d, x]], m], Times[Power[Sinh[Plus[e, Times[f, x]]], Times[-1, n]], Power[Power[Plus[b, Times[a, Sinh[Plus[e, Times[f, x]]]]], Times[-1, n]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], NegativeIntegerQ[n], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sech[Pattern[v, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Power[Sech[ExpandToSum[v, x]], n]], x], And[FreeQ[List[m, n], x], LinearQ[List[u, v], x], Not[LinearMatchQ[List[u, v], x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Pattern[v, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Power[Csch[ExpandToSum[v, x]], n]], x], And[FreeQ[List[m, n], x], LinearQ[List[u, v], x], Not[LinearMatchQ[List[u, v], x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[c, Times[d, x]], m], Power[Sech[Plus[a, Times[b, x]]], n]], x], FreeQ[List[a, b, c, d, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[c, Times[d, x]], m], Power[Csch[Plus[a, Times[b, x]]], n]], x], FreeQ[List[a, b, c, d, m, n], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sech[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Times[1, Power[n, -1]], -1]], Power[Plus[a, Times[b, Sech[Plus[c, Times[d, x]]]]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, d, p], x], PositiveIntegerQ[Times[1, Power[n, -1]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Csch[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Times[1, Power[n, -1]], -1]], Power[Plus[a, Times[b, Csch[Plus[c, Times[d, x]]]]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, d, p], x], PositiveIntegerQ[Times[1, Power[n, -1]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sech[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[a, Times[b, Sech[Plus[c, Times[d, Power[x, n]]]]]], p], x], FreeQ[List[a, b, c, d, n, p], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Csch[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[a, Times[b, Csch[Plus[c, Times[d, Power[x, n]]]]]], p], x], FreeQ[List[a, b, c, d, n, p], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sech[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Power[Plus[a, Times[b, Sech[Plus[c, Times[d, Power[x, n]]]]]], p], x], x, u], x], And[FreeQ[List[a, b, c, d, n, p], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Csch[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Power[Plus[a, Times[b, Csch[Plus[c, Times[d, Power[x, n]]]]]], p], x], x, u], x], And[FreeQ[List[a, b, c, d, n, p], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sech[Pattern[u, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[a, Times[b, Sech[ExpandToSum[u, x]]]], p], x], And[FreeQ[List[a, b, p], x], BinomialQ[u, x], Not[BinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Csch[Pattern[u, Blank[]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[a, Times[b, Csch[ExpandToSum[u, x]]]], p], x], And[FreeQ[List[a, b, p], x], BinomialQ[u, x], Not[BinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sech[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]], Power[Plus[a, Times[b, Sech[Plus[c, Times[d, x]]]]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, d, m, n, p], x], PositiveIntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Csch[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]], Power[Plus[a, Times[b, Csch[Plus[c, Times[d, x]]]]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, d, m, n, p], x], PositiveIntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sech[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[Plus[a, Times[b, Sech[Plus[c, Times[d, Power[x, n]]]]]], p]], x], FreeQ[List[a, b, c, d, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Csch[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[Plus[a, Times[b, Csch[Plus[c, Times[d, Power[x, n]]]]]], p]], x], FreeQ[List[a, b, c, d, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sech[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[e, IntPart[m]], Power[Times[e, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Sech[Plus[c, Times[d, Power[x, n]]]]]], p]], x], x], FreeQ[List[a, b, c, d, e, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Csch[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[e, IntPart[m]], Power[Times[e, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Csch[Plus[c, Times[d, Power[x, n]]]]]], p]], x], x], FreeQ[List[a, b, c, d, e, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sech[Pattern[u, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Sech[ExpandToSum[u, x]]]], p]], x], And[FreeQ[List[a, b, e, m, p], x], BinomialQ[u, x], Not[BinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Csch[Pattern[u, Blank[]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Csch[ExpandToSum[u, x]]]], p]], x], And[FreeQ[List[a, b, e, m, p], x], BinomialQ[u, x], Not[BinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Pattern[p, Blank[]]], Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Power[Sech[Plus[a, Times[b, Power[x, n]]]], Plus[p, -1]], Power[Times[b, n, Plus[p, -1]], -1]], x]], Dist[Times[Plus[m, Times[-1, n], 1], Power[Times[b, n, Plus[p, -1]], -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Power[Sech[Plus[a, Times[b, Power[x, n]]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, p], x], RationalQ[m], IntegerQ[n], GreaterEqual[Plus[m, Times[-1, n]], 0], NonzeroQ[Plus[p, -1]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Pattern[p, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Power[Csch[Plus[a, Times[b, Power[x, n]]]], Plus[p, -1]], Power[Times[b, n, Plus[p, -1]], -1]], x]], Dist[Times[Plus[m, Times[-1, n], 1], Power[Times[b, n, Plus[p, -1]], -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Power[Csch[Plus[a, Times[b, Power[x, n]]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, p], x], RationalQ[m], IntegerQ[n], GreaterEqual[Plus[m, Times[-1, n]], 0], NonzeroQ[Plus[p, -1]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], m], Power[Sinh[Plus[a, Times[b, x]]], Plus[n, 1]], Power[Times[b, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[d, m, Power[Times[b, Plus[n, 1]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Sinh[Plus[a, Times[b, x]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, n], x], PositiveIntegerQ[m], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], m], Power[Cosh[Plus[a, Times[b, x]]], Plus[n, 1]], Power[Times[b, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[d, m, Power[Times[b, Plus[n, 1]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Cosh[Plus[a, Times[b, x]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, n], x], PositiveIntegerQ[m], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[Plus[c, Times[d, x]], m], Times[Power[Sinh[Plus[a, Times[b, x]]], n], Power[Cosh[Plus[a, Times[b, x]]], p]], x], x], And[FreeQ[List[a, b, c, d, m], x], PositiveIntegerQ[n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Tanh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Int[Times[Power[Plus[c, Times[d, x]], m], Power[Sinh[Plus[a, Times[b, x]]], n], Power[Tanh[Plus[a, Times[b, x]]], Plus[p, -2]]], x], Times[-1, Int[Times[Power[Plus[c, Times[d, x]], m], Power[Sinh[Plus[a, Times[b, x]]], Plus[n, -2]], Power[Tanh[Plus[a, Times[b, x]]], p]], x]]], And[FreeQ[List[a, b, c, d, m], x], PositiveIntegerQ[n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Coth[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Int[Times[Power[Plus[c, Times[d, x]], m], Power[Cosh[Plus[a, Times[b, x]]], n], Power[Coth[Plus[a, Times[b, x]]], Plus[p, -2]]], x], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Cosh[Plus[a, Times[b, x]]], Plus[n, -2]], Power[Coth[Plus[a, Times[b, x]]], p]], x]], And[FreeQ[List[a, b, c, d, m], x], PositiveIntegerQ[n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Tanh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[c, Times[d, x]], m], Power[Sech[Plus[a, Times[b, x]]], n], Power[Times[b, n], -1]], x]], Dist[Times[d, m, Power[Times[b, n], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Sech[Plus[a, Times[b, x]]], n]], x], x]], And[FreeQ[List[a, b, c, d, n], x], SameQ[p, 1], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Coth[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[c, Times[d, x]], m], Power[Csch[Plus[a, Times[b, x]]], n], Power[Times[b, n], -1]], x]], Dist[Times[d, m, Power[Times[b, n], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Csch[Plus[a, Times[b, x]]], n]], x], x]], And[FreeQ[List[a, b, c, d, n], x], SameQ[p, 1], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Tanh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], m], Power[Tanh[Plus[a, Times[b, x]]], Plus[n, 1]], Power[Times[b, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[d, m, Power[Times[b, Plus[n, 1]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Tanh[Plus[a, Times[b, x]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, n], x], PositiveIntegerQ[m], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Coth[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[c, Times[d, x]], m], Power[Coth[Plus[a, Times[b, x]]], Plus[n, 1]], Power[Times[b, Plus[n, 1]], -1]], x]], Dist[Times[d, m, Power[Times[b, Plus[n, 1]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Coth[Plus[a, Times[b, x]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, c, d, n], x], PositiveIntegerQ[m], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[Tanh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Int[Times[Power[Plus[c, Times[d, x]], m], Sech[Plus[a, Times[b, x]]], Power[Tanh[Plus[a, Times[b, x]]], Plus[p, -2]]], x], Times[-1, Int[Times[Power[Plus[c, Times[d, x]], m], Power[Sech[Plus[a, Times[b, x]]], 3], Power[Tanh[Plus[a, Times[b, x]]], Plus[p, -2]]], x]]], And[FreeQ[List[a, b, c, d, m], x], PositiveIntegerQ[Times[p, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Tanh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Int[Times[Power[Plus[c, Times[d, x]], m], Power[Sech[Plus[a, Times[b, x]]], n], Power[Tanh[Plus[a, Times[b, x]]], Plus[p, -2]]], x], Times[-1, Int[Times[Power[Plus[c, Times[d, x]], m], Power[Sech[Plus[a, Times[b, x]]], Plus[n, 2]], Power[Tanh[Plus[a, Times[b, x]]], Plus[p, -2]]], x]]], And[FreeQ[List[a, b, c, d, m, n], x], PositiveIntegerQ[Times[p, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Coth[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[p, Blank[]]], Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Int[Times[Power[Plus[c, Times[d, x]], m], Csch[Plus[a, Times[b, x]]], Power[Coth[Plus[a, Times[b, x]]], Plus[p, -2]]], x], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Csch[Plus[a, Times[b, x]]], 3], Power[Coth[Plus[a, Times[b, x]]], Plus[p, -2]]], x]], And[FreeQ[List[a, b, c, d, m], x], PositiveIntegerQ[Times[p, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Coth[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[p, Blank[]]], Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Int[Times[Power[Plus[c, Times[d, x]], m], Power[Csch[Plus[a, Times[b, x]]], n], Power[Coth[Plus[a, Times[b, x]]], Plus[p, -2]]], x], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Csch[Plus[a, Times[b, x]]], Plus[n, 2]], Power[Coth[Plus[a, Times[b, x]]], Plus[p, -2]]], x]], And[FreeQ[List[a, b, c, d, m, n], x], PositiveIntegerQ[Times[p, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Tanh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[Sech[Plus[a, Times[b, x]]], n], Power[Tanh[Plus[a, Times[b, x]]], p]], x]]], Plus[Dist[Power[Plus[c, Times[d, x]], m], u, x], Times[-1, Dist[Times[d, m], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], u], x], x]]]], And[FreeQ[List[a, b, c, d, n, p], x], PositiveIntegerQ[m], Or[EvenQ[n], OddQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Coth[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[Csch[Plus[a, Times[b, x]]], n], Power[Coth[Plus[a, Times[b, x]]], p]], x]]], Plus[Dist[Power[Plus[c, Times[d, x]], m], u, x], Times[-1, Dist[Times[d, m], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], u], x], x]]]], And[FreeQ[List[a, b, c, d, n, p], x], PositiveIntegerQ[m], Or[EvenQ[n], OddQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[2, n], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Csch[Plus[Times[2, a], Times[2, b, x]]], n]], x], x], And[FreeQ[List[a, b, c, d], x], RationalQ[m], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[Csch[Plus[a, Times[b, x]]], n], Power[Sech[Plus[a, Times[b, x]]], p]], x]]], Plus[Dist[Power[Plus[c, Times[d, x]], m], u, x], Times[-1, Dist[Times[d, m], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], u], x], x]]]], And[FreeQ[List[a, b, c, d], x], IntegersQ[n, p], RationalQ[m], Greater[m, 0], Unequal[n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Pattern[F, Blank[]][Pattern[v, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[G, Blank[]][Pattern[w, Blank[]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Power[F[ExpandToSum[v, x]], n], Power[G[ExpandToSum[v, x]], p]], x], And[FreeQ[List[m, n, p], x], HyperbolicQ[F], HyperbolicQ[G], ZeroQ[Plus[v, Times[-1, w]]], LinearQ[List[u, v, w], x], Not[LinearMatchQ[List[u, v, w], x]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, x]]]]], Plus[n, 1]], Power[Times[b, d, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[f, m, Power[Times[b, d, Plus[n, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, -1]], Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, x]]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, n], x], PositiveIntegerQ[m], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, x]]]]], Plus[n, 1]], Power[Times[b, d, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[f, m, Power[Times[b, d, Plus[n, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, -1]], Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, x]]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, n], x], PositiveIntegerQ[m], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sech[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Tanh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[a, Times[b, Tanh[Plus[c, Times[d, x]]]]], Plus[n, 1]], Power[Times[b, d, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[f, m, Power[Times[b, d, Plus[n, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, -1]], Power[Plus[a, Times[b, Tanh[Plus[c, Times[d, x]]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, n], x], PositiveIntegerQ[m], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Times[Coth[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[a, Times[b, Coth[Plus[c, Times[d, x]]]]], Plus[n, 1]], Power[Times[b, d, Plus[n, 1]], -1]], x]], Dist[Times[f, m, Power[Times[b, d, Plus[n, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, -1]], Power[Plus[a, Times[b, Coth[Plus[c, Times[d, x]]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, n], x], PositiveIntegerQ[m], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Sech[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sech[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]], Tanh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[a, Times[b, Sech[Plus[c, Times[d, x]]]]], Plus[n, 1]], Power[Times[b, d, Plus[n, 1]], -1]], x]], Dist[Times[f, m, Power[Times[b, d, Plus[n, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, -1]], Power[Plus[a, Times[b, Sech[Plus[c, Times[d, x]]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, n], x], PositiveIntegerQ[m], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Coth[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Csch[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[Csch[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[a, Times[b, Csch[Plus[c, Times[d, x]]]]], Plus[n, 1]], Power[Times[b, d, Plus[n, 1]], -1]], x]], Dist[Times[f, m, Power[Times[b, d, Plus[n, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, -1]], Power[Plus[a, Times[b, Csch[Plus[c, Times[d, x]]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, n], x], PositiveIntegerQ[m], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[Plus[e, Times[f, x]], m], Times[Power[Sinh[Plus[a, Times[b, x]]], p], Power[Sinh[Plus[c, Times[d, x]]], q]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[p, q], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[Plus[e, Times[f, x]], m], Times[Power[Cosh[Plus[a, Times[b, x]]], p], Power[Cosh[Plus[c, Times[d, x]]], q]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[p, q], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[Plus[e, Times[f, x]], m], Times[Power[Sinh[Plus[a, Times[b, x]]], p], Power[Cosh[Plus[c, Times[d, x]]], q]], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], PositiveIntegerQ[p, q]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Pattern[F, Blank[]][Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[G, Blank[]][Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigExpand[Times[Power[Plus[e, Times[f, x]], m], Power[G[Plus[c, Times[d, x]]], q]], F, Plus[c, Times[d, x]], p, Times[b, Power[d, -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], MemberQ[List[Sinh, Cosh], F], MemberQ[List[Sech, Csch], G], PositiveIntegerQ[p, q], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[Plus[Times[b, Power[d, -1]], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Sinh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Sinh[Plus[d, Times[e, x]]], Power[Plus[Power[e, 2], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]], x]], Simp[Times[e, Power[F, Times[c, Plus[a, Times[b, x]]]], Cosh[Plus[d, Times[e, x]]], Power[Plus[Power[e, 2], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]], x]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Power[e, 2], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Cosh[Plus[d, Times[e, x]]], Power[Plus[Power[e, 2], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]], x]], Simp[Times[e, Power[F, Times[c, Plus[a, Times[b, x]]]], Sinh[Plus[d, Times[e, x]]], Power[Plus[Power[e, 2], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]], x]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Power[e, 2], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sinh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sinh[Plus[d, Times[e, x]]], n], Power[Plus[Times[Power[e, 2], Power[n, 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]], x]], Plus[Times[-1, Dist[Times[n, Plus[n, -1], Power[e, 2], Power[Plus[Times[Power[e, 2], Power[n, 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sinh[Plus[d, Times[e, x]]], Plus[n, -2]]], x], x]], Simp[Times[e, n, Power[F, Times[c, Plus[a, Times[b, x]]]], Cosh[Plus[d, Times[e, x]]], Power[Sinh[Plus[d, Times[e, x]]], Plus[n, -1]], Power[Plus[Times[Power[e, 2], Power[n, 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]], x]]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Times[Power[e, 2], Power[n, 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]]], RationalQ[n], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Cosh[Plus[d, Times[e, x]]], n], Power[Plus[Times[Power[e, 2], Power[n, 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]], x]], Plus[Dist[Times[n, Plus[n, -1], Power[e, 2], Power[Plus[Times[Power[e, 2], Power[n, 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Cosh[Plus[d, Times[e, x]]], Plus[n, -2]]], x], x], Simp[Times[e, n, Power[F, Times[c, Plus[a, Times[b, x]]]], Sinh[Plus[d, Times[e, x]]], Power[Cosh[Plus[d, Times[e, x]]], Plus[n, -1]], Power[Plus[Times[Power[e, 2], Power[n, 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]], x]]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Times[Power[e, 2], Power[n, 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]]], RationalQ[n], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sinh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sinh[Plus[d, Times[e, x]]], Plus[n, 2]], Power[Times[Power[e, 2], Plus[n, 1], Plus[n, 2]], -1]], x]], Simp[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Cosh[Plus[d, Times[e, x]]], Power[Sinh[Plus[d, Times[e, x]]], Plus[n, 1]], Power[Times[e, Plus[n, 1]], -1]], x]], And[FreeQ[List[F, a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[e, 2], Power[Plus[n, 2], 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]]], NonzeroQ[Plus[n, 1]], NonzeroQ[Plus[n, 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Cosh[Plus[d, Times[e, x]]], Plus[n, 2]], Power[Times[Power[e, 2], Plus[n, 1], Plus[n, 2]], -1]], x], Times[-1, Simp[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Sinh[Plus[d, Times[e, x]]], Power[Cosh[Plus[d, Times[e, x]]], Plus[n, 1]], Power[Times[e, Plus[n, 1]], -1]], x]]], And[FreeQ[List[F, a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[e, 2], Power[Plus[n, 2], 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]]], NonzeroQ[Plus[n, 1]], NonzeroQ[Plus[n, 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sinh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sinh[Plus[d, Times[e, x]]], Plus[n, 2]], Power[Times[Power[e, 2], Plus[n, 1], Plus[n, 2]], -1]], x]], Plus[Times[-1, Dist[Times[Plus[Times[Power[e, 2], Power[Plus[n, 2], 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]], Power[Times[Power[e, 2], Plus[n, 1], Plus[n, 2]], -1]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sinh[Plus[d, Times[e, x]]], Plus[n, 2]]], x], x]], Simp[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Cosh[Plus[d, Times[e, x]]], Power[Sinh[Plus[d, Times[e, x]]], Plus[n, 1]], Power[Times[e, Plus[n, 1]], -1]], x]]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Times[Power[e, 2], Power[Plus[n, 2], 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]]], RationalQ[n], Less[n, -1], Unequal[n, -2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Cosh[Plus[d, Times[e, x]]], Plus[n, 2]], Power[Times[Power[e, 2], Plus[n, 1], Plus[n, 2]], -1]], x], Plus[Dist[Times[Plus[Times[Power[e, 2], Power[Plus[n, 2], 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]], Power[Times[Power[e, 2], Plus[n, 1], Plus[n, 2]], -1]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Cosh[Plus[d, Times[e, x]]], Plus[n, 2]]], x], x], Times[-1, Simp[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Sinh[Plus[d, Times[e, x]]], Power[Cosh[Plus[d, Times[e, x]]], Plus[n, 1]], Power[Times[e, Plus[n, 1]], -1]], x]]]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Times[Power[e, 2], Power[Plus[n, 2], 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]]], RationalQ[n], Less[n, -1], Unequal[n, -2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sinh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[E, Times[n, Plus[d, Times[e, x]]]], Power[Sinh[Plus[d, Times[e, x]]], n], Power[Power[Plus[-1, Power[E, Times[2, Plus[d, Times[e, x]]]]], n], -1]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Plus[-1, Power[E, Times[2, Plus[d, Times[e, x]]]]], n], Power[Power[E, Times[n, Plus[d, Times[e, x]]]], -1]], x], x], And[FreeQ[List[F, a, b, c, d, e, n], x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[E, Times[n, Plus[d, Times[e, x]]]], Power[Cosh[Plus[d, Times[e, x]]], n], Power[Power[Plus[1, Power[E, Times[2, Plus[d, Times[e, x]]]]], n], -1]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Plus[1, Power[E, Times[2, Plus[d, Times[e, x]]]]], n], Power[Power[E, Times[n, Plus[d, Times[e, x]]]], -1]], x], x], And[FreeQ[List[F, a, b, c, d, e, n], x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Tanh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Plus[-1, Power[E, Times[2, Plus[d, Times[e, x]]]]], n], Power[Power[Plus[1, Power[E, Times[2, Plus[d, Times[e, x]]]]], n], -1]], x], x], And[FreeQ[List[F, a, b, c, d, e], x], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Coth[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Plus[1, Power[E, Times[2, Plus[d, Times[e, x]]]]], n], Power[Power[Plus[-1, Power[E, Times[2, Plus[d, Times[e, x]]]]], n], -1]], x], x], And[FreeQ[List[F, a, b, c, d, e], x], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sech[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Times[Power[Sech[Plus[d, Times[e, x]]], n], Power[Plus[Times[Power[e, 2], Power[n, 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]]], x]], Plus[Dist[Times[Power[e, 2], n, Times[Plus[n, 1], Power[Plus[Times[Power[e, 2], Power[n, 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sech[Plus[d, Times[e, x]]], Plus[n, 2]]], x], x], Times[-1, Simp[Times[e, n, Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sech[Plus[d, Times[e, x]]], Plus[n, 1]], Times[Sinh[Plus[d, Times[e, x]]], Power[Plus[Times[Power[e, 2], Power[n, 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]]], x]]]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Times[Power[e, 2], Power[n, 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]]], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Times[Power[Csch[Plus[d, Times[e, x]]], n], Power[Plus[Times[Power[e, 2], Power[n, 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]]], x]], Plus[Times[-1, Dist[Times[Power[e, 2], n, Times[Plus[n, 1], Power[Plus[Times[Power[e, 2], Power[n, 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Csch[Plus[d, Times[e, x]]], Plus[n, 2]]], x], x]], Times[-1, Simp[Times[e, n, Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Csch[Plus[d, Times[e, x]]], Plus[n, 1]], Times[Cosh[Plus[d, Times[e, x]]], Power[Plus[Times[Power[e, 2], Power[n, 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]]], x]]]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Times[Power[e, 2], Power[n, 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]]], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sech[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sech[Plus[d, Times[e, x]]], Plus[n, -2]], Power[Times[Power[e, 2], Plus[n, -1], Plus[n, -2]], -1]], x], Simp[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sech[Plus[d, Times[e, x]]], Plus[n, -1]], Sinh[Plus[d, Times[e, x]]], Power[Times[e, Plus[n, -1]], -1]], x]], And[FreeQ[List[F, a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[e, 2], Power[Plus[n, -2], 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]]], NonzeroQ[Plus[n, -1]], NonzeroQ[Plus[n, -2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Csch[Plus[d, Times[e, x]]], Plus[n, -2]], Power[Times[Power[e, 2], Plus[n, -1], Plus[n, -2]], -1]], x]], Times[-1, Simp[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Csch[Plus[d, Times[e, x]]], Plus[n, -1]], Cosh[Plus[d, Times[e, x]]], Power[Times[e, Plus[n, -1]], -1]], x]]], And[FreeQ[List[F, a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[e, 2], Power[Plus[n, -2], 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]]], NonzeroQ[Plus[n, -1]], NonzeroQ[Plus[n, -2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sech[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sech[Plus[d, Times[e, x]]], Plus[n, -2]], Power[Times[Power[e, 2], Plus[n, -1], Plus[n, -2]], -1]], x], Plus[Dist[Times[Plus[Times[Power[e, 2], Power[Plus[n, -2], 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]], Power[Times[Power[e, 2], Plus[n, -1], Plus[n, -2]], -1]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sech[Plus[d, Times[e, x]]], Plus[n, -2]]], x], x], Simp[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sech[Plus[d, Times[e, x]]], Plus[n, -1]], Sinh[Plus[d, Times[e, x]]], Power[Times[e, Plus[n, -1]], -1]], x]]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Times[Power[e, 2], Power[Plus[n, -2], 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]]], RationalQ[n], Greater[n, 1], Unequal[n, 2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Csch[Plus[d, Times[e, x]]], Plus[n, -2]], Power[Times[Power[e, 2], Plus[n, -1], Plus[n, -2]], -1]], x]], Plus[Times[-1, Dist[Times[Plus[Times[Power[e, 2], Power[Plus[n, -2], 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]], Power[Times[Power[e, 2], Plus[n, -1], Plus[n, -2]], -1]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Csch[Plus[d, Times[e, x]]], Plus[n, -2]]], x], x]], Times[-1, Simp[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Csch[Plus[d, Times[e, x]]], Plus[n, -1]], Cosh[Plus[d, Times[e, x]]], Power[Times[e, Plus[n, -1]], -1]], x]]]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Times[Power[e, 2], Power[Plus[n, -2], 2]], Times[-1, Power[b, 2], Power[c, 2], Power[Log[F], 2]]]], RationalQ[n], Greater[n, 1], Unequal[n, 2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sech[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[2, n], Power[E, Times[n, Plus[d, Times[e, x]]]], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Plus[Times[e, n], Times[b, c, Log[F]]], -1], Hypergeometric2F1[n, Plus[Times[n, Power[2, -1]], Times[b, c, Log[F], Power[Times[2, e], -1]]], Plus[1, Times[n, Power[2, -1]], Times[b, c, Log[F], Power[Times[2, e], -1]]], Times[-1, Power[E, Times[2, Plus[d, Times[e, x]]]]]]], x], And[FreeQ[List[F, a, b, c, d, e], x], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[-2, n], Power[E, Times[n, Plus[d, Times[e, x]]]], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Plus[Times[e, n], Times[b, c, Log[F]]], -1], Hypergeometric2F1[n, Plus[Times[n, Power[2, -1]], Times[b, c, Log[F], Power[Times[2, e], -1]]], Plus[1, Times[n, Power[2, -1]], Times[b, c, Log[F], Power[Times[2, e], -1]]], Power[E, Times[2, Plus[d, Times[e, x]]]]]], x], And[FreeQ[List[F, a, b, c, d, e], x], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sech[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[1, Power[E, Times[2, Plus[d, Times[e, x]]]]], n], Power[Sech[Plus[d, Times[e, x]]], n], Power[Power[E, Times[n, Plus[d, Times[e, x]]]], -1]], Int[SimplifyIntegrand[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[E, Times[n, Plus[d, Times[e, x]]]], Power[Power[Plus[1, Power[E, Times[2, Plus[d, Times[e, x]]]]], n], -1]], x], x], x], And[FreeQ[List[F, a, b, c, d, e], x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[1, Times[-1, Power[E, Times[-2, Plus[d, Times[e, x]]]]]], n], Power[Csch[Plus[d, Times[e, x]]], n], Power[Power[E, Times[-1, n, Plus[d, Times[e, x]]]], -1]], Int[SimplifyIntegrand[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[E, Times[-1, n, Plus[d, Times[e, x]]]], Power[Power[Plus[1, Times[-1, Power[E, Times[-2, Plus[d, Times[e, x]]]]]], n], -1]], x], x], x], And[FreeQ[List[F, a, b, c, d, e], x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Sinh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[2, n], Power[f, n]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Cosh[Plus[Times[d, Power[2, -1]], Times[e, x, Power[2, -1]], Times[-1, f, Pi, Power[Times[4, g], -1]]]], Times[2, n]]], x], x], And[FreeQ[List[F, a, b, c, d, e, f, g], x], ZeroQ[Plus[Power[f, 2], Power[g, 2]]], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cosh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Pattern[f, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[2, n], Power[g, n]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Cosh[Plus[Times[d, Power[2, -1]], Times[e, x, Power[2, -1]]]], Times[2, n]]], x], x], And[FreeQ[List[F, a, b, c, d, e, f, g], x], ZeroQ[Plus[f, Times[-1, g]]], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cosh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Pattern[f, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[2, n], Power[g, n]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sinh[Plus[Times[d, Power[2, -1]], Times[e, x, Power[2, -1]]]], Times[2, n]]], x], x], And[FreeQ[List[F, a, b, c, d, e, f, g], x], ZeroQ[Plus[f, g]], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Sinh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[g, n], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Tanh[Plus[Times[d, Power[2, -1]], Times[e, x, Power[2, -1]], Times[-1, f, Pi, Power[Times[4, g], -1]]]], m]], x], x], And[FreeQ[List[F, a, b, c, d, e, f, g], x], ZeroQ[Plus[Power[f, 2], Power[g, 2]]], IntegersQ[m, n], Equal[Plus[m, n], 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cosh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Pattern[f, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sinh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[g, n], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Tanh[Plus[Times[d, Power[2, -1]], Times[e, x, Power[2, -1]]]], m]], x], x], And[FreeQ[List[F, a, b, c, d, e, f, g], x], ZeroQ[Plus[f, Times[-1, g]]], IntegersQ[m, n], Equal[Plus[m, n], 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cosh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Pattern[f, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sinh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[g, n], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Coth[Plus[Times[d, Power[2, -1]], Times[e, x, Power[2, -1]]]], m]], x], x], And[FreeQ[List[F, a, b, c, d, e, f, g], x], ZeroQ[Plus[f, g]], IntegersQ[m, n], Equal[Plus[m, n], 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Plus[Times[Cosh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[i, Blank[]]]], Pattern[h, Blank[]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Sinh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[2, i], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Times[Cosh[Plus[d, Times[e, x]]], Power[Plus[f, Times[g, Sinh[Plus[d, Times[e, x]]]]], -1]]], x], x], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Times[Plus[h, Times[-1, i, Cosh[Plus[d, Times[e, x]]]]], Power[Plus[f, Times[g, Sinh[Plus[d, Times[e, x]]]]], -1]]], x]], And[FreeQ[List[F, a, b, c, d, e, f, g, h, i], x], ZeroQ[Plus[Power[f, 2], Power[g, 2]]], ZeroQ[Plus[Power[h, 2], Times[-1, Power[i, 2]]]], ZeroQ[Plus[Times[g, h], Times[-1, f, i]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cosh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Pattern[f, Blank[]]], -1], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Plus[Pattern[h, Blank[]], Times[Optional[Pattern[i, Blank[]]], Sinh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[2, i], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Times[Sinh[Plus[d, Times[e, x]]], Power[Plus[f, Times[g, Cosh[Plus[d, Times[e, x]]]]], -1]]], x], x], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Times[Plus[h, Times[-1, i, Sinh[Plus[d, Times[e, x]]]]], Power[Plus[f, Times[g, Cosh[Plus[d, Times[e, x]]]]], -1]]], x]], And[FreeQ[List[F, a, b, c, d, e, f, g, h, i], x], ZeroQ[Plus[Power[f, 2], Times[-1, Power[g, 2]]]], ZeroQ[Plus[Power[h, 2], Power[i, 2]]], ZeroQ[Plus[Times[g, h], Times[f, i]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Pattern[u, Blank[]]]], Power[Pattern[G, Blank[]][Pattern[v, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[F, Times[c, ExpandToSum[u, x]]], Power[G[ExpandToSum[v, x]], n]], x], And[FreeQ[List[F, c, n], x], HyperbolicQ[G], LinearQ[List[u, v], x], Not[LinearMatchQ[List[u, v], x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sinh[Plus[d, Times[e, x]]], n]], x]]], Plus[Simp[Times[Power[x, m], u], x], Times[-1, Dist[m, Int[Times[Power[x, Plus[m, -1]], u], x], x]]]], And[FreeQ[List[F, a, b, c, d, e], x], RationalQ[m], Greater[m, 0], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Cosh[Plus[d, Times[e, x]]], n]], x]]], Plus[Simp[Times[Power[x, m], u], x], Times[-1, Dist[m, Int[Times[Power[x, Plus[m, -1]], u], x], x]]]], And[FreeQ[List[F, a, b, c, d, e], x], RationalQ[m], Greater[m, 0], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sinh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[F, Times[c, Plus[a, Times[b, x]]]], Times[Power[Sinh[Plus[d, Times[e, x]]], m], Power[Cosh[Plus[f, Times[g, x]]], n]], x], x], And[FreeQ[List[F, a, b, c, d, e, f, g], x], PositiveIntegerQ[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[p, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Times[Power[x, p], Power[F, Times[c, Plus[a, Times[b, x]]]]], Times[Power[Sinh[Plus[d, Times[e, x]]], m], Power[Cosh[Plus[f, Times[g, x]]], n]], x], x], And[FreeQ[List[F, a, b, c, d, e, f, g], x], PositiveIntegerQ[m, n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Pattern[G, Blank[]][Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Pattern[H, Blank[]][Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigToExp[Power[F, Times[c, Plus[a, Times[b, x]]]], Times[Power[G[Plus[d, Times[e, x]]], m], Power[H[Plus[d, Times[e, x]]], n]], x], x], And[FreeQ[List[F, a, b, c, d, e], x], PositiveIntegerQ[m, n], HyperbolicQ[G], HyperbolicQ[H]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Pattern[u, Blank[]]], Power[Sinh[Pattern[v, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigToExp[Power[F, u], Power[Sinh[v], n], x], x], And[FreeQ[F, x], Or[LinearQ[u, x], PolyQ[u, x, 2]], Or[LinearQ[v, x], PolyQ[v, x, 2]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Pattern[v, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigToExp[Power[F, u], Power[Cosh[v], n], x], x], And[FreeQ[F, x], Or[LinearQ[u, x], PolyQ[u, x, 2]], Or[LinearQ[v, x], PolyQ[v, x, 2]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Pattern[v, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Pattern[u, Blank[]]], Power[Sinh[Pattern[v, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigToExp[Power[F, u], Times[Power[Sinh[v], m], Power[Cosh[v], n]], x], x], And[FreeQ[F, x], Or[LinearQ[u, x], PolyQ[u, x, 2]], Or[LinearQ[v, x], PolyQ[v, x, 2]], PositiveIntegerQ[m, n]]]], RuleDelayed[HoldPattern[Int[Power[Sinh[Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[Times[Power[Times[c, Power[x, n]], b], Power[2, -1]], Times[-1, 1, Power[Times[2, Power[Times[c, Power[x, n]], b]], -1]]], p], x], And[FreeQ[c, x], RationalQ[b, n, p]]]], RuleDelayed[HoldPattern[Int[Power[Cosh[Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[Times[Power[Times[c, Power[x, n]], b], Power[2, -1]], Times[1, Power[Times[2, Power[Times[c, Power[x, n]], b]], -1]]], p], x], And[FreeQ[c, x], RationalQ[b, n, p]]]], RuleDelayed[HoldPattern[Int[Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Plus[p, 2], Power[Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Plus[p, 1], -1]], x]], Simp[Times[x, Coth[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[b, n, Plus[p, 1]], -1]], x]], And[FreeQ[List[a, b, c, n, p], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], -1]], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Plus[p, 2], Power[Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Plus[p, 1], -1]], x], Times[-1, Simp[Times[x, Tanh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[b, n, Plus[p, 1]], -1]], x]]], And[FreeQ[List[a, b, c, n, p], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], -1]], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Rational[1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[x, Sqrt[Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]]], Power[Sqrt[Plus[-1, Times[Power[E, Times[2, a]], Power[Times[c, Power[x, n]], Times[4, Power[n, -1]]]]]], -1]], Int[Times[Sqrt[Plus[-1, Times[Power[E, Times[2, a]], Power[Times[c, Power[x, n]], Times[4, Power[n, -1]]]]]], Power[x, -1]], x], x], And[FreeQ[List[a, b, c, n], x], ZeroQ[Plus[Times[b, n], -2]]]]], RuleDelayed[HoldPattern[Int[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Rational[1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[x, Sqrt[Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]]], Power[Sqrt[Plus[1, Times[Power[E, Times[2, a]], Power[Times[c, Power[x, n]], Times[4, Power[n, -1]]]]]], -1]], Int[Times[Sqrt[Plus[1, Times[Power[E, Times[2, a]], Power[Times[c, Power[x, n]], Times[4, Power[n, -1]]]]]], Power[x, -1]], x], x], And[FreeQ[List[a, b, c, n], x], ZeroQ[Plus[Times[b, n], -2]]]]], RuleDelayed[HoldPattern[Int[Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[Times[-1, Power[E, Times[-1, a, b, n, p]], Power[Times[2, b, n, p], -1], Power[Times[c, Power[x, n]], Times[-1, Power[Times[n, p], -1]]]], Times[Power[E, Times[a, b, n, p]], Power[Times[2, b, n, p], -1], Power[Times[c, Power[x, n]], Times[1, Power[Times[n, p], -1]]]]], p], x], x], And[FreeQ[List[a, b, c, n], x], PositiveIntegerQ[p], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1]]]]], RuleDelayed[HoldPattern[Int[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[Times[Power[E, Times[-1, a, b, n, p]], Power[2, -1], Power[Times[c, Power[x, n]], Times[-1, Power[Times[n, p], -1]]]], Times[Power[E, Times[a, b, n, p]], Power[2, -1], Power[Times[c, Power[x, n]], Times[1, Power[Times[n, p], -1]]]]], p], x], x], And[FreeQ[List[a, b, c, n], x], PositiveIntegerQ[p], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1]]]]], RuleDelayed[HoldPattern[Int[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Plus[Times[Power[b, 2], Power[n, 2]], -1], -1]], x]], Simp[Times[b, n, x, Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Plus[Times[Power[b, 2], Power[n, 2]], -1], -1]], x]], And[FreeQ[List[a, b, c, n], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2]], -1]]]]], RuleDelayed[HoldPattern[Int[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Plus[Times[Power[b, 2], Power[n, 2]], -1], -1]], x]], Simp[Times[b, n, x, Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Plus[Times[Power[b, 2], Power[n, 2]], -1], -1]], x]], And[FreeQ[List[a, b, c, n], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2]], -1]]]]], RuleDelayed[HoldPattern[Int[Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Power[Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], p], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1], -1]], x]], Plus[Times[-1, Dist[Times[Power[b, 2], Power[n, 2], p, Plus[p, -1], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1], -1]], Int[Power[Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], x], x]], Simp[Times[b, n, p, x, Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -1]], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1], -1]], x]]], And[FreeQ[List[a, b, c, n], x], RationalQ[p], Greater[p, 1], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1]]]]], RuleDelayed[HoldPattern[Int[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Power[Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], p], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1], -1]], x]], Plus[Dist[Times[Power[b, 2], Power[n, 2], p, Plus[p, -1], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1], -1]], Int[Power[Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], x], x], Simp[Times[b, n, p, x, Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -1]], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1], -1]], x]]], And[FreeQ[List[a, b, c, n], x], RationalQ[p], Greater[p, 1], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1]]]]], RuleDelayed[HoldPattern[Int[Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Coth[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[b, n, Plus[p, 1]], -1]], x], Plus[Times[-1, Dist[Times[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], -1], Power[Times[Power[b, 2], Power[n, 2], Plus[p, 1], Plus[p, 2]], -1]], Int[Power[Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], x], x]], Times[-1, Simp[Times[x, Power[Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, 1], Plus[p, 2]], -1]], x]]]], And[FreeQ[List[a, b, c, n], x], RationalQ[p], Less[p, -1], Unequal[p, -2], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], -1]]]]], RuleDelayed[HoldPattern[Int[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Tanh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[b, n, Plus[p, 1]], -1]], x]], Plus[Dist[Times[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], -1], Power[Times[Power[b, 2], Power[n, 2], Plus[p, 1], Plus[p, 2]], -1]], Int[Power[Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], x], x], Simp[Times[x, Power[Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, 1], Plus[p, 2]], -1]], x]]], And[FreeQ[List[a, b, c, n], x], RationalQ[p], Less[p, -1], Unequal[p, -2], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], -1]]]]], RuleDelayed[HoldPattern[Int[Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[x, Power[Plus[Times[-1, Power[E, Times[-1, a]], Power[Times[c, Power[x, n]], Times[-1, b]]], Times[Power[E, a], Power[Times[c, Power[x, n]], b]]], p], Power[Times[Plus[Times[b, n, p], 1], Power[Plus[2, Times[-1, 2, Power[E, Times[-2, a]], Power[Times[c, Power[x, n]], Times[-2, b]]]], p]], -1], Hypergeometric2F1[Times[-1, p], Times[-1, Plus[1, Times[b, n, p]], Power[Times[2, b, n], -1]], Plus[1, Times[-1, Plus[1, Times[b, n, p]], Power[Times[2, b, n], -1]]], Times[Power[E, Times[-2, a]], Power[Times[c, Power[x, n]], Times[-2, b]]]]], x], And[FreeQ[List[a, b, c, n, p], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1]]]]], RuleDelayed[HoldPattern[Int[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[x, Power[Plus[Times[Power[E, Times[-1, a]], Power[Times[c, Power[x, n]], Times[-1, b]]], Times[Power[E, a], Power[Times[c, Power[x, n]], b]]], p], Power[Times[Plus[Times[b, n, p], 1], Power[Plus[2, Times[2, Power[E, Times[-2, a]], Power[Times[c, Power[x, n]], Times[-2, b]]]], p]], -1], Hypergeometric2F1[Times[-1, p], Times[-1, Plus[1, Times[b, n, p]], Power[Times[2, b, n], -1]], Plus[1, Times[-1, Plus[1, Times[b, n, p]], Power[Times[2, b, n], -1]]], Times[-1, Power[E, Times[-2, a]], Power[Times[c, Power[x, n]], Times[-2, b]]]]], x], And[FreeQ[List[a, b, c, n, p], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[p, 2], Power[x, Plus[m, 1]], Power[Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[Plus[m, 1], Plus[p, 1]], -1]], x]], Simp[Times[Power[x, Plus[m, 1]], Coth[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[b, n, Plus[p, 1]], -1]], x]], And[FreeQ[List[a, b, c, m, n, p], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], Times[-1, Power[Plus[m, 1], 2]]]], NonzeroQ[Plus[p, 1]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[p, 2], Power[x, Plus[m, 1]], Power[Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[Plus[m, 1], Plus[p, 1]], -1]], x], Times[-1, Simp[Times[Power[x, Plus[m, 1]], Tanh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[b, n, Plus[p, 1]], -1]], x]]], And[FreeQ[List[a, b, c, m, n, p], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], Times[-1, Power[Plus[m, 1], 2]]]], NonzeroQ[Plus[p, 1]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[2, p], -1]], Int[ExpandIntegrand[Times[Power[x, m], Power[Plus[Times[-1, Plus[m, 1], Power[Times[b, n, p], -1], Power[E, Times[-1, a, b, n, p, Power[Plus[m, 1], -1]]], Power[Times[c, Power[x, n]], Times[-1, Plus[m, 1], Power[Times[n, p], -1]]]], Times[Plus[m, 1], Power[Times[b, n, p], -1], Power[E, Times[Times[a, b, n, p], Power[Plus[m, 1], -1]]], Power[Times[c, Power[x, n]], Times[Plus[m, 1], Power[Times[n, p], -1]]]]], p]], x], x], x], And[FreeQ[List[a, b, c, m, n], x], PositiveIntegerQ[p], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Times[-1, Power[Plus[m, 1], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[2, p], -1]], Int[ExpandIntegrand[Times[Power[x, m], Power[Plus[Times[Power[E, Times[Times[a, b, n, p], Power[Plus[m, 1], -1]]], Power[Times[c, Power[x, n]], Times[Plus[m, 1], Power[Times[n, p], -1]]]], Times[Power[E, Times[-1, a, b, n, p, Power[Plus[m, 1], -1]]], Power[Times[c, Power[x, n]], Times[-1, Plus[m, 1], Power[Times[n, p], -1]]]]], p]], x], x], x], And[FreeQ[List[a, b, c, m, n], x], PositiveIntegerQ[p], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Times[-1, Power[Plus[m, 1], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[m, 1], Power[x, Plus[m, 1]], Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Plus[Times[Power[b, 2], Power[n, 2]], Times[-1, Power[Plus[m, 1], 2]]], -1]], x]], Simp[Times[b, n, Power[x, Plus[m, 1]], Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Plus[Times[Power[b, 2], Power[n, 2]], Times[-1, Power[Plus[m, 1], 2]]], -1]], x]], And[FreeQ[List[a, b, c, m, n], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2]], Times[-1, Power[Plus[m, 1], 2]]]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[m, 1], Power[x, Plus[m, 1]], Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Plus[Times[Power[b, 2], Power[n, 2]], Times[-1, Power[Plus[m, 1], 2]]], -1]], x]], Simp[Times[b, n, Power[x, Plus[m, 1]], Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Plus[Times[Power[b, 2], Power[n, 2]], Times[-1, Power[Plus[m, 1], 2]]], -1]], x]], And[FreeQ[List[a, b, c, m, n], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2]], Times[-1, Power[Plus[m, 1], 2]]]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[m, 1], Power[x, Plus[m, 1]], Power[Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], p], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Times[-1, Power[Plus[m, 1], 2]]], -1]], x]], Plus[Times[-1, Dist[Times[Power[b, 2], Power[n, 2], p, Plus[p, -1], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Times[-1, Power[Plus[m, 1], 2]]], -1]], Int[Times[Power[x, m], Power[Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]]], x], x]], Simp[Times[b, n, p, Power[x, Plus[m, 1]], Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -1]], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Times[-1, Power[Plus[m, 1], 2]]], -1]], x]]], And[FreeQ[List[a, b, c, m, n], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Times[-1, Power[Plus[m, 1], 2]]]], RationalQ[p], Greater[p, 1], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[m, 1], Power[x, Plus[m, 1]], Power[Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], p], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Times[-1, Power[Plus[m, 1], 2]]], -1]], x]], Plus[Dist[Times[Power[b, 2], Power[n, 2], p, Plus[p, -1], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Times[-1, Power[Plus[m, 1], 2]]], -1]], Int[Times[Power[x, m], Power[Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]]], x], x], Simp[Times[b, n, p, Power[x, Plus[m, 1]], Power[Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -1]], Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Times[-1, Power[Plus[m, 1], 2]]], -1]], x]]], And[FreeQ[List[a, b, c, m, n], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Times[-1, Power[Plus[m, 1], 2]]]], RationalQ[p], Greater[p, 1], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Coth[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[b, n, Plus[p, 1]], -1]], x], Plus[Times[-1, Dist[Times[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], Times[-1, Power[Plus[m, 1], 2]]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, 1], Plus[p, 2]], -1]], Int[Times[Power[x, m], Power[Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]]], x], x]], Times[-1, Simp[Times[Plus[m, 1], Power[x, Plus[m, 1]], Power[Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, 1], Plus[p, 2]], -1]], x]]]], And[FreeQ[List[a, b, c, m, n], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], Times[-1, Power[Plus[m, 1], 2]]]], RationalQ[p], Less[p, -1], Unequal[p, -2], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[m, 1]], Tanh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[b, n, Plus[p, 1]], -1]], x]], Plus[Dist[Times[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], Times[-1, Power[Plus[m, 1], 2]]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, 1], Plus[p, 2]], -1]], Int[Times[Power[x, m], Power[Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]]], x], x], Simp[Times[Plus[m, 1], Power[x, Plus[m, 1]], Power[Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, 1], Plus[p, 2]], -1]], x]]], And[FreeQ[List[a, b, c, m, n], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], Times[-1, Power[Plus[m, 1], 2]]]], RationalQ[p], Less[p, -1], Unequal[p, -2], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[x, Plus[m, 1]], Power[Plus[Times[-1, Power[E, Times[-1, a]], Power[Times[c, Power[x, n]], Times[-1, b]]], Times[Power[E, a], Power[Times[c, Power[x, n]], b]]], p], Power[Times[Plus[m, Times[b, n, p], 1], Power[Plus[2, Times[-1, 2, Power[E, Times[-2, a]], Power[Times[c, Power[x, n]], Times[-2, b]]]], p]], -1], Hypergeometric2F1[Times[-1, p], Times[-1, Plus[m, Times[b, n, p], 1], Power[Times[2, b, n], -1]], Plus[1, Times[-1, Plus[m, Times[b, n, p], 1], Power[Times[2, b, n], -1]]], Times[Power[E, Times[-2, a]], Power[Times[c, Power[x, n]], Times[-2, b]]]]], x], And[FreeQ[List[a, b, c, m, n, p], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Times[-1, Power[Plus[m, 1], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[x, Plus[m, 1]], Power[Plus[Times[Power[E, Times[-1, a]], Power[Times[c, Power[x, n]], Times[-1, b]]], Times[Power[E, a], Power[Times[c, Power[x, n]], b]]], p], Power[Times[Plus[m, Times[b, n, p], 1], Power[Plus[2, Times[2, Power[E, Times[-2, a]], Power[Times[c, Power[x, n]], Times[-2, b]]]], p]], -1], Hypergeometric2F1[Times[-1, p], Times[-1, Plus[m, Times[b, n, p], 1], Power[Times[2, b, n], -1]], Plus[1, Times[-1, Plus[m, Times[b, n, p], 1], Power[Times[2, b, n], -1]]], Times[-1, Power[E, Times[-2, a]], Power[Times[c, Power[x, n]], Times[-2, b]]]]], x], And[FreeQ[List[a, b, c, m, n, p], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Times[-1, Power[Plus[m, 1], 2]]]]]]], RuleDelayed[HoldPattern[Int[Power[Sech[Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[2, p], Int[Power[Times[Power[Times[c, Power[x, n]], b], Power[Plus[1, Power[Times[c, Power[x, n]], Times[2, b]]], -1]], p], x], x], And[FreeQ[c, x], RationalQ[b, n, p]]]], RuleDelayed[HoldPattern[Int[Power[Csch[Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[2, p], Int[Power[Times[Power[Times[c, Power[x, n]], b], Power[Plus[-1, Power[Times[c, Power[x, n]], Times[2, b]]], -1]], p], x], x], And[FreeQ[c, x], RationalQ[b, n, p]]]], RuleDelayed[HoldPattern[Int[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, Power[E, Times[-1, a, b, n]]], Int[Times[Power[Times[c, Power[x, n]], Times[1, Power[n, -1]]], Power[Plus[Power[E, Times[-2, a, b, n]], Power[Times[c, Power[x, n]], Times[2, Power[n, -1]]]], -1]], x], x], And[FreeQ[List[a, b, c, n], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2]], -1]]]]], RuleDelayed[HoldPattern[Int[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-2, b, n, Power[E, Times[-1, a, b, n]]], Int[Times[Power[Times[c, Power[x, n]], Times[1, Power[n, -1]]], Power[Plus[Power[E, Times[-2, a, b, n]], Times[-1, Power[Times[c, Power[x, n]], Times[2, Power[n, -1]]]]], -1]], x], x], And[FreeQ[List[a, b, c, n], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2]], -1]]]]], RuleDelayed[HoldPattern[Int[Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[p, -2], x, Power[Sech[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Plus[p, -1], -1]], x], Simp[Times[x, Tanh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Sech[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[b, n, Plus[p, -1]], -1]], x]], And[FreeQ[List[a, b, c, n, p], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], -1]], NonzeroQ[Plus[p, -1]]]]], RuleDelayed[HoldPattern[Int[Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[p, -2], x, Power[Csch[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Plus[p, -1], -1]], x]], Times[-1, Simp[Times[x, Coth[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Csch[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[b, n, Plus[p, -1]], -1]], x]]], And[FreeQ[List[a, b, c, n, p], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], -1]], NonzeroQ[Plus[p, -1]]]]], RuleDelayed[HoldPattern[Int[Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Tanh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Sech[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[b, n, Plus[p, -1]], -1]], x], Plus[Dist[Times[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], -1], Power[Times[Power[b, 2], Power[n, 2], Plus[p, -1], Plus[p, -2]], -1]], Int[Power[Sech[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], x], x], Simp[Times[x, Power[Sech[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, -1], Plus[p, -2]], -1]], x]]], And[FreeQ[List[a, b, c, n], x], RationalQ[p], Greater[p, 1], Unequal[p, 2], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], -1]]]]], RuleDelayed[HoldPattern[Int[Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Coth[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Csch[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[b, n, Plus[p, -1]], -1]], x]], Plus[Times[-1, Dist[Times[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], -1], Power[Times[Power[b, 2], Power[n, 2], Plus[p, -1], Plus[p, -2]], -1]], Int[Power[Csch[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], x], x]], Times[-1, Simp[Times[x, Power[Csch[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, -1], Plus[p, -2]], -1]], x]]]], And[FreeQ[List[a, b, c, n], x], RationalQ[p], Greater[p, 1], Unequal[p, 2], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], -1]]]]], RuleDelayed[HoldPattern[Int[Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, n, p, x, Power[Sech[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 1]], Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1], -1]], x]], Plus[Dist[Times[Power[b, 2], Power[n, 2], p, Plus[p, 1], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1], -1]], Int[Power[Sech[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], x], x], Times[-1, Simp[Times[x, Power[Sech[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], p], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1], -1]], x]]]], And[FreeQ[List[a, b, c, n], x], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1]]]]], RuleDelayed[HoldPattern[Int[Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, n, p, x, Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Csch[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 1]], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1], -1]], x]], Plus[Times[-1, Dist[Times[Power[b, 2], Power[n, 2], p, Plus[p, 1], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1], -1]], Int[Power[Csch[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], x], x]], Times[-1, Simp[Times[x, Power[Csch[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], p], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1], -1]], x]]]], And[FreeQ[List[a, b, c, n], x], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1]]]]], RuleDelayed[HoldPattern[Int[Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[2, p], x, Power[Plus[Times[Power[E, Times[2, a]], Power[Times[c, Power[x, n]], Times[2, b]]], 1], p], Power[Plus[Times[b, n, p], 1], -1], Power[Times[Power[E, a], Power[Times[c, Power[x, n]], b], Power[Plus[Times[Power[E, Times[2, a]], Power[Times[c, Power[x, n]], Times[2, b]]], 1], -1]], p], Hypergeometric2F1[p, Times[Plus[Times[b, n, p], 1], Power[Times[2, b, n], -1]], Plus[1, Times[Plus[Times[b, n, p], 1], Power[Times[2, b, n], -1]]], Times[-1, Power[E, Times[2, a]], Power[Times[c, Power[x, n]], Times[2, b]]]]], x], And[FreeQ[List[a, b, c, n, p], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1]]]]], RuleDelayed[HoldPattern[Int[Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[x, Power[Plus[2, Times[-1, 2, Power[E, Times[2, a]], Power[Times[c, Power[x, n]], Times[2, b]]]], p], Power[Plus[Times[b, n, p], 1], -1], Power[Times[Power[E, a], Power[Times[c, Power[x, n]], b], Power[Plus[Times[Power[E, Times[2, a]], Power[Times[c, Power[x, n]], Times[2, b]]], -1], -1]], p], Hypergeometric2F1[p, Times[Plus[Times[b, n, p], 1], Power[Times[2, b, n], -1]], Plus[1, Times[Plus[Times[b, n, p], 1], Power[Times[2, b, n], -1]]], Times[Power[E, Times[2, a]], Power[Times[c, Power[x, n]], Times[2, b]]]]], x], And[FreeQ[List[a, b, c, n, p], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sech[Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[2, p], Int[Times[Power[x, m], Power[Times[Power[Times[c, Power[x, n]], b], Power[Plus[1, Power[Times[c, Power[x, n]], Times[2, b]]], -1]], p]], x], x], And[FreeQ[c, x], RationalQ[b, m, n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[2, p], Int[Times[Power[x, m], Power[Times[Power[Times[c, Power[x, n]], b], Power[Plus[-1, Power[Times[c, Power[x, n]], Times[2, b]]], -1]], p]], x], x], And[FreeQ[c, x], RationalQ[b, m, n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Sec[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, Power[E, Times[-1, a, b, n, Power[Plus[m, 1], -1]]]], Int[Times[Power[x, m], Power[Times[c, Power[x, n]], Times[Plus[m, 1], Power[n, -1]]], Power[Plus[Power[E, Times[-2, a, b, n, Power[Plus[m, 1], -1]]], Power[Times[c, Power[x, n]], Times[2, Plus[m, 1], Power[n, -1]]]], -1]], x], x], And[FreeQ[List[a, b, c, m, n], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2]], Times[-1, Power[Plus[m, 1], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Csc[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-2, b, n, Power[Plus[m, 1], -1], Power[E, Times[-1, a, b, n, Power[Plus[m, 1], -1]]]], Int[Times[Power[x, m], Power[Times[c, Power[x, n]], Times[Plus[m, 1], Power[n, -1]]], Power[Plus[Power[E, Times[-2, a, b, n, Power[Plus[m, 1], -1]]], Times[-1, Power[Times[c, Power[x, n]], Times[2, Plus[m, 1], Power[n, -1]]]]], -1]], x], x], And[FreeQ[List[a, b, c, m, n], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2]], Times[-1, Power[Plus[m, 1], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[p, -2], Power[x, Plus[m, 1]], Power[Sech[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[Plus[m, 1], Plus[p, -1]], -1]], x], Simp[Times[Power[x, Plus[m, 1]], Tanh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Sech[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[b, n, Plus[p, -1]], -1]], x]], And[FreeQ[List[a, b, c, m, n, p], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], Power[Plus[m, 1], 2]]], NonzeroQ[Plus[m, 1]], NonzeroQ[Plus[p, -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[p, -2], Power[x, Plus[m, 1]], Power[Csch[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[Plus[m, 1], Plus[p, -1]], -1]], x]], Times[-1, Simp[Times[Power[x, Plus[m, 1]], Coth[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Csch[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[b, n, Plus[p, -1]], -1]], x]]], And[FreeQ[List[a, b, c, m, n, p], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], Power[Plus[m, 1], 2]]], NonzeroQ[Plus[m, 1]], NonzeroQ[Plus[p, -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Tanh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Sech[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[b, n, Plus[p, -1]], -1]], x], Plus[Dist[Times[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], Times[-1, Power[Plus[m, 1], 2]]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, -1], Plus[p, -2]], -1]], Int[Times[Power[x, m], Power[Sech[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]]], x], x], Simp[Times[Plus[m, 1], Power[x, Plus[m, 1]], Power[Sech[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, -1], Plus[p, -2]], -1]], x]]], And[FreeQ[List[a, b, c, m, n], x], RationalQ[p], Greater[p, 1], Unequal[p, 2], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], Times[-1, Power[Plus[m, 1], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[m, 1]], Coth[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Csch[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[b, n, Plus[p, -1]], -1]], x]], Plus[Times[-1, Dist[Times[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], Times[-1, Power[Plus[m, 1], 2]]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, -1], Plus[p, -2]], -1]], Int[Times[Power[x, m], Power[Csch[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]]], x], x]], Times[-1, Simp[Times[Plus[m, 1], Power[x, Plus[m, 1]], Power[Csch[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, -1], Plus[p, -2]], -1]], x]]]], And[FreeQ[List[a, b, c, m, n], x], RationalQ[p], Greater[p, 1], Unequal[p, 2], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], Times[-1, Power[Plus[m, 1], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[m, 1], Power[x, Plus[m, 1]], Power[Sech[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], p], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Times[-1, Power[Plus[m, 1], 2]]], -1]], x]], Plus[Dist[Times[Power[b, 2], Power[n, 2], p, Plus[p, 1], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Times[-1, Power[Plus[m, 1], 2]]], -1]], Int[Times[Power[x, m], Power[Sech[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]]], x], x], Times[-1, Simp[Times[b, n, p, Power[x, Plus[m, 1]], Power[Sech[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 1]], Sinh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Times[-1, Power[Plus[m, 1], 2]]], -1]], x]]]], And[FreeQ[List[a, b, c, m, n], x], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Times[-1, Power[Plus[m, 1], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[m, 1], Power[x, Plus[m, 1]], Power[Csch[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], p], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Times[-1, Power[Plus[m, 1], 2]]], -1]], x]], Plus[Times[-1, Dist[Times[Power[b, 2], Power[n, 2], p, Plus[p, 1], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Times[-1, Power[Plus[m, 1], 2]]], -1]], Int[Times[Power[x, m], Power[Csch[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]]], x], x]], Times[-1, Simp[Times[b, n, p, Power[x, Plus[m, 1]], Cosh[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Csch[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 1]], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Times[-1, Power[Plus[m, 1], 2]]], -1]], x]]]], And[FreeQ[List[a, b, c, m, n], x], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Times[-1, Power[Plus[m, 1], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[2, p], Power[x, Plus[m, 1]], Power[Plus[Times[Power[E, Times[2, a]], Power[Times[c, Power[x, n]], Times[2, b]]], 1], p], Power[Plus[m, Times[b, n, p], 1], -1], Power[Times[Power[E, a], Power[Times[c, Power[x, n]], b], Power[Plus[Times[Power[E, Times[2, a]], Power[Times[c, Power[x, n]], Times[2, b]]], 1], -1]], p], Hypergeometric2F1[p, Times[Plus[m, Times[b, n, p], 1], Power[Times[2, b, n], -1]], Plus[1, Times[Plus[m, Times[b, n, p], 1], Power[Times[2, b, n], -1]]], Times[-1, Power[E, Times[2, a]], Power[Times[c, Power[x, n]], Times[2, b]]]]], x], And[FreeQ[List[a, b, c, m, n, p], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Times[-1, Power[Plus[m, 1], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[2, p], Power[x, Plus[m, 1]], Power[Plus[Times[-1, Power[E, Times[2, a]], Power[Times[c, Power[x, n]], Times[2, b]]], 1], p], Power[Plus[m, Times[b, n, p], 1], -1], Power[Times[Power[E, a], Power[Times[c, Power[x, n]], b], Power[Plus[Times[Power[E, Times[2, a]], Power[Times[c, Power[x, n]], Times[2, b]]], -1], -1]], p], Hypergeometric2F1[p, Times[Plus[m, Times[b, n, p], 1], Power[Times[2, b, n], -1]], Plus[1, Times[Plus[m, Times[b, n, p], 1], Power[Times[2, b, n], -1]]], Times[Power[E, Times[2, a]], Power[Times[c, Power[x, n]], Times[2, b]]]]], x], And[FreeQ[List[a, b, c, m, n, p], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Times[-1, Power[Plus[m, 1], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Sinh[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Cosh[Times[a, x, Power[Log[Times[b, x]], p]]], Power[a, -1]], x], Times[-1, Dist[p, Int[Times[Sinh[Times[a, x, Power[Log[Times[b, x]], p]]], Power[Log[Times[b, x]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b], x], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Sinh[Times[a, x, Power[Log[Times[b, x]], p]]], Power[a, -1]], x], Times[-1, Dist[p, Int[Times[Cosh[Times[a, x, Power[Log[Times[b, x]], p]]], Power[Log[Times[b, x]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b], x], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Sinh[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Cosh[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Times[a, n, Power[x, Plus[n, -1]]], -1]], x], Plus[Times[-1, Dist[Times[p, Power[n, -1]], Int[Times[Sinh[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Log[Times[b, x]], Plus[p, -1]]], x], x]], Dist[Times[Plus[n, -1], Power[Times[a, n], -1]], Int[Times[Cosh[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Power[x, n], -1]], x], x]]], And[FreeQ[List[a, b], x], RationalQ[n, p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Sinh[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Times[a, n, Power[x, Plus[n, -1]]], -1]], x], Plus[Times[-1, Dist[Times[p, Power[n, -1]], Int[Times[Cosh[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Log[Times[b, x]], Plus[p, -1]]], x], x]], Dist[Times[Plus[n, -1], Power[Times[a, n], -1]], Int[Times[Sinh[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Power[x, n], -1]], x], x]]], And[FreeQ[List[a, b], x], RationalQ[n, p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Sinh[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Cosh[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Times[a, n], -1]], x]], Times[-1, Dist[Times[p, Power[n, -1]], Int[Times[Power[x, Plus[n, -1]], Sinh[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Log[Times[b, x]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, m, n], x], ZeroQ[Plus[m, Times[-1, n], 1]], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Sinh[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Times[a, n], -1]], x], Times[-1, Dist[Times[p, Power[n, -1]], Int[Times[Power[x, Plus[n, -1]], Cosh[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Log[Times[b, x]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, m, n], x], ZeroQ[Plus[m, Times[-1, n], 1]], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Sinh[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Cosh[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Times[a, n], -1]], x], Plus[Times[-1, Dist[Times[p, Power[n, -1]], Int[Times[Power[x, m], Sinh[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Log[Times[b, x]], Plus[p, -1]]], x], x]], Times[-1, Dist[Times[Plus[m, Times[-1, n], 1], Power[Times[a, n], -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Cosh[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]]], x], x]]]], And[FreeQ[List[a, b], x], RationalQ[m, n, p], Greater[p, 0], NonzeroQ[Plus[m, Times[-1, n], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Sinh[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Times[a, n], -1]], x], Plus[Times[-1, Dist[Times[p, Power[n, -1]], Int[Times[Power[x, m], Cosh[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Log[Times[b, x]], Plus[p, -1]]], x], x]], Times[-1, Dist[Times[Plus[m, Times[-1, n], 1], Power[Times[a, n], -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Sinh[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]]], x], x]]]], And[FreeQ[List[a, b], x], RationalQ[m, n, p], Greater[p, 0], NonzeroQ[Plus[m, Times[-1, n], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Sinh[Times[Optional[Pattern[a, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[d, -1], Subst[Int[Times[Power[Sinh[Times[a, x]], n], Power[Power[x, 2], -1]], x], x, Times[1, Power[Plus[c, Times[d, x]], -1]]], x]], And[FreeQ[List[a, c, d], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Power[Cosh[Times[Optional[Pattern[a, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[d, -1], Subst[Int[Times[Power[Cosh[Times[a, x]], n], Power[Power[x, 2], -1]], x], x, Times[1, Power[Plus[c, Times[d, x]], -1]]], x]], And[FreeQ[List[a, c, d], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Power[Sinh[Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[d, -1], Subst[Int[Times[Power[Sinh[Plus[Times[b, e, Power[d, -1]], Times[-1, e, Plus[Times[b, c], Times[-1, a, d]], x, Power[d, -1]]]], n], Power[Power[x, 2], -1]], x], x, Times[1, Power[Plus[c, Times[d, x]], -1]]], x]], And[FreeQ[List[a, b, c, d], x], PositiveIntegerQ[n], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Power[Cosh[Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[d, -1], Subst[Int[Times[Power[Cosh[Plus[Times[b, e, Power[d, -1]], Times[-1, e, Plus[Times[b, c], Times[-1, a, d]], x, Power[d, -1]]]], n], Power[Power[x, 2], -1]], x], x, Times[1, Power[Plus[c, Times[d, x]], -1]]], x]], And[FreeQ[List[a, b, c, d], x], PositiveIntegerQ[n], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Power[Sinh[Pattern[u, Blank[]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[lst, QuotientOfLinearsParts[u, x]]], Int[Power[Sinh[Times[Plus[Part[lst, 1], Times[Part[lst, 2], x]], Power[Plus[Part[lst, 3], Times[Part[lst, 4], x]], -1]]], n], x]], And[PositiveIntegerQ[n], QuotientOfLinearsQ[u, x]]]], RuleDelayed[HoldPattern[Int[Power[Cosh[Pattern[u, Blank[]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[lst, QuotientOfLinearsParts[u, x]]], Int[Power[Cosh[Times[Plus[Part[lst, 1], Times[Part[lst, 2], x]], Power[Plus[Part[lst, 3], Times[Part[lst, 4], x]], -1]]], n], x]], And[PositiveIntegerQ[n], QuotientOfLinearsQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Sinh[Pattern[v, Blank[]]], Optional[Pattern[p, Blank[]]]], Power[Sinh[Pattern[w, Blank[]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[Sinh[v], Plus[p, q]]], x], ZeroQ[Plus[v, Times[-1, w]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Pattern[v, Blank[]]], Optional[Pattern[p, Blank[]]]], Power[Cosh[Pattern[w, Blank[]]], Optional[Pattern[q, Blank[]]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[Cosh[v], Plus[p, q]]], x], ZeroQ[Plus[v, Times[-1, w]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Sinh[Pattern[v, Blank[]]], Optional[Pattern[p, Blank[]]]], Power[Sinh[Pattern[w, Blank[]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Times[Power[Sinh[v], p], Power[Sinh[w], q]], x], x], And[PositiveIntegerQ[p, q], Or[And[PolynomialQ[v, x], PolynomialQ[w, x]], And[BinomialQ[List[v, w], x], IndependentQ[Cancel[Times[v, Power[w, -1]]], x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Pattern[v, Blank[]]], Optional[Pattern[p, Blank[]]]], Power[Cosh[Pattern[w, Blank[]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Times[Power[Cosh[v], p], Power[Cosh[w], q]], x], x], And[PositiveIntegerQ[p, q], Or[And[PolynomialQ[v, x], PolynomialQ[w, x]], And[BinomialQ[List[v, w], x], IndependentQ[Cancel[Times[v, Power[w, -1]]], x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Pattern[v, Blank[]]], Optional[Pattern[p, Blank[]]]], Power[Sinh[Pattern[w, Blank[]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[x, m], Times[Power[Sinh[v], p], Power[Sinh[w], q]], x], x], And[PositiveIntegerQ[m, p, q], Or[And[PolynomialQ[v, x], PolynomialQ[w, x]], And[BinomialQ[List[v, w], x], IndependentQ[Cancel[Times[v, Power[w, -1]]], x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Pattern[v, Blank[]]], Optional[Pattern[p, Blank[]]]], Power[Cosh[Pattern[w, Blank[]]], Optional[Pattern[q, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[x, m], Times[Power[Cosh[v], p], Power[Cosh[w], q]], x], x], And[PositiveIntegerQ[m, p, q], Or[And[PolynomialQ[v, x], PolynomialQ[w, x]], And[BinomialQ[List[v, w], x], IndependentQ[Cancel[Times[v, Power[w, -1]]], x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Pattern[w, Blank[]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[u, Blank[]]], Power[Sinh[Pattern[v, Blank[]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[2, p], -1]], Int[Times[u, Power[Sinh[Times[2, v]], p]], x], x], And[ZeroQ[Plus[v, Times[-1, w]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Pattern[w, Blank[]]], Optional[Pattern[q, Blank[]]]], Power[Sinh[Pattern[v, Blank[]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Times[Power[Sinh[v], p], Power[Cosh[w], q]], x], x], And[PositiveIntegerQ[p, q], Or[And[PolynomialQ[v, x], PolynomialQ[w, x]], And[BinomialQ[List[v, w], x], IndependentQ[Cancel[Times[v, Power[w, -1]]], x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Pattern[w, Blank[]]], Optional[Pattern[q, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Pattern[v, Blank[]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[x, m], Times[Power[Sinh[v], p], Power[Cosh[w], q]], x], x], And[PositiveIntegerQ[m, p, q], Or[And[PolynomialQ[v, x], PolynomialQ[w, x]], And[BinomialQ[List[v, w], x], IndependentQ[Cancel[Times[v, Power[w, -1]]], x]]]]]], RuleDelayed[HoldPattern[Int[Times[Sinh[Pattern[v, Blank[]]], Power[Tanh[Pattern[w, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Int[Times[Cosh[v], Power[Tanh[w], Plus[n, -1]]], x], Times[-1, Dist[Cosh[Plus[v, Times[-1, w]]], Int[Times[Sech[w], Power[Tanh[w], Plus[n, -1]]], x], x]]], And[RationalQ[n], Greater[n, 0], FreeQ[Plus[v, Times[-1, w]], x], NonzeroQ[Plus[v, Times[-1, w]]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Pattern[v, Blank[]]], Power[Coth[Pattern[w, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Int[Times[Sinh[v], Power[Coth[w], Plus[n, -1]]], x], Dist[Cosh[Plus[v, Times[-1, w]]], Int[Times[Csch[w], Power[Coth[w], Plus[n, -1]]], x], x]], And[RationalQ[n], Greater[n, 0], FreeQ[Plus[v, Times[-1, w]], x], NonzeroQ[Plus[v, Times[-1, w]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Coth[Pattern[w, Blank[]]], Optional[Pattern[n, Blank[]]]], Sinh[Pattern[v, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Int[Times[Cosh[v], Power[Coth[w], Plus[n, -1]]], x], Dist[Sinh[Plus[v, Times[-1, w]]], Int[Times[Csch[w], Power[Coth[w], Plus[n, -1]]], x], x]], And[RationalQ[n], Greater[n, 0], FreeQ[Plus[v, Times[-1, w]], x], NonzeroQ[Plus[v, Times[-1, w]]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Pattern[v, Blank[]]], Power[Tanh[Pattern[w, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Int[Times[Sinh[v], Power[Tanh[w], Plus[n, -1]]], x], Times[-1, Dist[Sinh[Plus[v, Times[-1, w]]], Int[Times[Sech[w], Power[Tanh[w], Plus[n, -1]]], x], x]]], And[RationalQ[n], Greater[n, 0], FreeQ[Plus[v, Times[-1, w]], x], NonzeroQ[Plus[v, Times[-1, w]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Sech[Pattern[w, Blank[]]], Optional[Pattern[n, Blank[]]]], Sinh[Pattern[v, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Cosh[Plus[v, Times[-1, w]]], Int[Times[Tanh[w], Power[Sech[w], Plus[n, -1]]], x], x], Dist[Sinh[Plus[v, Times[-1, w]]], Int[Power[Sech[w], Plus[n, -1]], x], x]], And[RationalQ[n], Greater[n, 0], FreeQ[Plus[v, Times[-1, w]], x], NonzeroQ[Plus[v, Times[-1, w]]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Pattern[v, Blank[]]], Power[Csch[Pattern[w, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Cosh[Plus[v, Times[-1, w]]], Int[Times[Coth[w], Power[Csch[w], Plus[n, -1]]], x], x], Dist[Sinh[Plus[v, Times[-1, w]]], Int[Power[Csch[w], Plus[n, -1]], x], x]], And[RationalQ[n], Greater[n, 0], FreeQ[Plus[v, Times[-1, w]], x], NonzeroQ[Plus[v, Times[-1, w]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Pattern[w, Blank[]]], Optional[Pattern[n, Blank[]]]], Sinh[Pattern[v, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Sinh[Plus[v, Times[-1, w]]], Int[Times[Coth[w], Power[Csch[w], Plus[n, -1]]], x], x], Dist[Cosh[Plus[v, Times[-1, w]]], Int[Power[Csch[w], Plus[n, -1]], x], x]], And[RationalQ[n], Greater[n, 0], FreeQ[Plus[v, Times[-1, w]], x], NonzeroQ[Plus[v, Times[-1, w]]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Pattern[v, Blank[]]], Power[Sech[Pattern[w, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Sinh[Plus[v, Times[-1, w]]], Int[Times[Tanh[w], Power[Sech[w], Plus[n, -1]]], x], x], Dist[Cosh[Plus[v, Times[-1, w]]], Int[Power[Sech[w], Plus[n, -1]], x], x]], And[RationalQ[n], Greater[n, 0], FreeQ[Plus[v, Times[-1, w]], x], NonzeroQ[Plus[v, Times[-1, w]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[a, Times[b, Sinh[Plus[Times[2, c], Times[2, d, x]]], Power[2, -1]]], n]], x], FreeQ[List[a, b, c, d, e, f, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], 2]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[2, n], -1]], Int[Times[Power[x, m], Power[Plus[Times[2, a], Times[-1, b], Times[b, Cosh[Plus[Times[2, c], Times[2, d, x]]]]], n]], x], x], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[a, Times[-1, b]]], IntegersQ[m, n], Greater[m, 0], Less[n, 0], Or[Equal[n, -1], And[Equal[m, 1], Equal[n, -2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Power[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[2, n], -1]], Int[Times[Power[x, m], Power[Plus[Times[2, a], b, Times[b, Cosh[Plus[Times[2, c], Times[2, d, x]]]]], n]], x], x], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[a, b]], IntegersQ[m, n], Greater[m, 0], Less[n, 0], Or[Equal[n, -1], And[Equal[m, 1], Equal[n, -2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[d, Plus[m, 1]], -1]], Subst[Int[Times[Power[Plus[Times[d, e], Times[-1, c, f], Times[f, x]], m], Power[Sinh[Plus[a, Times[b, Power[x, n]]]], p]], x], x, Plus[c, Times[d, x]]], x], And[FreeQ[List[a, b, c, d, e, f, n], x], PositiveIntegerQ[m], RationalQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[d, Plus[m, 1]], -1]], Subst[Int[Times[Power[Plus[Times[d, e], Times[-1, c, f], Times[f, x]], m], Power[Cosh[Plus[a, Times[b, Power[x, n]]]], p]], x], x, Plus[c, Times[d, x]]], x], And[FreeQ[List[a, b, c, d, e, f, n], x], PositiveIntegerQ[m], RationalQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Power[Cosh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[b, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Sinh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[2, Int[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[Times[2, a], b, Times[-1, c], Times[Plus[b, c], Cosh[Plus[Times[2, d], Times[2, e, x]]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, g], x], PositiveIntegerQ[m], NonzeroQ[Plus[a, b]], NonzeroQ[Plus[a, c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sech[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Pattern[b, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Tanh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[2, Int[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[b, Times[-1, c], Times[Plus[b, c], Cosh[Plus[Times[2, d], Times[2, e, x]]]]], -1]], x], x], And[FreeQ[List[b, c, d, e, f, g], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sech[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Optional[Pattern[b, Blank[]]], Times[Optional[Pattern[a, Blank[]]], Power[Sech[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Tanh[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[2, Int[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[Times[2, a], b, Times[-1, c], Times[Plus[b, c], Cosh[Plus[Times[2, d], Times[2, e, x]]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, g], x], PositiveIntegerQ[m], NonzeroQ[Plus[a, b]], NonzeroQ[Plus[a, c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Times[Power[Coth[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[b, Blank[]]]], Pattern[c, Blank[]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[2, Int[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[b, Times[-1, c], Times[Plus[b, c], Cosh[Plus[Times[2, d], Times[2, e, x]]]]], -1]], x], x], And[FreeQ[List[b, c, d, e, f, g], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Times[Power[Csch[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[a, Blank[]]]], Times[Power[Coth[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[b, Blank[]]]], Optional[Pattern[c, Blank[]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[2, Int[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[Times[2, a], b, Times[-1, c], Times[Plus[b, c], Cosh[Plus[Times[2, d], Times[2, e, x]]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, g], x], PositiveIntegerQ[m], NonzeroQ[Plus[a, b]], NonzeroQ[Plus[a, c]]]]], RuleDelayed[HoldPattern[Int[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[Times[b, f, Plus[m, 1]], -1]], x]], Plus[Int[Times[Power[Plus[e, Times[f, x]], m], Power[E, Plus[c, Times[d, x]]], Power[Plus[a, Times[-1, Rt[Plus[Power[a, 2], Power[b, 2]], 2]], Times[b, Power[E, Plus[c, Times[d, x]]]]], -1]], x], Int[Times[Power[Plus[e, Times[f, x]], m], Power[E, Plus[c, Times[d, x]]], Power[Plus[a, Rt[Plus[Power[a, 2], Power[b, 2]], 2], Times[b, Power[E, Plus[c, Times[d, x]]]]], -1]], x]]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[Times[b, f, Plus[m, 1]], -1]], x]], Plus[Int[Times[Power[Plus[e, Times[f, x]], m], Power[E, Plus[c, Times[d, x]]], Power[Plus[a, Times[-1, Rt[Plus[Power[a, 2], Times[-1, Power[b, 2]]], 2]], Times[b, Power[E, Plus[c, Times[d, x]]]]], -1]], x], Int[Times[Power[Plus[e, Times[f, x]], m], Power[E, Plus[c, Times[d, x]]], Power[Plus[a, Rt[Plus[Power[a, 2], Times[-1, Power[b, 2]]], 2], Times[b, Power[E, Plus[c, Times[d, x]]]]], -1]], x]]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[a, -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Cosh[Plus[c, Times[d, x]]], Plus[n, -2]]], x], x], Dist[Times[1, Power[b, -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Cosh[Plus[c, Times[d, x]]], Plus[n, -2]], Sinh[Plus[c, Times[d, x]]]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], IntegerQ[n], Greater[n, 1], ZeroQ[Plus[Power[a, 2], Power[b, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[a, -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Sinh[Plus[c, Times[d, x]]], Plus[n, -2]]], x], x], Dist[Times[1, Power[b, -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Sinh[Plus[c, Times[d, x]]], Plus[n, -2]], Cosh[Plus[c, Times[d, x]]]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], IntegerQ[n], Greater[n, 1], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[a, Power[Power[b, 2], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Cosh[Plus[c, Times[d, x]]], Plus[n, -2]]], x], x]], Plus[Dist[Times[1, Power[b, -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Cosh[Plus[c, Times[d, x]]], Plus[n, -2]], Sinh[Plus[c, Times[d, x]]]], x], x], Dist[Times[Plus[Power[a, 2], Power[b, 2]], Power[Power[b, 2], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Cosh[Plus[c, Times[d, x]]], Plus[n, -2]], Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], IntegerQ[n], Greater[n, 1], NonzeroQ[Plus[Power[a, 2], Power[b, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[a, Power[Power[b, 2], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Sinh[Plus[c, Times[d, x]]], Plus[n, -2]]], x], x]], Plus[Dist[Times[1, Power[b, -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Sinh[Plus[c, Times[d, x]]], Plus[n, -2]], Cosh[Plus[c, Times[d, x]]]], x], x], Dist[Times[Plus[Power[a, 2], Times[-1, Power[b, 2]]], Power[Power[b, 2], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Sinh[Plus[c, Times[d, x]]], Plus[n, -2]], Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], IntegerQ[n], Greater[n, 1], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], -2], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[B, Plus[e, Times[f, x]], Cosh[Plus[c, Times[d, x]]], Power[Times[a, d, Plus[a, Times[b, Sinh[Plus[c, Times[d, x]]]]]], -1]], x], Times[-1, Dist[Times[B, f, Power[Times[a, d], -1]], Int[Times[Cosh[Plus[c, Times[d, x]]], Power[Plus[a, Times[b, Sinh[Plus[c, Times[d, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, A, B], x], ZeroQ[Plus[Times[a, A], Times[b, B]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -2], Plus[Times[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[B, Plus[e, Times[f, x]], Sinh[Plus[c, Times[d, x]]], Power[Times[a, d, Plus[a, Times[b, Cosh[Plus[c, Times[d, x]]]]]], -1]], x], Times[-1, Dist[Times[B, f, Power[Times[a, d], -1]], Int[Times[Sinh[Plus[c, Times[d, x]]], Power[Plus[a, Times[b, Cosh[Plus[c, Times[d, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, A, B], x], ZeroQ[Plus[Times[a, A], Times[-1, b, B]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Sech[Pattern[v, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Tanh[Pattern[v, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[Times[a, Cosh[v]], Times[b, Sinh[v]]], n], x], And[FreeQ[List[a, b], x], IntegersQ[m, n], Equal[Plus[m, n], 0], OddQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csch[Pattern[v, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Coth[Pattern[v, Blank[]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[Times[b, Cosh[v]], Times[a, Sinh[v]]], n], x], And[FreeQ[List[a, b], x], IntegersQ[m, n], Equal[Plus[m, n], 0], OddQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Sinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Sinh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[u, Times[Power[Sinh[Plus[a, Times[b, x]]], m], Power[Sinh[Plus[c, Times[d, x]]], n]], x], x], And[FreeQ[List[a, b, c, d], x], PositiveIntegerQ[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Cosh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[u, Times[Power[Cosh[Plus[a, Times[b, x]]], m], Power[Cosh[Plus[c, Times[d, x]]], n]], x], x], And[FreeQ[List[a, b, c, d], x], PositiveIntegerQ[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Sech[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Sech[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Csch[Times[Plus[Times[b, c], Times[-1, a, d]], Power[d, -1]]], Int[Tanh[Plus[a, Times[b, x]]], x], x]], Dist[Csch[Times[Plus[Times[b, c], Times[-1, a, d]], Power[b, -1]]], Int[Tanh[Plus[c, Times[d, x]]], x], x]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[b, 2], Times[-1, Power[d, 2]]]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Csch[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Csch[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Csch[Times[Plus[Times[b, c], Times[-1, a, d]], Power[b, -1]]], Int[Coth[Plus[a, Times[b, x]]], x], x], Times[-1, Dist[Csch[Times[Plus[Times[b, c], Times[-1, a, d]], Power[d, -1]]], Int[Coth[Plus[c, Times[d, x]]], x], x]]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[b, 2], Times[-1, Power[d, 2]]]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Tanh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Tanh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, x, Power[d, -1]], x], Times[-1, Dist[Times[b, Power[d, -1], Cosh[Times[Plus[Times[b, c], Times[-1, a, d]], Power[d, -1]]]], Int[Times[Sech[Plus[a, Times[b, x]]], Sech[Plus[c, Times[d, x]]]], x], x]]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[b, 2], Times[-1, Power[d, 2]]]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Coth[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Coth[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, x, Power[d, -1]], x], Dist[Cosh[Times[Plus[Times[b, c], Times[-1, a, d]], Power[d, -1]]], Int[Times[Csch[Plus[a, Times[b, x]]], Csch[Plus[c, Times[d, x]]]], x], x]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[b, 2], Times[-1, Power[d, 2]]]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Plus[Times[Cosh[Pattern[v, Blank[]]], Optional[Pattern[a, Blank[]]]], Times[Optional[Pattern[b, Blank[]]], Sinh[Pattern[v, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[Times[a, Power[E, Times[a, Power[b, -1], v]]], n]], x], And[FreeQ[List[a, b, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]]]