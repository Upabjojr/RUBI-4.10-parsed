List[RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], m], Power[Times[b, Power[F, Times[g, Plus[e, Times[f, x]]]]], n], Power[Times[f, g, n, Log[F]], -1]], x], Times[-1, Dist[Times[d, m, Power[Times[f, g, n, Log[F]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Times[b, Power[F, Times[g, Plus[e, Times[f, x]]]]], n]], x], x]]], And[FreeQ[List[F, b, c, d, e, f, g, n], x], RationalQ[m], Greater[m, 0], IntegerQ[Times[2, m]], Not[SameQ[$UseGamma, True]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Power[Times[b, Power[F, Times[g, Plus[e, Times[f, x]]]]], n], Power[Times[d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[f, g, n, Log[F], Power[Times[d, Plus[m, 1]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Power[Times[b, Power[F, Times[g, Plus[e, Times[f, x]]]]], n]], x], x]]], And[FreeQ[List[F, b, c, d, e, f, g, n], x], RationalQ[m], Less[m, -1], IntegerQ[Times[2, m]], Not[SameQ[$UseGamma, True]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[F, Times[g, Plus[e, Times[-1, c, f, Power[d, -1]]]]], Power[d, -1], ExpIntegralEi[Times[f, g, Plus[c, Times[d, x]], Log[F], Power[d, -1]]]], x], And[FreeQ[List[F, c, d, e, f, g], x], Not[SameQ[$UseGamma, True]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Times[-1, d], m], Power[F, Times[g, Plus[e, Times[-1, c, f, Power[d, -1]]]]], Power[Times[Power[f, Plus[m, 1]], Power[g, Plus[m, 1]], Power[Log[F], Plus[m, 1]]], -1], Gamma[Plus[m, 1], Times[-1, f, g, Log[F], Power[d, -1], Plus[c, Times[d, x]]]]], x], And[FreeQ[List[F, c, d, e, f, g], x], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, Power[d, -1]], Subst[Int[Power[F, Plus[Times[g, Plus[e, Times[-1, c, f, Power[d, -1]]]], Times[f, g, Power[x, 2], Power[d, -1]]]], x], x, Sqrt[Plus[c, Times[d, x]]]], x], And[FreeQ[List[F, c, d, e, f, g], x], Not[SameQ[$UseGamma, True]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Power[F, Times[g, Plus[e, Times[-1, c, f, Power[d, -1]]]]], Power[Plus[c, Times[d, x]], FracPart[m]], Power[Times[d, Power[Times[-1, f, g, Log[F], Power[d, -1]], Plus[IntPart[m], 1]], Power[Times[-1, f, g, Log[F], Plus[c, Times[d, x]], Power[d, -1]], FracPart[m]]], -1], Gamma[Plus[m, 1], Times[Times[-1, f, g, Log[F], Power[d, -1]], Plus[c, Times[d, x]]]]], x]], And[FreeQ[List[F, c, d, e, f, g, m], x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[b, Power[F, Times[g, Plus[e, Times[f, x]]]]], n], Power[Power[F, Times[g, n, Plus[e, Times[f, x]]]], -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[F, Times[g, n, Plus[e, Times[f, x]]]]], x], x], FreeQ[List[F, b, c, d, e, f, g, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[c, Times[d, x]], m], Power[Plus[a, Times[b, Power[Power[F, Times[g, Plus[e, Times[f, x]]]], n]]], p], x], x], And[FreeQ[List[F, a, b, c, d, e, f, g, m, n], x], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[c, Times[d, x]], m], Power[Times[a, f, g, n, Log[F]], -1], Log[Plus[1, Times[a, Power[Times[b, Power[Power[F, Times[g, Plus[e, Times[f, x]]]], n]], -1]]]]], x]], Dist[Times[d, m, Power[Times[a, f, g, n, Log[F]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Log[Plus[1, Times[a, Power[Times[b, Power[Power[F, Times[g, Plus[e, Times[f, x]]]], n]], -1]]]]], x], x]], And[FreeQ[List[F, a, b, c, d, e, f, g, n], x], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Power[Plus[a, Times[b, Power[Power[F, Times[g, Plus[e, Times[f, x]]]], n]]], p], x]]], Plus[Dist[Power[Plus[c, Times[d, x]], m], u, x], Times[-1, Dist[Times[d, m], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], u], x], x]]]], And[FreeQ[List[F, a, b, c, d, e, f, g, n], x], RationalQ[m, p], Greater[m, 0], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[v, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[NormalizePowerOfLinear[u, x], m], Power[Plus[a, Times[b, Power[Power[F, Times[g, ExpandToSum[v, x]]], n]]], p]], x], And[FreeQ[List[F, a, b, g, n, p], x], LinearQ[v, x], PowerOfLinearQ[u, x], Not[And[LinearMatchQ[v, x], PowerOfLinearMatchQ[u, x]]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[v, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[uu, NormalizePowerOfLinear[u, x]], z], Simp[CompoundExpression[Set[z, If[And[PowerQ[uu], FreeQ[Part[uu, 2], x]], Power[Part[uu, 1], Times[m, Part[uu, 2]]], Power[uu, m]]], Times[Power[uu, m], Power[z, -1], Int[Times[z, Power[Plus[a, Times[b, Power[Power[F, Times[g, ExpandToSum[v, x]]], n]]], p]], x]]], x]], And[FreeQ[List[F, a, b, g, m, n, p], x], LinearQ[v, x], PowerOfLinearQ[u, x], Not[And[LinearMatchQ[v, x], PowerOfLinearMatchQ[u, x]]], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[c, Times[d, x]], m], Power[Plus[a, Times[b, Power[Power[F, Times[g, Plus[e, Times[f, x]]]], n]]], p]], x], FreeQ[List[a, b, c, d, e, f, g, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]]], -1], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], m], Power[Times[b, f, g, n, Log[F]], -1], Log[Plus[1, Times[b, Power[Power[F, Times[g, Plus[e, Times[f, x]]]], n], Power[a, -1]]]]], x], Times[-1, Dist[Times[d, m, Power[Times[b, f, g, n, Log[F]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Log[Plus[1, Times[b, Power[Power[F, Times[g, Plus[e, Times[f, x]]]], n], Power[a, -1]]]]], x], x]]], And[FreeQ[List[F, a, b, c, d, e, f, g, n], x], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], m], Power[Plus[a, Times[b, Power[Power[F, Times[g, Plus[e, Times[f, x]]]], n]]], Plus[p, 1]], Power[Times[b, f, g, n, Plus[p, 1], Log[F]], -1]], x], Times[-1, Dist[Times[d, m, Power[Times[b, f, g, n, Plus[p, 1], Log[F]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Plus[a, Times[b, Power[Power[F, Times[g, Plus[e, Times[f, x]]]], n]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[F, a, b, c, d, e, f, g, m, n, p], x], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[c, Times[d, x]], m], Power[Power[F, Times[g, Plus[e, Times[f, x]]]], n], Power[Plus[a, Times[b, Power[Power[F, Times[g, Plus[e, Times[f, x]]]], n]]], p]], x], FreeQ[List[F, a, b, c, d, e, f, g, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Times[Optional[Pattern[k, Blank[]]], Power[Pattern[G, Blank[]], Times[Optional[Pattern[j, Blank[]]], Plus[Optional[Pattern[h, Blank[]]], Times[Optional[Pattern[i, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[k, Power[G, Times[j, Plus[h, Times[i, x]]]]], q], Power[Power[Power[F, Times[g, Plus[e, Times[f, x]]]], n], -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Power[F, Times[g, Plus[e, Times[f, x]]]], n], Power[Plus[a, Times[b, Power[Power[F, Times[g, Plus[e, Times[f, x]]]], n]]], p]], x], x], And[FreeQ[List[F, a, b, c, d, e, f, g, h, i, j, k, m, n, p, q], x], ZeroQ[Plus[Times[f, g, n, Log[F]], Times[-1, i, j, q, Log[G]]]], NonzeroQ[Plus[Power[Times[k, Power[G, Times[j, Plus[h, Times[i, x]]]]], q], Times[-1, Power[Power[F, Times[g, Plus[e, Times[f, x]]]], n]]]]]]], RuleDelayed[HoldPattern[Int[Power[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Power[F, Times[c, Plus[a, Times[b, x]]]], n], Power[Times[b, c, n, Log[F]], -1]], x], FreeQ[List[F, a, b, c, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Pattern[v, Blank[]]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[u, Power[F, Times[c, ExpandToSum[v, x]]]], x], x], And[FreeQ[List[F, c], x], PolynomialQ[u, x], LinearQ[v, x], SameQ[$UseGamma, True]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Pattern[v, Blank[]]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[F, Times[c, ExpandToSum[v, x]]], u, x], x], And[FreeQ[List[F, c], x], PolynomialQ[u, x], LinearQ[v, x], Not[SameQ[$UseGamma, True]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Pattern[v, Blank[]]]], Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Pattern[w, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Coefficient[w, x, 1], Power[u, Plus[m, 1]], Power[F, Times[c, v]], Power[Times[Coefficient[v, x, 1], c, Coefficient[u, x, 1], Log[F]], -1]], x], And[FreeQ[List[F, c, m], x], LinearQ[List[u, v, w], x], ZeroQ[Plus[Times[Coefficient[u, x, 1], Coefficient[w, x, 1], Plus[m, 1]], Times[-1, Coefficient[v, x, 1], c, Plus[Times[Coefficient[u, x, 1], Coefficient[w, x, 0]], Times[-1, Coefficient[u, x, 0], Coefficient[w, x, 1]]], Log[F]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Pattern[v, Blank[]]]], Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Pattern[w, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[w, Power[NormalizePowerOfLinear[u, x], m], Power[F, Times[c, ExpandToSum[v, x]]]], x], x], And[FreeQ[List[F, c], x], PolynomialQ[w, x], LinearQ[v, x], PowerOfLinearQ[u, x], IntegerQ[m], SameQ[$UseGamma, True]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Pattern[v, Blank[]]]], Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Pattern[w, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[F, Times[c, ExpandToSum[v, x]]], Times[w, Power[NormalizePowerOfLinear[u, x], m]], x], x], And[FreeQ[List[F, c], x], PolynomialQ[w, x], LinearQ[v, x], PowerOfLinearQ[u, x], IntegerQ[m], Not[SameQ[$UseGamma, True]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Pattern[v, Blank[]]]], Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Pattern[w, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[uu, NormalizePowerOfLinear[u, x]], z], Simp[CompoundExpression[Set[z, If[And[PowerQ[uu], FreeQ[Part[uu, 2], x]], Power[Part[uu, 1], Times[m, Part[uu, 2]]], Power[uu, m]]], Times[Power[uu, m], Power[z, -1], Int[ExpandIntegrand[Times[w, z, Power[F, Times[c, ExpandToSum[v, x]]]], x], x]]], x]], And[FreeQ[List[F, c, m], x], PolynomialQ[w, x], LinearQ[v, x], PowerOfLinearQ[u, x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Plus[Pattern[e, Blank[]], Times[Log[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[h, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[e, x, Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Log[Times[d, x]], Plus[n, 1]], Power[Plus[n, 1], -1]], x], And[FreeQ[List[F, a, b, c, d, e, f, g, h, n], x], ZeroQ[Plus[e, Times[-1, f, h, Plus[n, 1]]]], ZeroQ[Plus[Times[g, h, Plus[n, 1]], Times[-1, b, c, e, Log[F]]]], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[e, Blank[]], Times[Log[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[h, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[e, Power[x, Plus[m, 1]], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Log[Times[d, x]], Plus[n, 1]], Power[Plus[n, 1], -1]], x], And[FreeQ[List[F, a, b, c, d, e, f, g, h, m, n], x], ZeroQ[Plus[Times[e, Plus[m, 1]], Times[-1, f, h, Plus[n, 1]]]], ZeroQ[Plus[Times[g, h, Plus[n, 1]], Times[-1, b, c, e, Log[F]]]], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[F, Plus[a, Times[b, Plus[c, Times[d, x]]]]], Power[Times[b, d, Log[F]], -1]], x], FreeQ[List[F, a, b, c, d], x]]], RuleDelayed[HoldPattern[Int[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[F, a], Sqrt[Pi], Erfi[Times[Plus[c, Times[d, x]], Rt[Times[b, Log[F]], 2]]], Power[Times[2, d, Rt[Times[b, Log[F]], 2]], -1]], x], And[FreeQ[List[F, a, b, c, d], x], PosQ[b]]]], RuleDelayed[HoldPattern[Int[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[F, a], Sqrt[Pi], Erf[Times[Plus[c, Times[d, x]], Rt[Times[-1, b, Log[F]], 2]]], Power[Times[2, d, Rt[Times[-1, b, Log[F]], 2]], -1]], x], And[FreeQ[List[F, a, b, c, d], x], NegQ[b]]]], RuleDelayed[HoldPattern[Int[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[c, Times[d, x]], Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], n]]]], Power[d, -1]], x], Times[-1, Dist[Times[b, n, Log[F]], Int[Times[Power[Plus[c, Times[d, x]], n], Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], n]]]]], x], x]]], And[FreeQ[List[F, a, b, c, d], x], IntegerQ[Times[2, Power[n, -1]]], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[n]]], Dist[Times[k, Power[d, -1]], Subst[Int[Times[Power[x, Plus[k, -1]], Power[F, Plus[a, Times[b, Power[x, Times[k, n]]]]]], x], x, Power[Plus[c, Times[d, x]], Times[1, Power[k, -1]]]], x]], And[FreeQ[List[F, a, b, c, d], x], IntegerQ[Times[2, Power[n, -1]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Power[F, a], Plus[c, Times[d, x]], Gamma[Times[1, Power[n, -1]], Times[-1, b, Power[Plus[c, Times[d, x]], n], Log[F]]], Power[Times[d, n, Power[Times[-1, b, Power[Plus[c, Times[d, x]], n], Log[F]], Times[1, Power[n, -1]]]], -1]], x]], And[FreeQ[List[F, a, b, c, d, n], x], Not[IntegerQ[Times[2, Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Plus[e, Times[f, x]], n], Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], n]]]], Power[Times[b, f, n, Power[Plus[c, Times[d, x]], n], Log[F]], -1]], x], And[FreeQ[List[F, a, b, c, d, e, f, n], x], ZeroQ[Plus[m, Times[-1, Plus[n, -1]]]], ZeroQ[Plus[Times[d, e], Times[-1, c, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[F, a], ExpIntegralEi[Times[b, Power[Plus[c, Times[d, x]], n], Log[F]]], Power[Times[f, n], -1]], x], And[FreeQ[List[F, a, b, c, d, e, f, n], x], ZeroQ[Plus[Times[d, e], Times[-1, c, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[d, Plus[m, 1]], -1]], Subst[Int[Power[F, Plus[a, Times[b, Power[x, 2]]]], x], x, Power[Plus[c, Times[d, x]], Plus[m, 1]]], x], And[FreeQ[List[F, a, b, c, d, m, n], x], ZeroQ[Plus[n, Times[-1, 2, Plus[m, 1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, Times[-1, n], 1]], Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], n]]]], Power[Times[b, d, n, Log[F]], -1]], x], Times[-1, Dist[Times[Plus[m, Times[-1, n], 1], Power[Times[b, n, Log[F]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, Times[-1, n]]], Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], n]]]]], x], x]]], And[FreeQ[List[F, a, b, c, d], x], RationalQ[m], IntegerQ[Times[2, Plus[m, 1], Power[n, -1]]], Less[0, Times[Plus[m, 1], Power[n, -1]], 5], IntegerQ[n], Or[Less[0, n, Plus[m, 1]], Less[m, n, 0]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, Times[-1, n], 1]], Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], n]]]], Power[Times[b, d, n, Log[F]], -1]], x], Times[-1, Dist[Times[Plus[m, Times[-1, n], 1], Power[Times[b, n, Log[F]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Simplify[Plus[m, Times[-1, n]]]], Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], n]]]]], x], x]]], And[FreeQ[List[F, a, b, c, d, m, n], x], IntegerQ[Times[2, Simplify[Times[Plus[m, 1], Power[n, -1]]]]], Less[0, Simplify[Times[Plus[m, 1], Power[n, -1]]], 5], Not[RationalQ[m]], SumSimplerQ[m, Times[-1, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], n]]]], Power[Times[d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, n, Log[F], Power[Plus[m, 1], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, n]], Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], n]]]]], x], x]]], And[FreeQ[List[F, a, b, c, d], x], RationalQ[m], IntegerQ[Times[2, Plus[m, 1], Power[n, -1]]], Less[-4, Times[Plus[m, 1], Power[n, -1]], 5], IntegerQ[n], Or[And[Greater[n, 0], Less[m, -1]], Inequality[0, Less, Times[-1, n], LessEqual, Plus[m, 1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], n]]]], Power[Times[d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, n, Log[F], Power[Plus[m, 1], -1]], Int[Times[Power[Plus[c, Times[d, x]], Simplify[Plus[m, n]]], Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], n]]]]], x], x]]], And[FreeQ[List[F, a, b, c, d, m, n], x], IntegerQ[Times[2, Simplify[Times[Plus[m, 1], Power[n, -1]]]]], Less[-4, Simplify[Times[Plus[m, 1], Power[n, -1]]], 5], Not[RationalQ[m]], SumSimplerQ[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[n]]], Dist[Times[k, Power[d, -1]], Subst[Int[Times[Power[x, Plus[Times[k, Plus[m, 1]], -1]], Power[F, Plus[a, Times[b, Power[x, Times[k, n]]]]]], x], x, Power[Plus[c, Times[d, x]], Times[1, Power[k, -1]]]], x]], And[FreeQ[List[F, a, b, c, d], x], RationalQ[m, n], IntegerQ[Times[2, Plus[m, 1], Power[n, -1]]], Less[0, Times[Plus[m, 1], Power[n, -1]], 5], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[e, Times[f, x]], m], Power[Power[Plus[c, Times[d, x]], m], -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], n]]]]], x], x], And[FreeQ[List[F, a, b, c, d, e, f, m, n], x], ZeroQ[Plus[Times[d, e], Times[-1, c, f]]], IntegerQ[Times[2, Simplify[Times[Plus[m, 1], Power[n, -1]]]]], NonzeroQ[Plus[f, Times[-1, d]]], Not[IntegerQ[m]], NonzeroQ[Times[c, e]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Power[F, a], Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[Times[f, n, Power[Times[-1, b, Power[Plus[c, Times[d, x]], n], Log[F]], Times[Plus[m, 1], Power[n, -1]]]], -1], Gamma[Times[Plus[m, 1], Power[n, -1]], Times[-1, b, Power[Plus[c, Times[d, x]], n], Log[F]]]], x]], And[FreeQ[List[F, a, b, c, d, e, f, m, n], x], ZeroQ[Plus[Times[d, e], Times[-1, c, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], 2]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[f, Power[Plus[e, Times[f, x]], Plus[m, -1]], Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], 2]]]], Power[Times[2, b, Power[d, 2], Log[F]], -1]], x], Plus[Dist[Times[Plus[Times[d, e], Times[-1, c, f]], Power[d, -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, -1]], Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], 2]]]]], x], x], Times[-1, Dist[Times[Plus[m, -1], Power[f, 2], Power[Times[2, b, Power[d, 2], Log[F]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, -2]], Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], 2]]]]], x], x]]]], And[FreeQ[List[F, a, b, c, d, e, f], x], NonzeroQ[Plus[Times[d, e], Times[-1, c, f]]], FractionQ[m], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], 2]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[f, Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], 2]]]], Power[Times[Plus[m, 1], Power[f, 2]], -1]], x], Plus[Times[-1, Dist[Times[2, b, Power[d, 2], Log[F], Power[Times[Power[f, 2], Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 2]], Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], 2]]]]], x], x]], Dist[Times[2, b, d, Plus[Times[d, e], Times[-1, c, f]], Log[F], Power[Times[Power[f, 2], Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], 2]]]]], x], x]]], And[FreeQ[List[F, a, b, c, d, e, f], x], NonzeroQ[Plus[Times[d, e], Times[-1, c, f]]], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], n]]]], Power[Times[f, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, d, n, Log[F], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[Plus[c, Times[d, x]], Plus[n, -1]], Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], n]]]]], x], x]]], And[FreeQ[List[F, a, b, c, d, e, f], x], NonzeroQ[Plus[Times[d, e], Times[-1, c, f]]], IntegerQ[n], Greater[n, 2], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[d, Power[f, -1]], Int[Times[Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], -1]]]], Power[Plus[c, Times[d, x]], -1]], x], x], Times[-1, Dist[Times[Plus[Times[d, e], Times[-1, c, f]], Power[f, -1]], Int[Times[Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], -1]]]], Power[Times[Plus[c, Times[d, x]], Plus[e, Times[f, x]]], -1]], x], x]]], And[FreeQ[List[F, a, b, c, d, e, f], x], NonzeroQ[Plus[Times[d, e], Times[-1, c, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], -1]]]], Power[Times[f, Plus[m, 1]], -1]], x], Dist[Times[b, d, Log[F], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], -1]]]], Power[Power[Plus[c, Times[d, x]], 2], -1]], x], x]], And[FreeQ[List[F, a, b, c, d, e, f], x], NonzeroQ[Plus[Times[d, e], Times[-1, c, f]]], IntegerQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], n]]]], Power[Plus[e, Times[f, x]], -1]], x], And[FreeQ[List[F, a, b, c, d, e, f, n], x], NonzeroQ[Plus[Times[d, e], Times[-1, c, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Pattern[v, Blank[]]], Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Power[F, ExpandToSum[v, x]]], x], And[FreeQ[List[F, m], x], LinearQ[u, x], BinomialQ[v, x], Not[And[LinearMatchQ[u, x], BinomialMatchQ[v, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandLinearProduct[Power[F, Plus[a, Times[b, Power[Plus[c, Times[d, x]], n]]]], u, c, d, x], x], And[FreeQ[List[F, a, b, c, d, n], x], PolynomialQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[v, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[F, Plus[a, Times[b, NormalizePowerOfLinear[v, x]]]]], x], And[FreeQ[List[F, a, b], x], PolynomialQ[u, x], PowerOfLinearQ[v, x], Not[PowerOfLinearMatchQ[v, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[d, Power[Times[f, Plus[Times[d, g], Times[-1, c, h]]], -1]], Subst[Int[Times[Power[F, Plus[a, Times[-1, b, h, Power[Plus[Times[d, g], Times[-1, c, h]], -1]], Times[d, b, x, Power[Plus[Times[d, g], Times[-1, c, h]], -1]]]], Power[x, -1]], x], x, Times[Plus[g, Times[h, x]], Power[Plus[c, Times[d, x]], -1]]], x]], And[FreeQ[List[F, a, b, c, d, e, f], x], ZeroQ[Plus[Times[d, e], Times[-1, c, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[F, Plus[e, Times[f, b, Power[d, -1]]]], Int[Power[Plus[g, Times[h, x]], m], x], x], And[FreeQ[List[F, a, b, c, d, e, f, g, h, m], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[g, Times[h, x]], m], Power[F, Plus[Times[Plus[Times[d, e], Times[b, f]], Power[d, -1]], Times[-1, f, Plus[Times[b, c], Times[-1, a, d]], Power[Times[d, Plus[c, Times[d, x]]], -1]]]]], x], And[FreeQ[List[F, a, b, c, d, e, f, g, h, m], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, g], Times[-1, c, h]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[d, Power[h, -1]], Int[Times[Power[F, Plus[e, Times[f, Plus[a, Times[b, x]], Power[Plus[c, Times[d, x]], -1]]]], Power[Plus[c, Times[d, x]], -1]], x], x], Times[-1, Dist[Times[Plus[Times[d, g], Times[-1, c, h]], Power[h, -1]], Int[Times[Power[F, Plus[e, Times[f, Plus[a, Times[b, x]], Power[Plus[c, Times[d, x]], -1]]]], Power[Times[Plus[c, Times[d, x]], Plus[g, Times[h, x]]], -1]], x], x]]], And[FreeQ[List[F, a, b, c, d, e, f, g, h], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Times[d, g], Times[-1, c, h]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[F, Plus[e, Times[f, Plus[a, Times[b, x]], Power[Plus[c, Times[d, x]], -1]]]], Power[Times[h, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[f, Plus[Times[b, c], Times[-1, a, d]], Log[F], Power[Times[h, Plus[m, 1]], -1]], Int[Times[Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[F, Plus[e, Times[f, Plus[a, Times[b, x]], Power[Plus[c, Times[d, x]], -1]]]], Power[Power[Plus[c, Times[d, x]], 2], -1]], x], x]]], And[FreeQ[List[F, a, b, c, d, e, f, g, h], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Times[d, g], Times[-1, c, h]]], IntegerQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[i, Blank[]]], Times[Optional[Pattern[j, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[d, Power[Times[h, Plus[Times[d, i], Times[-1, c, j]]], -1]], Subst[Int[Times[Power[F, Plus[e, Times[f, Plus[Times[b, i], Times[-1, a, j]], Power[Plus[Times[d, i], Times[-1, c, j]], -1]], Times[-1, Plus[Times[b, c], Times[-1, a, d]], f, x, Power[Plus[Times[d, i], Times[-1, c, j]], -1]]]], Power[x, -1]], x], x, Times[Plus[i, Times[j, x]], Power[Plus[c, Times[d, x]], -1]]], x]], And[FreeQ[List[F, a, b, c, d, e, f, g, h], x], ZeroQ[Plus[Times[d, g], Times[-1, c, h]]]]]], RuleDelayed[HoldPattern[Int[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[F, Plus[a, Times[-1, Power[b, 2], Power[Times[4, c], -1]]]], Int[Power[F, Times[Power[Plus[b, Times[2, c, x]], 2], Power[Times[4, c], -1]]], x], x], FreeQ[List[F, a, b, c], x]]], RuleDelayed[HoldPattern[Int[Power[Pattern[F, Blank[]], Pattern[v, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[F, ExpandToSum[v, x]], x], And[FreeQ[F, x], QuadraticQ[v, x], Not[QuadraticMatchQ[v, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[e, Power[F, Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Times[2, c, Log[F]], -1]], x], And[FreeQ[List[F, a, b, c, d, e], x], ZeroQ[Plus[Times[b, e], Times[-1, 2, c, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[F, Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Times[2, c, Log[F]], -1]], x], Times[-1, Dist[Times[Plus[m, -1], Power[e, 2], Power[Times[2, c, Log[F]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -2]], Power[F, Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], x], x]]], And[FreeQ[List[F, a, b, c, d, e], x], ZeroQ[Plus[Times[b, e], Times[-1, 2, c, d]]], RationalQ[m], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[1, Power[Times[2, e], -1], Power[F, Plus[a, Times[-1, Power[b, 2], Power[Times[4, c], -1]]]], ExpIntegralEi[Times[Power[Plus[b, Times[2, c, x]], 2], Log[F], Power[Times[4, c], -1]]]], x], And[FreeQ[List[F, a, b, c, d, e], x], ZeroQ[Plus[Times[b, e], Times[-1, 2, c, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[F, Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Times[e, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[2, c, Log[F], Power[Times[Power[e, 2], Plus[m, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 2]], Power[F, Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], x], x]]], And[FreeQ[List[F, a, b, c, d, e], x], ZeroQ[Plus[Times[b, e], Times[-1, 2, c, d]]], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[F, Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Times[2, c, Log[F]], -1]], x], Times[-1, Dist[Times[Plus[Times[b, e], Times[-1, 2, c, d]], Power[Times[2, c], -1]], Int[Power[F, Plus[a, Times[b, x], Times[c, Power[x, 2]]]], x], x]]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Times[b, e], Times[-1, 2, c, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[F, Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Times[2, c, Log[F]], -1]], x], Plus[Times[-1, Dist[Times[Plus[Times[b, e], Times[-1, 2, c, d]], Power[Times[2, c], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[F, Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], x], x]], Times[-1, Dist[Times[Plus[m, -1], Power[e, 2], Power[Times[2, c, Log[F]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -2]], Power[F, Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], x], x]]]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Times[b, e], Times[-1, 2, c, d]]], RationalQ[m], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[F, Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Times[e, Plus[m, 1]], -1]], x], Plus[Times[-1, Dist[Times[2, c, Log[F], Power[Times[Power[e, 2], Plus[m, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 2]], Power[F, Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], x], x]], Times[-1, Dist[Times[Plus[Times[b, e], Times[-1, 2, c, d]], Log[F], Power[Times[Power[e, 2], Plus[m, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[F, Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], x], x]]]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Times[b, e], Times[-1, 2, c, d]]], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, x]], m], Power[F, Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], x], FreeQ[List[F, a, b, c, d, e, m], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Pattern[v, Blank[]]], Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Power[F, ExpandToSum[v, x]]], x], And[FreeQ[List[F, m], x], LinearQ[u, x], QuadraticQ[v, x], Not[And[LinearMatchQ[u, x], QuadraticMatchQ[v, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Pattern[v, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[F, Times[e, Plus[c, Times[d, x]]]], Power[Plus[a, Times[b, Power[F, v]]], n]], x]]], Plus[Dist[Power[x, m], u, x], Times[-1, Dist[m, Int[Times[Power[x, Plus[m, -1]], u], x], x]]]], And[FreeQ[List[F, a, b, c, d, e], x], ZeroQ[Plus[Times[2, e, Plus[c, Times[d, x]]], Times[-1, v]]], RationalQ[m], Greater[m, 0], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[G, Blank[]], Times[Optional[Pattern[h, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[m, FullSimplify[Times[g, h, Log[G], Power[Times[d, e, Log[F]], -1]]]]], Condition[Dist[Times[Denominator[m], Power[G, Plus[Times[f, h], Times[-1, c, g, h, Power[d, -1]]]], Power[Times[d, e, Log[F]], -1]], Subst[Int[Times[Power[x, Plus[Numerator[m], -1]], Power[Plus[a, Times[b, Power[x, Denominator[m]]]], n]], x], x, Power[F, Times[e, Plus[c, Times[d, x]], Power[Denominator[m], -1]]]], x], And[RationalQ[m], GreaterEqual[Abs[m], 1]]]], FreeQ[List[F, G, a, b, c, d, e, f, g, h, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[G, Blank[]], Times[Optional[Pattern[h, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[m, FullSimplify[Times[d, e, Log[F], Power[Times[g, h, Log[G]], -1]]]]], Condition[Dist[Times[Denominator[m], Power[Times[g, h, Log[G]], -1]], Subst[Int[Times[Power[x, Plus[Denominator[m], -1]], Power[Plus[a, Times[b, Power[F, Plus[Times[c, e], Times[-1, d, e, f, Power[g, -1]]]], Power[x, Numerator[m]]]], n]], x], x, Power[G, Times[h, Plus[f, Times[g, x]], Power[Denominator[m], -1]]]], x], And[RationalQ[m], Greater[Abs[m], 1]]]], FreeQ[List[F, G, a, b, c, d, e, f, g, h, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[G, Blank[]], Times[Optional[Pattern[h, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Expand[Times[Power[G, Times[h, Plus[f, Times[g, x]]]], Power[Plus[a, Times[b, Power[F, Times[e, Plus[c, Times[d, x]]]]]], n]], x], x], And[FreeQ[List[F, G, a, b, c, d, e, f, g, h], x], Not[RationalQ[FullSimplify[Times[g, h, Log[G], Power[Times[d, e, Log[F]], -1]]]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[n, Blank[]]], Power[Pattern[G, Blank[]], Times[Optional[Pattern[h, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[a, n], Power[G, Times[h, Plus[f, Times[g, x]]]], Power[Times[g, h, Log[G]], -1], Hypergeometric2F1[Times[-1, n], Times[g, h, Log[G], Power[Times[d, e, Log[F]], -1]], Plus[Times[g, h, Log[G], Power[Times[d, e, Log[F]], -1]], 1], Simplify[Times[-1, b, Power[a, -1], Power[F, Times[e, Plus[c, Times[d, x]]]]]]]], x], And[FreeQ[List[F, G, a, b, c, d, e, f, g, h], x], Not[RationalQ[FullSimplify[Times[g, h, Log[G], Power[Times[d, e, Log[F]], -1]]]]], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[n, Blank[]]], Power[Pattern[G, Blank[]], Times[Optional[Pattern[h, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[G, Times[h, Plus[f, Times[g, x]]]], Power[Plus[a, Times[b, Power[F, Times[e, Plus[c, Times[d, x]]]]]], Plus[n, 1]], Power[Times[a, g, h, Log[G]], -1], Hypergeometric2F1[1, Plus[n, Times[g, h, Log[G], Power[Times[d, e, Log[F]], -1]], 1], Plus[Times[g, h, Log[G], Power[Times[d, e, Log[F]], -1]], 1], Times[-1, b, Power[F, Times[e, Plus[c, Times[d, x]]]], Power[a, -1]]]], x], And[FreeQ[List[F, G, a, b, c, d, e, f, g, h, n], x], Not[RationalQ[FullSimplify[Times[g, h, Log[G], Power[Times[d, e, Log[F]], -1]]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[v, Blank[]]]]]], Pattern[n, Blank[]]], Power[Pattern[G, Blank[]], Times[Optional[Pattern[h, Blank[]]], Pattern[u, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[G, Times[h, ExpandToSum[u, x]]], Power[Plus[a, Times[b, Power[F, Times[e, ExpandToSum[v, x]]]]], n]], x], And[FreeQ[List[F, G, a, b, e, h, n], x], LinearQ[List[u, v], x], Not[LinearMatchQ[List[u, v], x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[G, Blank[]], Times[Optional[Pattern[h, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]]]], Power[Pattern[H, Blank[]], Times[Optional[Pattern[t, Blank[]]], Plus[Optional[Pattern[r, Blank[]]], Times[Optional[Pattern[s, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[m, FullSimplify[Times[Plus[Times[g, h, Log[G]], Times[s, t, Log[H]]], Power[Times[d, e, Log[F]], -1]]]]], Condition[Dist[Times[Denominator[m], Power[G, Plus[Times[f, h], Times[-1, c, g, h, Power[d, -1]]]], Power[H, Plus[Times[r, t], Times[-1, c, s, t, Power[d, -1]]]], Power[Times[d, e, Log[F]], -1]], Subst[Int[Times[Power[x, Plus[Numerator[m], -1]], Power[Plus[a, Times[b, Power[x, Denominator[m]]]], n]], x], x, Power[F, Times[e, Plus[c, Times[d, x]], Power[Denominator[m], -1]]]], x], RationalQ[m]]], FreeQ[List[F, G, H, a, b, c, d, e, f, g, h, r, s, t, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[G, Blank[]], Times[Optional[Pattern[h, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]]]], Power[Pattern[H, Blank[]], Times[Optional[Pattern[t, Blank[]]], Plus[Optional[Pattern[r, Blank[]]], Times[Optional[Pattern[s, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[G, Times[Plus[f, Times[-1, c, g, Power[d, -1]]], h]], Int[Times[Power[H, Times[t, Plus[r, Times[s, x]]]], Power[Plus[b, Times[a, Power[F, Times[-1, e, Plus[c, Times[d, x]]]]]], n]], x], x], And[FreeQ[List[F, G, H, a, b, c, d, e, f, g, h, r, s, t], x], ZeroQ[Plus[Times[d, e, n, Log[F]], Times[g, h, Log[G]]]], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[G, Blank[]], Times[Optional[Pattern[h, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]]]], Power[Pattern[H, Blank[]], Times[Optional[Pattern[t, Blank[]]], Plus[Optional[Pattern[r, Blank[]]], Times[Optional[Pattern[s, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Expand[Times[Power[G, Times[h, Plus[f, Times[g, x]]]], Power[H, Times[t, Plus[r, Times[s, x]]]], Power[Plus[a, Times[b, Power[F, Times[e, Plus[c, Times[d, x]]]]]], n]], x], x], And[FreeQ[List[F, G, H, a, b, c, d, e, f, g, h, r, s, t], x], Not[RationalQ[FullSimplify[Times[Plus[Times[g, h, Log[G]], Times[s, t, Log[H]]], Power[Times[d, e, Log[F]], -1]]]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[n, Blank[]]], Power[Pattern[G, Blank[]], Times[Optional[Pattern[h, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]]]], Power[Pattern[H, Blank[]], Times[Optional[Pattern[t, Blank[]]], Plus[Optional[Pattern[r, Blank[]]], Times[Optional[Pattern[s, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[a, n], Power[G, Times[h, Plus[f, Times[g, x]]]], Power[H, Times[t, Plus[r, Times[s, x]]]], Power[Plus[Times[g, h, Log[G]], Times[s, t, Log[H]]], -1], Hypergeometric2F1[Times[-1, n], Times[Plus[Times[g, h, Log[G]], Times[s, t, Log[H]]], Power[Times[d, e, Log[F]], -1]], Plus[Times[Plus[Times[g, h, Log[G]], Times[s, t, Log[H]]], Power[Times[d, e, Log[F]], -1]], 1], Simplify[Times[-1, b, Power[a, -1], Power[F, Times[e, Plus[c, Times[d, x]]]]]]]], x], And[FreeQ[List[F, G, H, a, b, c, d, e, f, g, h, r, s, t], x], Not[RationalQ[FullSimplify[Times[Plus[Times[g, h, Log[G]], Times[s, t, Log[H]]], Power[Times[d, e, Log[F]], -1]]]]], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[n, Blank[]]], Power[Pattern[G, Blank[]], Times[Optional[Pattern[h, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]]]], Power[Pattern[H, Blank[]], Times[Optional[Pattern[t, Blank[]]], Plus[Optional[Pattern[r, Blank[]]], Times[Optional[Pattern[s, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[G, Times[h, Plus[f, Times[g, x]]]], Power[H, Times[t, Plus[r, Times[s, x]]]], Power[Plus[a, Times[b, Power[F, Times[e, Plus[c, Times[d, x]]]]]], n], Power[Times[Plus[Times[g, h, Log[G]], Times[s, t, Log[H]]], Power[Times[Plus[a, Times[b, Power[F, Times[e, Plus[c, Times[d, x]]]]]], Power[a, -1]], n]], -1], Hypergeometric2F1[Times[-1, n], Times[Plus[Times[g, h, Log[G]], Times[s, t, Log[H]]], Power[Times[d, e, Log[F]], -1]], Plus[Times[Plus[Times[g, h, Log[G]], Times[s, t, Log[H]]], Power[Times[d, e, Log[F]], -1]], 1], Simplify[Times[-1, b, Power[a, -1], Power[F, Times[e, Plus[c, Times[d, x]]]]]]]], x], And[FreeQ[List[F, G, H, a, b, c, d, e, f, g, h, r, s, t, n], x], Not[RationalQ[FullSimplify[Times[Plus[Times[g, h, Log[G]], Times[s, t, Log[H]]], Power[Times[d, e, Log[F]], -1]]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[v, Blank[]]]]]], Pattern[n, Blank[]]], Power[Pattern[G, Blank[]], Times[Optional[Pattern[h, Blank[]]], Pattern[u, Blank[]]]], Power[Pattern[H, Blank[]], Times[Optional[Pattern[t, Blank[]]], Pattern[w, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[G, Times[h, ExpandToSum[u, x]]], Power[H, Times[t, ExpandToSum[w, x]]], Power[Plus[a, Times[b, Power[F, Times[e, ExpandToSum[v, x]]]]], n]], x], And[FreeQ[List[F, G, H, a, b, e, h, t, n], x], LinearQ[List[u, v, w], x], Not[LinearMatchQ[List[u, v, w], x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[Times[a, Power[x, n]], Times[b, Power[F, Times[e, Plus[c, Times[d, x]]]]]], Plus[p, 1]], Power[Times[b, d, e, Plus[p, 1], Log[F]], -1]], x], Times[-1, Dist[Times[a, n, Power[Times[b, d, e, Log[F]], -1]], Int[Times[Power[x, Plus[n, -1]], Power[Plus[Times[a, Power[x, n]], Times[b, Power[F, Times[e, Plus[c, Times[d, x]]]]]], p]], x], x]]], And[FreeQ[List[F, a, b, c, d, e, n, p], x], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, m], Power[Plus[Times[a, Power[x, n]], Times[b, Power[F, Times[e, Plus[c, Times[d, x]]]]]], Plus[p, 1]], Power[Times[b, d, e, Plus[p, 1], Log[F]], -1]], x], Plus[Times[-1, Dist[Times[m, Power[Times[b, d, e, Plus[p, 1], Log[F]], -1]], Int[Times[Power[x, Plus[m, -1]], Power[Plus[Times[a, Power[x, n]], Times[b, Power[F, Times[e, Plus[c, Times[d, x]]]]]], Plus[p, 1]]], x], x]], Times[-1, Dist[Times[a, n, Power[Times[b, d, e, Log[F]], -1]], Int[Times[Power[x, Plus[m, n, -1]], Power[Plus[Times[a, Power[x, n]], Times[b, Power[F, Times[e, Plus[c, Times[d, x]]]]]], p]], x], x]]]], And[FreeQ[List[F, a, b, c, d, e, m, n, p], x], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Pattern[u, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[F, Blank[]], Pattern[v, Blank[]]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Times[2, c, Power[q, -1]], Int[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[b, Times[-1, q], Times[2, c, Power[F, u]]], -1]], x], x], Times[-1, Dist[Times[2, c, Power[q, -1]], Int[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[b, q, Times[2, c, Power[F, u]]], -1]], x], x]]]], And[FreeQ[List[F, a, b, c, f, g], x], ZeroQ[Plus[v, Times[-1, 2, u]]], LinearQ[u, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Pattern[u, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Pattern[u, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[F, Blank[]], Pattern[v, Blank[]]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Times[2, c, Power[q, -1]], Int[Times[Power[Plus[f, Times[g, x]], m], Power[F, u], Power[Plus[b, Times[-1, q], Times[2, c, Power[F, u]]], -1]], x], x], Times[-1, Dist[Times[2, c, Power[q, -1]], Int[Times[Power[Plus[f, Times[g, x]], m], Power[F, u], Power[Plus[b, q, Times[2, c, Power[F, u]]], -1]], x], x]]]], And[FreeQ[List[F, a, b, c, f, g], x], ZeroQ[Plus[v, Times[-1, 2, u]]], LinearQ[u, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Pattern[u, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[F, Blank[]], Pattern[v, Blank[]]]]], -1], Plus[Times[Optional[Pattern[i, Blank[]]], Power[Pattern[F, Blank[]], Pattern[u, Blank[]]]], Pattern[h, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Plus[Simplify[Times[Plus[Times[2, c, h], Times[-1, b, i]], Power[q, -1]]], i], Int[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[b, Times[-1, q], Times[2, c, Power[F, u]]], -1]], x], x], Times[-1, Dist[Plus[Simplify[Times[Plus[Times[2, c, h], Times[-1, b, i]], Power[q, -1]]], Times[-1, i]], Int[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[b, q, Times[2, c, Power[F, u]]], -1]], x], x]]]], And[FreeQ[List[F, a, b, c, f, g, h, i], x], ZeroQ[Plus[v, Times[-1, 2, u]]], LinearQ[u, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Pattern[v, Blank[]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[F, Blank[]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], -1], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[1, Power[Plus[Times[a, Power[F, Plus[c, Times[d, x]]]], Times[b, Power[F, v]]], -1]], x]]], Plus[Simp[Times[Power[x, m], u], x], Times[-1, Dist[m, Int[Times[Power[x, Plus[m, -1]], u], x], x]]]], And[FreeQ[List[F, a, b, c, d], x], ZeroQ[Plus[Plus[c, Times[d, x]], v]], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Pattern[v, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[F, Blank[]], Pattern[w, Blank[]]]]], -1], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[F, v], Power[Plus[c, Times[a, Power[F, v]], Times[b, Power[F, Times[2, v]]]], -1]], x], And[FreeQ[List[F, a, b, c], x], LinearQ[v, x], LinearQ[w, x], ZeroQ[Plus[v, w]], If[RationalQ[Coefficient[v, x, 1]], Greater[Coefficient[v, x, 1], 0], Less[LeafCount[v], LeafCount[w]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[F, Times[g, Power[Plus[d, Times[e, x]], n]]], Times[1, Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x], FreeQ[List[F, a, b, c, d, e, g, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[F, Times[g, Power[Plus[d, Times[e, x]], n]]], Times[1, Power[Plus[a, Times[c, Power[x, 2]]], -1]], x], x], FreeQ[List[F, a, c, d, e, g, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Pattern[c, Blank[]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[F, Times[g, Power[Plus[d, Times[e, x]], n]]], Times[Power[u, m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x], And[FreeQ[List[F, a, b, c, d, e, g, n], x], PolynomialQ[u, x], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[g, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]]], Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Pattern[c, Blank[]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[F, Times[g, Power[Plus[d, Times[e, x]], n]]], Times[Power[u, m], Power[Plus[a, Times[c, Power[x, 2]]], -1]], x], x], And[FreeQ[List[F, a, c, d, e, g, n], x], PolynomialQ[u, x], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Power[Pattern[F, Blank[]], Times[Power[Pattern[x, Blank[]], -2], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Sqrt[Pi], Exp[Times[2, Sqrt[Times[-1, a, Log[F]]], Sqrt[Times[-1, b, Log[F]]]]], Erf[Times[Plus[Sqrt[Times[-1, a, Log[F]]], Times[Sqrt[Times[-1, b, Log[F]]], Power[x, 2]]], Power[x, -1]]], Power[Times[4, Sqrt[Times[-1, b, Log[F]]]], -1]], x], Times[-1, Simp[Times[Sqrt[Pi], Exp[Times[-2, Sqrt[Times[-1, a, Log[F]]], Sqrt[Times[-1, b, Log[F]]]]], Erf[Times[Plus[Sqrt[Times[-1, a, Log[F]]], Times[-1, Sqrt[Times[-1, b, Log[F]]], Power[x, 2]]], Power[x, -1]]], Power[Times[4, Sqrt[Times[-1, b, Log[F]]]], -1]], x]]], FreeQ[List[F, a, b], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Power[E, Pattern[x, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[Power[E, x], Power[x, m]], Plus[n, 1]], Power[Plus[n, 1], -1]], x]], Plus[Dist[m, Int[Times[Power[x, Plus[m, -1]], Power[Plus[Power[E, x], Power[x, m]], n]], x], x], Int[Power[Plus[Power[E, x], Power[x, m]], Plus[n, 1]], x]]], And[RationalQ[m, n], Greater[m, 0], Less[n, 0], Unequal[n, -1]]]], RuleDelayed[HoldPattern[Int[Log[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Power[Pattern[F, Blank[]], Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[d, e, n, Log[F]], -1]], Subst[Int[Times[Log[Plus[a, Times[b, x]]], Power[x, -1]], x], x, Power[Power[F, Times[e, Plus[c, Times[d, x]]]], n]], x], And[FreeQ[List[F, a, b, c, d, e, n], x], PositiveQ[a]]]], RuleDelayed[HoldPattern[Int[Log[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Power[Pattern[F, Blank[]], Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Log[Plus[a, Times[b, Power[Power[F, Times[e, Plus[c, Times[d, x]]]], n]]]]], x], Times[-1, Dist[Times[b, d, e, n, Log[F]], Int[Times[x, Power[Power[F, Times[e, Plus[c, Times[d, x]]]], n], Power[Plus[a, Times[b, Power[Power[F, Times[e, Plus[c, Times[d, x]]]], n]]], -1]], x], x]]], And[FreeQ[List[F, a, b, c, d, e, n], x], Not[PositiveQ[a]]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[F, Blank[]], Pattern[v, Blank[]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[a, Power[F, v]], n], Power[Power[F, Times[n, v]], -1]], Int[Times[u, Power[F, Times[n, v]]], x], x], And[FreeQ[List[F, a, n], x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Pattern[u, Blank[]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[v, FunctionOfExponential[u, x]]], Dist[Times[v, Power[D[v, x], -1]], Subst[Int[Times[FunctionOfExponentialFunction[u, x], Power[x, -1]], x], x, v], x]], FunctionOfExponentialQ[u, x]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[F, Blank[]], Pattern[v, Blank[]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Pattern[w, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[F, Times[n, v]], Power[Plus[a, Times[b, Power[F, ExpandToSum[Plus[w, Times[-1, v]], x]]]], n]], x], And[FreeQ[List[F, a, b, n], x], NegativeIntegerQ[n], LinearQ[List[v, w], x]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[F, Blank[]], Pattern[v, Blank[]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[G, Blank[]], Pattern[w, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[F, Times[n, v]], Power[Plus[a, Times[b, Power[E, ExpandToSum[Plus[Times[Log[G], w], Times[-1, Log[F], v]], x]]]], n]], x], And[FreeQ[List[F, G, a, b, n], x], NegativeIntegerQ[n], LinearQ[List[v, w], x]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[F, Blank[]], Pattern[v, Blank[]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]], Pattern[w, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[Times[a, Power[F, v]], Times[b, Power[F, w]]], n], Power[Times[Power[F, Times[n, v]], Power[Plus[a, Times[b, Power[F, ExpandToSum[Plus[w, Times[-1, v]], x]]]], n]], -1]], Int[Times[u, Power[F, Times[n, v]], Power[Plus[a, Times[b, Power[F, ExpandToSum[Plus[w, Times[-1, v]], x]]]], n]], x], x], And[FreeQ[List[F, a, b, n], x], Not[IntegerQ[n]], LinearQ[List[v, w], x]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[F, Blank[]], Pattern[v, Blank[]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[G, Blank[]], Pattern[w, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[Times[a, Power[F, v]], Times[b, Power[G, w]]], n], Power[Times[Power[F, Times[n, v]], Power[Plus[a, Times[b, Power[E, ExpandToSum[Plus[Times[Log[G], w], Times[-1, Log[F], v]], x]]]], n]], -1]], Int[Times[u, Power[F, Times[n, v]], Power[Plus[a, Times[b, Power[E, ExpandToSum[Plus[Times[Log[G], w], Times[-1, Log[F], v]], x]]]], n]], x], x], And[FreeQ[List[F, G, a, b, n], x], Not[IntegerQ[n]], LinearQ[List[v, w], x]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Pattern[F, Blank[]], Pattern[v, Blank[]]], Power[Pattern[G, Blank[]], Pattern[w, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, NormalizeIntegrand[Power[E, Plus[Times[v, Log[F]], Times[w, Log[G]]]], x]], x], And[FreeQ[List[F, G], x], Or[BinomialQ[Plus[v, w], x], And[PolynomialQ[Plus[v, w], x], LessEqual[Exponent[Plus[v, w], x], 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[y, Blank[]]], Power[Pattern[F, Blank[]], Pattern[u, Blank[]]], Plus[Pattern[v, Blank[]], Pattern[w, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[z, Times[v, y, Power[Times[Log[F], D[u, x]], -1]]]], Condition[Simp[Times[Power[F, u], z], x], ZeroQ[Plus[D[z, x], Times[-1, w, y]]]]], FreeQ[F, x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Pattern[u, Blank[]]], Power[Pattern[v, Blank[]], Optional[Pattern[n, Blank[]]]], Pattern[w, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[z, Plus[Times[Log[F], v, D[u, x]], Times[Plus[n, 1], D[v, x]]]]], Condition[Simp[Times[Coefficient[w, x, Exponent[w, x]], Power[Coefficient[z, x, Exponent[z, x]], -1], Power[F, u], Power[v, Plus[n, 1]]], x], And[Equal[Exponent[w, x], Exponent[z, x]], ZeroQ[Plus[Times[w, Coefficient[z, x, Exponent[z, x]]], Times[-1, z, Coefficient[w, x, Exponent[w, x]]]]]]]], And[FreeQ[List[F, n], x], PolynomialQ[u, x], PolynomialQ[v, x], PolynomialQ[w, x]]]]]