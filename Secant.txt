List[RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[a, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[a, b, Power[Times[a, Csc[Plus[e, Times[f, x]]]], Plus[m, -1]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, Plus[n, -1]], -1]], x], And[FreeQ[List[a, b, e, f, m, n], x], ZeroQ[Plus[m, n, -2]], NonzeroQ[Plus[n, -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[f, -1]], Subst[Int[Times[Power[Plus[1, Power[x, 2]], Plus[Times[Plus[m, n], Power[2, -1]], -1]], Power[Power[x, m], -1]], x], x, Tan[Plus[e, Times[f, x]]]], x], And[FreeQ[List[e, f], x], IntegersQ[m, n, Times[Plus[m, n], Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[a, Blank[]]]], Pattern[m, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[Times[f, Power[a, Plus[n, -1]]], -1], Subst[Int[Times[Power[Times[a, x], Plus[m, n, -1]], Power[Power[Plus[-1, Power[x, 2]], Times[Plus[n, 1], Power[2, -1]]], -1]], x], x, Csc[Plus[e, Times[f, x]]]], x]], And[FreeQ[List[a, e, f, m], x], IntegerQ[Times[Plus[n, 1], Power[2, -1]]], Not[And[IntegerQ[Times[Plus[m, 1], Power[2, -1]]], Less[0, m, n]]], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[a, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[f, Power[a, Plus[n, -1]]], -1]], Subst[Int[Times[Power[Times[a, x], Plus[m, n, -1]], Power[Power[Plus[-1, Power[x, 2]], Times[Plus[n, 1], Power[2, -1]]], -1]], x], x, Sec[Plus[e, Times[f, x]]]], x], And[FreeQ[List[a, e, f, m], x], IntegerQ[Times[Plus[n, 1], Power[2, -1]]], Not[And[IntegerQ[Times[Plus[m, 1], Power[2, -1]]], Less[0, m, n]]], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[a, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[a, Power[Times[a, Csc[Plus[e, Times[f, x]]]], Plus[m, -1]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Power[Times[f, b, Plus[m, -1]], -1]], x]], Dist[Times[Power[a, 2], Plus[n, 1], Power[Times[Power[b, 2], Plus[m, -1]], -1]], Int[Times[Power[Times[a, Csc[Plus[e, Times[f, x]]]], Plus[m, -2]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[n, 2]]], x], x]], And[FreeQ[List[a, b, e, f], x], RationalQ[m, n], Greater[m, 1], Less[n, -1], IntegersQ[Times[2, m], Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[a, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, Power[Times[a, Csc[Plus[e, Times[f, x]]]], Plus[m, 1]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, a, Plus[n, -1]], -1]], x], Dist[Times[Power[b, 2], Plus[m, 1], Power[Times[Power[a, 2], Plus[n, -1]], -1]], Int[Times[Power[Times[a, Csc[Plus[e, Times[f, x]]]], Plus[m, 2]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]]], x], x]], And[FreeQ[List[a, b, e, f], x], RationalQ[m, n], Less[m, -1], Greater[n, 1], IntegersQ[Times[2, m], Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[a, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[a, b, Power[Times[a, Csc[Plus[e, Times[f, x]]]], Plus[m, -1]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, Plus[m, -1]], -1]], x]], Dist[Times[Power[a, 2], Plus[m, n, -2], Power[Plus[m, -1], -1]], Int[Times[Power[Times[a, Csc[Plus[e, Times[f, x]]]], Plus[m, -2]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], n]], x], x]], And[FreeQ[List[a, b, e, f, n], x], RationalQ[m], Greater[m, 1], IntegersQ[Times[2, m], Times[2, n]], Not[PositiveIntegerQ[Times[m, Power[2, -1]], Times[Plus[n, -1], Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[a, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[a, b, Power[Times[a, Csc[Plus[e, Times[f, x]]]], Plus[m, -1]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, Plus[n, -1]], -1]], x], Dist[Times[Power[b, 2], Plus[m, n, -2], Power[Plus[n, -1], -1]], Int[Times[Power[Times[a, Csc[Plus[e, Times[f, x]]]], m], Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]]], x], x]], And[FreeQ[List[a, b, e, f, m], x], RationalQ[n], Greater[n, 1], IntegersQ[Times[2, m], Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[a, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, Power[Times[a, Csc[Plus[e, Times[f, x]]]], Plus[m, 1]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[a, f, Plus[m, n]], -1]], x], Dist[Times[Plus[m, 1], Power[Times[Power[a, 2], Plus[m, n]], -1]], Int[Times[Power[Times[a, Csc[Plus[e, Times[f, x]]]], Plus[m, 2]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], n]], x], x]], And[FreeQ[List[a, b, e, f, n], x], RationalQ[m], Less[m, -1], NonzeroQ[Plus[m, n]], IntegersQ[Times[2, m], Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[a, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[a, Power[Times[a, Csc[Plus[e, Times[f, x]]]], Plus[m, -1]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Power[Times[b, f, Plus[m, n]], -1]], x]], Dist[Times[Plus[n, 1], Power[Times[Power[b, 2], Plus[m, n]], -1]], Int[Times[Power[Times[a, Csc[Plus[e, Times[f, x]]]], m], Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[n, 2]]], x], x]], And[FreeQ[List[a, b, e, f, m], x], RationalQ[n], Less[n, -1], NonzeroQ[Plus[m, n]], IntegersQ[Times[2, m], Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[a, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[a, Csc[Plus[e, Times[f, x]]]], m], Power[Times[b, Sec[Plus[e, Times[f, x]]]], n], Power[Power[Tan[Plus[e, Times[f, x]]], n], -1]], Int[Power[Tan[Plus[e, Times[f, x]]], n], x], x], And[FreeQ[List[a, b, e, f, m, n], x], Not[IntegerQ[n]], ZeroQ[Plus[m, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[a, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[a, Csc[Plus[e, Times[f, x]]]], m], Power[Times[b, Sec[Plus[e, Times[f, x]]]], n], Power[Times[a, Sin[Plus[e, Times[f, x]]]], m], Power[Times[b, Cos[Plus[e, Times[f, x]]]], n]], Int[Times[Power[Times[a, Sin[Plus[e, Times[f, x]]]], Times[-1, m]], Power[Times[b, Cos[Plus[e, Times[f, x]]]], Times[-1, n]]], x], x], FreeQ[List[a, b, e, f, m, n], x]]], RuleDelayed[HoldPattern[Int[Power[sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[d, -1]], Subst[Int[ExpandIntegrand[Power[Plus[1, Power[x, 2]], Plus[Times[n, Power[2, -1]], -1]], x], x], x, Tan[Plus[c, Times[d, x]]]], x], And[FreeQ[List[c, d], x], PositiveIntegerQ[Times[n, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Power[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[d, -1], Subst[Int[ExpandIntegrand[Power[Plus[1, Power[x, 2]], Plus[Times[n, Power[2, -1]], -1]], x], x], x, Cot[Plus[c, Times[d, x]]]], x]], And[FreeQ[List[c, d], x], PositiveIntegerQ[Times[n, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Power[Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, Sin[Plus[c, Times[d, x]]], Power[Times[b, Sec[Plus[c, Times[d, x]]]], Plus[n, -1]], Power[Times[d, Plus[n, -1]], -1]], x], Dist[Times[Power[b, 2], Plus[n, -2], Power[Plus[n, -1], -1]], Int[Power[Times[b, Sec[Plus[c, Times[d, x]]]], Plus[n, -2]], x], x]], And[FreeQ[List[b, c, d], x], Greater[n, 1], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Power[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, Cos[Plus[c, Times[d, x]]], Power[Times[b, Csc[Plus[c, Times[d, x]]]], Plus[n, -1]], Power[Times[d, Plus[n, -1]], -1]], x]], Dist[Times[Power[b, 2], Plus[n, -2], Power[Plus[n, -1], -1]], Int[Power[Times[b, Csc[Plus[c, Times[d, x]]]], Plus[n, -2]], x], x]], And[FreeQ[List[b, c, d], x], Greater[n, 1], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Power[Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Sin[Plus[c, Times[d, x]]], Power[Times[b, Sec[Plus[c, Times[d, x]]]], Plus[n, 1]], Power[Times[b, d, n], -1]], x]], Dist[Times[Plus[n, 1], Power[Times[Power[b, 2], n], -1]], Int[Power[Times[b, Sec[Plus[c, Times[d, x]]]], Plus[n, 2]], x], x]], And[FreeQ[List[b, c, d], x], Less[n, -1], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Power[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Cos[Plus[c, Times[d, x]]], Power[Times[b, Csc[Plus[c, Times[d, x]]]], Plus[n, 1]], Power[Times[b, d, n], -1]], x], Dist[Times[Plus[n, 1], Power[Times[Power[b, 2], n], -1]], Int[Power[Times[b, Csc[Plus[c, Times[d, x]]]], Plus[n, 2]], x], x]], And[FreeQ[List[b, c, d], x], Less[n, -1], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[ArcTanh[Sin[Plus[c, Times[d, x]]]], Power[d, -1]], x], FreeQ[List[c, d], x]]], RuleDelayed[HoldPattern[Int[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[ArcTanh[Cos[Plus[c, Times[d, x]]]], Power[d, -1]], x]], FreeQ[List[c, d], x]]], RuleDelayed[HoldPattern[Int[Power[Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[b, Sec[Plus[c, Times[d, x]]]], n], Power[Cos[Plus[c, Times[d, x]]], n]], Int[Times[1, Power[Power[Cos[Plus[c, Times[d, x]]], n], -1]], x], x], And[FreeQ[List[b, c, d], x], ZeroQ[Plus[Power[n, 2], Times[-1, 1, Power[4, -1]]]]]]], RuleDelayed[HoldPattern[Int[Power[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[b, Csc[Plus[c, Times[d, x]]]], n], Power[Sin[Plus[c, Times[d, x]]], n]], Int[Times[1, Power[Power[Sin[Plus[c, Times[d, x]]], n], -1]], x], x], And[FreeQ[List[b, c, d], x], ZeroQ[Plus[Power[n, 2], Times[-1, 1, Power[4, -1]]]]]]], RuleDelayed[HoldPattern[Int[Power[Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Times[b, Sec[Plus[c, Times[d, x]]]], Plus[n, -1]], Times[Power[Times[Cos[Plus[c, Times[d, x]]], Power[b, -1]], Plus[n, -1]], Int[Times[1, Power[Power[Times[Cos[Plus[c, Times[d, x]]], Power[b, -1]], n], -1]], x]]], x], And[FreeQ[List[b, c, d, n], x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Power[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Times[b, Csc[Plus[c, Times[d, x]]]], Plus[n, -1]], Times[Power[Times[Sin[Plus[c, Times[d, x]]], Power[b, -1]], Plus[n, -1]], Int[Times[1, Power[Power[Times[Sin[Plus[c, Times[d, x]]], Power[b, -1]], n], -1]], x]]], x], And[FreeQ[List[b, c, d, n], x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], 2], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[a, 2], x], x], Plus[Dist[Times[2, a, b], Int[Sec[Plus[c, Times[d, x]]], x], x], Dist[Power[b, 2], Int[Power[Sec[Plus[c, Times[d, x]]], 2], x], x]]], FreeQ[List[a, b, c, d], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], 2], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[a, 2], x], x], Plus[Dist[Times[2, a, b], Int[Csc[Plus[c, Times[d, x]]], x], x], Dist[Power[b, 2], Int[Power[Csc[Plus[c, Times[d, x]]], 2], x], x]]], FreeQ[List[a, b, c, d], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, b, Power[d, -1]], Subst[Int[Times[1, Power[Plus[a, Power[x, 2]], -1]], x], x, Times[b, Tan[Plus[c, Times[d, x]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]]], -1]]], x], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-2, b, Power[d, -1]], Subst[Int[Times[1, Power[Plus[a, Power[x, 2]], -1]], x], x, Times[b, Cot[Plus[c, Times[d, x]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]]], -1]]], x], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[b, 2], Tan[Plus[c, Times[d, x]]], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], Plus[n, -2]], Power[Times[d, Plus[n, -1]], -1]], x], Dist[Times[a, Power[Plus[n, -1], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], Plus[n, -2]], Plus[Times[a, Plus[n, -1]], Times[b, Plus[Times[3, n], -4], Sec[Plus[c, Times[d, x]]]]]], x], x]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 1], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[b, 2], Cot[Plus[c, Times[d, x]]], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], Plus[n, -2]], Power[Times[d, Plus[n, -1]], -1]], x]], Dist[Times[a, Power[Plus[n, -1], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], Plus[n, -2]], Plus[Times[a, Plus[n, -1]], Times[b, Plus[Times[3, n], -4], Csc[Plus[c, Times[d, x]]]]]], x], x]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 1], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[a, -1]], Int[Sqrt[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]]], x], x], Times[-1, Dist[Times[b, Power[a, -1]], Int[Times[Sec[Plus[c, Times[d, x]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[a, -1]], Int[Sqrt[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]]], x], x], Times[-1, Dist[Times[b, Power[a, -1]], Int[Times[Csc[Plus[c, Times[d, x]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Tan[Plus[c, Times[d, x]]], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], n], Power[Times[d, Plus[Times[2, n], 1]], -1]], x], Dist[Times[1, Power[Times[Power[a, 2], Plus[Times[2, n], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], Plus[n, 1]], Plus[Times[a, Plus[Times[2, n], 1]], Times[-1, b, Plus[n, 1], Sec[Plus[c, Times[d, x]]]]]], x], x]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], LessEqual[n, -1], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Cot[Plus[c, Times[d, x]]], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], n], Power[Times[d, Plus[Times[2, n], 1]], -1]], x]], Dist[Times[1, Power[Times[Power[a, 2], Plus[Times[2, n], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], Plus[n, 1]], Plus[Times[a, Plus[Times[2, n], 1]], Times[-1, b, Plus[n, 1], Csc[Plus[c, Times[d, x]]]]]], x], x]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], LessEqual[n, -1], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[a, n], Tan[Plus[c, Times[d, x]]], Power[Times[d, Sqrt[Plus[1, Sec[Plus[c, Times[d, x]]]]], Sqrt[Plus[1, Times[-1, Sec[Plus[c, Times[d, x]]]]]]], -1]], Subst[Int[Times[Power[Plus[1, Times[b, x, Power[a, -1]]], Plus[n, Times[-1, 1, Power[2, -1]]]], Power[Times[x, Sqrt[Plus[1, Times[-1, b, x, Power[a, -1]]]]], -1]], x], x, Sec[Plus[c, Times[d, x]]]], x]], And[FreeQ[List[a, b, c, d, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[Times[2, n]]], PositiveQ[a]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, n], Cot[Plus[c, Times[d, x]]], Power[Times[d, Sqrt[Plus[1, Csc[Plus[c, Times[d, x]]]]], Sqrt[Plus[1, Times[-1, Csc[Plus[c, Times[d, x]]]]]]], -1]], Subst[Int[Times[Power[Plus[1, Times[b, x, Power[a, -1]]], Plus[n, Times[-1, 1, Power[2, -1]]]], Power[Times[x, Sqrt[Plus[1, Times[-1, b, x, Power[a, -1]]]]], -1]], x], x, Csc[Plus[c, Times[d, x]]]], x], And[FreeQ[List[a, b, c, d, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[Times[2, n]]], PositiveQ[a]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, IntPart[n]], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], FracPart[n]], Power[Power[Plus[1, Times[b, Power[a, -1], Sec[Plus[c, Times[d, x]]]]], FracPart[n]], -1]], Int[Power[Plus[1, Times[b, Power[a, -1], Sec[Plus[c, Times[d, x]]]]], n], x], x], And[FreeQ[List[a, b, c, d, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[Times[2, n]]], Not[PositiveQ[a]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, IntPart[n]], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], FracPart[n]], Power[Power[Plus[1, Times[b, Power[a, -1], Csc[Plus[c, Times[d, x]]]]], FracPart[n]], -1]], Int[Power[Plus[1, Times[b, Power[a, -1], Csc[Plus[c, Times[d, x]]]]], n], x], x], And[FreeQ[List[a, b, c, d, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[Times[2, n]]], Not[PositiveQ[a]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[-2, Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], Power[Times[d, Rt[Plus[a, b], 2], Tan[Plus[c, Times[d, x]]]], -1], Sqrt[Times[b, Plus[1, Sec[Plus[c, Times[d, x]]]], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], -1]]], Sqrt[Times[-1, b, Plus[1, Times[-1, Sec[Plus[c, Times[d, x]]]]], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], -1]]], EllipticPi[Times[a, Power[Plus[a, b], -1]], ArcSin[Times[Rt[Plus[a, b], 2], Power[Sqrt[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]]], -1]]], Times[Plus[a, Times[-1, b]], Power[Plus[a, b], -1]]]], x], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[2, Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], Power[Times[d, Rt[Plus[a, b], 2], Cot[Plus[c, Times[d, x]]]], -1], Sqrt[Times[b, Plus[1, Csc[Plus[c, Times[d, x]]]], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], -1]]], Sqrt[Times[-1, b, Plus[1, Times[-1, Csc[Plus[c, Times[d, x]]]]], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], -1]]], EllipticPi[Times[a, Power[Plus[a, b], -1]], ArcSin[Times[Rt[Plus[a, b], 2], Power[Sqrt[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]]], -1]]], Times[Plus[a, Times[-1, b]], Power[Plus[a, b], -1]]]], x], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[3, 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Int[Times[Plus[Power[a, 2], Times[b, Plus[Times[2, a], Times[-1, b]], Sec[Plus[c, Times[d, x]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]]], -1]], x], Dist[Power[b, 2], Int[Times[Sec[Plus[c, Times[d, x]]], Plus[1, Sec[Plus[c, Times[d, x]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[3, 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Int[Times[Plus[Power[a, 2], Times[b, Plus[Times[2, a], Times[-1, b]], Csc[Plus[c, Times[d, x]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]]], -1]], x], Dist[Power[b, 2], Int[Times[Csc[Plus[c, Times[d, x]]], Plus[1, Csc[Plus[c, Times[d, x]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[b, 2], Tan[Plus[c, Times[d, x]]], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], Plus[n, -2]], Power[Times[d, Plus[n, -1]], -1]], x], Dist[Times[1, Power[Plus[n, -1], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], Plus[n, -3]], Simp[Plus[Times[Power[a, 3], Plus[n, -1]], Times[Times[b, Plus[Times[Power[b, 2], Plus[n, -2]], Times[3, Power[a, 2], Plus[n, -1]]]], Sec[Plus[c, Times[d, x]]]], Times[Times[a, Power[b, 2], Plus[Times[3, n], -4]], Power[Sec[Plus[c, Times[d, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 2], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[b, 2], Cot[Plus[c, Times[d, x]]], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], Plus[n, -2]], Power[Times[d, Plus[n, -1]], -1]], x]], Dist[Times[1, Power[Plus[n, -1], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], Plus[n, -3]], Simp[Plus[Times[Power[a, 3], Plus[n, -1]], Times[Times[b, Plus[Times[Power[b, 2], Plus[n, -2]], Times[3, Power[a, 2], Plus[n, -1]]]], Csc[Plus[c, Times[d, x]]]], Times[Times[a, Power[b, 2], Plus[Times[3, n], -4]], Power[Csc[Plus[c, Times[d, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 2], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[a, -1]], x], Times[-1, Dist[Times[1, Power[a, -1]], Int[Times[1, Power[Plus[1, Times[a, Power[b, -1], Cos[Plus[c, Times[d, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[a, -1]], x], Times[-1, Dist[Times[1, Power[a, -1]], Int[Times[1, Power[Plus[1, Times[a, Power[b, -1], Sin[Plus[c, Times[d, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[-2, Rt[Plus[a, b], 2], Power[Times[a, d, Tan[Plus[c, Times[d, x]]]], -1], Sqrt[Times[b, Plus[1, Times[-1, Sec[Plus[c, Times[d, x]]]]], Power[Plus[a, b], -1]]], Sqrt[Times[-1, b, Plus[1, Sec[Plus[c, Times[d, x]]]], Power[Plus[a, Times[-1, b]], -1]]], EllipticPi[Times[Plus[a, b], Power[a, -1]], ArcSin[Times[Sqrt[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]]], Power[Rt[Plus[a, b], 2], -1]]], Times[Plus[a, b], Power[Plus[a, Times[-1, b]], -1]]]], x], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[2, Rt[Plus[a, b], 2], Power[Times[a, d, Cot[Plus[c, Times[d, x]]]], -1], Sqrt[Times[b, Plus[1, Times[-1, Csc[Plus[c, Times[d, x]]]]], Power[Plus[a, b], -1]]], Sqrt[Times[-1, b, Plus[1, Csc[Plus[c, Times[d, x]]]], Power[Plus[a, Times[-1, b]], -1]]], EllipticPi[Times[Plus[a, b], Power[a, -1]], ArcSin[Times[Sqrt[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]]], Power[Rt[Plus[a, b], 2], -1]]], Times[Plus[a, b], Power[Plus[a, Times[-1, b]], -1]]]], x], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[b, 2], Tan[Plus[c, Times[d, x]]], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], Plus[n, 1]], Power[Times[a, d, Plus[n, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Dist[Times[1, Power[Times[a, Plus[n, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], Plus[n, 1]], Simp[Plus[Times[Plus[Power[a, 2], Times[-1, Power[b, 2]]], Plus[n, 1]], Times[-1, a, b, Plus[n, 1], Sec[Plus[c, Times[d, x]]]], Times[Power[b, 2], Plus[n, 2], Power[Sec[Plus[c, Times[d, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Less[n, -1], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[b, 2], Cot[Plus[c, Times[d, x]]], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], Plus[n, 1]], Power[Times[a, d, Plus[n, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Dist[Times[1, Power[Times[a, Plus[n, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], Plus[n, 1]], Simp[Plus[Times[Plus[Power[a, 2], Times[-1, Power[b, 2]]], Plus[n, 1]], Times[-1, a, b, Plus[n, 1], Csc[Plus[c, Times[d, x]]]], Times[Power[b, 2], Plus[n, 2], Power[Csc[Plus[c, Times[d, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Less[n, -1], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], n], x], And[FreeQ[List[a, b, c, d, n], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[Times[2, n]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], n], x], And[FreeQ[List[a, b, c, d, n], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[Times[2, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[a, Int[Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], x], x], Dist[Times[b, Power[d, -1]], Int[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], x], x]], FreeQ[List[a, b, d, e, f, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Optional[Pattern[n, Blank[]]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[a, Int[Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], x], x], Dist[Times[b, Power[d, -1]], Int[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], x], x]], FreeQ[List[a, b, d, e, f, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[2, a, b, Power[d, -1]], Int[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], x], x], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Plus[Power[a, 2], Times[Power[b, 2], Power[Sec[Plus[e, Times[f, x]]], 2]]]], x]], FreeQ[List[a, b, d, e, f, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[2, a, b, Power[d, -1]], Int[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], x], x], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Plus[Power[a, 2], Times[Power[b, 2], Power[Csc[Plus[e, Times[f, x]]], 2]]]], x]], FreeQ[List[a, b, d, e, f, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[b, -1]], Int[Sec[Plus[e, Times[f, x]]], x], x], Times[-1, Dist[Times[a, Power[b, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], -1]], x], x]]], FreeQ[List[a, b, e, f], x]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[b, -1]], Int[Csc[Plus[e, Times[f, x]]], x], x], Times[-1, Dist[Times[a, Power[b, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], -1]], x], x]]], FreeQ[List[a, b, e, f], x]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 3], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Tan[Plus[e, Times[f, x]]], Power[Times[b, f], -1]], x], Times[-1, Dist[Times[a, Power[b, -1]], Int[Times[Power[Sec[Plus[e, Times[f, x]]], 2], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], -1]], x], x]]], FreeQ[List[a, b, e, f], x]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 3], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Cot[Plus[e, Times[f, x]]], Power[Times[b, f], -1]], x]], Times[-1, Dist[Times[a, Power[b, -1]], Int[Times[Power[Csc[Plus[e, Times[f, x]]], 2], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], -1]], x], x]]], FreeQ[List[a, b, e, f], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrig[Times[Power[Plus[a, Times[b, sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, sec[Plus[e, Times[f, x]]]], n]], x], x], And[FreeQ[List[a, b, d, e, f, m, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[m], RationalQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrig[Times[Power[Plus[a, Times[b, csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, csc[Plus[e, Times[f, x]]]], n]], x], x], And[FreeQ[List[a, b, d, e, f, m, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[m], RationalQ[n]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[2, b, Tan[Plus[e, Times[f, x]]], Power[Times[f, Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]]], -1]], x], And[FreeQ[List[a, b, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[-2, b, Cot[Plus[e, Times[f, x]]], Power[Times[f, Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]]], -1]], x], And[FreeQ[List[a, b, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[f, m], -1]], x], Dist[Times[a, Plus[Times[2, m], -1], Power[m, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]]], x], x]], And[FreeQ[List[a, b, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Greater[m, Times[1, Power[2, -1]]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[f, m], -1]], x]], Dist[Times[a, Plus[Times[2, m], -1], Power[m, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]]], x], x]], And[FreeQ[List[a, b, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Greater[m, Times[1, Power[2, -1]]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Tan[Plus[e, Times[f, x]]], Power[Times[f, Plus[b, Times[a, Sec[Plus[e, Times[f, x]]]]]], -1]], x], And[FreeQ[List[a, b, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Cot[Plus[e, Times[f, x]]], Power[Times[f, Plus[b, Times[a, Csc[Plus[e, Times[f, x]]]]]], -1]], x]], And[FreeQ[List[a, b, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, Power[f, -1]], Subst[Int[Times[1, Power[Plus[Times[2, a], Power[x, 2]], -1]], x], x, Times[b, Tan[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]]], x], And[FreeQ[List[a, b, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-2, Power[f, -1]], Subst[Int[Times[1, Power[Plus[Times[2, a], Power[x, 2]], -1]], x], x, Times[b, Cot[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]]], x], And[FreeQ[List[a, b, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x]], Dist[Times[Plus[m, 1], Power[Times[a, Plus[Times[2, m], 1]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]]], x], x]], And[FreeQ[List[a, b, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x], Dist[Times[Plus[m, 1], Power[Times[a, Plus[Times[2, m], 1]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]]], x], x]], And[FreeQ[List[a, b, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[f, Plus[Times[2, m], 1]], -1]], x], Dist[Times[m, Power[Times[b, Plus[Times[2, m], 1]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]]], x], x]], And[FreeQ[List[a, b, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[f, Plus[Times[2, m], 1]], -1]], x]], Dist[Times[m, Power[Times[b, Plus[Times[2, m], 1]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]]], x], x]], And[FreeQ[List[a, b, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[f, Plus[m, 1]], -1]], x], Dist[Times[a, m, Power[Times[b, Plus[m, 1]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m]], x], x]], And[FreeQ[List[a, b, e, f, m], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[f, Plus[m, 1]], -1]], x]], Dist[Times[a, m, Power[Times[b, Plus[m, 1]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m]], x], x]], And[FreeQ[List[a, b, e, f, m], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 3], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[Power[a, 2], Plus[Times[2, m], 1]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Plus[Times[a, m], Times[-1, b, Plus[Times[2, m], 1], Sec[Plus[e, Times[f, x]]]]]], x], x]]], And[FreeQ[List[a, b, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 3], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[Power[a, 2], Plus[Times[2, m], 1]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Plus[Times[a, m], Times[-1, b, Plus[Times[2, m], 1], Csc[Plus[e, Times[f, x]]]]]], x], x]]], And[FreeQ[List[a, b, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 3], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[b, f, Plus[m, 2]], -1]], x], Dist[Times[1, Power[Times[b, Plus[m, 2]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Plus[Times[b, Plus[m, 1]], Times[-1, a, Sec[Plus[e, Times[f, x]]]]]], x], x]], And[FreeQ[List[a, b, e, f, m], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 3], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[b, f, Plus[m, 2]], -1]], x]], Dist[Times[1, Power[Times[b, Plus[m, 2]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Plus[Times[b, Plus[m, 1]], Times[-1, a, Csc[Plus[e, Times[f, x]]]]]], x], x]], And[FreeQ[List[a, b, e, f, m], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, a, Power[Times[b, f], -1], Sqrt[Times[a, d, Power[b, -1]]]], Subst[Int[Times[1, Power[Sqrt[Plus[1, Times[Power[x, 2], Power[a, -1]]]], -1]], x], x, Times[b, Tan[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]]], x], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveQ[Times[a, d, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-2, a, Power[Times[b, f], -1], Sqrt[Times[a, d, Power[b, -1]]]], Subst[Int[Times[1, Power[Sqrt[Plus[1, Times[Power[x, 2], Power[a, -1]]]], -1]], x], x, Times[b, Cot[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]]], x], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveQ[Times[a, d, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, b, d, Power[f, -1]], Subst[Int[Times[1, Power[Plus[b, Times[-1, d, Power[x, 2]]], -1]], x], x, Times[b, Tan[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]]], x], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[PositiveQ[Times[a, d, Power[b, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-2, b, d, Power[f, -1]], Subst[Int[Times[1, Power[Plus[b, Times[-1, d, Power[x, 2]]], -1]], x], x, Times[b, Cot[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]]], x], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[PositiveQ[Times[a, d, Power[b, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, b, d, Tan[Plus[e, Times[f, x]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, Plus[Times[2, n], -1], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]]], -1]], x], Dist[Times[2, a, d, Plus[n, -1], Power[Times[b, Plus[Times[2, n], -1]], -1]], Int[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]]], x], x]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 1], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, b, d, Cot[Plus[e, Times[f, x]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, Plus[Times[2, n], -1], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]]], -1]], x], Dist[Times[2, a, d, Plus[n, -1], Power[Times[b, Plus[Times[2, n], -1]], -1]], Int[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]]], x], x]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 1], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[2, a, Tan[Plus[e, Times[f, x]]], Power[Times[f, Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]], x], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[-2, a, Cot[Plus[e, Times[f, x]]], Power[Times[f, Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]], x], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[a, Tan[Plus[e, Times[f, x]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, n, Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]]], -1]], x]], Dist[Times[a, Plus[Times[2, n], 1], Power[Times[2, b, d, n], -1]], Int[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Less[n, Times[-1, Power[2, -1]]], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[a, Cot[Plus[e, Times[f, x]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, n, Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]]], -1]], x], Dist[Times[a, Plus[Times[2, n], 1], Power[Times[2, b, d, n], -1]], Int[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Less[n, Times[-1, Power[2, -1]]], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[a, 2], d, Tan[Plus[e, Times[f, x]]], Power[Times[f, Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[a, Times[-1, b, Sec[Plus[e, Times[f, x]]]]]]], -1]], Subst[Int[Times[Power[Times[d, x], Plus[n, -1]], Power[Sqrt[Plus[a, Times[-1, b, x]]], -1]], x], x, Sec[Plus[e, Times[f, x]]]], x]], And[FreeQ[List[a, b, d, e, f, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, 2], d, Cot[Plus[e, Times[f, x]]], Power[Times[f, Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[a, Times[-1, b, Csc[Plus[e, Times[f, x]]]]]]], -1]], Subst[Int[Times[Power[Times[d, x], Plus[n, -1]], Power[Sqrt[Plus[a, Times[-1, b, x]]], -1]], x], x, Csc[Plus[e, Times[f, x]]]], x], And[FreeQ[List[a, b, d, e, f, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[2], Sqrt[a], Power[Times[b, f], -1]], Subst[Int[Times[1, Power[Sqrt[Plus[1, Power[x, 2]]], -1]], x], x, Times[b, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], -1]]], x], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[d, Times[-1, a, Power[b, -1]]]], PositiveQ[a]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Sqrt[2], Sqrt[a], Power[Times[b, f], -1]], Subst[Int[Times[1, Power[Sqrt[Plus[1, Power[x, 2]]], -1]], x], x, Times[b, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], -1]]], x]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[d, Times[-1, a, Power[b, -1]]]], PositiveQ[a]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, b, d, Power[Times[a, f], -1]], Subst[Int[Times[1, Power[Plus[Times[2, b], Times[-1, d, Power[x, 2]]], -1]], x], x, Times[b, Tan[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]]], x], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-2, b, d, Power[Times[a, f], -1]], Subst[Int[Times[1, Power[Plus[Times[2, b], Times[-1, d, Power[x, 2]]], -1]], x], x, Times[b, Cot[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]]], x], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[a, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, m], -1]], x], Dist[Times[b, Plus[Times[2, m], -1], Power[Times[d, m], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, d, e, f, m, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[m, n]], RationalQ[m], Greater[m, Times[1, Power[2, -1]]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[a, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, m], -1]], x]], Dist[Times[b, Plus[Times[2, m], -1], Power[Times[d, m], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, d, e, f, m, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[m, n]], RationalQ[m], Greater[m, Times[1, Power[2, -1]]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, d, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x]], Dist[Times[d, Plus[m, 1], Power[Times[b, Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]]], x], x]], And[FreeQ[List[a, b, d, e, f, m, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[m, n]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, d, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x], Dist[Times[d, Plus[m, 1], Power[Times[b, Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]]], x], x]], And[FreeQ[List[a, b, d, e, f, m, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[m, n]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[Times[2, m], 1]], -1]], x], Dist[Times[m, Power[Times[a, Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n]], x], x]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Equal[Plus[m, n, 1], 0], Less[m, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[Times[2, m], 1]], -1]], x]], Dist[Times[m, Power[Times[a, Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n]], x], x]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Equal[Plus[m, n, 1], 0], Less[m, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[m, 1]], -1]], x], Dist[Times[a, m, Power[Times[b, d, Plus[m, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, d, e, f, m, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[m, n, 1]], Not[And[RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[m, 1]], -1]], x]], Dist[Times[a, m, Power[Times[b, d, Plus[m, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, d, e, f, m, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[m, n, 1]], Not[And[RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[b, 2], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -2]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x]], Times[-1, Dist[Times[a, Power[Times[d, n], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -2]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Plus[Times[b, Plus[m, Times[-1, 2, n], -2]], Times[-1, a, Plus[m, Times[2, n], -1], Sec[Plus[e, Times[f, x]]]]]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Greater[m, 1], Or[Less[n, -1], And[Equal[m, Times[3, Power[2, -1]]], Equal[n, Times[-1, Power[2, -1]]]]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[b, 2], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -2]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x], Times[-1, Dist[Times[a, Power[Times[d, n], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -2]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Plus[Times[b, Plus[m, Times[-1, 2, n], -2]], Times[-1, a, Plus[m, Times[2, n], -1], Csc[Plus[e, Times[f, x]]]]]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Greater[m, 1], Or[Less[n, -1], And[Equal[m, Times[3, Power[2, -1]]], Equal[n, Times[-1, Power[2, -1]]]]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[b, 2], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -2]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[m, n, -1]], -1]], x], Dist[Times[b, Power[Plus[m, n, -1], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -2]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Plus[Times[b, Plus[m, Times[2, n], -1]], Times[a, Plus[Times[3, m], Times[2, n], -4], Sec[Plus[e, Times[f, x]]]]]], x], x]], And[FreeQ[List[a, b, d, e, f, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Greater[m, 1], NonzeroQ[Plus[m, n, -1]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[b, 2], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -2]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[m, n, -1]], -1]], x]], Dist[Times[b, Power[Plus[m, n, -1], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -2]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Plus[Times[b, Plus[m, Times[2, n], -1]], Times[a, Plus[Times[3, m], Times[2, n], -4], Csc[Plus[e, Times[f, x]]]]]], x], x]], And[FreeQ[List[a, b, d, e, f, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Greater[m, 1], NonzeroQ[Plus[m, n, -1]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, d, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x]], Times[-1, Dist[Times[d, Power[Times[a, b, Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Plus[Times[a, Plus[n, -1]], Times[-1, b, Plus[m, n], Sec[Plus[e, Times[f, x]]]]]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[m, -1], Less[1, n, 2], Or[IntegersQ[Times[2, m], Times[2, n]], IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, d, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x], Times[-1, Dist[Times[d, Power[Times[a, b, Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Plus[Times[a, Plus[n, -1]], Times[-1, b, Plus[m, n], Csc[Plus[e, Times[f, x]]]]]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[m, -1], Less[1, n, 2], Or[IntegersQ[Times[2, m], Times[2, n]], IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[d, 2], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[f, Plus[Times[2, m], 1]], -1]], x], Dist[Times[Power[d, 2], Power[Times[a, b, Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]], Plus[Times[b, Plus[n, -2]], Times[a, Plus[m, Times[-1, n], 2], Sec[Plus[e, Times[f, x]]]]]], x], x]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[m, -1], Greater[n, 2], Or[IntegersQ[Times[2, m], Times[2, n]], IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[d, 2], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[f, Plus[Times[2, m], 1]], -1]], x]], Dist[Times[Power[d, 2], Power[Times[a, b, Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]], Plus[Times[b, Plus[n, -2]], Times[a, Plus[m, Times[-1, n], 2], Csc[Plus[e, Times[f, x]]]]]], x], x]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[m, -1], Greater[n, 2], Or[IntegersQ[Times[2, m], Times[2, n]], IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[Times[2, m], 1]], -1]], x], Dist[Times[1, Power[Times[Power[a, 2], Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Plus[Times[a, Plus[Times[2, m], n, 1]], Times[-1, b, Plus[m, n, 1], Sec[Plus[e, Times[f, x]]]]]], x], x]], And[FreeQ[List[a, b, d, e, f, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1], Or[IntegersQ[Times[2, m], Times[2, n]], IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[Times[2, m], 1]], -1]], x]], Dist[Times[1, Power[Times[Power[a, 2], Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Plus[Times[a, Plus[Times[2, m], n, 1]], Times[-1, b, Plus[m, n, 1], Csc[Plus[e, Times[f, x]]]]]], x], x]], And[FreeQ[List[a, b, d, e, f, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1], Or[IntegersQ[Times[2, m], Times[2, n]], IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[d, 2], Tan[Plus[e, Times[f, x]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[f, Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x]], Times[-1, Dist[Times[Power[d, 2], Power[Times[a, b], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]], Plus[Times[b, Plus[n, -2]], Times[-1, a, Plus[n, -1], Sec[Plus[e, Times[f, x]]]]]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[d, 2], Cot[Plus[e, Times[f, x]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[f, Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], Times[-1, Dist[Times[Power[d, 2], Power[Times[a, b], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]], Plus[Times[b, Plus[n, -2]], Times[-1, a, Plus[n, -1], Csc[Plus[e, Times[f, x]]]]]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Tan[Plus[e, Times[f, x]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x]], Times[-1, Dist[Times[1, Power[Power[a, 2], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Plus[Times[a, Plus[n, -1]], Times[-1, b, n, Sec[Plus[e, Times[f, x]]]]]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Less[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Cot[Plus[e, Times[f, x]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], Times[-1, Dist[Times[1, Power[Power[a, 2], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Plus[Times[a, Plus[n, -1]], Times[-1, b, n, Csc[Plus[e, Times[f, x]]]]]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Less[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, d, Tan[Plus[e, Times[f, x]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[a, f, Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], Dist[Times[d, Plus[n, -1], Power[Times[a, b], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Plus[a, Times[-1, b, Sec[Plus[e, Times[f, x]]]]]], x], x]], And[FreeQ[List[a, b, d, e, f, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, d, Cot[Plus[e, Times[f, x]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[a, f, Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x]], Dist[Times[d, Plus[n, -1], Power[Times[a, b], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Plus[a, Times[-1, b, Csc[Plus[e, Times[f, x]]]]]], x], x]], And[FreeQ[List[a, b, d, e, f, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[3, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[d, Power[b, -1]], Int[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]]], x], x], Times[-1, Dist[Times[a, d, Power[b, -1]], Int[Times[Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[3, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[d, Power[b, -1]], Int[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]]], x], x], Times[-1, Dist[Times[a, d, Power[b, -1]], Int[Times[Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, Power[d, 2], Tan[Plus[e, Times[f, x]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[f, Plus[Times[2, n], -3], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]]], -1]], x], Dist[Times[Power[d, 2], Power[Times[b, Plus[Times[2, n], -3]], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]], Plus[Times[2, b, Plus[n, -2]], Times[-1, a, Sec[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 2], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, Power[d, 2], Cot[Plus[e, Times[f, x]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[f, Plus[Times[2, n], -3], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]]], -1]], x], Dist[Times[Power[d, 2], Power[Times[b, Plus[Times[2, n], -3]], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]], Plus[Times[2, b, Plus[n, -2]], Times[-1, a, Csc[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 2], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Tan[Plus[e, Times[f, x]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, n, Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]]], -1]], x]], Dist[Times[1, Power[Times[2, b, d, n], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Plus[a, Times[b, Plus[Times[2, n], 1], Sec[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Less[n, 0], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Cot[Plus[e, Times[f, x]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, n, Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]]], -1]], x], Dist[Times[1, Power[Times[2, b, d, n], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Plus[a, Times[b, Plus[Times[2, n], 1], Csc[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, d, e, f], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Less[n, 0], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[d, 2], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[f, Plus[m, n, -1]], -1]], x], Dist[Times[Power[d, 2], Power[Times[b, Plus[m, n, -1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]], Plus[Times[b, Plus[n, -2]], Times[a, m, Sec[Plus[e, Times[f, x]]]]]], x], x]], And[FreeQ[List[a, b, d, e, f, m], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 2], NonzeroQ[Plus[m, n, -1]], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[d, 2], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[f, Plus[m, n, -1]], -1]], x]], Dist[Times[Power[d, 2], Power[Times[b, Plus[m, n, -1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]], Plus[Times[b, Plus[n, -2]], Times[a, m, Csc[Plus[e, Times[f, x]]]]]], x], x]], And[FreeQ[List[a, b, d, e, f, m], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 2], NonzeroQ[Plus[m, n, -1]], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[a, d, Power[b, -1]], n], Tan[Plus[e, Times[f, x]]], Power[Times[Power[a, Plus[n, -2]], f, Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[a, Times[-1, b, Sec[Plus[e, Times[f, x]]]]]]], -1]], Subst[Int[Times[Power[Plus[a, Times[-1, x]], Plus[n, -1]], Power[Plus[Times[2, a], Times[-1, x]], Plus[m, Times[-1, 1, Power[2, -1]]]], Power[Sqrt[x], -1]], x], x, Plus[a, Times[-1, b, Sec[Plus[e, Times[f, x]]]]]], x], And[FreeQ[List[a, b, d, e, f, m, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[m]], PositiveQ[a], Not[IntegerQ[n]], PositiveQ[Times[a, d, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[Times[a, d, Power[b, -1]], n], Cot[Plus[e, Times[f, x]]], Power[Times[Power[a, Plus[n, -2]], f, Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[a, Times[-1, b, Csc[Plus[e, Times[f, x]]]]]]], -1]], Subst[Int[Times[Power[Plus[a, Times[-1, x]], Plus[n, -1]], Power[Plus[Times[2, a], Times[-1, x]], Plus[m, Times[-1, 1, Power[2, -1]]]], Power[Sqrt[x], -1]], x], x, Plus[a, Times[-1, b, Csc[Plus[e, Times[f, x]]]]]], x]], And[FreeQ[List[a, b, d, e, f, m, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[m]], PositiveQ[a], Not[IntegerQ[n]], PositiveQ[Times[a, d, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[-1, a, d, Power[b, -1]], n], Tan[Plus[e, Times[f, x]]], Power[Times[Power[a, Plus[n, -1]], f, Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[a, Times[-1, b, Sec[Plus[e, Times[f, x]]]]]]], -1]], Subst[Int[Times[Power[x, Plus[m, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[-1, x]], Plus[n, -1]], Power[Sqrt[Plus[Times[2, a], Times[-1, x]]], -1]], x], x, Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], x], And[FreeQ[List[a, b, d, e, f, m, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[m]], PositiveQ[a], Not[IntegerQ[n]], NegativeQ[Times[a, d, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[Times[-1, a, d, Power[b, -1]], n], Cot[Plus[e, Times[f, x]]], Power[Times[Power[a, Plus[n, -1]], f, Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[a, Times[-1, b, Csc[Plus[e, Times[f, x]]]]]]], -1]], Subst[Int[Times[Power[x, Plus[m, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[-1, x]], Plus[n, -1]], Power[Sqrt[Plus[Times[2, a], Times[-1, x]]], -1]], x], x, Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], x]], And[FreeQ[List[a, b, d, e, f, m, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[m]], PositiveQ[a], Not[IntegerQ[n]], NegativeQ[Times[a, d, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[a, 2], d, Tan[Plus[e, Times[f, x]]], Power[Times[f, Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[a, Times[-1, b, Sec[Plus[e, Times[f, x]]]]]]], -1]], Subst[Int[Times[Power[Times[d, x], Plus[n, -1]], Power[Plus[a, Times[b, x]], Plus[m, Times[-1, 1, Power[2, -1]]]], Power[Sqrt[Plus[a, Times[-1, b, x]]], -1]], x], x, Sec[Plus[e, Times[f, x]]]], x]], And[FreeQ[List[a, b, d, e, f, m, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[m]], PositiveQ[a]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, 2], d, Cot[Plus[e, Times[f, x]]], Power[Times[f, Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[a, Times[-1, b, Csc[Plus[e, Times[f, x]]]]]]], -1]], Subst[Int[Times[Power[Times[d, x], Plus[n, -1]], Power[Plus[a, Times[b, x]], Plus[m, Times[-1, 1, Power[2, -1]]]], Power[Sqrt[Plus[a, Times[-1, b, x]]], -1]], x], x, Csc[Plus[e, Times[f, x]]]], x], And[FreeQ[List[a, b, d, e, f, m, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[m]], PositiveQ[a]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, IntPart[m]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], FracPart[m]], Power[Power[Plus[1, Times[b, Power[a, -1], Sec[Plus[e, Times[f, x]]]]], FracPart[m]], -1]], Int[Times[Power[Plus[1, Times[b, Power[a, -1], Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n]], x], x], And[FreeQ[List[a, b, d, e, f, m, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[m]], Not[PositiveQ[a]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, IntPart[m]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], FracPart[m]], Power[Power[Plus[1, Times[b, Power[a, -1], Csc[Plus[e, Times[f, x]]]]], FracPart[m]], -1]], Int[Times[Power[Plus[1, Times[b, Power[a, -1], Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n]], x], x], And[FreeQ[List[a, b, d, e, f, m, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[m]], Not[PositiveQ[a]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Plus[a, Times[-1, b]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x], Dist[b, Int[Times[Sec[Plus[e, Times[f, x]]], Plus[1, Sec[Plus[e, Times[f, x]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Plus[a, Times[-1, b]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x], Dist[b, Int[Times[Csc[Plus[e, Times[f, x]]], Plus[1, Csc[Plus[e, Times[f, x]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[f, m], -1]], x], Dist[Times[1, Power[m, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -2]], Plus[Times[Power[b, 2], Plus[m, -1]], Times[Power[a, 2], m], Times[a, b, Plus[Times[2, m], -1], Sec[Plus[e, Times[f, x]]]]]], x], x]], And[FreeQ[List[a, b, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Greater[m, 1], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[f, m], -1]], x]], Dist[Times[1, Power[m, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -2]], Plus[Times[Power[b, 2], Plus[m, -1]], Times[Power[a, 2], m], Times[a, b, Plus[Times[2, m], -1], Csc[Plus[e, Times[f, x]]]]]], x], x]], And[FreeQ[List[a, b, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Greater[m, 1], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[b, -1]], Int[Times[1, Power[Plus[1, Times[a, Power[b, -1], Cos[Plus[e, Times[f, x]]]]], -1]], x], x], And[FreeQ[List[a, b, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[b, -1]], Int[Times[1, Power[Plus[1, Times[a, Power[b, -1], Sin[Plus[e, Times[f, x]]]]], -1]], x], x], And[FreeQ[List[a, b, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[2, Rt[Plus[a, b], 2], Power[Times[b, f, Tan[Plus[e, Times[f, x]]]], -1], Sqrt[Times[Times[b, Plus[1, Times[-1, Sec[Plus[e, Times[f, x]]]]]], Power[Plus[a, b], -1]]], Sqrt[Times[-1, b, Plus[1, Sec[Plus[e, Times[f, x]]]], Power[Plus[a, Times[-1, b]], -1]]], EllipticF[ArcSin[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Rt[Plus[a, b], 2], -1]]], Times[Plus[a, b], Power[Plus[a, Times[-1, b]], -1]]]], x], And[FreeQ[List[a, b, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[-2, Rt[Plus[a, b], 2], Power[Times[b, f, Cot[Plus[e, Times[f, x]]]], -1], Sqrt[Times[Times[b, Plus[1, Times[-1, Csc[Plus[e, Times[f, x]]]]]], Power[Plus[a, b], -1]]], Sqrt[Times[-1, b, Plus[1, Csc[Plus[e, Times[f, x]]]], Power[Plus[a, Times[-1, b]], -1]]], EllipticF[ArcSin[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Rt[Plus[a, b], 2], -1]]], Times[Plus[a, b], Power[Plus[a, Times[-1, b]], -1]]]], x], And[FreeQ[List[a, b, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Dist[Times[1, Power[Times[Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Plus[Times[a, Plus[m, 1]], Times[-1, b, Plus[m, 2], Sec[Plus[e, Times[f, x]]]]]], x], x]], And[FreeQ[List[a, b, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Dist[Times[1, Power[Times[Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Plus[Times[a, Plus[m, 1]], Times[-1, b, Plus[m, 2], Csc[Plus[e, Times[f, x]]]]]], x], x]], And[FreeQ[List[a, b, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Tan[Plus[e, Times[f, x]]], Power[Times[f, Sqrt[Plus[1, Sec[Plus[e, Times[f, x]]]]], Sqrt[Plus[1, Times[-1, Sec[Plus[e, Times[f, x]]]]]]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], m], Power[Times[Sqrt[Plus[1, x]], Sqrt[Plus[1, Times[-1, x]]]], -1]], x], x, Sec[Plus[e, Times[f, x]]]], x]], And[FreeQ[List[a, b, e, f, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[Times[2, m]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Cot[Plus[e, Times[f, x]]], Power[Times[f, Sqrt[Plus[1, Csc[Plus[e, Times[f, x]]]]], Sqrt[Plus[1, Times[-1, Csc[Plus[e, Times[f, x]]]]]]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], m], Power[Times[Sqrt[Plus[1, x]], Sqrt[Plus[1, Times[-1, x]]]], -1]], x], x, Csc[Plus[e, Times[f, x]]]], x], And[FreeQ[List[a, b, e, f, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[Times[2, m]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[f, Plus[m, 1]], -1]], x], Dist[Times[m, Power[Plus[m, 1], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Plus[b, Times[a, Sec[Plus[e, Times[f, x]]]]]], x], x]], And[FreeQ[List[a, b, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[f, Plus[m, 1]], -1]], x]], Dist[Times[m, Power[Plus[m, 1], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Plus[b, Times[a, Csc[Plus[e, Times[f, x]]]]]], x], x]], And[FreeQ[List[a, b, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[a, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Plus[Times[b, Plus[m, 1]], Times[-1, a, Plus[m, 2], Sec[Plus[e, Times[f, x]]]]]], x], x]]], And[FreeQ[List[a, b, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[a, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Times[-1, Dist[Times[1, Power[Times[Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Plus[Times[b, Plus[m, 1]], Times[-1, a, Plus[m, 2], Csc[Plus[e, Times[f, x]]]]]], x], x]]], And[FreeQ[List[a, b, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Int[Times[Sec[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x]], Int[Times[Sec[Plus[e, Times[f, x]]], Plus[1, Sec[Plus[e, Times[f, x]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x]], And[FreeQ[List[a, b, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Int[Times[Csc[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x]], Int[Times[Csc[Plus[e, Times[f, x]]], Plus[1, Csc[Plus[e, Times[f, x]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x]], And[FreeQ[List[a, b, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[a, Power[b, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m]], x], x]], Dist[Times[1, Power[b, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]]], x], x]], And[FreeQ[List[a, b, e, f, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[a, Power[b, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m]], x], x]], Dist[Times[1, Power[b, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]]], x], x]], And[FreeQ[List[a, b, e, f, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 3], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[a, 2], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[b, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Dist[Times[1, Power[Times[b, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[a, b, Plus[m, 1]], Times[-1, Plus[Power[a, 2], Times[Power[b, 2], Plus[m, 1]]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 3], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[a, 2], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[b, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Dist[Times[1, Power[Times[b, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[a, b, Plus[m, 1]], Times[-1, Plus[Power[a, 2], Times[Power[b, 2], Plus[m, 1]]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 3], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[b, f, Plus[m, 2]], -1]], x], Dist[Times[1, Power[Times[b, Plus[m, 2]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Plus[Times[b, Plus[m, 1]], Times[-1, a, Sec[Plus[e, Times[f, x]]]]]], x], x]], And[FreeQ[List[a, b, e, f, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[m], Less[m, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 3], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[b, f, Plus[m, 2]], -1]], x]], Dist[Times[1, Power[Times[b, Plus[m, 2]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Plus[Times[b, Plus[m, 1]], Times[-1, a, Csc[Plus[e, Times[f, x]]]]]], x], x]], And[FreeQ[List[a, b, e, f, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[m], Less[m, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[a, 2], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -2]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x]], Times[-1, Dist[Times[1, Power[Times[d, n], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -3]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[Power[a, 2], b, Plus[m, Times[-1, 2, n], -2]], Times[-1, a, Plus[Times[3, Power[b, 2], n], Times[Power[a, 2], Plus[n, 1]]], Sec[Plus[e, Times[f, x]]]], Times[-1, b, Plus[Times[Power[b, 2], n], Times[Power[a, 2], Plus[m, n, -1]]], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Greater[m, 2], Or[And[IntegerQ[m], Less[n, -1]], And[IntegersQ[Plus[m, Times[1, Power[2, -1]]], Times[2, n]], LessEqual[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[a, 2], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -2]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x], Times[-1, Dist[Times[1, Power[Times[d, n], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -3]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[Power[a, 2], b, Plus[m, Times[-1, 2, n], -2]], Times[-1, a, Plus[Times[3, Power[b, 2], n], Times[Power[a, 2], Plus[n, 1]]], Csc[Plus[e, Times[f, x]]]], Times[-1, b, Plus[Times[Power[b, 2], n], Times[Power[a, 2], Plus[m, n, -1]]], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Greater[m, 2], Or[And[IntegerQ[m], Less[n, -1]], And[IntegersQ[Plus[m, Times[1, Power[2, -1]]], Times[2, n]], LessEqual[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[b, 2], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -2]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[m, n, -1]], -1]], x], Dist[Times[1, Power[Times[d, Plus[m, n, -1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -3]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[Power[a, 3], d, Plus[m, n, -1]], Times[a, Power[b, 2], d, n], Times[b, Plus[Times[Power[b, 2], d, Plus[m, n, -2]], Times[3, Power[a, 2], d, Plus[m, n, -1]]], Sec[Plus[e, Times[f, x]]]], Times[a, Power[b, 2], d, Plus[Times[3, m], Times[2, n], -4], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, n], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Greater[m, 2], Or[IntegerQ[m], IntegersQ[Times[2, m], Times[2, n]]], Not[And[IntegerQ[n], Greater[n, 2], Not[IntegerQ[m]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[b, 2], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -2]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[m, n, -1]], -1]], x]], Dist[Times[1, Power[Times[d, Plus[m, n, -1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -3]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[Power[a, 3], d, Plus[m, n, -1]], Times[a, Power[b, 2], d, n], Times[b, Plus[Times[Power[b, 2], d, Plus[m, n, -2]], Times[3, Power[a, 2], d, Plus[m, n, -1]]], Csc[Plus[e, Times[f, x]]]], Times[a, Power[b, 2], d, Plus[Times[3, m], Times[2, n], -4], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, n], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Greater[m, 2], Or[IntegerQ[m], IntegersQ[Times[2, m], Times[2, n]]], Not[And[IntegerQ[n], Greater[n, 2], Not[IntegerQ[m]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, d, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Dist[Times[1, Power[Times[Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Simp[Plus[Times[b, d, Plus[n, -1]], Times[a, d, Plus[m, 1], Sec[Plus[e, Times[f, x]]]], Times[-1, b, d, Plus[m, n, 1], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[m, -1], Less[0, n, 1], IntegersQ[Times[2, m], Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, d, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Dist[Times[1, Power[Times[Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Simp[Plus[Times[b, d, Plus[n, -1]], Times[a, d, Plus[m, 1], Csc[Plus[e, Times[f, x]]]], Times[-1, b, d, Plus[m, n, 1], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[m, -1], Less[0, n, 1], IntegersQ[Times[2, m], Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[a, Power[d, 2], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Times[-1, Dist[Times[Power[d, 2], Power[Times[Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]], Plus[Times[a, Plus[n, -2]], Times[b, Plus[m, 1], Sec[Plus[e, Times[f, x]]]], Times[-1, a, Plus[m, n], Power[Sec[Plus[e, Times[f, x]]], 2]]]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[m, -1], Less[1, n, 2], IntegersQ[Times[2, m], Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[a, Power[d, 2], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Times[-1, Dist[Times[Power[d, 2], Power[Times[Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]], Plus[Times[a, Plus[n, -2]], Times[b, Plus[m, 1], Csc[Plus[e, Times[f, x]]]], Times[-1, a, Plus[m, n], Power[Csc[Plus[e, Times[f, x]]], 2]]]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[m, -1], Less[1, n, 2], IntegersQ[Times[2, m], Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[a, 2], Power[d, 3], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -3]], Power[Times[b, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Dist[Times[Power[d, 3], Power[Times[b, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -3]], Simp[Plus[Times[Power[a, 2], Plus[n, -3]], Times[a, b, Plus[m, 1], Sec[Plus[e, Times[f, x]]]], Times[-1, Plus[Times[Power[a, 2], Plus[n, -2]], Times[Power[b, 2], Plus[m, 1]]], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[m, -1], Or[And[IntegerQ[n], Greater[n, 3]], And[IntegersQ[Plus[n, Times[1, Power[2, -1]]], Times[2, m]], Greater[n, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[a, 2], Power[d, 3], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -3]], Power[Times[b, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Dist[Times[Power[d, 3], Power[Times[b, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -3]], Simp[Plus[Times[Power[a, 2], Plus[n, -3]], Times[a, b, Plus[m, 1], Csc[Plus[e, Times[f, x]]]], Times[-1, Plus[Times[Power[a, 2], Plus[n, -2]], Times[Power[b, 2], Plus[m, 1]]], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[m, -1], Or[And[IntegerQ[n], Greater[n, 3]], And[IntegersQ[Plus[n, Times[1, Power[2, -1]]], Times[2, m]], Greater[n, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[a, f, n], -1]], x]], Times[-1, Dist[Times[1, Power[Times[a, d, n], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[b, Plus[m, n, 1]], Times[-1, a, Plus[n, 1], Sec[Plus[e, Times[f, x]]]], Times[-1, b, Plus[m, n, 2], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NegativeIntegerQ[Plus[m, Times[1, Power[2, -1]]], n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[a, f, n], -1]], x], Times[-1, Dist[Times[1, Power[Times[a, d, n], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[b, Plus[m, n, 1]], Times[-1, a, Plus[n, 1], Csc[Plus[e, Times[f, x]]]], Times[-1, b, Plus[m, n, 2], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NegativeIntegerQ[Plus[m, Times[1, Power[2, -1]]], n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[b, 2], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[a, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Dist[Times[1, Power[Times[a, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Plus[Times[Power[a, 2], Plus[m, 1]], Times[-1, Power[b, 2], Plus[m, n, 1]], Times[-1, a, b, Plus[m, 1], Sec[Plus[e, Times[f, x]]]], Times[Power[b, 2], Plus[m, n, 2], Power[Sec[Plus[e, Times[f, x]]], 2]]]], x], x]], And[FreeQ[List[a, b, d, e, f, n], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1], IntegersQ[Times[2, m], Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[b, 2], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[a, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Dist[Times[1, Power[Times[a, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Plus[Times[Power[a, 2], Plus[m, 1]], Times[-1, Power[b, 2], Plus[m, n, 1]], Times[-1, a, b, Plus[m, 1], Csc[Plus[e, Times[f, x]]]], Times[Power[b, 2], Plus[m, n, 2], Power[Csc[Plus[e, Times[f, x]]], 2]]]], x], x]], And[FreeQ[List[a, b, d, e, f, n], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1], IntegersQ[Times[2, m], Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Times[d, Cos[Plus[e, Times[f, x]]]]], Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]], Power[d, -1]], Int[Times[Sqrt[Times[d, Cos[Plus[e, Times[f, x]]]]], Power[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]], -1]], x], x], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Times[d, Sin[Plus[e, Times[f, x]]]]], Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]], Power[d, -1]], Int[Times[Sqrt[Times[d, Sin[Plus[e, Times[f, x]]]]], Power[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]], -1]], x], x], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[3, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[d, Sqrt[Times[d, Cos[Plus[e, Times[f, x]]]]], Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]]], Int[Times[1, Power[Times[Sqrt[Times[d, Cos[Plus[e, Times[f, x]]]]], Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]]], -1]], x], x], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[3, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[d, Sqrt[Times[d, Sin[Plus[e, Times[f, x]]]]], Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]]], Int[Times[1, Power[Times[Sqrt[Times[d, Sin[Plus[e, Times[f, x]]]]], Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]]], -1]], x], x], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[5, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[d, Power[b, -1]], Int[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], x], x], Times[-1, Dist[Times[a, d, Power[b, -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[5, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[d, Power[b, -1]], Int[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], x], x], Times[-1, Dist[Times[a, d, Power[b, -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[d, 3], Tan[Plus[e, Times[f, x]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -3]], Power[Times[b, f, Plus[n, -2]], -1]], x], Dist[Times[Power[d, 3], Power[Times[b, Plus[n, -2]], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -3]], Simp[Plus[Times[a, Plus[n, -3]], Times[b, Plus[n, -3], Sec[Plus[e, Times[f, x]]]], Times[-1, a, Plus[n, -2], Power[Sec[Plus[e, Times[f, x]]], 2]]], x], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 3]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[d, 3], Cot[Plus[e, Times[f, x]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -3]], Power[Times[b, f, Plus[n, -2]], -1]], x]], Dist[Times[Power[d, 3], Power[Times[b, Plus[n, -2]], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -3]], Simp[Plus[Times[a, Plus[n, -3]], Times[b, Plus[n, -3], Csc[Plus[e, Times[f, x]]]], Times[-1, a, Plus[n, -2], Power[Csc[Plus[e, Times[f, x]]], 2]]], x], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 3]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Power[b, 2], Power[Times[Power[a, 2], Power[d, 2]], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], -1]], x], x], Dist[Times[1, Power[Power[a, 2], -1]], Int[Times[Plus[a, Times[-1, b, Sec[Plus[e, Times[f, x]]]]], Power[Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Power[b, 2], Power[Times[Power[a, 2], Power[d, 2]], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], -1]], x], x], Dist[Times[1, Power[Power[a, 2], -1]], Int[Times[Plus[a, Times[-1, b, Csc[Plus[e, Times[f, x]]]]], Power[Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Tan[Plus[e, Times[f, x]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[a, f, n], -1]], x]], Times[-1, Dist[Times[1, Power[Times[a, d, n], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], -1], Simp[Plus[Times[b, n], Times[-1, a, Plus[n, 1], Sec[Plus[e, Times[f, x]]]], Times[-1, b, Plus[n, 1], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], LessEqual[n, -1], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Cot[Plus[e, Times[f, x]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[a, f, n], -1]], x], Times[-1, Dist[Times[1, Power[Times[a, d, n], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], -1], Simp[Plus[Times[b, n], Times[-1, a, Plus[n, 1], Csc[Plus[e, Times[f, x]]]], Times[-1, b, Plus[n, 1], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], LessEqual[n, -1], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[a, Int[Times[Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x], Dist[Times[b, Power[d, -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[a, Int[Times[Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x], Dist[Times[b, Power[d, -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, d, Sin[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, Plus[Times[2, n], -1]], -1]], x], Dist[Times[Power[d, 2], Power[Plus[Times[2, n], -1], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]], Simp[Plus[Times[2, a, Plus[n, -2]], Times[b, Plus[Times[2, n], -3], Sec[Plus[e, Times[f, x]]]], Times[a, Power[Sec[Plus[e, Times[f, x]]], 2]]], x], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 1], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, d, Cos[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, Plus[Times[2, n], -1]], -1]], x], Dist[Times[Power[d, 2], Power[Plus[Times[2, n], -1], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]], Simp[Plus[Times[2, a, Plus[n, -2]], Times[b, Plus[Times[2, n], -3], Csc[Plus[e, Times[f, x]]]], Times[a, Power[Csc[Plus[e, Times[f, x]]], 2]]], x], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 1], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Times[Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]], Sqrt[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]]]], -1]], Int[Sqrt[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]]], x], x], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Times[Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]], Sqrt[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]]]], -1]], Int[Sqrt[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]]], x], x], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Tan[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x]], Times[-1, Dist[Times[1, Power[Times[2, d, n], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[b, Times[-1, 2, a, Plus[n, 1], Sec[Plus[e, Times[f, x]]]], Times[-1, b, Plus[Times[2, n], 3], Power[Sec[Plus[e, Times[f, x]]], 2]]], x], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], LessEqual[n, -1], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Cot[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x], Times[-1, Dist[Times[1, Power[Times[2, d, n], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[b, Times[-1, 2, a, Plus[n, 1], Csc[Plus[e, Times[f, x]]]], Times[-1, b, Plus[Times[2, n], 3], Power[Csc[Plus[e, Times[f, x]]], 2]]], x], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], LessEqual[n, -1], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]], Sqrt[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], Int[Times[1, Power[Sqrt[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]]], -1]], x], x], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]], Sqrt[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], Int[Times[1, Power[Sqrt[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]]], -1]], x], x], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[3, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[d, Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]], Sqrt[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], Int[Times[1, Power[Times[Cos[Plus[e, Times[f, x]]], Sqrt[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]]]], -1]], x], x], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[3, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[d, Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]], Sqrt[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], Int[Times[1, Power[Times[Sin[Plus[e, Times[f, x]]], Sqrt[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]]]], -1]], x], x], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, Power[d, 2], Sin[Plus[e, Times[f, x]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Times[b, f, Plus[Times[2, n], -3]], -1]], x], Dist[Times[Power[d, 3], Power[Times[b, Plus[Times[2, n], -3]], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -3]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1], Simp[Plus[Times[2, a, Plus[n, -3]], Times[b, Plus[Times[2, n], -5], Sec[Plus[e, Times[f, x]]]], Times[-1, 2, a, Plus[n, -2], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 2], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, Power[d, 2], Cos[Plus[e, Times[f, x]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Times[b, f, Plus[Times[2, n], -3]], -1]], x], Dist[Times[Power[d, 3], Power[Times[b, Plus[Times[2, n], -3]], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -3]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1], Simp[Plus[Times[2, a, Plus[n, -3]], Times[b, Plus[Times[2, n], -5], Csc[Plus[e, Times[f, x]]]], Times[-1, 2, a, Plus[n, -2], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 2], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Sin[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Times[a, f], -1]], x], Times[-1, Dist[Times[b, Power[Times[2, a], -1]], Int[Times[Plus[1, Power[Sec[Plus[e, Times[f, x]]], 2]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], -1], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Cos[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Times[a, f], -1]], x]], Times[-1, Dist[Times[b, Power[Times[2, a], -1]], Int[Times[Plus[1, Power[Csc[Plus[e, Times[f, x]]], 2]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[a, -1]], Int[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]], -1]], x], x], Times[-1, Dist[Times[b, Power[Times[a, d], -1]], Int[Times[Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[a, -1]], Int[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]], -1]], x], x], Times[-1, Dist[Times[b, Power[Times[a, d], -1]], Int[Times[Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Sin[Plus[e, Times[f, x]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Times[a, d, f, n], -1]], x]], Dist[Times[1, Power[Times[2, a, d, n], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1], Simp[Plus[Times[-1, b, Plus[Times[2, n], 1]], Times[2, a, Plus[n, 1], Sec[Plus[e, Times[f, x]]]], Times[b, Plus[Times[2, n], 3], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Less[n, -1], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Cos[Plus[e, Times[f, x]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Times[a, d, f, n], -1]], x], Dist[Times[1, Power[Times[2, a, d, n], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1], Simp[Plus[Times[-1, b, Plus[Times[2, n], 1]], Times[2, a, Plus[n, 1], Csc[Plus[e, Times[f, x]]]], Times[b, Plus[Times[2, n], 3], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Less[n, -1], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[a, Tan[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x]], Dist[Times[1, Power[Times[2, d, n], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1], Simp[Plus[Times[a, b, Plus[Times[2, n], -1]], Times[2, Plus[Times[Power[b, 2], n], Times[Power[a, 2], Plus[n, 1]]], Sec[Plus[e, Times[f, x]]]], Times[a, b, Plus[Times[2, n], 3], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], LessEqual[n, -1], IntegersQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[a, Cot[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x], Dist[Times[1, Power[Times[2, d, n], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1], Simp[Plus[Times[a, b, Plus[Times[2, n], -1]], Times[2, Plus[Times[Power[b, 2], n], Times[Power[a, 2], Plus[n, 1]]], Csc[Plus[e, Times[f, x]]]], Times[a, b, Plus[Times[2, n], 3], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], LessEqual[n, -1], IntegersQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[d, 3], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -3]], Power[Times[b, f, Plus[m, n, -1]], -1]], x], Dist[Times[Power[d, 3], Power[Times[b, Plus[m, n, -1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -3]], Simp[Plus[Times[a, Plus[n, -3]], Times[b, Plus[m, n, -2], Sec[Plus[e, Times[f, x]]]], Times[-1, a, Plus[n, -2], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 3], Or[IntegerQ[n], IntegersQ[Times[2, m], Times[2, n]]], Not[And[IntegerQ[m], Greater[m, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[d, 3], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -3]], Power[Times[b, f, Plus[m, n, -1]], -1]], x]], Dist[Times[Power[d, 3], Power[Times[b, Plus[m, n, -1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -3]], Simp[Plus[Times[a, Plus[n, -3]], Times[b, Plus[m, n, -2], Csc[Plus[e, Times[f, x]]]], Times[-1, a, Plus[n, -2], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 3], Or[IntegerQ[n], IntegersQ[Times[2, m], Times[2, n]]], Not[And[IntegerQ[m], Greater[m, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, d, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, Plus[m, n, -1]], -1]], x], Dist[Times[d, Power[Plus[m, n, -1], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -2]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Simp[Plus[Times[a, b, Plus[n, -1]], Times[Plus[Times[Power[b, 2], Plus[m, n, -2]], Times[Power[a, 2], Plus[m, n, -1]]], Sec[Plus[e, Times[f, x]]]], Times[a, b, Plus[Times[2, m], n, -2], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[0, m, 2], Less[0, n, 3], NonzeroQ[Plus[m, n, -1]], Or[IntegerQ[m], IntegersQ[Times[2, m], Times[2, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, d, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, Plus[m, n, -1]], -1]], x]], Dist[Times[d, Power[Plus[m, n, -1], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -2]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Simp[Plus[Times[a, b, Plus[n, -1]], Times[Plus[Times[Power[b, 2], Plus[m, n, -2]], Times[Power[a, 2], Plus[m, n, -1]]], Csc[Plus[e, Times[f, x]]]], Times[a, b, Plus[Times[2, m], n, -2], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[0, m, 2], Less[0, n, 3], NonzeroQ[Plus[m, n, -1]], Or[IntegerQ[m], IntegersQ[Times[2, m], Times[2, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[d, 2], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[f, Plus[m, n, -1]], -1]], x], Dist[Times[Power[d, 2], Power[Times[b, Plus[m, n, -1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]], Simp[Plus[Times[a, b, Plus[n, -2]], Times[Power[b, 2], Plus[m, n, -2], Sec[Plus[e, Times[f, x]]]], Times[a, b, m, Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[-1, m, 2], Less[1, n, 3], NonzeroQ[Plus[m, n, -1]], Or[IntegerQ[n], IntegersQ[Times[2, m], Times[2, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[d, 2], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[f, Plus[m, n, -1]], -1]], x]], Dist[Times[Power[d, 2], Power[Times[b, Plus[m, n, -1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]], Simp[Plus[Times[a, b, Plus[n, -2]], Times[Power[b, 2], Plus[m, n, -2], Csc[Plus[e, Times[f, x]]]], Times[a, b, m, Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[-1, m, 2], Less[1, n, 3], NonzeroQ[Plus[m, n, -1]], Or[IntegerQ[n], IntegersQ[Times[2, m], Times[2, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[a, Int[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]], -1]], x], x], Dist[Times[b, Power[d, -1]], Int[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[a, Int[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]], -1]], x], x], Dist[Times[b, Power[d, -1]], Int[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]]], x], x]], And[FreeQ[List[a, b, d, e, f], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[d, -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]]], x], x], Dist[a, Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n]], x], x]], And[FreeQ[List[a, b, d, e, f, n], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[d, -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]]], x], x], Dist[a, Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n]], x], x]], And[FreeQ[List[a, b, d, e, f, n], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n]], x], FreeQ[List[a, b, d, e, f, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n]], x], FreeQ[List[a, b, d, e, f, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[g, Sin[Plus[e, Times[f, x]]]], p], Power[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]], m], Power[Power[Cos[Plus[e, Times[f, x]]], m], -1]], x], And[FreeQ[List[a, b, e, f, g, p], x], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[g, Cos[Plus[e, Times[f, x]]]], p], Power[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]], m], Power[Power[Sin[Plus[e, Times[f, x]]], m], -1]], x], And[FreeQ[List[a, b, e, f, g, p], x], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[sin[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[f, Power[b, Plus[p, -1]]], -1]], Subst[Int[Times[Power[Plus[Times[-1, a], Times[b, x]], Times[Plus[p, -1], Power[2, -1]]], Power[Plus[a, Times[b, x]], Plus[m, Times[Plus[p, -1], Power[2, -1]]]], Power[Power[x, Plus[p, 1]], -1]], x], x, Sec[Plus[e, Times[f, x]]]], x], And[FreeQ[List[a, b, e, f, m], x], IntegerQ[Times[Plus[p, -1], Power[2, -1]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[cos[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[Times[f, Power[b, Plus[p, -1]]], -1], Subst[Int[Times[Power[Plus[Times[-1, a], Times[b, x]], Times[Plus[p, -1], Power[2, -1]]], Power[Plus[a, Times[b, x]], Plus[m, Times[Plus[p, -1], Power[2, -1]]]], Power[Power[x, Plus[p, 1]], -1]], x], x, Csc[Plus[e, Times[f, x]]]], x]], And[FreeQ[List[a, b, e, f, m], x], IntegerQ[Times[Plus[p, -1], Power[2, -1]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[sin[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[f, -1]], Subst[Int[Times[Power[Plus[-1, x], Times[Plus[p, -1], Power[2, -1]]], Power[Plus[1, x], Times[Plus[p, -1], Power[2, -1]]], Power[Plus[a, Times[b, x]], m], Power[Power[x, Plus[p, 1]], -1]], x], x, Sec[Plus[e, Times[f, x]]]], x], And[FreeQ[List[a, b, e, f, m], x], IntegerQ[Times[Plus[p, -1], Power[2, -1]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[cos[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[f, -1], Subst[Int[Times[Power[Plus[-1, x], Times[Plus[p, -1], Power[2, -1]]], Power[Plus[1, x], Times[Plus[p, -1], Power[2, -1]]], Power[Plus[a, Times[b, x]], m], Power[Power[x, Plus[p, 1]], -1]], x], x, Csc[Plus[e, Times[f, x]]]], x]], And[FreeQ[List[a, b, e, f, m], x], IntegerQ[Times[Plus[p, -1], Power[2, -1]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[sin[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], -2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[f, -1]], x]], Dist[Times[b, m], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]]], x], x]], FreeQ[List[a, b, e, f, m], x]]], RuleDelayed[HoldPattern[Int[Times[Power[cos[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], -2], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[f, -1]], x], Dist[Times[b, m], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]]], x], x]], FreeQ[List[a, b, e, f, m], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Cos[Plus[e, Times[f, x]]], FracPart[m]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], FracPart[m]], Power[Power[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]], FracPart[m]], -1]], Int[Times[Power[Times[g, Sin[Plus[e, Times[f, x]]]], p], Power[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]], m], Power[Power[Cos[Plus[e, Times[f, x]]], m], -1]], x], x], And[FreeQ[List[a, b, e, f, g, m, p], x], Or[ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegersQ[Times[2, m], p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Sin[Plus[e, Times[f, x]]], FracPart[m]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], FracPart[m]], Power[Power[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]], FracPart[m]], -1]], Int[Times[Power[Times[g, Cos[Plus[e, Times[f, x]]]], p], Power[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]], m], Power[Power[Sin[Plus[e, Times[f, x]]], m], -1]], x], x], And[FreeQ[List[a, b, e, f, g, m, p], x], Or[ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegersQ[Times[2, m], p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[g, Sin[Plus[e, Times[f, x]]]], p], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m]], x], FreeQ[List[a, b, e, f, g, m, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[g, Cos[Plus[e, Times[f, x]]]], p], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m]], x], FreeQ[List[a, b, e, f, g, m, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[g, Csc[Plus[e, Times[f, x]]]], p], Power[Times[g, Sin[Plus[e, Times[f, x]]]], p]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Power[Times[g, Sin[Plus[e, Times[f, x]]]], p], -1]], x], x], And[FreeQ[List[a, b, e, f, g, m, p], x], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[g, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[g, Sec[Plus[e, Times[f, x]]]], p], Power[Times[g, Cos[Plus[e, Times[f, x]]]], p]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Power[Times[g, Cos[Plus[e, Times[f, x]]]], p], -1]], x], x], And[FreeQ[List[a, b, e, f, g, m, p], x], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]], Power[tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[Times[Power[a, Plus[m, Times[-1, n], -1]], Power[b, n], d], -1], Subst[Int[Times[Power[Plus[a, Times[-1, b, x]], Times[Plus[m, -1], Power[2, -1]]], Power[Plus[a, Times[b, x]], Plus[Times[Plus[m, -1], Power[2, -1]], n]], Power[Power[x, Plus[m, n]], -1]], x], x, Cos[Plus[c, Times[d, x]]]], x]], And[FreeQ[List[a, b, c, d], x], IntegerQ[Times[Plus[m, -1], Power[2, -1]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[a, Plus[m, Times[-1, n], -1]], Power[b, n], d], -1]], Subst[Int[Times[Power[Plus[a, Times[-1, b, x]], Times[Plus[m, -1], Power[2, -1]]], Power[Plus[a, Times[b, x]], Plus[Times[Plus[m, -1], Power[2, -1]], n]], Power[Power[x, Plus[m, n]], -1]], x], x, Sin[Plus[c, Times[d, x]]]], x], And[FreeQ[List[a, b, c, d], x], IntegerQ[Times[Plus[m, -1], Power[2, -1]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]], Power[tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[d, Power[b, Plus[m, -1]]], -1]], Subst[Int[Times[Power[Plus[Times[-1, a], Times[b, x]], Times[Plus[m, -1], Power[2, -1]]], Power[Plus[a, Times[b, x]], Plus[Times[Plus[m, -1], Power[2, -1]], n]], Power[x, -1]], x], x, Sec[Plus[c, Times[d, x]]]], x], And[FreeQ[List[a, b, c, d, n], x], IntegerQ[Times[Plus[m, -1], Power[2, -1]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[Times[d, Power[b, Plus[m, -1]]], -1], Subst[Int[Times[Power[Plus[Times[-1, a], Times[b, x]], Times[Plus[m, -1], Power[2, -1]]], Power[Plus[a, Times[b, x]], Plus[Times[Plus[m, -1], Power[2, -1]], n]], Power[x, -1]], x], x, Csc[Plus[c, Times[d, x]]]], x]], And[FreeQ[List[a, b, c, d, n], x], IntegerQ[Times[Plus[m, -1], Power[2, -1]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Power[Times[Optional[Pattern[e, Blank[]]], tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Times[e, Tan[Plus[c, Times[d, x]]]], Plus[m, -1]], Plus[Times[a, m], Times[b, Plus[m, -1], Sec[Plus[c, Times[d, x]]]]], Power[Times[d, m, Plus[m, -1]], -1]], x], Times[-1, Dist[Times[Power[e, 2], Power[m, -1]], Int[Times[Power[Times[e, Tan[Plus[c, Times[d, x]]]], Plus[m, -2]], Plus[Times[a, m], Times[b, Plus[m, -1], Sec[Plus[c, Times[d, x]]]]]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], RationalQ[m], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[e, Power[Times[e, Cot[Plus[c, Times[d, x]]]], Plus[m, -1]], Plus[Times[a, m], Times[b, Plus[m, -1], Csc[Plus[c, Times[d, x]]]]], Power[Times[d, m, Plus[m, -1]], -1]], x]], Times[-1, Dist[Times[Power[e, 2], Power[m, -1]], Int[Times[Power[Times[e, Cot[Plus[c, Times[d, x]]]], Plus[m, -2]], Plus[Times[a, m], Times[b, Plus[m, -1], Csc[Plus[c, Times[d, x]]]]]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], RationalQ[m], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Power[Times[Optional[Pattern[e, Blank[]]], tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[e, Tan[Plus[c, Times[d, x]]]], Plus[m, 1]], Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], Power[Times[d, e, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[Power[e, 2], Plus[m, 1]], -1]], Int[Times[Power[Times[e, Tan[Plus[c, Times[d, x]]]], Plus[m, 2]], Plus[Times[a, Plus[m, 1]], Times[b, Plus[m, 2], Sec[Plus[c, Times[d, x]]]]]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[e, Cot[Plus[c, Times[d, x]]]], Plus[m, 1]], Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], Power[Times[d, e, Plus[m, 1]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[Power[e, 2], Plus[m, 1]], -1]], Int[Times[Power[Times[e, Cot[Plus[c, Times[d, x]]]], Plus[m, 2]], Plus[Times[a, Plus[m, 1]], Times[b, Plus[m, 2], Csc[Plus[c, Times[d, x]]]]]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Power[tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Plus[b, Times[a, Cos[Plus[c, Times[d, x]]]]], Power[Sin[Plus[c, Times[d, x]]], -1]], x], FreeQ[List[a, b, c, d], x]]], RuleDelayed[HoldPattern[Int[Times[Power[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], -1], Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Plus[b, Times[a, Sin[Plus[c, Times[d, x]]]]], Power[Cos[Plus[c, Times[d, x]]], -1]], x], FreeQ[List[a, b, c, d], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Power[Times[Optional[Pattern[e, Blank[]]], tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[a, Int[Power[Times[e, Tan[Plus[c, Times[d, x]]]], m], x], x], Dist[b, Int[Times[Power[Times[e, Tan[Plus[c, Times[d, x]]]], m], Sec[Plus[c, Times[d, x]]]], x], x]], FreeQ[List[a, b, c, d, e, m], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[a, Int[Power[Times[e, Cot[Plus[c, Times[d, x]]]], m], x], x], Dist[b, Int[Times[Power[Times[e, Cot[Plus[c, Times[d, x]]]], m], Csc[Plus[c, Times[d, x]]]], x], x]], FreeQ[List[a, b, c, d, e, m], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]], Power[tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[-1, Times[Plus[m, -1], Power[2, -1]]], Power[Times[d, Power[b, Plus[m, -1]]], -1]], Subst[Int[Times[Power[Plus[Power[b, 2], Times[-1, Power[x, 2]]], Times[Plus[m, -1], Power[2, -1]]], Power[Plus[a, x], n], Power[x, -1]], x], x, Times[b, Sec[Plus[c, Times[d, x]]]]], x], And[FreeQ[List[a, b, c, d, n], x], IntegerQ[Times[Plus[m, -1], Power[2, -1]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[-1, Times[Plus[m, -1], Power[2, -1]]], Power[Times[d, Power[b, Plus[m, -1]]], -1]], Subst[Int[Times[Power[Plus[Power[b, 2], Times[-1, Power[x, 2]]], Times[Plus[m, -1], Power[2, -1]]], Power[Plus[a, x], n], Power[x, -1]], x], x, Times[b, Csc[Plus[c, Times[d, x]]]]], x]], And[FreeQ[List[a, b, c, d, n], x], IntegerQ[Times[Plus[m, -1], Power[2, -1]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]], Power[Times[Optional[Pattern[e, Blank[]]], tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Times[e, Tan[Plus[c, Times[d, x]]]], m], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], n], x], x], And[FreeQ[List[a, b, c, d, e, m], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Times[e, Cot[Plus[c, Times[d, x]]]], m], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], n], x], x], And[FreeQ[List[a, b, c, d, e, m], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]], Power[tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, Power[a, Plus[Times[m, Power[2, -1]], n, Times[1, Power[2, -1]]]], Power[d, -1]], Subst[Int[Times[Power[x, m], Power[Plus[2, Times[a, Power[x, 2]]], Plus[Times[m, Power[2, -1]], n, Times[-1, 1, Power[2, -1]]]], Power[Plus[1, Times[a, Power[x, 2]]], -1]], x], x, Times[Tan[Plus[c, Times[d, x]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]]], -1]]], x], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[Times[m, Power[2, -1]]], IntegerQ[Plus[n, Times[-1, 1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-2, Power[a, Plus[Times[m, Power[2, -1]], n, Times[1, Power[2, -1]]]], Power[d, -1]], Subst[Int[Times[Power[x, m], Power[Plus[2, Times[a, Power[x, 2]]], Plus[Times[m, Power[2, -1]], n, Times[-1, 1, Power[2, -1]]]], Power[Plus[1, Times[a, Power[x, 2]]], -1]], x], x, Times[Cot[Plus[c, Times[d, x]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]]], -1]]], x], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[Times[m, Power[2, -1]]], IntegerQ[Plus[n, Times[-1, 1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]], Power[Times[Optional[Pattern[e, Blank[]]], tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, Times[2, n]], Power[e, Times[-2, n]]], Int[Times[Power[Times[e, Tan[Plus[c, Times[d, x]]]], Plus[m, Times[2, n]]], Power[Power[Plus[Times[-1, a], Times[b, Sec[Plus[c, Times[d, x]]]]], n], -1]], x], x], And[FreeQ[List[a, b, c, d, e, m], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, Times[2, n]], Power[e, Times[-2, n]]], Int[Times[Power[Times[e, Cot[Plus[c, Times[d, x]]]], Plus[m, Times[2, n]]], Power[Power[Plus[Times[-1, a], Times[b, Csc[Plus[c, Times[d, x]]]]], n], -1]], x], x], And[FreeQ[List[a, b, c, d, e, m], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]], Power[Times[Optional[Pattern[e, Blank[]]], tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[2, Plus[m, n, 1]], Power[Times[e, Tan[Plus[c, Times[d, x]]]], Plus[m, 1]], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], n], Power[Times[d, e, Plus[m, 1]], -1], Power[Times[a, Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], -1]], Plus[m, n, 1]], AppellF1[Times[Plus[m, 1], Power[2, -1]], Plus[m, n], 1, Times[Plus[m, 3], Power[2, -1]], Times[-1, Plus[a, Times[-1, b, Sec[Plus[c, Times[d, x]]]]], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], -1]], Times[Plus[a, Times[-1, b, Sec[Plus[c, Times[d, x]]]]], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], -1]]]], x], And[FreeQ[List[a, b, c, d, e, m, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Power[2, Plus[m, n, 1]], Power[Times[e, Cot[Plus[c, Times[d, x]]]], Plus[m, 1]], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], n], Power[Times[d, e, Plus[m, 1]], -1], Power[Times[a, Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], -1]], Plus[m, n, 1]], AppellF1[Times[Plus[m, 1], Power[2, -1]], Plus[m, n], 1, Times[Plus[m, 3], Power[2, -1]], Times[-1, Plus[a, Times[-1, b, Csc[Plus[c, Times[d, x]]]]], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], -1]], Times[Plus[a, Times[-1, b, Csc[Plus[c, Times[d, x]]]]], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], -1]]]], x]], And[FreeQ[List[a, b, c, d, e, m, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], -1], Power[Times[Optional[Pattern[e, Blank[]]], tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[a, -1]], Int[Sqrt[Times[e, Tan[Plus[c, Times[d, x]]]]], x], x], Times[-1, Dist[Times[b, Power[a, -1]], Int[Times[Sqrt[Times[e, Tan[Plus[c, Times[d, x]]]]], Power[Plus[b, Times[a, Cos[Plus[c, Times[d, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[a, -1]], Int[Sqrt[Times[e, Cot[Plus[c, Times[d, x]]]]], x], x], Times[-1, Dist[Times[b, Power[a, -1]], Int[Times[Sqrt[Times[e, Cot[Plus[c, Times[d, x]]]]], Power[Plus[b, Times[a, Sin[Plus[c, Times[d, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], -1], Power[Times[Optional[Pattern[e, Blank[]]], tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[Power[e, 2], Power[Power[b, 2], -1]], Int[Times[Power[Times[e, Tan[Plus[c, Times[d, x]]]], Plus[m, -2]], Plus[a, Times[-1, b, Sec[Plus[c, Times[d, x]]]]]], x], x]], Dist[Times[Power[e, 2], Plus[Power[a, 2], Times[-1, Power[b, 2]]], Power[Power[b, 2], -1]], Int[Times[Power[Times[e, Tan[Plus[c, Times[d, x]]]], Plus[m, -2]], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[Plus[m, Times[-1, 1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[Power[e, 2], Power[Power[b, 2], -1]], Int[Times[Power[Times[e, Cot[Plus[c, Times[d, x]]]], Plus[m, -2]], Plus[a, Times[-1, b, Csc[Plus[c, Times[d, x]]]]]], x], x]], Dist[Times[Power[e, 2], Plus[Power[a, 2], Times[-1, Power[b, 2]]], Power[Power[b, 2], -1]], Int[Times[Power[Times[e, Cot[Plus[c, Times[d, x]]]], Plus[m, -2]], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[Plus[m, Times[-1, 1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], -1], Power[Times[Optional[Pattern[e, Blank[]]], tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[a, -1]], Int[Times[1, Power[Sqrt[Times[e, Tan[Plus[c, Times[d, x]]]]], -1]], x], x], Times[-1, Dist[Times[b, Power[a, -1]], Int[Times[1, Power[Times[Sqrt[Times[e, Tan[Plus[c, Times[d, x]]]]], Plus[b, Times[a, Cos[Plus[c, Times[d, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[a, -1]], Int[Times[1, Power[Sqrt[Times[e, Cot[Plus[c, Times[d, x]]]]], -1]], x], x], Times[-1, Dist[Times[b, Power[a, -1]], Int[Times[1, Power[Times[Sqrt[Times[e, Cot[Plus[c, Times[d, x]]]]], Plus[b, Times[a, Sin[Plus[c, Times[d, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], -1], Power[Times[Optional[Pattern[e, Blank[]]], tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[Plus[Power[a, 2], Times[-1, Power[b, 2]]], -1]], Int[Times[Power[Times[e, Tan[Plus[c, Times[d, x]]]], m], Plus[a, Times[-1, b, Sec[Plus[c, Times[d, x]]]]]], x], x], Dist[Times[Power[b, 2], Power[Times[Power[e, 2], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Times[e, Tan[Plus[c, Times[d, x]]]], Plus[m, 2]], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NegativeIntegerQ[Plus[m, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[Plus[Power[a, 2], Times[-1, Power[b, 2]]], -1]], Int[Times[Power[Times[e, Cot[Plus[c, Times[d, x]]]], m], Plus[a, Times[-1, b, Csc[Plus[c, Times[d, x]]]]]], x], x], Dist[Times[Power[b, 2], Power[Times[Power[e, 2], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Times[e, Cot[Plus[c, Times[d, x]]]], Plus[m, 2]], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NegativeIntegerQ[Plus[m, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]], Power[tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], 2]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Plus[-1, Power[Sec[Plus[c, Times[d, x]]], 2]], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], n]], x], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Plus[-1, Power[Csc[Plus[c, Times[d, x]]], 2]], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], n]], x], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]], Power[Times[Optional[Pattern[e, Blank[]]], tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Times[e, Tan[Plus[c, Times[d, x]]]], m], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], n], x], x], And[FreeQ[List[a, b, c, d, e, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Times[e, Cot[Plus[c, Times[d, x]]]], m], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], n], x], x], And[FreeQ[List[a, b, c, d, e, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]], Power[tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Sin[Plus[c, Times[d, x]]], m], Power[Plus[b, Times[a, Cos[Plus[c, Times[d, x]]]]], n], Power[Power[Cos[Plus[c, Times[d, x]]], Plus[m, n]], -1]], x], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[n], IntegerQ[m], Or[IntegerQ[Times[m, Power[2, -1]]], LessEqual[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Cos[Plus[c, Times[d, x]]], m], Power[Plus[b, Times[a, Sin[Plus[c, Times[d, x]]]]], n], Power[Power[Sin[Plus[c, Times[d, x]]], Plus[m, n]], -1]], x], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[n], IntegerQ[m], Or[IntegerQ[Times[m, Power[2, -1]]], LessEqual[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[e, Blank[]]], tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[e, Tan[Plus[c, Times[d, x]]]], m], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], n]], x], FreeQ[List[a, b, c, d, e, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[e, Cot[Plus[c, Times[d, x]]]], m], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], n]], x], FreeQ[List[a, b, c, d, e, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[e, Blank[]]], Power[tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[e, Power[Tan[Plus[c, Times[d, x]]], p]], m], Power[Power[Times[e, Tan[Plus[c, Times[d, x]]]], Times[m, p]], -1]], Int[Times[Power[Times[e, Tan[Plus[c, Times[d, x]]]], Times[m, p]], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, m, n, p], x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Power[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[p, Blank[]]], Optional[Pattern[e, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[e, Power[Cot[Plus[c, Times[d, x]]], p]], m], Power[Power[Times[e, Cot[Plus[c, Times[d, x]]]], Times[m, p]], -1]], Int[Times[Power[Times[e, Cot[Plus[c, Times[d, x]]]], Times[m, p]], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, m, n, p], x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, n], Int[ExpandTrig[Power[Plus[1, Times[d, Power[c, -1], sec[Plus[e, Times[f, x]]]]], n], Power[Plus[a, Times[b, sec[Plus[e, Times[f, x]]]]], m], x], x], x], And[FreeQ[List[a, b, c, d, e, f, n], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[m], NegativeIntegerQ[n], Less[Plus[m, n], 2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, n], Int[ExpandTrig[Power[Plus[1, Times[d, Power[c, -1], csc[Plus[e, Times[f, x]]]]], n], Power[Plus[a, Times[b, csc[Plus[e, Times[f, x]]]]], m], x], x], x], And[FreeQ[List[a, b, c, d, e, f, n], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[m], NegativeIntegerQ[n], Less[Plus[m, n], 2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Times[-1, a, c], m], Int[Times[Power[Tan[Plus[e, Times[f, x]]], Times[2, m]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], Plus[n, Times[-1, m]]]], x], x], And[FreeQ[List[a, b, c, d, e, f, n], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[m], RationalQ[n], Not[And[IntegerQ[n], Greater[Plus[m, Times[-1, n]], 0]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Times[-1, a, c], m], Int[Times[Power[Cot[Plus[e, Times[f, x]]], Times[2, m]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], Plus[n, Times[-1, m]]]], x], x], And[FreeQ[List[a, b, c, d, e, f, n], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[m], RationalQ[n], Not[And[IntegerQ[n], Greater[Plus[m, Times[-1, n]], 0]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[-1, a, c], Plus[m, Times[1, Power[2, -1]]]], Tan[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]]], -1]], Int[Power[Tan[Plus[e, Times[f, x]]], Times[2, m]], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[Plus[m, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[-1, a, c], Plus[m, Times[1, Power[2, -1]]]], Cot[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]]], -1]], Int[Power[Cot[Plus[e, Times[f, x]]], Times[2, m]], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[Plus[m, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, a, c, Tan[Plus[e, Times[f, x]]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], Plus[n, -1]], Power[Times[f, Plus[Times[2, n], -1], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]]], -1]], x], Dist[c, Int[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], Plus[n, -1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, Times[1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, a, c, Cot[Plus[e, Times[f, x]]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], Plus[n, -1]], Power[Times[f, Plus[Times[2, n], -1], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]]], -1]], x], Dist[c, Int[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], Plus[n, -1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, Times[1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, a, Tan[Plus[e, Times[f, x]]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], n], Power[Times[f, Plus[Times[2, n], 1], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]]], -1]], x], Dist[Times[1, Power[c, -1]], Int[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Less[n, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, a, Cot[Plus[e, Times[f, x]]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], n], Power[Times[f, Plus[Times[2, n], 1], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]]], -1]], x], Dist[Times[1, Power[c, -1]], Int[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Less[n, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[3, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[4, Power[a, 2], Tan[Plus[e, Times[f, x]]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], n], Power[Times[f, Plus[Times[2, n], 1], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]]], -1]], x], Dist[Times[a, Power[c, -1]], Int[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Less[n, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[3, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-4, Power[a, 2], Cot[Plus[e, Times[f, x]]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], n], Power[Times[f, Plus[Times[2, n], 1], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]]], -1]], x], Dist[Times[a, Power[c, -1]], Int[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Less[n, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[3, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, Power[a, 2], Tan[Plus[e, Times[f, x]]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], n], Power[Times[f, Plus[Times[2, n], 1], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]]], -1]], x], Dist[a, Int[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], n]], x], x]], And[FreeQ[List[a, b, c, d, e, f, n], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[n], LessEqual[n, Times[-1, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[3, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, Power[a, 2], Cot[Plus[e, Times[f, x]]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], n], Power[Times[f, Plus[Times[2, n], 1], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]]], -1]], x], Dist[a, Int[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], n]], x], x]], And[FreeQ[List[a, b, c, d, e, f, n], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[n], LessEqual[n, Times[-1, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[5, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[8, Power[a, 3], Tan[Plus[e, Times[f, x]]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], n], Power[Times[f, Plus[Times[2, n], 1], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]]], -1]], x], Dist[Times[Power[a, 2], Power[Power[c, 2], -1]], Int[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], Plus[n, 2]]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Less[n, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[5, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-8, Power[a, 3], Cot[Plus[e, Times[f, x]]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], n], Power[Times[f, Plus[Times[2, n], 1], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]]], -1]], x], Dist[Times[Power[a, 2], Power[Power[c, 2], -1]], Int[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], Plus[n, 2]]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Less[n, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[a, c, Tan[Plus[e, Times[f, x]]], Power[Times[f, Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]]], -1]], Subst[Int[Times[Power[Plus[b, Times[a, x]], Plus[m, Times[-1, 1, Power[2, -1]]]], Power[Plus[d, Times[c, x]], Plus[n, Times[-1, 1, Power[2, -1]]]], Power[Power[x, Plus[m, n]], -1]], x], x, Cos[Plus[e, Times[f, x]]]], x], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[Plus[m, Times[-1, 1, Power[2, -1]]]], ZeroQ[Plus[m, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[a, c, Cot[Plus[e, Times[f, x]]], Power[Times[f, Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]]], -1]], Subst[Int[Times[Power[Plus[b, Times[a, x]], Plus[m, Times[-1, 1, Power[2, -1]]]], Power[Plus[d, Times[c, x]], Plus[n, Times[-1, 1, Power[2, -1]]]], Power[Power[x, Plus[m, n]], -1]], x], x, Sin[Plus[e, Times[f, x]]]], x]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[Plus[m, Times[-1, 1, Power[2, -1]]]], ZeroQ[Plus[m, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[a, c, Tan[Plus[e, Times[f, x]]], Power[Times[f, Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], Plus[m, Times[-1, 1, Power[2, -1]]]], Power[Plus[c, Times[d, x]], Plus[n, Times[-1, 1, Power[2, -1]]]], Power[x, -1]], x], x, Sec[Plus[e, Times[f, x]]]], x]], And[FreeQ[List[a, b, c, d, e, f, m, n], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[a, c, Cot[Plus[e, Times[f, x]]], Power[Times[f, Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], Plus[m, Times[-1, 1, Power[2, -1]]]], Power[Plus[c, Times[d, x]], Plus[n, Times[-1, 1, Power[2, -1]]]], Power[x, -1]], x], x, Csc[Plus[e, Times[f, x]]]], x], And[FreeQ[List[a, b, c, d, e, f, m, n], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[a, c, x], x], Dist[Times[b, d], Int[Power[Sec[Plus[e, Times[f, x]]], 2], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[b, c], Times[a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[a, c, x], x], Dist[Times[b, d], Int[Power[Csc[Plus[e, Times[f, x]]], 2], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[b, c], Times[a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[a, c, x], x], Plus[Dist[Times[b, d], Int[Power[Sec[Plus[e, Times[f, x]]], 2], x], x], Dist[Plus[Times[b, c], Times[a, d]], Int[Sec[Plus[e, Times[f, x]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Times[b, c], Times[a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[a, c, x], x], Plus[Dist[Times[b, d], Int[Power[Csc[Plus[e, Times[f, x]]], 2], x], x], Dist[Plus[Times[b, c], Times[a, d]], Int[Csc[Plus[e, Times[f, x]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Times[b, c], Times[a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[c, Int[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], x], x], Dist[d, Int[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sec[Plus[e, Times[f, x]]]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[c, Int[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], x], x], Dist[d, Int[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Csc[Plus[e, Times[f, x]]]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[a, c], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x], Int[Times[Sec[Plus[e, Times[f, x]]], Plus[Times[b, c], Times[a, d], Times[b, d, Sec[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[a, c], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x], Int[Times[Csc[Plus[e, Times[f, x]]], Plus[Times[b, c], Times[a, d], Times[b, d, Csc[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, d, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[f, m], -1]], x], Dist[Times[1, Power[m, -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Simp[Plus[Times[a, c, m], Times[Plus[Times[b, c, m], Times[a, d, Plus[Times[2, m], -1]]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[m], Greater[m, 1], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, d, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[f, m], -1]], x]], Dist[Times[1, Power[m, -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Simp[Plus[Times[a, c, m], Times[Plus[Times[b, c, m], Times[a, d, Plus[Times[2, m], -1]]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[m], Greater[m, 1], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, d, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[f, m], -1]], x], Dist[Times[1, Power[m, -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -2]], Simp[Plus[Times[Power[a, 2], c, m], Times[Plus[Times[Power[b, 2], d, Plus[m, -1]], Times[2, a, b, c, m], Times[Power[a, 2], d, m]], Sec[Plus[e, Times[f, x]]]], Times[b, Plus[Times[b, c, m], Times[a, d, Plus[Times[2, m], -1]]], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[m], Greater[m, 1], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, d, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[f, m], -1]], x]], Dist[Times[1, Power[m, -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -2]], Simp[Plus[Times[Power[a, 2], c, m], Times[Plus[Times[Power[b, 2], d, Plus[m, -1]], Times[2, a, b, c, m], Times[Power[a, 2], d, m]], Csc[Plus[e, Times[f, x]]]], Times[b, Plus[Times[b, c, m], Times[a, d, Plus[Times[2, m], -1]]], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[m], Greater[m, 1], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[c, x, Power[a, -1]], x], Times[-1, Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[a, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[c, x, Power[a, -1]], x], Times[-1, Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[a, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[c, Power[a, -1]], Int[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], x], x], Times[-1, Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[a, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[c, Power[a, -1]], Int[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], x], x], Times[-1, Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[a, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[c, Int[Times[1, Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x], Dist[d, Int[Times[Sec[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[c, Int[Times[1, Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x], Dist[d, Int[Times[Csc[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[b, c], Times[-1, a, d]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[b, f, Plus[Times[2, m], 1]], -1]], x], Dist[Times[1, Power[Times[Power[a, 2], Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[a, c, Plus[Times[2, m], 1]], Times[-1, Plus[Times[b, c], Times[-1, a, d]], Plus[m, 1], Sec[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[m], Less[m, -1], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[b, c], Times[-1, a, d]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[b, f, Plus[Times[2, m], 1]], -1]], x]], Dist[Times[1, Power[Times[Power[a, 2], Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[a, c, Plus[Times[2, m], 1]], Times[-1, Plus[Times[b, c], Times[-1, a, d]], Plus[m, 1], Csc[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[m], Less[m, -1], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, Plus[Times[b, c], Times[-1, a, d]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[a, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Dist[Times[1, Power[Times[a, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[c, Plus[Power[a, 2], Times[-1, Power[b, 2]]], Plus[m, 1]], Times[-1, Times[a, Plus[Times[b, c], Times[-1, a, d]], Plus[m, 1]], Sec[Plus[e, Times[f, x]]]], Times[b, Plus[Times[b, c], Times[-1, a, d]], Plus[m, 2], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[m], Less[m, -1], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, Plus[Times[b, c], Times[-1, a, d]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[a, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Dist[Times[1, Power[Times[a, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[c, Plus[Power[a, 2], Times[-1, Power[b, 2]]], Plus[m, 1]], Times[-1, Times[a, Plus[Times[b, c], Times[-1, a, d]], Plus[m, 1]], Csc[Plus[e, Times[f, x]]]], Times[b, Plus[Times[b, c], Times[-1, a, d]], Plus[m, 2], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[m], Less[m, -1], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[c, Int[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], x], x], Dist[d, Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Sec[Plus[e, Times[f, x]]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, m], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], Not[IntegerQ[Times[2, m]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[c, Int[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], x], x], Dist[d, Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Csc[Plus[e, Times[f, x]]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, m], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], Not[IntegerQ[Times[2, m]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[c, -1]], Int[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], x], x], Times[-1, Dist[Times[d, Power[c, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], Or[ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[c, -1]], Int[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], x], x], Times[-1, Dist[Times[d, Power[c, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], Or[ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[a, Power[c, -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x], Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[c, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[a, Power[c, -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x], Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[c, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[3, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[a, Power[c, -1]], Int[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], x], x], Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[c, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], Or[ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[3, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[a, Power[c, -1]], Int[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], x], x], Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[c, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], Or[ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[3, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[Times[c, d], -1]], Int[Times[Plus[Times[Power[a, 2], d], Times[Power[b, 2], c, Sec[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x], Times[-1, Dist[Times[Power[Plus[Times[b, c], Times[-1, a, d]], 2], Power[Times[c, d], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[3, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[Times[c, d], -1]], Int[Times[Plus[Times[Power[a, 2], d], Times[Power[b, 2], c, Csc[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x], Times[-1, Dist[Times[Power[Plus[Times[b, c], Times[-1, a, d]], 2], Power[Times[c, d], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[Times[c, Plus[Times[b, c], Times[-1, a, d]]], -1]], Int[Times[Plus[Times[b, c], Times[-1, a, d], Times[-1, b, d, Sec[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x], Dist[Times[Power[d, 2], Power[Times[c, Plus[Times[b, c], Times[-1, a, d]]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], Or[ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[Times[c, Plus[Times[b, c], Times[-1, a, d]]], -1]], Int[Times[Plus[Times[b, c], Times[-1, a, d], Times[-1, b, d, Csc[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x], Dist[Times[Power[d, 2], Power[Times[c, Plus[Times[b, c], Times[-1, a, d]]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], Or[ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[c, -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x], Times[-1, Dist[Times[d, Power[c, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[c, -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x], Times[-1, Dist[Times[d, Power[c, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], Power[Tan[Plus[e, Times[f, x]]], -1]], Int[Tan[Plus[e, Times[f, x]]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], Power[Cot[Plus[e, Times[f, x]]], -1]], Int[Cot[Plus[e, Times[f, x]]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[c, Int[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x], Dist[d, Int[Times[Sec[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[c, Int[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x], Dist[d, Int[Times[Csc[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[c, -1]], Int[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]]], x], x], Times[-1, Dist[Times[d, Power[c, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[c, -1]], Int[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]]], x], x], Times[-1, Dist[Times[d, Power[c, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, a, Power[f, -1]], Subst[Int[Times[1, Power[Plus[1, Times[a, c, Power[x, 2]]], -1]], x], x, Times[Tan[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]]], -1]]], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-2, a, Power[f, -1]], Subst[Int[Times[1, Power[Plus[1, Times[a, c, Power[x, 2]]], -1]], x], x, Times[Cot[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]]], -1]]], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[a, Power[c, -1]], Int[Times[Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x], Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[c, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[a, Power[c, -1]], Int[Times[Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x], Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[c, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[-2, Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Power[Times[c, f, Rt[Times[Plus[a, b], Power[Plus[c, d], -1]], 2], Tan[Plus[e, Times[f, x]]]], -1], Sqrt[Times[Plus[Times[b, c], Times[-1, a, d]], Plus[1, Sec[Plus[e, Times[f, x]]]], Power[Times[Plus[c, Times[-1, d]], Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]]], Sqrt[Times[-1, Plus[Times[b, c], Times[-1, a, d]], Plus[1, Times[-1, Sec[Plus[e, Times[f, x]]]]], Power[Times[Plus[c, d], Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]]], EllipticPi[Times[a, Plus[c, d], Power[Times[c, Plus[a, b]], -1]], ArcSin[Times[Rt[Times[Plus[a, b], Power[Plus[c, d], -1]], 2], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]]], Times[Plus[a, Times[-1, b]], Plus[c, d], Power[Times[Plus[a, b], Plus[c, Times[-1, d]]], -1]]]], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[2, Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Power[Times[c, f, Rt[Times[Plus[a, b], Power[Plus[c, d], -1]], 2], Cot[Plus[e, Times[f, x]]]], -1], Sqrt[Times[Plus[Times[b, c], Times[-1, a, d]], Plus[1, Csc[Plus[e, Times[f, x]]]], Power[Times[Plus[c, Times[-1, d]], Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]]], Sqrt[Times[-1, Plus[Times[b, c], Times[-1, a, d]], Plus[1, Times[-1, Csc[Plus[e, Times[f, x]]]]], Power[Times[Plus[c, d], Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]]], EllipticPi[Times[a, Plus[c, d], Power[Times[c, Plus[a, b]], -1]], ArcSin[Times[Rt[Times[Plus[a, b], Power[Plus[c, d], -1]], 2], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]]], Times[Plus[a, Times[-1, b]], Plus[c, d], Power[Times[Plus[a, b], Plus[c, Times[-1, d]]], -1]]]], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Tan[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]]], -1]], Int[Times[1, Power[Tan[Plus[e, Times[f, x]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Cot[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]]], -1]], Int[Times[1, Power[Cot[Plus[e, Times[f, x]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[a, -1]], Int[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x], Times[-1, Dist[Times[b, Power[a, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[a, -1]], Int[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x], Times[-1, Dist[Times[b, Power[a, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[c, -1]], Int[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x], Times[-1, Dist[Times[d, Power[c, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], Times[3, Power[2, -1]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Rational[-3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[c, -1]], Int[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x], Times[-1, Dist[Times[d, Power[c, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], Times[3, Power[2, -1]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[a, 2], Times[Tan[Plus[e, Times[f, x]]], Power[Times[f, Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[a, Times[-1, b, Sec[Plus[e, Times[f, x]]]]]]], -1]]], Subst[Int[Times[Power[Plus[a, Times[b, x]], Plus[m, Times[-1, 1, Power[2, -1]]]], Power[Plus[c, Times[d, x]], n], Power[Times[x, Sqrt[Plus[a, Times[-1, b, x]]]], -1]], x], x, Sec[Plus[e, Times[f, x]]]], x]], And[FreeQ[List[a, b, c, d, e, f, m, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]], IntegerQ[Plus[m, Times[-1, 1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, 2], Times[Cos[Plus[e, Times[f, x]]], Power[Times[f, Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[a, Times[-1, b, Csc[Plus[e, Times[f, x]]]]]]], -1]]], Subst[Int[Times[Power[Plus[a, Times[b, x]], Plus[m, Times[-1, 1, Power[2, -1]]]], Power[Plus[c, Times[d, x]], n], Power[Times[x, Sqrt[Plus[a, Times[-1, b, x]]]], -1]], x], x, Csc[Plus[e, Times[f, x]]]], x], And[FreeQ[List[a, b, c, d, e, f, m, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]], IntegerQ[Plus[m, Times[-1, 1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]], m], Power[Plus[d, Times[c, Cos[Plus[e, Times[f, x]]]]], n], Power[Power[Cos[Plus[e, Times[f, x]]], Plus[m, n]], -1]], x], And[FreeQ[List[a, b, c, d, e, f, m, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], IntegerQ[m], IntegerQ[n], MemberQ[List[0, -1, -2], Plus[m, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]], m], Power[Plus[d, Times[c, Sin[Plus[e, Times[f, x]]]]], n], Power[Power[Sin[Plus[e, Times[f, x]]], Plus[m, n]], -1]], x], And[FreeQ[List[a, b, c, d, e, f, m, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], IntegerQ[m], IntegerQ[n], MemberQ[List[0, -1, -2], Plus[m, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[d, Times[c, Cos[Plus[e, Times[f, x]]]]]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Times[Sqrt[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]]], -1]], Int[Times[Power[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]], m], Power[Plus[d, Times[c, Cos[Plus[e, Times[f, x]]]]], n], Power[Power[Cos[Plus[e, Times[f, x]]], Plus[m, n]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], IntegerQ[Plus[m, Times[1, Power[2, -1]]]], IntegerQ[Plus[n, Times[1, Power[2, -1]]]], MemberQ[List[0, -1, -2], Plus[m, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[d, Times[c, Sin[Plus[e, Times[f, x]]]]]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Times[Sqrt[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]]], -1]], Int[Times[Power[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]], m], Power[Plus[d, Times[c, Sin[Plus[e, Times[f, x]]]]], n], Power[Power[Sin[Plus[e, Times[f, x]]], Plus[m, n]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], IntegerQ[Plus[m, Times[1, Power[2, -1]]]], IntegerQ[Plus[n, Times[1, Power[2, -1]]]], MemberQ[List[0, -1, -2], Plus[m, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Cos[Plus[e, Times[f, x]]], Plus[m, n]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], n], Power[Times[Power[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]], m], Power[Plus[d, Times[c, Cos[Plus[e, Times[f, x]]]]], n]], -1]], Int[Times[Power[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]], m], Power[Plus[d, Times[c, Cos[Plus[e, Times[f, x]]]]], n], Power[Power[Cos[Plus[e, Times[f, x]]], Simplify[Plus[m, n]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[m, n]], Not[IntegerQ[Times[2, m]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Sin[Plus[e, Times[f, x]]], Plus[m, n]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], n], Power[Times[Power[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]], m], Power[Plus[d, Times[c, Sin[Plus[e, Times[f, x]]]]], n]], -1]], Int[Times[Power[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]], m], Power[Plus[d, Times[c, Sin[Plus[e, Times[f, x]]]]], n], Power[Power[Sin[Plus[e, Times[f, x]]], Simplify[Plus[m, n]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[m, n]], Not[IntegerQ[Times[2, m]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrig[Power[Plus[a, Times[b, sec[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, sec[Plus[e, Times[f, x]]]]], n], x], x], And[FreeQ[List[a, b, c, d, e, f, m, n], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrig[Power[Plus[a, Times[b, csc[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, csc[Plus[e, Times[f, x]]]]], n], x], x], And[FreeQ[List[a, b, c, d, e, f, m, n], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], n]], x], FreeQ[List[a, b, c, d, e, f, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], n]], x], FreeQ[List[a, b, c, d, e, f, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], -1]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[d, m], Int[Times[Power[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]], m], Power[Times[d, Cos[Plus[e, Times[f, x]]]], Plus[n, Times[-1, m]]]], x], x], And[FreeQ[List[a, b, d, e, f, n], x], Not[IntegerQ[n]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], -1], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[d, m], Int[Times[Power[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sin[Plus[e, Times[f, x]]]], Plus[n, Times[-1, m]]]], x], x], And[FreeQ[List[a, b, d, e, f, n], x], Not[IntegerQ[n]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[n]], Power[Times[c, Power[Times[d, Sec[Plus[e, Times[f, x]]]], p]], FracPart[n]], Power[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Times[p, FracPart[n]]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Times[n, p]]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, n, p], x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[c, Blank[]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[p, Blank[]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[n]], Power[Times[c, Power[Times[d, Csc[Plus[e, Times[f, x]]]], p]], FracPart[n]], Power[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Times[p, FracPart[n]]], -1]], Int[Times[Power[Plus[a, Times[b, Cos[Plus[e, Times[f, x]]]]], m], Power[Times[d, Cos[Plus[e, Times[f, x]]]], Times[n, p]]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, n, p], x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[b, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], n], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x]], And[FreeQ[List[a, b, c, d, e, f, m, n], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[m, n, 1]], NonzeroQ[Plus[Times[2, m], 1]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[b, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], n], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x], And[FreeQ[List[a, b, c, d, e, f, m, n], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[m, n, 1]], NonzeroQ[Plus[Times[2, m], 1]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], n], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x]], Dist[Times[Plus[m, n, 1], Power[Times[a, Plus[Times[2, m], 1]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], n]], x], x]], And[FreeQ[List[a, b, c, d, e, f, m, n], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NegativeIntegerQ[Plus[m, n, 1]], NonzeroQ[Plus[Times[2, m], 1]], Not[And[RationalQ[n], Less[n, 0]]], Not[And[PositiveIntegerQ[Plus[n, Times[1, Power[2, -1]]]], Less[Plus[n, Times[1, Power[2, -1]]], Times[-1, Plus[m, n]]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], n], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x], Dist[Times[Plus[m, n, 1], Power[Times[a, Plus[Times[2, m], 1]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], n]], x], x]], And[FreeQ[List[a, b, c, d, e, f, m, n], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NegativeIntegerQ[Plus[m, n, 1]], NonzeroQ[Plus[Times[2, m], 1]], Not[And[RationalQ[n], Less[n, 0]]], Not[And[PositiveIntegerQ[Plus[n, Times[1, Power[2, -1]]]], Less[Plus[n, Times[1, Power[2, -1]]], Times[-1, Plus[m, n]]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[a, c, Log[Plus[1, Times[b, Power[a, -1], Sec[Plus[e, Times[f, x]]]]]], Tan[Plus[e, Times[f, x]]], Power[Times[b, f, Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]]], -1]], x]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[a, c, Log[Plus[1, Times[b, Power[a, -1], Csc[Plus[e, Times[f, x]]]]]], Cot[Plus[e, Times[f, x]]], Power[Times[b, f, Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]]], -1]], x], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[-2, a, c, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[b, f, Plus[Times[2, m], 1], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]]], -1]], x], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[m, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[2, a, c, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[b, f, Plus[Times[2, m], 1], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]]], -1]], x], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[m, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, a, c, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], Plus[n, -1]], Power[Times[b, f, Plus[Times[2, m], 1]], -1]], x], Times[-1, Dist[Times[d, Plus[Times[2, n], -1], Power[Times[b, Plus[Times[2, m], 1]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], Plus[n, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[Plus[n, Times[-1, 1, Power[2, -1]]]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, a, c, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], Plus[n, -1]], Power[Times[b, f, Plus[Times[2, m], 1]], -1]], x], Times[-1, Dist[Times[d, Plus[Times[2, n], -1], Power[Times[b, Plus[Times[2, m], 1]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], Plus[n, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[Plus[n, Times[-1, 1, Power[2, -1]]]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[d, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], Plus[n, -1]], Power[Times[f, Plus[m, n]], -1]], x], Dist[Times[c, Plus[Times[2, n], -1], Power[Plus[m, n], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], Plus[n, -1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[Plus[n, Times[-1, 1, Power[2, -1]]]], Not[And[RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]], Not[And[PositiveIntegerQ[Plus[m, Times[-1, 1, Power[2, -1]]]], Less[m, n]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[d, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], Plus[n, -1]], Power[Times[f, Plus[m, n]], -1]], x]], Dist[Times[c, Plus[Times[2, n], -1], Power[Plus[m, n], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], Plus[n, -1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[Plus[n, Times[-1, 1, Power[2, -1]]]], Not[And[RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]], Not[And[PositiveIntegerQ[Plus[m, Times[-1, 1, Power[2, -1]]]], Less[m, n]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, d, Tan[Plus[e, Times[f, x]]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], Plus[n, -1]], Power[Times[f, Plus[Times[2, n], -1], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]]], -1]], x], Dist[Times[2, c, Plus[Times[2, n], -1], Power[Plus[Times[2, n], -1], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], Plus[n, -1]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, d, Cot[Plus[e, Times[f, x]]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], Plus[n, -1]], Power[Times[f, Plus[Times[2, n], -1], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]]], -1]], x], Dist[Times[2, c, Plus[Times[2, n], -1], Power[Plus[Times[2, n], -1], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], Plus[n, -1]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, a, c, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], Plus[n, -1]], Power[Times[b, f, Plus[Times[2, m], 1]], -1]], x], Times[-1, Dist[Times[d, Plus[Times[2, n], -1], Power[Times[b, Plus[Times[2, m], 1]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], Plus[n, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[n], Less[m, Times[-1, Power[2, -1]]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, a, c, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], Plus[n, -1]], Power[Times[b, f, Plus[Times[2, m], 1]], -1]], x], Times[-1, Dist[Times[d, Plus[Times[2, n], -1], Power[Times[b, Plus[Times[2, m], 1]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], Plus[n, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[n], Less[m, Times[-1, Power[2, -1]]], IntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Times[-1, a, c], m], Int[ExpandTrig[Times[sec[Plus[e, Times[f, x]]], Power[tan[Plus[e, Times[f, x]]], Times[2, m]]], Power[Plus[c, Times[d, sec[Plus[e, Times[f, x]]]]], Plus[n, Times[-1, m]]], x], x], x], And[FreeQ[List[a, b, c, d, e, f, n], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegersQ[m, n], GreaterEqual[Plus[n, Times[-1, m]], 0], Greater[Times[m, n], 0]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Times[-1, a, c], m], Int[ExpandTrig[Times[csc[Plus[e, Times[f, x]]], Power[cot[Plus[e, Times[f, x]]], Times[2, m]]], Power[Plus[c, Times[d, csc[Plus[e, Times[f, x]]]]], Plus[n, Times[-1, m]]], x], x], x], And[FreeQ[List[a, b, c, d, e, f, n], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegersQ[m, n], GreaterEqual[Plus[n, Times[-1, m]], 0], Greater[Times[m, n], 0]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[-1, a, c], Plus[m, Times[1, Power[2, -1]]]], Tan[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Tan[Plus[e, Times[f, x]]], Times[2, m]]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[Plus[m, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[-1, a, c], Plus[m, Times[1, Power[2, -1]]]], Cot[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Cot[Plus[e, Times[f, x]]], Times[2, m]]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[Plus[m, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], n], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x]], Dist[Times[Plus[m, n, 1], Power[Times[a, Plus[Times[2, m], 1]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], n]], x], x]], And[FreeQ[List[a, b, c, d, e, f, n], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Or[NegativeIntegerQ[m, Plus[n, Times[-1, 1, Power[2, -1]]]], And[NegativeIntegerQ[Plus[m, Times[-1, 1, Power[2, -1]]], Plus[n, Times[-1, 1, Power[2, -1]]]], Less[m, n]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], n], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x], Dist[Times[Plus[m, n, 1], Power[Times[a, Plus[Times[2, m], 1]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], n]], x], x]], And[FreeQ[List[a, b, c, d, e, f, n], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Or[NegativeIntegerQ[m, Plus[n, Times[-1, 1, Power[2, -1]]]], And[NegativeIntegerQ[Plus[m, Times[-1, 1, Power[2, -1]]], Plus[n, Times[-1, 1, Power[2, -1]]]], Less[m, n]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[a, c, Tan[Plus[e, Times[f, x]]], Power[Times[f, Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], Plus[m, Times[-1, 1, Power[2, -1]]]], Power[Plus[c, Times[d, x]], Plus[n, Times[-1, 1, Power[2, -1]]]]], x], x, Sec[Plus[e, Times[f, x]]]], x]], And[FreeQ[List[a, b, c, d, e, f, m, n], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[a, c, Cot[Plus[e, Times[f, x]]], Power[Times[f, Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], Plus[m, Times[-1, 1, Power[2, -1]]]], Power[Plus[c, Times[d, x]], Plus[n, Times[-1, 1, Power[2, -1]]]]], x], x, Csc[Plus[e, Times[f, x]]]], x], And[FreeQ[List[a, b, c, d, e, f, m, n], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Times[-1, a, c], m], Int[ExpandTrig[Times[Power[Times[g, sec[Plus[e, Times[f, x]]]], p], Power[tan[Plus[e, Times[f, x]]], Times[2, m]]], Power[Plus[c, Times[d, sec[Plus[e, Times[f, x]]]]], Plus[n, Times[-1, m]]], x], x], x], And[FreeQ[List[a, b, c, d, e, f, g, n, p], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegersQ[m, n], GreaterEqual[Plus[n, Times[-1, m]], 0], Greater[Times[m, n], 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Times[-1, a, c], m], Int[ExpandTrig[Times[Power[Times[g, csc[Plus[e, Times[f, x]]]], p], Power[cot[Plus[e, Times[f, x]]], Times[2, m]]], Power[Plus[c, Times[d, csc[Plus[e, Times[f, x]]]]], Plus[n, Times[-1, m]]], x], x], x], And[FreeQ[List[a, b, c, d, e, f, g, n, p], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegersQ[m, n], GreaterEqual[Plus[n, Times[-1, m]], 0], Greater[Times[m, n], 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[-1, a, c], Plus[m, Times[1, Power[2, -1]]]], Tan[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]]], -1]], Int[Times[Power[Times[g, Sec[Plus[e, Times[f, x]]]], p], Power[Tan[Plus[e, Times[f, x]]], Times[2, m]]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, p], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[Plus[m, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[-1, a, c], Plus[m, Times[1, Power[2, -1]]]], Cot[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]]], -1]], Int[Times[Power[Times[g, Csc[Plus[e, Times[f, x]]]], p], Power[Cot[Plus[e, Times[f, x]]], Times[2, m]]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, p], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[Plus[m, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[a, c, g, Tan[Plus[e, Times[f, x]]], Power[Times[f, Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]]], -1]], Subst[Int[Times[Power[Times[g, x], Plus[p, -1]], Power[Plus[a, Times[b, x]], Plus[m, Times[-1, 1, Power[2, -1]]]], Power[Plus[c, Times[d, x]], Plus[n, Times[-1, 1, Power[2, -1]]]]], x], x, Sec[Plus[e, Times[f, x]]]], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[a, c, g, Cot[Plus[e, Times[f, x]]], Power[Times[f, Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]]], -1]], Subst[Int[Times[Power[Times[g, x], Plus[p, -1]], Power[Plus[a, Times[b, x]], Plus[m, Times[-1, 1, Power[2, -1]]]], Power[Plus[c, Times[d, x]], Plus[n, Times[-1, 1, Power[2, -1]]]]], x], x, Csc[Plus[e, Times[f, x]]]], x], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, b, g, Power[f, -1]], Subst[Int[Times[1, Power[Plus[Times[b, c], Times[a, d], Times[-1, c, g, Power[x, 2]]], -1]], x], x, Times[b, Tan[Plus[e, Times[f, x]]], Power[Times[Sqrt[Times[g, Sec[Plus[e, Times[f, x]]]]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]]], -1]]], x], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-2, b, g, Power[f, -1]], Subst[Int[Times[1, Power[Plus[Times[b, c], Times[a, d], Times[-1, c, g, Power[x, 2]]], -1]], x], x, Times[b, Cot[Plus[e, Times[f, x]]], Power[Times[Sqrt[Times[g, Csc[Plus[e, Times[f, x]]]]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]]], -1]]], x], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[a, Power[c, -1]], Int[Times[Sqrt[Times[g, Sec[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x], Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[Times[c, g], -1]], Int[Times[Power[Times[g, Sec[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[a, Power[c, -1]], Int[Times[Sqrt[Times[g, Csc[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x], Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[Times[c, g], -1]], Int[Times[Power[Times[g, Csc[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, b, Power[f, -1]], Subst[Int[Times[1, Power[Plus[Times[b, c], Times[a, d], Times[d, Power[x, 2]]], -1]], x], x, Times[b, Tan[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]]], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-2, b, Power[f, -1]], Subst[Int[Times[1, Power[Plus[Times[b, c], Times[a, d], Times[d, Power[x, 2]]], -1]], x], x, Times[b, Cot[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]]], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Times[c, Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], -1]]], Power[Times[d, f, Sqrt[Times[c, d, Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Power[Times[Plus[Times[b, c], Times[a, d]], Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]]]], -1], EllipticE[ArcSin[Times[c, Tan[Plus[e, Times[f, x]]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], -1]]], Times[-1, Plus[Times[b, c], Times[-1, a, d]], Power[Plus[Times[b, c], Times[a, d]], -1]]]], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Times[c, Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], -1]]], Power[Times[d, f, Sqrt[Times[c, d, Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Power[Times[Plus[Times[b, c], Times[a, d]], Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]]]], -1], EllipticE[ArcSin[Times[c, Cot[Plus[e, Times[f, x]]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], -1]]], Times[-1, Plus[Times[b, c], Times[-1, a, d]], Power[Plus[Times[b, c], Times[a, d]], -1]]]], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[d, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x], Times[-1, Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[d, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[d, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x], Times[-1, Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[d, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[3, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[g, Power[d, -1]], Int[Times[Sqrt[Times[g, Sec[Plus[e, Times[f, x]]]]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]]], x], x], Times[-1, Dist[Times[c, g, Power[d, -1]], Int[Times[Sqrt[Times[g, Sec[Plus[e, Times[f, x]]]]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Rational[3, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[g, Power[d, -1]], Int[Times[Sqrt[Times[g, Csc[Plus[e, Times[f, x]]]]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]]], x], x], Times[-1, Dist[Times[c, g, Power[d, -1]], Int[Times[Sqrt[Times[g, Csc[Plus[e, Times[f, x]]]]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[3, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[d, -1]], Int[Times[Power[Times[g, Sec[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x], Times[-1, Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[d, -1]], Int[Times[Power[Times[g, Sec[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Rational[3, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[d, -1]], Int[Times[Power[Times[g, Csc[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x], Times[-1, Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[d, -1]], Int[Times[Power[Times[g, Csc[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x], Times[-1, Dist[Times[d, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], Or[ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[b, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x], Times[-1, Dist[Times[d, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], Or[ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[2, Tan[Plus[e, Times[f, x]]], Power[Times[f, Plus[c, d], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Times[-1, Power[Tan[Plus[e, Times[f, x]]], 2]]]], -1], Sqrt[Times[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Power[Plus[a, b], -1]]], EllipticPi[Times[2, d, Power[Plus[c, d], -1]], ArcSin[Times[Sqrt[Plus[1, Times[-1, Sec[Plus[e, Times[f, x]]]]]], Power[Sqrt[2], -1]]], Times[2, b, Power[Plus[a, b], -1]]]], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[-2, Cot[Plus[e, Times[f, x]]], Power[Times[f, Plus[c, d], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Times[-1, Power[Cot[Plus[e, Times[f, x]]], 2]]]], -1], Sqrt[Times[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Power[Plus[a, b], -1]]], EllipticPi[Times[2, d, Power[Plus[c, d], -1]], ArcSin[Times[Sqrt[Plus[1, Times[-1, Csc[Plus[e, Times[f, x]]]]]], Power[Sqrt[2], -1]]], Times[2, b, Power[Plus[a, b], -1]]]], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[3, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[a, g, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Sqrt[Times[g, Sec[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]], Dist[Times[c, g, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Sqrt[Times[g, Sec[Plus[e, Times[f, x]]]]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Rational[3, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[a, g, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Sqrt[Times[g, Csc[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]], Dist[Times[c, g, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Sqrt[Times[g, Csc[Plus[e, Times[f, x]]]]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[3, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[g, Sqrt[Times[g, Sec[Plus[e, Times[f, x]]]]], Sqrt[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], Int[Times[1, Power[Times[Sqrt[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]]], Plus[d, Times[c, Cos[Plus[e, Times[f, x]]]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Rational[3, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[g, Sqrt[Times[g, Csc[Plus[e, Times[f, x]]]]], Sqrt[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], Int[Times[1, Power[Times[Sqrt[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]]], Plus[d, Times[c, Sin[Plus[e, Times[f, x]]]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[a, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]], Dist[Times[c, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], Or[ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[a, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]], Dist[Times[c, Power[Plus[Times[b, c], Times[-1, a, d]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], Or[ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[d, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x], Times[-1, Dist[Times[c, Power[d, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[d, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x], Times[-1, Dist[Times[c, Power[d, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[5, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[Power[c, 2], Power[g, 2], Power[Times[d, Plus[Times[b, c], Times[-1, a, d]]], -1]], Int[Times[Sqrt[Times[g, Sec[Plus[e, Times[f, x]]]]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], -1]], x], x]], Dist[Times[Power[g, 2], Power[Times[d, Plus[Times[b, c], Times[-1, a, d]]], -1]], Int[Times[Sqrt[Times[g, Sec[Plus[e, Times[f, x]]]]], Plus[Times[a, c], Times[Plus[Times[b, c], Times[-1, a, d]], Sec[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Rational[5, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[Power[c, 2], Power[g, 2], Power[Times[d, Plus[Times[b, c], Times[-1, a, d]]], -1]], Int[Times[Sqrt[Times[g, Csc[Plus[e, Times[f, x]]]]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], -1]], x], x]], Dist[Times[Power[g, 2], Power[Times[d, Plus[Times[b, c], Times[-1, a, d]]], -1]], Int[Times[Sqrt[Times[g, Csc[Plus[e, Times[f, x]]]]], Plus[Times[a, c], Times[Plus[Times[b, c], Times[-1, a, d]], Csc[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[5, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[g, Power[d, -1]], Int[Times[Power[Times[g, Sec[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x], Times[-1, Dist[Times[c, g, Power[d, -1]], Int[Times[Power[Times[g, Sec[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Rational[5, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[g, Power[d, -1]], Int[Times[Power[Times[g, Csc[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x], Times[-1, Dist[Times[c, g, Power[d, -1]], Int[Times[Power[Times[g, Csc[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, b, Power[f, -1]], Subst[Int[Times[1, Power[Plus[1, Times[-1, b, d, Power[x, 2]]], -1]], x], x, Times[Tan[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]]], -1]]], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-2, b, Power[f, -1]], Subst[Int[Times[1, Power[Plus[1, Times[-1, b, d, Power[x, 2]]], -1]], x], x, Times[Cot[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]]], -1]]], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[d, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]]], -1]], x], x]], Dist[Times[b, Power[d, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[d, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]]], -1]], x], x]], Dist[Times[b, Power[d, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[2, Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Power[Times[d, f, Sqrt[Times[Plus[a, b], Power[Plus[c, d], -1]]], Tan[Plus[e, Times[f, x]]]], -1], Sqrt[Times[-1, Plus[Times[b, c], Times[-1, a, d]], Plus[1, Times[-1, Sec[Plus[e, Times[f, x]]]]], Power[Times[Plus[c, d], Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]]], Sqrt[Times[Plus[Times[b, c], Times[-1, a, d]], Plus[1, Sec[Plus[e, Times[f, x]]]], Power[Times[Plus[c, Times[-1, d]], Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]]], EllipticPi[Times[b, Plus[c, d], Power[Times[d, Plus[a, b]], -1]], ArcSin[Times[Sqrt[Times[Plus[a, b], Power[Plus[c, d], -1]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]]], Times[Plus[a, Times[-1, b]], Plus[c, d], Power[Times[Plus[a, b], Plus[c, Times[-1, d]]], -1]]]], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[-2, Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Power[Times[d, f, Sqrt[Times[Plus[a, b], Power[Plus[c, d], -1]]], Cot[Plus[e, Times[f, x]]]], -1], Sqrt[Times[-1, Plus[Times[b, c], Times[-1, a, d]], Plus[1, Times[-1, Csc[Plus[e, Times[f, x]]]]], Power[Times[Plus[c, d], Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]]], Sqrt[Times[Plus[Times[b, c], Times[-1, a, d]], Plus[1, Csc[Plus[e, Times[f, x]]]], Power[Times[Plus[c, Times[-1, d]], Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]]], EllipticPi[Times[b, Plus[c, d], Power[Times[d, Plus[a, b]], -1]], ArcSin[Times[Sqrt[Times[Plus[a, b], Power[Plus[c, d], -1]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]]], Times[Plus[a, Times[-1, b]], Plus[c, d], Power[Times[Plus[a, b], Plus[c, Times[-1, d]]], -1]]]], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, a, Power[Times[b, f], -1]], Subst[Int[Times[1, Power[Plus[2, Times[Plus[Times[a, c], Times[-1, b, d]], Power[x, 2]]], -1]], x], x, Times[Tan[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]]], -1]]], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-2, a, Power[Times[b, f], -1]], Subst[Int[Times[1, Power[Plus[2, Times[Plus[Times[a, c], Times[-1, b, d]], Power[x, 2]]], -1]], x], x, Times[Cot[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]]], -1]]], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[2, Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], Power[Times[f, Plus[Times[b, c], Times[-1, a, d]], Rt[Times[Plus[c, d], Power[Plus[a, b], -1]], 2], Tan[Plus[e, Times[f, x]]]], -1], Sqrt[Times[Plus[Times[b, c], Times[-1, a, d]], Plus[1, Times[-1, Sec[Plus[e, Times[f, x]]]]], Power[Times[Plus[a, b], Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]]], Sqrt[Times[-1, Plus[Times[b, c], Times[-1, a, d]], Plus[1, Sec[Plus[e, Times[f, x]]]], Power[Times[Plus[a, Times[-1, b]], Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]]], EllipticF[ArcSin[Times[Rt[Times[Plus[c, d], Power[Plus[a, b], -1]], 2], Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]]]], Times[Plus[a, b], Plus[c, Times[-1, d]], Power[Times[Plus[a, Times[-1, b]], Plus[c, d]], -1]]]], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[-2, Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], Power[Times[f, Plus[Times[b, c], Times[-1, a, d]], Rt[Times[Plus[c, d], Power[Plus[a, b], -1]], 2], Cot[Plus[e, Times[f, x]]]], -1], Sqrt[Times[Plus[Times[b, c], Times[-1, a, d]], Plus[1, Times[-1, Csc[Plus[e, Times[f, x]]]]], Power[Times[Plus[a, b], Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]]], Sqrt[Times[-1, Plus[Times[b, c], Times[-1, a, d]], Plus[1, Csc[Plus[e, Times[f, x]]]], Power[Times[Plus[a, Times[-1, b]], Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]]], EllipticF[ArcSin[Times[Rt[Times[Plus[c, d], Power[Plus[a, b], -1]], 2], Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]]]], Times[Plus[a, b], Plus[c, Times[-1, d]], Power[Times[Plus[a, Times[-1, b]], Plus[c, d]], -1]]]], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[a, Power[b, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]]], -1]], x], x]], Dist[Times[1, Power[b, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[a, Power[b, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]]], -1]], x], x]], Dist[Times[1, Power[b, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[a, Times[-1, b]], Power[Plus[c, Times[-1, d]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]]], -1]], x], x], Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[Plus[c, Times[-1, d]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Plus[1, Sec[Plus[e, Times[f, x]]]], Power[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], Times[3, Power[2, -1]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Rational[-3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[a, Times[-1, b]], Power[Plus[c, Times[-1, d]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]]], -1]], x], x], Dist[Times[Plus[Times[b, c], Times[-1, a, d]], Power[Plus[c, Times[-1, d]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Plus[1, Csc[Plus[e, Times[f, x]]]], Power[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], Times[3, Power[2, -1]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[a, 2], g, Tan[Plus[e, Times[f, x]]], Power[Times[f, Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Plus[a, Times[-1, b, Sec[Plus[e, Times[f, x]]]]]]], -1]], Subst[Int[Times[Power[Times[g, x], Plus[p, -1]], Power[Plus[a, Times[b, x]], Plus[m, Times[-1, 1, Power[2, -1]]]], Power[Plus[c, Times[d, x]], n], Power[Sqrt[Plus[a, Times[-1, b, x]]], -1]], x], x, Sec[Plus[e, Times[f, x]]]], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]], Or[ZeroQ[Plus[p, -1]], IntegerQ[Plus[m, Times[-1, 1, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, 2], g, Cot[Plus[e, Times[f, x]]], Power[Times[f, Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Plus[a, Times[-1, b, Csc[Plus[e, Times[f, x]]]]]]], -1]], Subst[Int[Times[Power[Times[g, x], Plus[p, -1]], Power[Plus[a, Times[b, x]], Plus[m, Times[-1, 1, Power[2, -1]]]], Power[Plus[c, Times[d, x]], n], Power[Sqrt[Plus[a, Times[-1, b, x]]], -1]], x], x, Csc[Plus[e, Times[f, x]]]], x], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]], Or[ZeroQ[Plus[p, -1]], IntegerQ[Plus[m, Times[-1, 1, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[g, Plus[m, n]], -1]], Int[Times[Power[Times[g, Sec[Plus[e, Times[f, x]]]], Plus[m, n, p]], Power[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]], m], Power[Plus[d, Times[c, Cos[Plus[e, Times[f, x]]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], IntegerQ[m], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[g, Plus[m, n]], -1]], Int[Times[Power[Times[g, Csc[Plus[e, Times[f, x]]]], Plus[m, n, p]], Power[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]], m], Power[Plus[d, Times[c, Sin[Plus[e, Times[f, x]]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], IntegerQ[m], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[g, Sec[Plus[e, Times[f, x]]]], Plus[m, p]], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], n], Power[Times[Power[g, m], Power[Plus[d, Times[c, Cos[Plus[e, Times[f, x]]]]], n]], -1]], Int[Times[Power[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]], m], Power[Plus[d, Times[c, Cos[Plus[e, Times[f, x]]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, n, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[m, n, p]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[g, Csc[Plus[e, Times[f, x]]]], Plus[m, p]], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], n], Power[Times[Power[g, m], Power[Plus[d, Times[c, Sin[Plus[e, Times[f, x]]]]], n]], -1]], Int[Times[Power[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]], m], Power[Plus[d, Times[c, Sin[Plus[e, Times[f, x]]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, n, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[m, n, p]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[g, Sec[Plus[e, Times[f, x]]]], p], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], n], Power[Times[Power[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]], m], Power[Plus[d, Times[c, Cos[Plus[e, Times[f, x]]]]], n]], -1]], Int[Times[Power[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]], m], Power[Plus[d, Times[c, Cos[Plus[e, Times[f, x]]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[m, n, p]], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[g, Csc[Plus[e, Times[f, x]]]], p], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], n], Power[Times[Power[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]], m], Power[Plus[d, Times[c, Sin[Plus[e, Times[f, x]]]]], n]], -1]], Int[Times[Power[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]], m], Power[Plus[d, Times[c, Sin[Plus[e, Times[f, x]]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[m, n, p]], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[d, Times[c, Cos[Plus[e, Times[f, x]]]]]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Times[Sqrt[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]]], -1]], Int[Times[Power[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]], m], Power[Plus[d, Times[c, Cos[Plus[e, Times[f, x]]]]], n], Power[Power[Cos[Plus[e, Times[f, x]]], Plus[m, n, p]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], IntegerQ[Plus[m, Times[-1, 1, Power[2, -1]]]], IntegerQ[Plus[n, Times[-1, 1, Power[2, -1]]]], IntegerQ[p], MemberQ[List[-1, -2], Plus[m, n, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[d, Times[c, Sin[Plus[e, Times[f, x]]]]]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Times[Sqrt[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]]], Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]]], -1]], Int[Times[Power[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]], m], Power[Plus[d, Times[c, Sin[Plus[e, Times[f, x]]]]], n], Power[Power[Sin[Plus[e, Times[f, x]]], Plus[m, n, p]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, n], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], IntegerQ[Plus[m, Times[-1, 1, Power[2, -1]]]], IntegerQ[Plus[n, Times[-1, 1, Power[2, -1]]]], IntegerQ[p], MemberQ[List[-1, -2], Plus[m, n, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrig[Times[Power[Times[g, sec[Plus[e, Times[f, x]]]], p], Power[Plus[a, Times[b, sec[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, sec[Plus[e, Times[f, x]]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], Or[IntegersQ[m, n], IntegersQ[m, p], IntegersQ[n, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrig[Times[Power[Times[g, csc[Plus[e, Times[f, x]]]], p], Power[Plus[a, Times[b, csc[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, csc[Plus[e, Times[f, x]]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], Or[IntegersQ[m, n], IntegersQ[m, p], IntegersQ[n, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[g, Sec[Plus[e, Times[f, x]]]], p], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]], n]], x], FreeQ[List[a, b, c, d, e, f, g, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]]], Pattern[n, Blank[]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[g, Csc[Plus[e, Times[f, x]]]], p], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]], n]], x], FreeQ[List[a, b, c, d, e, f, g, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[2, A, Plus[1, Sec[Plus[e, Times[f, x]]]], Sqrt[Times[Plus[Times[b, c], Times[-1, a, d]], Plus[1, Times[-1, Sec[Plus[e, Times[f, x]]]]], Power[Times[Plus[a, b], Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]]], Power[Times[f, Plus[Times[b, c], Times[-1, a, d]], Rt[Times[Plus[c, d], Power[Plus[a, b], -1]], 2], Tan[Plus[e, Times[f, x]]], Sqrt[Times[-1, Plus[Times[b, c], Times[-1, a, d]], Plus[1, Sec[Plus[e, Times[f, x]]]], Power[Times[Plus[a, Times[-1, b]], Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]]]], -1], EllipticE[ArcSin[Times[Rt[Times[Plus[c, d], Power[Plus[a, b], -1]], 2], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[c, Times[d, Sec[Plus[e, Times[f, x]]]]]], -1]]], Times[Plus[a, b], Plus[c, Times[-1, d]], Power[Times[Plus[a, Times[-1, b]], Plus[c, d]], -1]]]], x], And[FreeQ[List[a, b, c, d, e, f, A, B], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]], ZeroQ[Plus[A, Times[-1, B]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Rational[-3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[-2, A, Plus[1, Csc[Plus[e, Times[f, x]]]], Sqrt[Times[Plus[Times[b, c], Times[-1, a, d]], Plus[1, Times[-1, Csc[Plus[e, Times[f, x]]]]], Power[Times[Plus[a, b], Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]]], Power[Times[f, Plus[Times[b, c], Times[-1, a, d]], Rt[Times[Plus[c, d], Power[Plus[a, b], -1]], 2], Cot[Plus[e, Times[f, x]]], Sqrt[Times[-1, Plus[Times[b, c], Times[-1, a, d]], Plus[1, Csc[Plus[e, Times[f, x]]]], Power[Times[Plus[a, Times[-1, b]], Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]]]], -1], EllipticE[ArcSin[Times[Rt[Times[Plus[c, d], Power[Plus[a, b], -1]], 2], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Sqrt[Plus[c, Times[d, Csc[Plus[e, Times[f, x]]]]]], -1]]], Times[Plus[a, b], Plus[c, Times[-1, d]], Power[Times[Plus[a, Times[-1, b]], Plus[c, d]], -1]]]], x], And[FreeQ[List[a, b, c, d, e, f, A, B], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[c, 2], Times[-1, Power[d, 2]]]], ZeroQ[Plus[A, Times[-1, B]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[A, a, Tan[Plus[e, Times[f, x]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x]], Dist[Times[1, Power[Times[d, n], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[n, Plus[Times[B, a], Times[A, b]]], Times[Plus[Times[B, b, n], Times[A, a, Plus[n, 1]]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], RationalQ[n], LessEqual[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[A, a, Cot[Plus[e, Times[f, x]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x], Dist[Times[1, Power[Times[d, n], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[n, Plus[Times[B, a], Times[A, b]]], Times[Plus[Times[B, b, n], Times[A, a, Plus[n, 1]]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], RationalQ[n], LessEqual[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, B, Tan[Plus[e, Times[f, x]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[n, 1]], -1]], x], Dist[Times[1, Power[Plus[n, 1], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[A, a, Plus[n, 1]], Times[B, b, n], Times[Plus[Times[A, b], Times[B, a]], Plus[n, 1], Sec[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], Not[And[RationalQ[n], LessEqual[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Optional[Pattern[n, Blank[]]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, B, Cot[Plus[e, Times[f, x]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[n, 1]], -1]], x]], Dist[Times[1, Power[Plus[n, 1], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[A, a, Plus[n, 1]], Times[B, b, n], Times[Plus[Times[A, b], Times[B, a]], Plus[n, 1], Csc[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], Not[And[RationalQ[n], LessEqual[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[B, Power[b, -1]], Int[Sec[Plus[e, Times[f, x]]], x], x], Dist[Times[Plus[Times[A, b], Times[-1, a, B]], Power[b, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[B, Power[b, -1]], Int[Csc[Plus[e, Times[f, x]]], x], x], Dist[Times[Plus[Times[A, b], Times[-1, a, B]], Power[b, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[B, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[f, Plus[m, 1]], -1]], x], And[FreeQ[List[a, b, A, B, e, f, m], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Times[a, B, m], Times[A, b, Plus[m, 1]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[B, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[f, Plus[m, 1]], -1]], x]], And[FreeQ[List[a, b, A, B, e, f, m], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Times[a, B, m], Times[A, b, Plus[m, 1]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[A, b], Times[-1, a, B]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x]], Dist[Times[Plus[Times[a, B, m], Times[A, b, Plus[m, 1]]], Power[Times[a, b, Plus[Times[2, m], 1]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]]], x], x]], And[FreeQ[List[a, b, A, B, e, f], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Times[a, B, m], Times[A, b, Plus[m, 1]]]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[A, b], Times[-1, a, B]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x], Dist[Times[Plus[Times[a, B, m], Times[A, b, Plus[m, 1]]], Power[Times[a, b, Plus[Times[2, m], 1]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]]], x], x]], And[FreeQ[List[a, b, A, B, e, f], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Times[a, B, m], Times[A, b, Plus[m, 1]]]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[B, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[f, Plus[m, 1]], -1]], x], Dist[Times[Plus[Times[a, B, m], Times[A, b, Plus[m, 1]]], Power[Times[b, Plus[m, 1]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m]], x], x]], And[FreeQ[List[a, b, A, B, e, f, m], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Times[a, B, m], Times[A, b, Plus[m, 1]]]], Not[And[RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[B, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[f, Plus[m, 1]], -1]], x]], Dist[Times[Plus[Times[a, B, m], Times[A, b, Plus[m, 1]]], Power[Times[b, Plus[m, 1]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m]], x], x]], And[FreeQ[List[a, b, A, B, e, f, m], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Times[a, B, m], Times[A, b, Plus[m, 1]]]], Not[And[RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[B, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[f, Plus[m, 1]], -1]], x], Dist[Times[1, Power[Plus[m, 1], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Simp[Plus[Times[b, B, m], Times[a, A, Plus[m, 1]], Times[Plus[Times[a, B, m], Times[A, b, Plus[m, 1]]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, A, B, e, f], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[B, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[f, Plus[m, 1]], -1]], x]], Dist[Times[1, Power[Plus[m, 1], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Simp[Plus[Times[b, B, m], Times[a, A, Plus[m, 1]], Times[Plus[Times[a, B, m], Times[A, b, Plus[m, 1]]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, A, B, e, f], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[A, b], Times[-1, a, B]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Dist[Times[1, Power[Times[Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[Plus[Times[a, A], Times[-1, b, B]], Plus[m, 1]], Times[-1, Plus[Times[A, b], Times[-1, a, B]], Plus[m, 2], Sec[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, A, B, e, f], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[A, b], Times[-1, a, B]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Dist[Times[1, Power[Times[Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[Plus[Times[a, A], Times[-1, b, B]], Plus[m, 1]], Times[-1, Plus[Times[A, b], Times[-1, a, B]], Plus[m, 2], Csc[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, A, B, e, f], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[2, Plus[Times[A, b], Times[-1, a, B]], Rt[Plus[a, Times[b, B, Power[A, -1]]], 2], Sqrt[Times[b, Plus[1, Times[-1, Sec[Plus[e, Times[f, x]]]]], Power[Plus[a, b], -1]]], Sqrt[Times[-1, b, Plus[1, Sec[Plus[e, Times[f, x]]]], Power[Plus[a, Times[-1, b]], -1]]], Power[Times[Power[b, 2], f, Tan[Plus[e, Times[f, x]]]], -1], EllipticE[ArcSin[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Rt[Plus[a, Times[b, B, Power[A, -1]]], 2], -1]]], Times[Plus[Times[a, A], Times[b, B]], Power[Plus[Times[a, A], Times[-1, b, B]], -1]]]], x], And[FreeQ[List[a, b, e, f, A, B], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[A, 2], Times[-1, Power[B, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[-2, Plus[Times[A, b], Times[-1, a, B]], Rt[Plus[a, Times[b, B, Power[A, -1]]], 2], Sqrt[Times[b, Plus[1, Times[-1, Csc[Plus[e, Times[f, x]]]]], Power[Plus[a, b], -1]]], Sqrt[Times[-1, b, Plus[1, Csc[Plus[e, Times[f, x]]]], Power[Plus[a, Times[-1, b]], -1]]], Power[Times[Power[b, 2], f, Cot[Plus[e, Times[f, x]]]], -1], EllipticE[ArcSin[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Rt[Plus[a, Times[b, B, Power[A, -1]]], 2], -1]]], Times[Plus[Times[a, A], Times[b, B]], Power[Plus[Times[a, A], Times[-1, b, B]], -1]]]], x], And[FreeQ[List[a, b, e, f, A, B], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[A, 2], Times[-1, Power[B, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Plus[A, Times[-1, B]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x], Dist[B, Int[Times[Sec[Plus[e, Times[f, x]]], Plus[1, Sec[Plus[e, Times[f, x]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, e, f, A, B], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[A, 2], Times[-1, Power[B, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Plus[A, Times[-1, B]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x], Dist[B, Int[Times[Csc[Plus[e, Times[f, x]]], Plus[1, Csc[Plus[e, Times[f, x]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, e, f, A, B], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Power[A, 2], Times[-1, Power[B, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[-2, Sqrt[2], A, Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Plus[A, Times[-1, B, Sec[Plus[e, Times[f, x]]]]], Sqrt[Times[Plus[A, Times[B, Sec[Plus[e, Times[f, x]]]]], Power[A, -1]]], Power[Times[B, f, Tan[Plus[e, Times[f, x]]], Power[Times[A, Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Power[Plus[Times[a, A], Times[b, B]], -1]], m]], -1], AppellF1[Times[1, Power[2, -1]], Times[-1, Times[1, Power[2, -1]]], Times[-1, m], Times[3, Power[2, -1]], Times[Plus[A, Times[-1, B, Sec[Plus[e, Times[f, x]]]]], Power[Times[2, A], -1]], Times[Times[b, Plus[A, Times[-1, B, Sec[Plus[e, Times[f, x]]]]]], Power[Plus[Times[A, b], Times[a, B]], -1]]]], x], And[FreeQ[List[a, b, A, B, e, f], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[A, 2], Times[-1, Power[B, 2]]]], Not[IntegerQ[Times[2, m]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[2, Sqrt[2], A, Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Plus[A, Times[-1, B, Csc[Plus[e, Times[f, x]]]]], Sqrt[Times[Plus[A, Times[B, Csc[Plus[e, Times[f, x]]]]], Power[A, -1]]], Power[Times[B, f, Cot[Plus[e, Times[f, x]]], Power[Times[A, Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Power[Plus[Times[a, A], Times[b, B]], -1]], m]], -1], AppellF1[Times[1, Power[2, -1]], Times[-1, Times[1, Power[2, -1]]], Times[-1, m], Times[3, Power[2, -1]], Times[Plus[A, Times[-1, B, Csc[Plus[e, Times[f, x]]]]], Power[Times[2, A], -1]], Times[Times[b, Plus[A, Times[-1, B, Csc[Plus[e, Times[f, x]]]]]], Power[Plus[Times[A, b], Times[a, B]], -1]]]], x], And[FreeQ[List[a, b, A, B, e, f], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Power[A, 2], Times[-1, Power[B, 2]]]], Not[IntegerQ[Times[2, m]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[A, b], Times[-1, a, B]], Power[b, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m]], x], x], Dist[Times[B, Power[b, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]]], x], x]], And[FreeQ[List[a, b, A, B, e, f, m], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[A, b], Times[-1, a, B]], Power[b, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m]], x], x], Dist[Times[B, Power[b, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]]], x], x]], And[FreeQ[List[a, b, A, B, e, f, m], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[A, b], Times[-1, a, B]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[b, f, Plus[Times[2, m], 1]], -1]], x], Dist[Times[1, Power[Times[Power[b, 2], Plus[Times[2, m], 1]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[A, b, m], Times[-1, a, B, m], Times[b, B, Plus[Times[2, m], 1], Sec[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[A, b], Times[-1, a, B]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[b, f, Plus[Times[2, m], 1]], -1]], x]], Dist[Times[1, Power[Times[Power[b, 2], Plus[Times[2, m], 1]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[A, b, m], Times[-1, a, B, m], Times[b, B, Plus[Times[2, m], 1], Csc[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[a, Plus[Times[A, b], Times[-1, a, B]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[b, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[b, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[b, Plus[Times[A, b], Times[-1, a, B]], Plus[m, 1]], Times[-1, Plus[Times[a, A, b, Plus[m, 2]], Times[-1, B, Plus[Power[a, 2], Times[Power[b, 2], Plus[m, 1]]]]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]]], And[FreeQ[List[a, b, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[a, Plus[Times[A, b], Times[-1, a, B]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[b, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Times[-1, Dist[Times[1, Power[Times[b, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[b, Plus[Times[A, b], Times[-1, a, B]], Plus[m, 1]], Times[-1, Plus[Times[a, A, b, Plus[m, 2]], Times[-1, B, Plus[Power[a, 2], Times[Power[b, 2], Plus[m, 1]]]]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]]], And[FreeQ[List[a, b, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[B, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[b, f, Plus[m, 2]], -1]], x], Dist[Times[1, Power[Times[b, Plus[m, 2]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Simp[Plus[Times[b, B, Plus[m, 1]], Times[Plus[Times[A, b, Plus[m, 2]], Times[-1, a, B]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, B, m], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], Not[And[RationalQ[m], Less[m, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[B, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[b, f, Plus[m, 2]], -1]], x]], Dist[Times[1, Power[Times[b, Plus[m, 2]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Simp[Plus[Times[b, B, Plus[m, 1]], Times[Plus[Times[A, b, Plus[m, 2]], Times[-1, a, B]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, B, m], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], Not[And[RationalQ[m], Less[m, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[A, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x]], And[FreeQ[List[a, b, d, e, f, A, B, m, n], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[m, n, 1]], ZeroQ[Plus[Times[a, A, m], Times[-1, b, B, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[A, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x], And[FreeQ[List[a, b, d, e, f, A, B, m, n], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[m, n, 1]], ZeroQ[Plus[Times[a, A, m], Times[-1, b, B, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[A, b], Times[-1, a, B]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[b, f, Plus[Times[2, m], 1]], -1]], x], Dist[Times[Plus[Times[a, A, m], Times[b, B, Plus[m, 1]]], Power[Times[Power[a, 2], Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, n], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[m, n, 1]], RationalQ[m], LessEqual[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[A, b], Times[-1, a, B]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[b, f, Plus[Times[2, m], 1]], -1]], x]], Dist[Times[Plus[Times[a, A, m], Times[b, B, Plus[m, 1]]], Power[Times[Power[a, 2], Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, n], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[m, n, 1]], RationalQ[m], LessEqual[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[A, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x]], Times[-1, Dist[Times[Plus[Times[a, A, m], Times[-1, b, B, n]], Power[Times[b, d, n], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B, m, n], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[m, n, 1]], Not[And[RationalQ[m], LessEqual[m, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[A, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x], Times[-1, Dist[Times[Plus[Times[a, A, m], Times[-1, b, B, n]], Power[Times[b, d, n], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B, m, n], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[m, n, 1]], Not[And[RationalQ[m], LessEqual[m, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[2, b, B, Tan[Plus[e, Times[f, x]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[Times[2, n], 1], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]]], -1]], x], And[FreeQ[List[a, b, d, e, f, A, B, n], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Times[A, b, Plus[Times[2, n], 1]], Times[2, a, B, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[-2, b, B, Cot[Plus[e, Times[f, x]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[Times[2, n], 1], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]]], -1]], x], And[FreeQ[List[a, b, d, e, f, A, B, n], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], ZeroQ[Plus[Times[A, b, Plus[Times[2, n], 1]], Times[2, a, B, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[A, Power[b, 2], Tan[Plus[e, Times[f, x]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[a, f, n, Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]]], -1]], x]], Dist[Times[Plus[Times[A, b, Plus[Times[2, n], 1]], Times[2, a, B, n]], Power[Times[2, a, d, n], -1]], Int[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Times[A, b, Plus[Times[2, n], 1]], Times[2, a, B, n]]], RationalQ[n], Less[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[A, Power[b, 2], Cot[Plus[e, Times[f, x]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[a, f, n, Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]]], -1]], x], Dist[Times[Plus[Times[A, b, Plus[Times[2, n], 1]], Times[2, a, B, n]], Power[Times[2, a, d, n], -1]], Int[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Times[A, b, Plus[Times[2, n], 1]], Times[2, a, B, n]]], RationalQ[n], Less[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, b, B, Tan[Plus[e, Times[f, x]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[Times[2, n], 1], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]]], -1]], x], Dist[Times[Plus[Times[A, b, Plus[Times[2, n], 1]], Times[2, a, B, n]], Power[Times[b, Plus[Times[2, n], 1]], -1]], Int[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, n], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Times[A, b, Plus[Times[2, n], 1]], Times[2, a, B, n]]], Not[And[RationalQ[n], Less[n, 0]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, b, B, Cot[Plus[e, Times[f, x]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[Times[2, n], 1], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]]], -1]], x], Dist[Times[Plus[Times[A, b, Plus[Times[2, n], 1]], Times[2, a, B, n]], Power[Times[b, Plus[Times[2, n], 1]], -1]], Int[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, n], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], NonzeroQ[Plus[Times[A, b, Plus[Times[2, n], 1]], Times[2, a, B, n]]], Not[And[RationalQ[n], Less[n, 0]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[a, A, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x]], Times[-1, Dist[Times[b, Power[Times[a, d, n], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[a, A, Plus[m, Times[-1, n], -1]], Times[-1, b, B, n], Times[-1, Plus[Times[a, B, n], Times[A, b, Plus[m, n]]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Greater[m, Times[1, Power[2, -1]]], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[a, A, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x], Times[-1, Dist[Times[b, Power[Times[a, d, n], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[a, A, Plus[m, Times[-1, n], -1]], Times[-1, b, B, n], Times[-1, Plus[Times[a, B, n], Times[A, b, Plus[m, n]]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Greater[m, Times[1, Power[2, -1]]], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, B, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[m, n]], -1]], x], Dist[Times[1, Power[Times[d, Plus[m, n]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[a, A, d, Plus[m, n]], Times[B, Times[b, d, n]], Times[Plus[Times[A, b, d, Plus[m, n]], Times[a, B, d, Plus[Times[2, m], n, -1]]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, n], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Greater[m, Times[1, Power[2, -1]]], Not[And[RationalQ[n], Less[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, B, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[m, n]], -1]], x]], Dist[Times[1, Power[Times[d, Plus[m, n]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[a, A, d, Plus[m, n]], Times[B, Times[b, d, n]], Times[Plus[Times[A, b, d, Plus[m, n]], Times[a, B, d, Plus[Times[2, m], n, -1]]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, n], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Greater[m, Times[1, Power[2, -1]]], Not[And[RationalQ[n], Less[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[d, Plus[Times[A, b], Times[-1, a, B]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[a, b, Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Simp[Plus[Times[A, Times[a, d, Plus[n, -1]]], Times[-1, B, Times[b, d, Plus[n, -1]]], Times[-1, d, Plus[Times[a, B, Plus[m, Times[-1, n], 1]], Times[A, b, Plus[m, n]]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[m, Times[-1, Power[2, -1]]], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[d, Plus[Times[A, b], Times[-1, a, B]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[a, b, Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Simp[Plus[Times[A, Times[a, d, Plus[n, -1]]], Times[-1, B, Times[b, d, Plus[n, -1]]], Times[-1, d, Plus[Times[a, B, Plus[m, Times[-1, n], 1]], Times[A, b, Plus[m, n]]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[m, Times[-1, Power[2, -1]]], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[A, b], Times[-1, a, B]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[b, f, Plus[Times[2, m], 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[Power[a, 2], Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[b, B, n], Times[-1, a, A, Plus[Times[2, m], n, 1]], Times[Plus[Times[A, b], Times[-1, a, B]], Plus[m, n, 1], Sec[Plus[e, Times[f, x]]]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B, n], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]], Not[And[RationalQ[n], Greater[n, 0]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[A, b], Times[-1, a, B]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[b, f, Plus[Times[2, m], 1]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[Power[a, 2], Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[b, B, n], Times[-1, a, A, Plus[Times[2, m], n, 1]], Times[Plus[Times[A, b], Times[-1, a, B]], Plus[m, n, 1], Csc[Plus[e, Times[f, x]]]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B, n], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]], Not[And[RationalQ[n], Greater[n, 0]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[B, d, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, Plus[m, n]], -1]], x], Dist[Times[d, Power[Times[b, Plus[m, n]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Simp[Plus[Times[b, B, Plus[n, -1]], Times[Plus[Times[A, b, Plus[m, n]], Times[a, B, m]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, m], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[B, d, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, Plus[m, n]], -1]], x]], Dist[Times[d, Power[Times[b, Plus[m, n]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Simp[Plus[Times[b, B, Plus[n, -1]], Times[Plus[Times[A, b, Plus[m, n]], Times[a, B, m]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, m], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[A, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x]], Times[-1, Dist[Times[1, Power[Times[b, d, n], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[a, A, m], Times[-1, b, B, n], Times[-1, A, b, Plus[m, n, 1], Sec[Plus[e, Times[f, x]]]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B, m], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Less[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[A, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x], Times[-1, Dist[Times[1, Power[Times[b, d, n], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[a, A, m], Times[-1, b, B, n], Times[-1, A, b, Plus[m, n, 1], Csc[Plus[e, Times[f, x]]]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B, m], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Less[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[A, b], Times[-1, a, B]], Power[b, -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n]], x], x], Dist[Times[B, Power[b, -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, m], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[A, b], Times[-1, a, B]], Power[b, -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n]], x], x], Dist[Times[B, Power[b, -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, m], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[a, A, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x]], Dist[Times[1, Power[Times[d, n], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -2]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[a, Plus[Times[a, B, n], Times[-1, A, b, Plus[m, Times[-1, n], -1]]]], Times[Plus[Times[2, a, b, B, n], Times[A, Plus[Times[Power[b, 2], n], Times[Power[a, 2], Plus[1, n]]]]], Sec[Plus[e, Times[f, x]]]], Times[b, Plus[Times[b, B, n], Times[a, A, Plus[m, n]]], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Greater[m, 1], LessEqual[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[a, A, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x], Dist[Times[1, Power[Times[d, n], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -2]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[a, Plus[Times[a, B, n], Times[-1, A, b, Plus[m, Times[-1, n], -1]]]], Times[Plus[Times[2, a, b, B, n], Times[A, Plus[Times[Power[b, 2], n], Times[Power[a, 2], Plus[1, n]]]]], Csc[Plus[e, Times[f, x]]]], Times[b, Plus[Times[b, B, n], Times[a, A, Plus[m, n]]], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Greater[m, 1], LessEqual[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, B, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[m, n]], -1]], x], Dist[Times[1, Power[Plus[m, n], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -2]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[Power[a, 2], A, Plus[m, n]], Times[a, b, B, n], Times[Plus[Times[a, Plus[Times[2, A, b], Times[a, B]], Plus[m, n]], Times[Power[b, 2], B, Plus[m, n, -1]]], Sec[Plus[e, Times[f, x]]]], Times[b, Plus[Times[A, b, Plus[m, n]], Times[a, B, Plus[Times[2, m], n, -1]]], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, n], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Greater[m, 1], Not[And[IntegerQ[n], Greater[n, 1], Not[IntegerQ[m]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, B, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[m, n]], -1]], x]], Dist[Times[1, Power[Plus[m, n], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -2]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[Power[a, 2], A, Plus[m, n]], Times[a, b, B, n], Times[Plus[Times[a, Plus[Times[2, A, b], Times[a, B]], Plus[m, n]], Times[Power[b, 2], B, Plus[m, n, -1]]], Csc[Plus[e, Times[f, x]]]], Times[b, Plus[Times[A, b, Plus[m, n]], Times[a, B, Plus[Times[2, m], n, -1]]], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, n], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Greater[m, 1], Not[And[IntegerQ[n], Greater[n, 1], Not[IntegerQ[m]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[d, Plus[Times[A, b], Times[-1, a, B]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Dist[Times[1, Power[Times[Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Simp[Plus[Times[d, Plus[n, -1], Plus[Times[A, b], Times[-1, a, B]]], Times[d, Plus[Times[a, A], Times[-1, b, B]], Plus[m, 1], Sec[Plus[e, Times[f, x]]]], Times[-1, d, Plus[Times[A, b], Times[-1, a, B]], Plus[m, n, 1], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[m, -1], Less[0, n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[d, Plus[Times[A, b], Times[-1, a, B]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Dist[Times[1, Power[Times[Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Simp[Plus[Times[d, Plus[n, -1], Plus[Times[A, b], Times[-1, a, B]]], Times[d, Plus[Times[a, A], Times[-1, b, B]], Plus[m, 1], Csc[Plus[e, Times[f, x]]]], Times[-1, d, Plus[Times[A, b], Times[-1, a, B]], Plus[m, n, 1], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[m, -1], Less[0, n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[a, Power[d, 2], Plus[Times[A, b], Times[-1, a, B]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[b, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Times[-1, Dist[Times[d, Power[Times[b, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]], Simp[Plus[Times[a, d, Plus[Times[A, b], Times[-1, a, B]], Plus[n, -2]], Times[b, d, Plus[Times[A, b], Times[-1, a, B]], Plus[m, 1], Sec[Plus[e, Times[f, x]]]], Times[-1, Plus[Times[a, A, b, d, Plus[m, n]], Times[-1, d, B, Plus[Times[Power[a, 2], Plus[n, -1]], Times[Power[b, 2], Plus[m, 1]]]]], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[m, -1], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[a, Power[d, 2], Plus[Times[A, b], Times[-1, a, B]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[b, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Times[-1, Dist[Times[d, Power[Times[b, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]], Simp[Plus[Times[a, d, Plus[Times[A, b], Times[-1, a, B]], Plus[n, -2]], Times[b, d, Plus[Times[A, b], Times[-1, a, B]], Plus[m, 1], Csc[Plus[e, Times[f, x]]]], Times[-1, Plus[Times[a, A, b, d, Plus[m, n]], Times[-1, d, B, Plus[Times[Power[a, 2], Plus[n, -1]], Times[Power[b, 2], Plus[m, 1]]]]], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[m, -1], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, Plus[Times[A, b], Times[-1, a, B]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[a, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Dist[Times[1, Power[Times[a, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[A, Plus[Times[Power[a, 2], Plus[m, 1]], Times[-1, Power[b, 2], Plus[m, n, 1]]]], Times[a, b, B, n], Times[-1, a, Plus[Times[A, b], Times[-1, a, B]], Plus[m, 1], Sec[Plus[e, Times[f, x]]]], Times[b, Plus[Times[A, b], Times[-1, a, B]], Plus[m, n, 2], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, n], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1], Not[NegativeIntegerQ[Plus[m, Times[1, Power[2, -1]]], n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, Plus[Times[A, b], Times[-1, a, B]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[a, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Dist[Times[1, Power[Times[a, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[A, Plus[Times[Power[a, 2], Plus[m, 1]], Times[-1, Power[b, 2], Plus[m, n, 1]]]], Times[a, b, B, n], Times[-1, a, Plus[Times[A, b], Times[-1, a, B]], Plus[m, 1], Csc[Plus[e, Times[f, x]]]], Times[b, Plus[Times[A, b], Times[-1, a, B]], Plus[m, n, 2], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, n], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1], Not[NegativeIntegerQ[Plus[m, Times[1, Power[2, -1]]], n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[B, d, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, Plus[m, n]], -1]], x], Dist[Times[d, Power[Plus[m, n], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Simp[Plus[Times[a, B, Plus[n, -1]], Times[Plus[Times[b, B, Plus[m, n, -1]], Times[a, A, Plus[m, n]]], Sec[Plus[e, Times[f, x]]]], Times[Plus[Times[a, B, m], Times[A, b, Plus[m, n]]], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[0, m, 1], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[B, d, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[f, Plus[m, n]], -1]], x]], Dist[Times[d, Power[Plus[m, n], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Simp[Plus[Times[a, B, Plus[n, -1]], Times[Plus[Times[b, B, Plus[m, n, -1]], Times[a, A, Plus[m, n]]], Csc[Plus[e, Times[f, x]]]], Times[Plus[Times[a, B, m], Times[A, b, Plus[m, n]]], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[0, m, 1], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[A, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x]], Times[-1, Dist[Times[1, Power[Times[d, n], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[A, b, m], Times[-1, a, B, n], Times[-1, Plus[Times[b, B, n], Times[a, A, Plus[n, 1]]], Sec[Plus[e, Times[f, x]]]], Times[-1, A, b, Plus[m, n, 1], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[0, m, 1], LessEqual[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[A, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x], Times[-1, Dist[Times[1, Power[Times[d, n], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[A, b, m], Times[-1, a, B, n], Times[-1, Plus[Times[b, B, n], Times[a, A, Plus[n, 1]]], Csc[Plus[e, Times[f, x]]]], Times[-1, A, b, Plus[m, n, 1], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[0, m, 1], LessEqual[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[B, Power[d, 2], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[b, f, Plus[m, n]], -1]], x], Dist[Times[Power[d, 2], Power[Times[b, Plus[m, n]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]], Simp[Plus[Times[a, B, Plus[n, -2]], Times[B, b, Plus[m, n, -1], Sec[Plus[e, Times[f, x]]]], Times[Plus[Times[A, b, Plus[m, n]], Times[-1, a, B, Plus[n, -1]]], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, m], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 1], NonzeroQ[Plus[m, n]], Not[And[IntegerQ[m], Greater[m, 1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[B, Power[d, 2], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[b, f, Plus[m, n]], -1]], x]], Dist[Times[Power[d, 2], Power[Times[b, Plus[m, n]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]], Simp[Plus[Times[a, B, Plus[n, -2]], Times[B, b, Plus[m, n, -1], Csc[Plus[e, Times[f, x]]]], Times[Plus[Times[A, b, Plus[m, n]], Times[-1, a, B, Plus[n, -1]]], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, m], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 1], NonzeroQ[Plus[m, n]], Not[And[IntegerQ[m], Greater[m, 1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[A, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[a, f, n], -1]], x]], Dist[Times[1, Power[Times[a, d, n], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[a, B, n], Times[-1, A, b, Plus[m, n, 1]], Times[A, a, Plus[n, 1], Sec[Plus[e, Times[f, x]]]], Times[A, b, Plus[m, n, 2], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, m], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], LessEqual[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[A, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[a, f, n], -1]], x], Dist[Times[1, Power[Times[a, d, n], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[a, B, n], Times[-1, A, b, Plus[m, n, 1]], Times[A, a, Plus[n, 1], Csc[Plus[e, Times[f, x]]]], Times[A, b, Plus[m, n, 2], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, m], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], LessEqual[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[A, Power[a, -1]], Int[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]], -1]], x], x], Times[-1, Dist[Times[Plus[Times[A, b], Times[-1, a, B]], Power[Times[a, d], -1]], Int[Times[Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[A, Power[a, -1]], Int[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]], -1]], x], x], Times[-1, Dist[Times[Plus[Times[A, b], Times[-1, a, B]], Power[Times[a, d], -1]], Int[Times[Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[A, Int[Times[Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x], Dist[Times[B, Power[d, -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[A, Int[Times[Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x], Dist[Times[B, Power[d, -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[1, 2]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[B, Power[d, -1]], Int[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]]], x], x], Dist[A, Int[Times[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], Power[Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[1, 2]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[B, Power[d, -1]], Int[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]]], x], x], Dist[A, Int[Times[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], Power[Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[A, Power[a, -1]], Int[Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], x], x], Times[-1, Dist[Times[Plus[Times[A, b], Times[-1, a, B]], Power[Times[a, d], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B, n], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[A, Power[a, -1]], Int[Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], x], x], Times[-1, Dist[Times[Plus[Times[A, b], Times[-1, a, B]], Power[Times[a, d], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B, n], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Plus[A, Times[B, Sec[Plus[e, Times[f, x]]]]]], x], And[FreeQ[List[a, b, d, e, f, A, B, m, n], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Plus[A, Times[B, Csc[Plus[e, Times[f, x]]]]]], x], And[FreeQ[List[a, b, d, e, f, A, B, m, n], x], NonzeroQ[Plus[Times[A, b], Times[-1, a, B]]], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Times[-1, a, c], m], Int[Times[Power[Sin[Plus[e, Times[f, x]]], Times[2, m]], Power[Plus[d, Times[c, Cos[Plus[e, Times[f, x]]]]], Plus[n, Times[-1, m]]], Power[Plus[B, Times[A, Cos[Plus[e, Times[f, x]]]]], p], Power[Power[Cos[Plus[e, Times[f, x]]], Plus[m, n, p]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, A, B, n, p], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegersQ[m, n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[c, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Times[-1, a, c], m], Int[Times[Power[Cos[Plus[e, Times[f, x]]], Times[2, m]], Power[Plus[d, Times[c, Sin[Plus[e, Times[f, x]]]]], Plus[n, Times[-1, m]]], Power[Plus[B, Times[A, Sin[Plus[e, Times[f, x]]]]], p], Power[Power[Sin[Plus[e, Times[f, x]]], Plus[m, n, p]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, A, B, n, p], x], ZeroQ[Plus[Times[b, c], Times[a, d]]], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegersQ[m, n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[b, 2], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[b, B], Times[-1, a, C], Times[b, C, Sec[Plus[e, Times[f, x]]]]], x]], x], x], And[FreeQ[List[a, b, e, f, A, B, C, m], x], ZeroQ[Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[Power[a, 2], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[b, 2], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[b, B], Times[-1, a, C], Times[b, C, Csc[Plus[e, Times[f, x]]]]], x]], x], x], And[FreeQ[List[a, b, e, f, A, B, C, m], x], ZeroQ[Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[Power[a, 2], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[C, Power[Power[b, 2], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[-1, a], Times[b, Sec[Plus[e, Times[f, x]]]]], x]], x], x], And[FreeQ[List[a, b, e, f, A, C, m], x], ZeroQ[Plus[Times[A, Power[b, 2]], Times[Power[a, 2], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[C, Power[Power[b, 2], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[-1, a], Times[b, Csc[Plus[e, Times[f, x]]]]], x]], x], x], And[FreeQ[List[a, b, e, f, A, C, m], x], ZeroQ[Plus[Times[A, Power[b, 2]], Times[Power[a, 2], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[A, Tan[Plus[e, Times[f, x]]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], m], Power[Times[f, m], -1]], x]], And[FreeQ[List[b, e, f, A, C, m], x], ZeroQ[Plus[Times[C, m], Times[A, Plus[m, 1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[A, Cot[Plus[e, Times[f, x]]], Power[Times[b, Csc[Plus[e, Times[f, x]]]], m], Power[Times[f, m], -1]], x], And[FreeQ[List[b, e, f, A, C, m], x], ZeroQ[Plus[Times[C, m], Times[A, Plus[m, 1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[A, Tan[Plus[e, Times[f, x]]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], m], Power[Times[f, m], -1]], x]], Dist[Times[Plus[Times[C, m], Times[A, Plus[m, 1]]], Power[Times[Power[b, 2], m], -1]], Int[Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[m, 2]], x], x]], And[FreeQ[List[b, e, f, A, C], x], NonzeroQ[Plus[Times[C, m], Times[A, Plus[m, 1]]]], RationalQ[m], LessEqual[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[A, Cot[Plus[e, Times[f, x]]], Power[Times[b, Csc[Plus[e, Times[f, x]]]], m], Power[Times[f, m], -1]], x], Dist[Times[Plus[Times[C, m], Times[A, Plus[m, 1]]], Power[Times[Power[b, 2], m], -1]], Int[Power[Times[b, Csc[Plus[e, Times[f, x]]]], Plus[m, 2]], x], x]], And[FreeQ[List[b, e, f, A, C], x], NonzeroQ[Plus[Times[C, m], Times[A, Plus[m, 1]]]], RationalQ[m], LessEqual[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[C, Tan[Plus[e, Times[f, x]]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], m], Power[Times[f, Plus[m, 1]], -1]], x], Dist[Times[Plus[Times[C, m], Times[A, Plus[m, 1]]], Power[Plus[m, 1], -1]], Int[Power[Times[b, Sec[Plus[e, Times[f, x]]]], m], x], x]], And[FreeQ[List[b, e, f, A, C, m], x], NonzeroQ[Plus[Times[C, m], Times[A, Plus[m, 1]]]], Not[And[RationalQ[m], LessEqual[m, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[C, Cot[Plus[e, Times[f, x]]], Power[Times[b, Csc[Plus[e, Times[f, x]]]], m], Power[Times[f, Plus[m, 1]], -1]], x]], Dist[Times[Plus[Times[C, m], Times[A, Plus[m, 1]]], Power[Plus[m, 1], -1]], Int[Power[Times[b, Csc[Plus[e, Times[f, x]]]], m], x], x]], And[FreeQ[List[b, e, f, A, C, m], x], NonzeroQ[Plus[Times[C, m], Times[A, Plus[m, 1]]]], Not[And[RationalQ[m], LessEqual[m, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[m, Blank[]]]], Plus[Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[B, Power[b, -1]], Int[Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[m, 1]], x], x], Dist[Times[C, Power[Power[b, 2], -1]], Int[Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[m, 2]], x], x]], FreeQ[List[b, e, f, B, C, m], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[B, Power[b, -1]], Int[Power[Times[b, Csc[Plus[e, Times[f, x]]]], Plus[m, 1]], x], x], Dist[Times[C, Power[Power[b, 2], -1]], Int[Power[Times[b, Csc[Plus[e, Times[f, x]]]], Plus[m, 2]], x], x]], FreeQ[List[b, e, f, B, C, m], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[B, Power[b, -1]], Int[Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[m, 1]], x], x], Int[Times[Power[Times[b, Sec[Plus[e, Times[f, x]]]], m], Plus[A, Times[C, Power[Sec[Plus[e, Times[f, x]]], 2]]]], x]], FreeQ[List[b, e, f, A, B, C, m], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[B, Power[b, -1]], Int[Power[Times[b, Csc[Plus[e, Times[f, x]]]], Plus[m, 1]], x], x], Int[Times[Power[Times[b, Csc[Plus[e, Times[f, x]]]], m], Plus[A, Times[C, Power[Csc[Plus[e, Times[f, x]]], 2]]]], x]], FreeQ[List[b, e, f, A, B, C, m], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, C, Sec[Plus[e, Times[f, x]]], Tan[Plus[e, Times[f, x]]], Power[Times[2, f], -1]], x], Dist[Times[1, Power[2, -1]], Int[Simp[Plus[Times[2, A, a], Times[Plus[Times[2, B, a], Times[b, Plus[Times[2, A], C]]], Sec[Plus[e, Times[f, x]]]], Times[2, Plus[Times[a, C], Times[B, b]], Power[Sec[Plus[e, Times[f, x]]], 2]]], x], x], x]], FreeQ[List[a, b, e, f, A, B, C], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, C, Csc[Plus[e, Times[f, x]]], Cot[Plus[e, Times[f, x]]], Power[Times[2, f], -1]], x]], Dist[Times[1, Power[2, -1]], Int[Simp[Plus[Times[2, A, a], Times[Plus[Times[2, B, a], Times[b, Plus[Times[2, A], C]]], Csc[Plus[e, Times[f, x]]]], Times[2, Plus[Times[a, C], Times[B, b]], Power[Csc[Plus[e, Times[f, x]]], 2]]], x], x], x]], FreeQ[List[a, b, e, f, A, B, C], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, C, Sec[Plus[e, Times[f, x]]], Tan[Plus[e, Times[f, x]]], Power[Times[2, f], -1]], x], Dist[Times[1, Power[2, -1]], Int[Simp[Plus[Times[2, A, a], Times[b, Plus[Times[2, A], C], Sec[Plus[e, Times[f, x]]]], Times[2, a, C, Power[Sec[Plus[e, Times[f, x]]], 2]]], x], x], x]], FreeQ[List[a, b, e, f, A, C], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, C, Csc[Plus[e, Times[f, x]]], Cot[Plus[e, Times[f, x]]], Power[Times[2, f], -1]], x]], Dist[Times[1, Power[2, -1]], Int[Simp[Plus[Times[2, A, a], Times[b, Plus[Times[2, A], C], Csc[Plus[e, Times[f, x]]]], Times[2, a, C, Power[Csc[Plus[e, Times[f, x]]], 2]]], x], x], x]], FreeQ[List[a, b, e, f, A, C], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[C, Power[b, -1]], Int[Sec[Plus[e, Times[f, x]]], x], x], Dist[Times[1, Power[b, -1]], Int[Times[Plus[Times[A, b], Times[Plus[Times[b, B], Times[-1, a, C]], Sec[Plus[e, Times[f, x]]]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], -1]], x], x]], FreeQ[List[a, b, e, f, A, B, C], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[C, Power[b, -1]], Int[Csc[Plus[e, Times[f, x]]], x], x], Dist[Times[1, Power[b, -1]], Int[Times[Plus[Times[A, b], Times[Plus[Times[b, B], Times[-1, a, C]], Csc[Plus[e, Times[f, x]]]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], -1]], x], x]], FreeQ[List[a, b, e, f, A, B, C], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[C, Power[b, -1]], Int[Sec[Plus[e, Times[f, x]]], x], x], Dist[Times[1, Power[b, -1]], Int[Times[Plus[Times[A, b], Times[-1, a, C, Sec[Plus[e, Times[f, x]]]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], -1]], x], x]], FreeQ[List[a, b, e, f, A, C], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[C, Power[b, -1]], Int[Csc[Plus[e, Times[f, x]]], x], x], Dist[Times[1, Power[b, -1]], Int[Times[Plus[Times[A, b], Times[-1, a, C, Csc[Plus[e, Times[f, x]]]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], -1]], x], x]], FreeQ[List[a, b, e, f, A, C], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[a, A], Times[-1, b, B], Times[a, C]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x], Dist[Times[1, Power[Times[a, b, Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[A, b, Plus[Times[2, m], 1]], Times[Plus[Times[b, B, Plus[m, 1]], Times[-1, a, Plus[Times[A, Plus[m, 1]], Times[-1, C, m]]]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, B, C], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[a, A], Times[-1, b, B], Times[a, C]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x]], Dist[Times[1, Power[Times[a, b, Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[A, b, Plus[Times[2, m], 1]], Times[Plus[Times[b, B, Plus[m, 1]], Times[-1, a, Plus[Times[A, Plus[m, 1]], Times[-1, C, m]]]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, B, C], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[a, Plus[A, C], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x], Dist[Times[1, Power[Times[a, b, Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[A, b, Plus[Times[2, m], 1]], Times[-1, a, Plus[Times[A, Plus[m, 1]], Times[-1, C, m]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, C], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[a, Plus[A, C], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x]], Dist[Times[1, Power[Times[a, b, Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[A, b, Plus[Times[2, m], 1]], Times[-1, a, Plus[Times[A, Plus[m, 1]], Times[-1, C, m]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, C], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[C, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[f, Plus[m, 1]], -1]], x], Dist[Times[1, Power[Times[b, Plus[m, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Simp[Plus[Times[A, b, Plus[m, 1]], Times[Plus[Times[a, C, m], Times[b, B, Plus[m, 1]]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, B, C, m], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[C, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[f, Plus[m, 1]], -1]], x]], Dist[Times[1, Power[Times[b, Plus[m, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Simp[Plus[Times[A, b, Plus[m, 1]], Times[Plus[Times[a, C, m], Times[b, B, Plus[m, 1]]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, B, C, m], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[C, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[f, Plus[m, 1]], -1]], x], Dist[Times[1, Power[Times[b, Plus[m, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Simp[Plus[Times[A, b, Plus[m, 1]], Times[a, C, m, Sec[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, C, m], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[C, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[f, Plus[m, 1]], -1]], x]], Dist[Times[1, Power[Times[b, Plus[m, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Simp[Plus[Times[A, b, Plus[m, 1]], Times[a, C, m, Csc[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, C, m], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[C, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[f, Plus[m, 1]], -1]], x], Dist[Times[1, Power[Plus[m, 1], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Simp[Plus[Times[a, A, Plus[m, 1]], Times[Plus[Times[Plus[Times[A, b], Times[a, B]], Plus[m, 1]], Times[b, C, m]], Sec[Plus[e, Times[f, x]]]], Times[Plus[Times[b, B, Plus[m, 1]], Times[a, C, m]], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, B, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[C, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[f, Plus[m, 1]], -1]], x]], Dist[Times[1, Power[Plus[m, 1], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Simp[Plus[Times[a, A, Plus[m, 1]], Times[Plus[Times[Plus[Times[A, b], Times[a, B]], Plus[m, 1]], Times[b, C, m]], Csc[Plus[e, Times[f, x]]]], Times[Plus[Times[b, B, Plus[m, 1]], Times[a, C, m]], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, B, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[C, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[f, Plus[m, 1]], -1]], x], Dist[Times[1, Power[Plus[m, 1], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Simp[Plus[Times[a, A, Plus[m, 1]], Times[Plus[Times[A, b, Plus[m, 1]], Times[b, C, m]], Sec[Plus[e, Times[f, x]]]], Times[a, C, m, Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[C, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[f, Plus[m, 1]], -1]], x]], Dist[Times[1, Power[Plus[m, 1], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Simp[Plus[Times[a, A, Plus[m, 1]], Times[Plus[Times[A, b, Plus[m, 1]], Times[b, C, m]], Csc[Plus[e, Times[f, x]]]], Times[a, C, m, Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], PositiveIntegerQ[Times[2, m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Int[Times[Plus[A, Times[Plus[B, Times[-1, C]], Sec[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], Dist[C, Int[Times[Sec[Plus[e, Times[f, x]]], Plus[1, Sec[Plus[e, Times[f, x]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, e, f, A, B, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Int[Times[Plus[A, Times[Plus[B, Times[-1, C]], Csc[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], Dist[C, Int[Times[Csc[Plus[e, Times[f, x]]], Plus[1, Csc[Plus[e, Times[f, x]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, e, f, A, B, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Int[Times[Plus[A, Times[-1, C, Sec[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], Dist[C, Int[Times[Sec[Plus[e, Times[f, x]]], Plus[1, Sec[Plus[e, Times[f, x]]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, e, f, A, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Int[Times[Plus[A, Times[-1, C, Csc[Plus[e, Times[f, x]]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], Dist[C, Int[Times[Csc[Plus[e, Times[f, x]]], Plus[1, Csc[Plus[e, Times[f, x]]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x]], And[FreeQ[List[a, b, e, f, A, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[Power[a, 2], C]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[a, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Dist[Times[1, Power[Times[a, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[A, Plus[Power[a, 2], Times[-1, Power[b, 2]]], Plus[m, 1]], Times[-1, a, Plus[Times[A, b], Times[-1, a, B], Times[b, C]], Plus[m, 1], Sec[Plus[e, Times[f, x]]]], Times[Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[Power[a, 2], C]], Plus[m, 2], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, B, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[Times[2, m]], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[Power[a, 2], C]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[a, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Dist[Times[1, Power[Times[a, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[A, Plus[Power[a, 2], Times[-1, Power[b, 2]]], Plus[m, 1]], Times[-1, a, Plus[Times[A, b], Times[-1, a, B], Times[b, C]], Plus[m, 1], Csc[Plus[e, Times[f, x]]]], Times[Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[Power[a, 2], C]], Plus[m, 2], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, B, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[A, Power[b, 2]], Times[Power[a, 2], C]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[a, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Dist[Times[1, Power[Times[a, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[A, Plus[Power[a, 2], Times[-1, Power[b, 2]]], Plus[m, 1]], Times[-1, a, b, Plus[A, C], Plus[m, 1], Sec[Plus[e, Times[f, x]]]], Times[Plus[Times[A, Power[b, 2]], Times[Power[a, 2], C]], Plus[m, 2], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[Times[2, m]], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[A, Power[b, 2]], Times[Power[a, 2], C]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[a, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Dist[Times[1, Power[Times[a, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[A, Plus[Power[a, 2], Times[-1, Power[b, 2]]], Plus[m, 1]], Times[-1, a, b, Plus[A, C], Plus[m, 1], Csc[Plus[e, Times[f, x]]]], Times[Plus[Times[A, Power[b, 2]], Times[Power[a, 2], C]], Plus[m, 2], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], IntegerQ[Times[2, m]], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[b, -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Plus[Times[A, b], Times[Plus[Times[b, B], Times[-1, a, C]], Sec[Plus[e, Times[f, x]]]]]], x], x], Dist[Times[C, Power[b, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]]], x], x]], And[FreeQ[List[a, b, e, f, A, B, C, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[Times[2, m]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[b, -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Plus[Times[A, b], Times[Plus[Times[b, B], Times[-1, a, C]], Csc[Plus[e, Times[f, x]]]]]], x], x], Dist[Times[C, Power[b, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]]], x], x]], And[FreeQ[List[a, b, e, f, A, B, C, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[Times[2, m]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[b, -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Plus[Times[A, b], Times[-1, a, C, Sec[Plus[e, Times[f, x]]]]]], x], x], Dist[Times[C, Power[b, -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]]], x], x]], And[FreeQ[List[a, b, e, f, A, C, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[Times[2, m]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[b, -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Plus[Times[A, b], Times[-1, a, C, Csc[Plus[e, Times[f, x]]]]]], x], x], Dist[Times[C, Power[b, -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]]], x], x]], And[FreeQ[List[a, b, e, f, A, C, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[IntegerQ[Times[2, m]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], -1]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[b, 2], Int[Times[Power[Times[b, Cos[Plus[e, Times[f, x]]]], Plus[m, -2]], Plus[C, Times[B, Cos[Plus[e, Times[f, x]]]], Times[A, Power[Cos[Plus[e, Times[f, x]]], 2]]]], x], x], And[FreeQ[List[b, e, f, A, B, C, m], x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], -1], Optional[Pattern[b, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[b, 2], Int[Times[Power[Times[b, Sin[Plus[e, Times[f, x]]]], Plus[m, -2]], Plus[C, Times[B, Sin[Plus[e, Times[f, x]]]], Times[A, Power[Sin[Plus[e, Times[f, x]]], 2]]]], x], x], And[FreeQ[List[b, e, f, A, B, C, m], x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], -1]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[b, 2], Int[Times[Power[Times[b, Cos[Plus[e, Times[f, x]]]], Plus[m, -2]], Plus[C, Times[A, Power[Cos[Plus[e, Times[f, x]]], 2]]]], x], x], And[FreeQ[List[b, e, f, A, C, m], x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], -1], Optional[Pattern[b, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[b, 2], Int[Times[Power[Times[b, Sin[Plus[e, Times[f, x]]]], Plus[m, -2]], Plus[C, Times[A, Power[Sin[Plus[e, Times[f, x]]], 2]]]], x], x], And[FreeQ[List[b, e, f, A, C, m], x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[a, Blank[]]], Power[Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, IntPart[m]], Power[Times[a, Power[Times[b, Sec[Plus[e, Times[f, x]]]], p]], FracPart[m]], Power[Power[Times[b, Sec[Plus[e, Times[f, x]]]], Times[p, FracPart[m]]], -1]], Int[Times[Power[Times[b, Sec[Plus[e, Times[f, x]]]], Times[m, p]], Plus[A, Times[B, Sec[Plus[e, Times[f, x]]]], Times[C, Power[Sec[Plus[e, Times[f, x]]], 2]]]], x], x], And[FreeQ[List[a, b, e, f, A, B, C, m, p], x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[a, Blank[]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[p, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, IntPart[m]], Power[Times[a, Power[Times[b, Csc[Plus[e, Times[f, x]]]], p]], FracPart[m]], Power[Power[Times[b, Csc[Plus[e, Times[f, x]]]], Times[p, FracPart[m]]], -1]], Int[Times[Power[Times[b, Csc[Plus[e, Times[f, x]]]], Times[m, p]], Plus[A, Times[B, Csc[Plus[e, Times[f, x]]]], Times[C, Power[Csc[Plus[e, Times[f, x]]], 2]]]], x], x], And[FreeQ[List[a, b, e, f, A, B, C, m, p], x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[a, Blank[]]], Power[Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, IntPart[m]], Power[Times[a, Power[Times[b, Sec[Plus[e, Times[f, x]]]], p]], FracPart[m]], Power[Power[Times[b, Sec[Plus[e, Times[f, x]]]], Times[p, FracPart[m]]], -1]], Int[Times[Power[Times[b, Sec[Plus[e, Times[f, x]]]], Times[m, p]], Plus[A, Times[C, Power[Sec[Plus[e, Times[f, x]]], 2]]]], x], x], And[FreeQ[List[a, b, e, f, A, C, m, p], x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[a, Blank[]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[p, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, IntPart[m]], Power[Times[a, Power[Times[b, Csc[Plus[e, Times[f, x]]]], p]], FracPart[m]], Power[Power[Times[b, Csc[Plus[e, Times[f, x]]]], Times[p, FracPart[m]]], -1]], Int[Times[Power[Times[b, Csc[Plus[e, Times[f, x]]]], Times[m, p]], Plus[A, Times[C, Power[Csc[Plus[e, Times[f, x]]], 2]]]], x], x], And[FreeQ[List[a, b, e, f, A, C, m, p], x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[A, a, Tan[Plus[e, Times[f, x]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x]], Dist[Times[1, Power[Times[d, n], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[n, Plus[Times[B, a], Times[A, b]]], Times[Plus[Times[n, Plus[Times[a, C], Times[B, b]]], Times[A, a, Plus[n, 1]]], Sec[Plus[e, Times[f, x]]]], Times[b, C, n, Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, C], x], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[A, a, Cot[Plus[e, Times[f, x]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x], Dist[Times[1, Power[Times[d, n], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[n, Plus[Times[B, a], Times[A, b]]], Times[Plus[Times[n, Plus[Times[a, C], Times[B, b]]], Times[A, a, Plus[n, 1]]], Csc[Plus[e, Times[f, x]]]], Times[b, C, n, Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, C], x], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[A, a, Tan[Plus[e, Times[f, x]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x]], Dist[Times[1, Power[Times[d, n], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[A, b, n], Times[a, Plus[Times[C, n], Times[A, Plus[n, 1]]], Sec[Plus[e, Times[f, x]]]], Times[b, C, n, Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, C], x], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[A, a, Cot[Plus[e, Times[f, x]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x], Dist[Times[1, Power[Times[d, n], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[A, b, n], Times[a, Plus[Times[C, n], Times[A, Plus[n, 1]]], Csc[Plus[e, Times[f, x]]]], Times[b, C, n, Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, C], x], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, C, Sec[Plus[e, Times[f, x]]], Tan[Plus[e, Times[f, x]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[n, 2]], -1]], x], Dist[Times[1, Power[Plus[n, 2], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[A, a, Plus[n, 2]], Times[Plus[Times[B, a, Plus[n, 2]], Times[b, Plus[Times[C, Plus[n, 1]], Times[A, Plus[n, 2]]]]], Sec[Plus[e, Times[f, x]]]], Times[Plus[Times[a, C], Times[B, b]], Plus[n, 2], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, C, n], x], Not[And[RationalQ[n], Less[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Optional[Pattern[n, Blank[]]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, C, Csc[Plus[e, Times[f, x]]], Cot[Plus[e, Times[f, x]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[n, 2]], -1]], x]], Dist[Times[1, Power[Plus[n, 2], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[A, a, Plus[n, 2]], Times[Plus[Times[B, a, Plus[n, 2]], Times[b, Plus[Times[C, Plus[n, 1]], Times[A, Plus[n, 2]]]]], Csc[Plus[e, Times[f, x]]]], Times[Plus[Times[a, C], Times[B, b]], Plus[n, 2], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, C, n], x], Not[And[RationalQ[n], Less[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, C, Sec[Plus[e, Times[f, x]]], Tan[Plus[e, Times[f, x]]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[n, 2]], -1]], x], Dist[Times[1, Power[Plus[n, 2], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[A, a, Plus[n, 2]], Times[b, Plus[Times[C, Plus[n, 1]], Times[A, Plus[n, 2]]], Sec[Plus[e, Times[f, x]]]], Times[a, C, Plus[n, 2], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, C, n], x], Not[And[RationalQ[n], Less[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Optional[Pattern[n, Blank[]]]], Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, C, Csc[Plus[e, Times[f, x]]], Cot[Plus[e, Times[f, x]]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[n, 2]], -1]], x]], Dist[Times[1, Power[Plus[n, 2], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[A, a, Plus[n, 2]], Times[b, Plus[Times[C, Plus[n, 1]], Times[A, Plus[n, 2]]], Csc[Plus[e, Times[f, x]]]], Times[a, C, Plus[n, 2], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, C, n], x], Not[And[RationalQ[n], Less[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[a, A], Times[-1, b, B], Times[a, C]], Tan[Plus[e, Times[f, x]]], Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[a, b, Plus[Times[2, m], 1]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[a, B], Times[-1, b, C], Times[-1, 2, A, b, Plus[m, 1]], Times[-1, Plus[Times[b, B, Plus[m, 2]], Times[-1, a, Plus[Times[A, Plus[m, 2]], Times[-1, C, Plus[m, -1]]]]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]]], And[FreeQ[List[a, b, e, f, A, B, C], x], RationalQ[m], Less[m, -1], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[a, A], Times[-1, b, B], Times[a, C]], Cot[Plus[e, Times[f, x]]], Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[a, b, Plus[Times[2, m], 1]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[a, B], Times[-1, b, C], Times[-1, 2, A, b, Plus[m, 1]], Times[-1, Plus[Times[b, B, Plus[m, 2]], Times[-1, a, Plus[Times[A, Plus[m, 2]], Times[-1, C, Plus[m, -1]]]]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]]], And[FreeQ[List[a, b, e, f, A, B, C], x], RationalQ[m], Less[m, -1], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[A, C], Tan[Plus[e, Times[f, x]]], Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[f, Plus[Times[2, m], 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[a, b, Plus[Times[2, m], 1]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[-1, b, C], Times[-1, 2, A, b, Plus[m, 1]], Times[a, Plus[Times[A, Plus[m, 2]], Times[-1, C, Plus[m, -1]]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]]], And[FreeQ[List[a, b, e, f, A, C], x], RationalQ[m], Less[m, -1], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[A, C], Cot[Plus[e, Times[f, x]]], Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[f, Plus[Times[2, m], 1]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[a, b, Plus[Times[2, m], 1]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[-1, b, C], Times[-1, 2, A, b, Plus[m, 1]], Times[a, Plus[Times[A, Plus[m, 2]], Times[-1, C, Plus[m, -1]]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]]], And[FreeQ[List[a, b, e, f, A, C], x], RationalQ[m], Less[m, -1], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[Power[a, 2], C]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[b, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Dist[Times[1, Power[Times[b, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[b, Plus[Times[a, A], Times[-1, b, B], Times[a, C]], Plus[m, 1]], Times[-1, Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[Power[a, 2], C], Times[b, Plus[Times[A, b], Times[-1, a, B], Times[b, C]], Plus[m, 1]]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, B, C], x], RationalQ[m], Less[m, -1], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[Power[a, 2], C]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[b, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Dist[Times[1, Power[Times[b, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[b, Plus[Times[a, A], Times[-1, b, B], Times[a, C]], Plus[m, 1]], Times[-1, Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[Power[a, 2], C], Times[b, Plus[Times[A, b], Times[-1, a, B], Times[b, C]], Plus[m, 1]]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, B, C], x], RationalQ[m], Less[m, -1], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[A, Power[b, 2]], Times[Power[a, 2], C]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[b, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Dist[Times[1, Power[Times[b, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[a, b, Plus[A, C], Plus[m, 1]], Times[-1, Plus[Times[A, Power[b, 2]], Times[Power[a, 2], C], Times[b, Plus[Times[A, b], Times[b, C]], Plus[m, 1]]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, C], x], RationalQ[m], Less[m, -1], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[A, Power[b, 2]], Times[Power[a, 2], C]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[b, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Dist[Times[1, Power[Times[b, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[a, b, Plus[A, C], Plus[m, 1]], Times[-1, Plus[Times[A, Power[b, 2]], Times[Power[a, 2], C], Times[b, Plus[Times[A, b], Times[b, C]], Plus[m, 1]]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, C], x], RationalQ[m], Less[m, -1], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[C, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[b, f, Plus[m, 2]], -1]], x], Dist[Times[1, Power[Times[b, Plus[m, 2]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Simp[Plus[Times[b, A, Plus[m, 2]], Times[b, C, Plus[m, 1]], Times[Plus[Times[b, B, Plus[m, 2]], Times[-1, a, C]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, B, C, m], x], Not[And[RationalQ[m], Less[m, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[C, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[b, f, Plus[m, 2]], -1]], x]], Dist[Times[1, Power[Times[b, Plus[m, 2]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Simp[Plus[Times[b, A, Plus[m, 2]], Times[b, C, Plus[m, 1]], Times[Plus[Times[b, B, Plus[m, 2]], Times[-1, a, C]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, B, C, m], x], Not[And[RationalQ[m], Less[m, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[C, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[b, f, Plus[m, 2]], -1]], x], Dist[Times[1, Power[Times[b, Plus[m, 2]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Simp[Plus[Times[b, A, Plus[m, 2]], Times[b, C, Plus[m, 1]], Times[-1, a, C, Sec[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, C, m], x], Not[And[RationalQ[m], Less[m, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[C, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[b, f, Plus[m, 2]], -1]], x]], Dist[Times[1, Power[Times[b, Plus[m, 2]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Simp[Plus[Times[b, A, Plus[m, 2]], Times[b, C, Plus[m, 1]], Times[-1, a, C, Csc[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, C, m], x], Not[And[RationalQ[m], Less[m, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[a, A], Times[-1, b, B], Times[a, C]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[a, b, Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[a, B, n], Times[-1, b, C, n], Times[-1, A, b, Plus[Times[2, m], n, 1]], Times[-1, Plus[Times[b, B, Plus[m, n, 1]], Times[-1, a, Plus[Times[A, Plus[m, n, 1]], Times[-1, C, Plus[m, Times[-1, n]]]]]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B, C, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[a, A], Times[-1, b, B], Times[a, C]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[a, b, Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[a, B, n], Times[-1, b, C, n], Times[-1, A, b, Plus[Times[2, m], n, 1]], Times[-1, Plus[Times[b, B, Plus[m, n, 1]], Times[-1, a, Plus[Times[A, Plus[m, n, 1]], Times[-1, C, Plus[m, Times[-1, n]]]]]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B, C, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[a, Plus[A, C], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x], Dist[Times[1, Power[Times[a, b, Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[b, C, n], Times[A, b, Plus[Times[2, m], n, 1]], Times[-1, Times[a, Plus[Times[A, Plus[m, n, 1]], Times[-1, C, Plus[m, Times[-1, n]]]]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, C, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[a, Plus[A, C], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[a, f, Plus[Times[2, m], 1]], -1]], x]], Dist[Times[1, Power[Times[a, b, Plus[Times[2, m], 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[b, C, n], Times[A, b, Plus[Times[2, m], n, 1]], Times[-1, Times[a, Plus[Times[A, Plus[m, n, 1]], Times[-1, C, Plus[m, Times[-1, n]]]]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, C, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[A, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x]], Times[-1, Dist[Times[1, Power[Times[b, d, n], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[a, A, m], Times[-1, b, B, n], Times[-1, b, Plus[Times[A, Plus[m, n, 1]], Times[C, n]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B, C, m], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]], Or[And[RationalQ[n], Less[n, Times[-1, Power[2, -1]]]], ZeroQ[Plus[m, n, 1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[A, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x], Times[-1, Dist[Times[1, Power[Times[b, d, n], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[a, A, m], Times[-1, b, B, n], Times[-1, b, Plus[Times[A, Plus[m, n, 1]], Times[C, n]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B, C, m], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]], Or[And[RationalQ[n], Less[n, Times[-1, Power[2, -1]]]], ZeroQ[Plus[m, n, 1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[A, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x]], Times[-1, Dist[Times[1, Power[Times[b, d, n], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[a, A, m], Times[-1, b, Plus[Times[A, Plus[m, n, 1]], Times[C, n]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, C, m], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]], Or[And[RationalQ[n], Less[n, Times[-1, Power[2, -1]]]], ZeroQ[Plus[m, n, 1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[A, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x], Times[-1, Dist[Times[1, Power[Times[b, d, n], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[a, A, m], Times[-1, b, Plus[Times[A, Plus[m, n, 1]], Times[C, n]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, C, m], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]], Or[And[RationalQ[n], Less[n, Times[-1, Power[2, -1]]]], ZeroQ[Plus[m, n, 1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[C, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[m, n, 1]], -1]], x], Dist[Times[1, Power[Times[b, Plus[m, n, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[A, b, Plus[m, n, 1]], Times[b, C, n], Times[Plus[Times[a, C, m], Times[b, B, Plus[m, n, 1]]], Sec[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, C, m, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]], Not[And[RationalQ[n], Less[n, Times[-1, Power[2, -1]]]]], NonzeroQ[Plus[m, n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[C, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[m, n, 1]], -1]], x]], Dist[Times[1, Power[Times[b, Plus[m, n, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[A, b, Plus[m, n, 1]], Times[b, C, n], Times[Plus[Times[a, C, m], Times[b, B, Plus[m, n, 1]]], Csc[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, C, m, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]], Not[And[RationalQ[n], Less[n, Times[-1, Power[2, -1]]]]], NonzeroQ[Plus[m, n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[C, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[m, n, 1]], -1]], x], Dist[Times[1, Power[Times[b, Plus[m, n, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[A, b, Plus[m, n, 1]], Times[b, C, n], Times[a, C, m, Sec[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, C, m, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]], Not[And[RationalQ[n], Less[n, Times[-1, Power[2, -1]]]]], NonzeroQ[Plus[m, n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[C, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[m, n, 1]], -1]], x]], Dist[Times[1, Power[Times[b, Plus[m, n, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[A, b, Plus[m, n, 1]], Times[b, C, n], Times[a, C, m, Csc[Plus[e, Times[f, x]]]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, C, m, n], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[m], Less[m, Times[-1, Power[2, -1]]]]], Not[And[RationalQ[n], Less[n, Times[-1, Power[2, -1]]]]], NonzeroQ[Plus[m, n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[a, Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[Power[a, 2], C]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[Power[b, 2], f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[Power[b, 2], Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[b, Plus[m, 1], Plus[Times[-1, a, Plus[Times[b, B], Times[-1, a, C]]], Times[A, Power[b, 2]]]], Times[Plus[Times[b, B, Plus[Power[a, 2], Times[Power[b, 2], Plus[m, 1]]]], Times[-1, a, Plus[Times[A, Power[b, 2], Plus[m, 2]], Times[C, Plus[Power[a, 2], Times[Power[b, 2], Plus[m, 1]]]]]]], Sec[Plus[e, Times[f, x]]]], Times[-1, b, C, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]]], And[FreeQ[List[a, b, e, f, A, B, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[a, Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[Power[a, 2], C]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[Power[b, 2], f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Times[-1, Dist[Times[1, Power[Times[Power[b, 2], Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[b, Plus[m, 1], Plus[Times[-1, a, Plus[Times[b, B], Times[-1, a, C]]], Times[A, Power[b, 2]]]], Times[Plus[Times[b, B, Plus[Power[a, 2], Times[Power[b, 2], Plus[m, 1]]]], Times[-1, a, Plus[Times[A, Power[b, 2], Plus[m, 2]], Times[C, Plus[Power[a, 2], Times[Power[b, 2], Plus[m, 1]]]]]]], Csc[Plus[e, Times[f, x]]]], Times[-1, b, C, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]]], And[FreeQ[List[a, b, e, f, A, B, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[a, Plus[Times[A, Power[b, 2]], Times[Power[a, 2], C]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[Power[b, 2], f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[Power[b, 2], Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[b, Plus[m, 1], Plus[Times[Power[a, 2], C], Times[A, Power[b, 2]]]], Times[-1, a, Plus[Times[A, Power[b, 2], Plus[m, 2]], Times[C, Plus[Power[a, 2], Times[Power[b, 2], Plus[m, 1]]]]], Sec[Plus[e, Times[f, x]]]], Times[-1, b, C, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]]], And[FreeQ[List[a, b, e, f, A, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[a, Plus[Times[A, Power[b, 2]], Times[Power[a, 2], C]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[Power[b, 2], f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Times[-1, Dist[Times[1, Power[Times[Power[b, 2], Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Simp[Plus[Times[b, Plus[m, 1], Plus[Times[Power[a, 2], C], Times[A, Power[b, 2]]]], Times[-1, a, Plus[Times[A, Power[b, 2], Plus[m, 2]], Times[C, Plus[Power[a, 2], Times[Power[b, 2], Plus[m, 1]]]]], Csc[Plus[e, Times[f, x]]]], Times[-1, b, C, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]]], And[FreeQ[List[a, b, e, f, A, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[C, Sec[Plus[e, Times[f, x]]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[b, f, Plus[m, 3]], -1]], x], Dist[Times[1, Power[Times[b, Plus[m, 3]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Simp[Plus[Times[a, C], Times[b, Plus[Times[C, Plus[m, 2]], Times[A, Plus[m, 3]]], Sec[Plus[e, Times[f, x]]]], Times[-1, Plus[Times[2, a, C], Times[-1, b, B, Plus[m, 3]]], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, B, C, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[m], Less[m, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[C, Csc[Plus[e, Times[f, x]]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[b, f, Plus[m, 3]], -1]], x]], Dist[Times[1, Power[Times[b, Plus[m, 3]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Simp[Plus[Times[a, C], Times[b, Plus[Times[C, Plus[m, 2]], Times[A, Plus[m, 3]]], Csc[Plus[e, Times[f, x]]]], Times[-1, Plus[Times[2, a, C], Times[-1, b, B, Plus[m, 3]]], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, B, C, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[m], Less[m, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[C, Sec[Plus[e, Times[f, x]]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[b, f, Plus[m, 3]], -1]], x], Dist[Times[1, Power[Times[b, Plus[m, 3]], -1]], Int[Times[Sec[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Simp[Plus[Times[a, C], Times[b, Plus[Times[C, Plus[m, 2]], Times[A, Plus[m, 3]]], Sec[Plus[e, Times[f, x]]]], Times[-1, 2, a, C, Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, C, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[m], Less[m, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[C, Csc[Plus[e, Times[f, x]]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[b, f, Plus[m, 3]], -1]], x]], Dist[Times[1, Power[Times[b, Plus[m, 3]], -1]], Int[Times[Csc[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Simp[Plus[Times[a, C], Times[b, Plus[Times[C, Plus[m, 2]], Times[A, Plus[m, 3]]], Csc[Plus[e, Times[f, x]]]], Times[-1, 2, a, C, Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, e, f, A, C, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], Not[And[RationalQ[m], Less[m, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[A, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x]], Times[-1, Dist[Times[1, Power[Times[d, n], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[A, b, m], Times[-1, a, B, n], Times[-1, Plus[Times[b, B, n], Times[a, Plus[Times[C, n], Times[A, Plus[n, 1]]]]], Sec[Plus[e, Times[f, x]]]], Times[-1, b, Plus[Times[C, n], Times[A, Plus[m, n, 1]]], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Greater[m, 0], LessEqual[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[A, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x], Times[-1, Dist[Times[1, Power[Times[d, n], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[A, b, m], Times[-1, a, B, n], Times[-1, Plus[Times[b, B, n], Times[a, Plus[Times[C, n], Times[A, Plus[n, 1]]]]], Csc[Plus[e, Times[f, x]]]], Times[-1, b, Plus[Times[C, n], Times[A, Plus[m, n, 1]]], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, B, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Greater[m, 0], LessEqual[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[A, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x]], Times[-1, Dist[Times[1, Power[Times[d, n], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[A, b, m], Times[-1, a, Plus[Times[C, n], Times[A, Plus[n, 1]]], Sec[Plus[e, Times[f, x]]]], Times[-1, b, Plus[Times[C, n], Times[A, Plus[m, n, 1]]], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Greater[m, 0], LessEqual[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[A, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, n], -1]], x], Times[-1, Dist[Times[1, Power[Times[d, n], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[A, b, m], Times[-1, a, Plus[Times[C, n], Times[A, Plus[n, 1]]], Csc[Plus[e, Times[f, x]]]], Times[-1, b, Plus[Times[C, n], Times[A, Plus[m, n, 1]]], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]]], And[FreeQ[List[a, b, d, e, f, A, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Greater[m, 0], LessEqual[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[C, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[m, n, 1]], -1]], x], Dist[Times[1, Power[Plus[m, n, 1], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[a, A, Plus[m, n, 1]], Times[a, C, n], Times[Plus[Times[Plus[Times[A, b], Times[a, B]], Plus[m, n, 1]], Times[b, C, Plus[m, n]]], Sec[Plus[e, Times[f, x]]]], Times[Plus[Times[b, B, Plus[m, n, 1]], Times[a, C, m]], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, C, n], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Greater[m, 0], Not[And[RationalQ[n], LessEqual[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[C, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[m, n, 1]], -1]], x]], Dist[Times[1, Power[Plus[m, n, 1], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[a, A, Plus[m, n, 1]], Times[a, C, n], Times[Plus[Times[Plus[Times[A, b], Times[a, B]], Plus[m, n, 1]], Times[b, C, Plus[m, n]]], Csc[Plus[e, Times[f, x]]]], Times[Plus[Times[b, B, Plus[m, n, 1]], Times[a, C, m]], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, C, n], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Greater[m, 0], Not[And[RationalQ[n], LessEqual[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[C, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[m, n, 1]], -1]], x], Dist[Times[1, Power[Plus[m, n, 1], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[a, A, Plus[m, n, 1]], Times[a, C, n], Times[b, Plus[Times[A, Plus[m, n, 1]], Times[C, Plus[m, n]]], Sec[Plus[e, Times[f, x]]]], Times[a, C, m, Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, C, n], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Greater[m, 0], Not[And[RationalQ[n], LessEqual[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[C, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[f, Plus[m, n, 1]], -1]], x]], Dist[Times[1, Power[Plus[m, n, 1], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, -1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[a, A, Plus[m, n, 1]], Times[a, C, n], Times[b, Plus[Times[A, Plus[m, n, 1]], Times[C, Plus[m, n]]], Csc[Plus[e, Times[f, x]]]], Times[a, C, m, Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, C, n], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Greater[m, 0], Not[And[RationalQ[n], LessEqual[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[d, Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[Power[a, 2], C]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[b, f, Plus[Power[a, 2], Times[-1, Power[b, 2]]], Plus[m, 1]], -1]], x], Dist[Times[d, Power[Times[b, Plus[Power[a, 2], Times[-1, Power[b, 2]]], Plus[m, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Simp[Plus[Times[A, Power[b, 2], Plus[n, -1]], Times[-1, a, Plus[Times[b, B], Times[-1, a, C]], Plus[n, -1]], Times[b, Plus[Times[a, A], Times[-1, b, B], Times[a, C]], Plus[m, 1], Sec[Plus[e, Times[f, x]]]], Times[-1, Plus[Times[b, Plus[Times[A, b], Times[-1, a, B]], Plus[m, n, 1]], Times[C, Plus[Times[Power[a, 2], n], Times[Power[b, 2], Plus[m, 1]]]]], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[m, -1], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[d, Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[Power[a, 2], C]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[b, f, Plus[Power[a, 2], Times[-1, Power[b, 2]]], Plus[m, 1]], -1]], x]], Dist[Times[d, Power[Times[b, Plus[Power[a, 2], Times[-1, Power[b, 2]]], Plus[m, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Simp[Plus[Times[A, Power[b, 2], Plus[n, -1]], Times[-1, a, Plus[Times[b, B], Times[-1, a, C]], Plus[n, -1]], Times[b, Plus[Times[a, A], Times[-1, b, B], Times[a, C]], Plus[m, 1], Csc[Plus[e, Times[f, x]]]], Times[-1, Plus[Times[b, Plus[Times[A, b], Times[-1, a, B]], Plus[m, n, 1]], Times[C, Plus[Times[Power[a, 2], n], Times[Power[b, 2], Plus[m, 1]]]]], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[m, -1], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[d, Plus[Times[A, Power[b, 2]], Times[Power[a, 2], C]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[b, f, Plus[Power[a, 2], Times[-1, Power[b, 2]]], Plus[m, 1]], -1]], x], Dist[Times[d, Power[Times[b, Plus[Power[a, 2], Times[-1, Power[b, 2]]], Plus[m, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Simp[Plus[Times[A, Power[b, 2], Plus[n, -1]], Times[Power[a, 2], C, Plus[n, -1]], Times[a, b, Plus[A, C], Plus[m, 1], Sec[Plus[e, Times[f, x]]]], Times[-1, Plus[Times[A, Power[b, 2], Plus[m, n, 1]], Times[C, Plus[Times[Power[a, 2], n], Times[Power[b, 2], Plus[m, 1]]]]], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[m, -1], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[d, Plus[Times[A, Power[b, 2]], Times[Power[a, 2], C]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[b, f, Plus[Power[a, 2], Times[-1, Power[b, 2]]], Plus[m, 1]], -1]], x]], Dist[Times[d, Power[Times[b, Plus[Power[a, 2], Times[-1, Power[b, 2]]], Plus[m, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Simp[Plus[Times[A, Power[b, 2], Plus[n, -1]], Times[Power[a, 2], C, Plus[n, -1]], Times[a, b, Plus[A, C], Plus[m, 1], Csc[Plus[e, Times[f, x]]]], Times[-1, Plus[Times[A, Power[b, 2], Plus[m, n, 1]], Times[C, Plus[Times[Power[a, 2], n], Times[Power[b, 2], Plus[m, 1]]]]], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m, n], Less[m, -1], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[Power[a, 2], C]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[a, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Dist[Times[1, Power[Times[a, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[a, Plus[Times[a, A], Times[-1, b, B], Times[a, C]], Plus[m, 1]], Times[-1, Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[Power[a, 2], C]], Plus[m, n, 1]], Times[-1, a, Plus[Times[A, b], Times[-1, a, B], Times[b, C]], Plus[m, 1], Sec[Plus[e, Times[f, x]]]], Times[Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[Power[a, 2], C]], Plus[m, n, 2], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, C, n], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1], Not[NegativeIntegerQ[Plus[m, Times[1, Power[2, -1]]], n]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[Power[a, 2], C]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[a, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Dist[Times[1, Power[Times[a, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[a, Plus[Times[a, A], Times[-1, b, B], Times[a, C]], Plus[m, 1]], Times[-1, Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[Power[a, 2], C]], Plus[m, n, 1]], Times[-1, a, Plus[Times[A, b], Times[-1, a, B], Times[b, C]], Plus[m, 1], Csc[Plus[e, Times[f, x]]]], Times[Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[Power[a, 2], C]], Plus[m, n, 2], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, C, n], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1], Not[NegativeIntegerQ[Plus[m, Times[1, Power[2, -1]]], n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[A, Power[b, 2]], Times[Power[a, 2], C]], Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[a, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x]], Dist[Times[1, Power[Times[a, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[Power[a, 2], Plus[A, C], Plus[m, 1]], Times[-1, Plus[Times[A, Power[b, 2]], Times[Power[a, 2], C]], Plus[m, n, 1]], Times[-1, a, b, Plus[A, C], Plus[m, 1], Sec[Plus[e, Times[f, x]]]], Times[Plus[Times[A, Power[b, 2]], Times[Power[a, 2], C]], Plus[m, n, 2], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, C, n], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1], Not[NegativeIntegerQ[Plus[m, Times[1, Power[2, -1]]], n]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[A, Power[b, 2]], Times[Power[a, 2], C]], Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[a, f, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], x], Dist[Times[1, Power[Times[a, Plus[m, 1], Plus[Power[a, 2], Times[-1, Power[b, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Simp[Plus[Times[Power[a, 2], Plus[A, C], Plus[m, 1]], Times[-1, Plus[Times[A, Power[b, 2]], Times[Power[a, 2], C]], Plus[m, n, 1]], Times[-1, a, b, Plus[A, C], Plus[m, 1], Csc[Plus[e, Times[f, x]]]], Times[Plus[Times[A, Power[b, 2]], Times[Power[a, 2], C]], Plus[m, n, 2], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, C, n], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[m], Less[m, -1], Not[NegativeIntegerQ[Plus[m, Times[1, Power[2, -1]]], n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[C, d, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[b, f, Plus[m, n, 1]], -1]], x], Dist[Times[d, Power[Times[b, Plus[m, n, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Simp[Plus[Times[a, C, Plus[n, -1]], Times[Plus[Times[A, b, Plus[m, n, 1]], Times[b, C, Plus[m, n]]], Sec[Plus[e, Times[f, x]]]], Times[Plus[Times[b, B, Plus[m, n, 1]], Times[-1, a, C, n]], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, C, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[C, d, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[b, f, Plus[m, n, 1]], -1]], x]], Dist[Times[d, Power[Times[b, Plus[m, n, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Simp[Plus[Times[a, C, Plus[n, -1]], Times[Plus[Times[A, b, Plus[m, n, 1]], Times[b, C, Plus[m, n]]], Csc[Plus[e, Times[f, x]]]], Times[Plus[Times[b, B, Plus[m, n, 1]], Times[-1, a, C, n]], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, C, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[C, d, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[b, f, Plus[m, n, 1]], -1]], x], Dist[Times[d, Power[Times[b, Plus[m, n, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, -1]], Simp[Plus[Times[a, C, Plus[n, -1]], Times[Plus[Times[A, b, Plus[m, n, 1]], Times[b, C, Plus[m, n]]], Sec[Plus[e, Times[f, x]]]], Times[-1, a, C, n, Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, C, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[C, d, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Power[Times[b, f, Plus[m, n, 1]], -1]], x]], Dist[Times[d, Power[Times[b, Plus[m, n, 1]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, -1]], Simp[Plus[Times[a, C, Plus[n, -1]], Times[Plus[Times[A, b, Plus[m, n, 1]], Times[b, C, Plus[m, n]]], Csc[Plus[e, Times[f, x]]]], Times[-1, a, C, n, Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, C, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[A, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[a, f, n], -1]], x]], Dist[Times[1, Power[Times[a, d, n], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[a, B, n], Times[-1, A, b, Plus[m, n, 1]], Times[a, Plus[A, Times[A, n], Times[C, n]], Sec[Plus[e, Times[f, x]]]], Times[A, b, Plus[m, n, 2], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, C, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], LessEqual[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[A, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[a, f, n], -1]], x], Dist[Times[1, Power[Times[a, d, n], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[a, B, n], Times[-1, A, b, Plus[m, n, 1]], Times[a, Plus[A, Times[A, n], Times[C, n]], Csc[Plus[e, Times[f, x]]]], Times[A, b, Plus[m, n, 2], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, C, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], LessEqual[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[A, Tan[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Power[Times[a, f, n], -1]], x]], Dist[Times[1, Power[Times[a, d, n], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[-1, A, b, Plus[m, n, 1]], Times[a, Plus[A, Times[A, n], Times[C, n]], Sec[Plus[e, Times[f, x]]]], Times[A, b, Plus[m, n, 2], Power[Sec[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, C, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], LessEqual[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[A, Cot[Plus[e, Times[f, x]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], Plus[m, 1]], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Power[Times[a, f, n], -1]], x], Dist[Times[1, Power[Times[a, d, n], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Simp[Plus[Times[-1, A, b, Plus[m, n, 1]], Times[a, Plus[A, Times[A, n], Times[C, n]], Csc[Plus[e, Times[f, x]]]], Times[A, b, Plus[m, n, 2], Power[Csc[Plus[e, Times[f, x]]], 2]]], x]], x], x]], And[FreeQ[List[a, b, d, e, f, A, C, m], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]], RationalQ[n], LessEqual[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[Power[a, 2], C]], Power[Times[Power[a, 2], Power[d, 2]], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], -1]], x], x], Dist[Times[1, Power[Power[a, 2], -1]], Int[Times[Plus[Times[a, A], Times[-1, Plus[Times[A, b], Times[-1, a, B]], Sec[Plus[e, Times[f, x]]]]], Power[Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[Power[a, 2], C]], Power[Times[Power[a, 2], Power[d, 2]], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], -1]], x], x], Dist[Times[1, Power[Power[a, 2], -1]], Int[Times[Plus[Times[a, A], Times[-1, Plus[Times[A, b], Times[-1, a, B]], Csc[Plus[e, Times[f, x]]]]], Power[Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, d, e, f, A, B, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], -1], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[A, Power[b, 2]], Times[Power[a, 2], C]], Power[Times[Power[a, 2], Power[d, 2]], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], -1]], x], x], Dist[Times[1, Power[Power[a, 2], -1]], Int[Times[Plus[Times[a, A], Times[-1, A, b, Sec[Plus[e, Times[f, x]]]]], Power[Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, d, e, f, A, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[A, Power[b, 2]], Times[Power[a, 2], C]], Power[Times[Power[a, 2], Power[d, 2]], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], -1]], x], x], Dist[Times[1, Power[Power[a, 2], -1]], Int[Times[Plus[Times[a, A], Times[-1, A, b, Csc[Plus[e, Times[f, x]]]]], Power[Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, d, e, f, A, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[C, Power[Power[d, 2], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x], Int[Times[Plus[A, Times[B, Sec[Plus[e, Times[f, x]]]]], Power[Times[Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]]], -1]], x]], And[FreeQ[List[a, b, d, e, f, A, B, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[C, Power[Power[d, 2], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x], Int[Times[Plus[A, Times[B, Csc[Plus[e, Times[f, x]]]]], Power[Times[Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]]], -1]], x]], And[FreeQ[List[a, b, d, e, f, A, B, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Rational[-1, 2]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[C, Power[Power[d, 2], -1]], Int[Times[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]], -1]], x], x], Dist[A, Int[Times[1, Power[Times[Sqrt[Times[d, Sec[Plus[e, Times[f, x]]]]], Sqrt[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]]]], -1]], x], x]], And[FreeQ[List[a, b, d, e, f, A, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Rational[-1, 2]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[C, Power[Power[d, 2], -1]], Int[Times[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Times[3, Power[2, -1]]], Power[Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]], -1]], x], x], Dist[A, Int[Times[1, Power[Times[Sqrt[Times[d, Csc[Plus[e, Times[f, x]]]]], Sqrt[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]]]], -1]], x], x]], And[FreeQ[List[a, b, d, e, f, A, C], x], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Plus[A, Times[B, Sec[Plus[e, Times[f, x]]]], Times[C, Power[Sec[Plus[e, Times[f, x]]], 2]]]], x], FreeQ[List[a, b, d, e, f, A, B, C, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Plus[A, Times[B, Csc[Plus[e, Times[f, x]]]], Times[C, Power[Csc[Plus[e, Times[f, x]]], 2]]]], x], FreeQ[List[a, b, d, e, f, A, B, C, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], n], Plus[A, Times[C, Power[Sec[Plus[e, Times[f, x]]], 2]]]], x], FreeQ[List[a, b, d, e, f, A, C, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], n], Plus[A, Times[C, Power[Csc[Plus[e, Times[f, x]]], 2]]]], x], FreeQ[List[a, b, d, e, f, A, C, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], -1]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[d, Plus[m, 2]], Int[Times[Power[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]], m], Power[Times[d, Cos[Plus[e, Times[f, x]]]], Plus[n, Times[-1, m], -2]], Plus[C, Times[B, Cos[Plus[e, Times[f, x]]]], Times[A, Power[Cos[Plus[e, Times[f, x]]], 2]]]], x], x], And[FreeQ[List[a, b, d, e, f, A, B, C, n], x], Not[IntegerQ[n]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], -1], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[d, Plus[m, 2]], Int[Times[Power[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sin[Plus[e, Times[f, x]]]], Plus[n, Times[-1, m], -2]], Plus[C, Times[B, Sin[Plus[e, Times[f, x]]]], Times[A, Power[Sin[Plus[e, Times[f, x]]], 2]]]], x], x], And[FreeQ[List[a, b, d, e, f, A, B, C, n], x], Not[IntegerQ[n]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], -1]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[d, Plus[m, 2]], Int[Times[Power[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]], m], Power[Times[d, Cos[Plus[e, Times[f, x]]]], Plus[n, Times[-1, m], -2]], Plus[C, Times[A, Power[Cos[Plus[e, Times[f, x]]], 2]]]], x], x], And[FreeQ[List[a, b, d, e, f, A, C, n], x], Not[IntegerQ[n]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], -1], Optional[Pattern[d, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[d, Plus[m, 2]], Int[Times[Power[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sin[Plus[e, Times[f, x]]]], Plus[n, Times[-1, m], -2]], Plus[C, Times[A, Power[Sin[Plus[e, Times[f, x]]], 2]]]], x], x], And[FreeQ[List[a, b, d, e, f, A, C, n], x], Not[IntegerQ[n]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[n]], Power[Times[c, Power[Times[d, Sec[Plus[e, Times[f, x]]]], p]], FracPart[n]], Power[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Times[p, FracPart[n]]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Times[n, p]], Plus[A, Times[B, Sec[Plus[e, Times[f, x]]]], Times[C, Power[Sec[Plus[e, Times[f, x]]], 2]]]], x], x], And[FreeQ[List[a, b, c, d, e, f, A, B, C, m, n, p], x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[Optional[Pattern[c, Blank[]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[p, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[n]], Power[Times[c, Power[Times[d, Csc[Plus[e, Times[f, x]]]], p]], FracPart[n]], Power[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Times[p, FracPart[n]]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Times[n, p]], Plus[A, Times[B, Csc[Plus[e, Times[f, x]]]], Times[C, Power[Csc[Plus[e, Times[f, x]]], 2]]]], x], x], And[FreeQ[List[a, b, c, d, e, f, A, B, C, m, n, p], x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[n]], Power[Times[c, Power[Times[d, Sec[Plus[e, Times[f, x]]]], p]], FracPart[n]], Power[Power[Times[d, Sec[Plus[e, Times[f, x]]]], Times[p, FracPart[n]]], -1]], Int[Times[Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], m], Power[Times[d, Sec[Plus[e, Times[f, x]]]], Times[n, p]], Plus[A, Times[C, Power[Sec[Plus[e, Times[f, x]]], 2]]]], x], x], And[FreeQ[List[a, b, c, d, e, f, A, C, m, n, p], x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Power[Times[Optional[Pattern[c, Blank[]]], Power[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Pattern[p, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Times[csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[n]], Power[Times[c, Power[Times[d, Csc[Plus[e, Times[f, x]]]], p]], FracPart[n]], Power[Power[Times[d, Csc[Plus[e, Times[f, x]]]], Times[p, FracPart[n]]], -1]], Int[Times[Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], m], Power[Times[d, Csc[Plus[e, Times[f, x]]]], Times[n, p]], Plus[A, Times[C, Power[Csc[Plus[e, Times[f, x]]], 2]]]], x], x], And[FreeQ[List[a, b, c, d, e, f, A, C, m, n, p], x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Power[Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], 2]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[b, Power[d, -1]], Subst[Int[Power[Plus[b, Times[b, Power[x, 2]]], Plus[n, -1]], x], x, Tan[Plus[c, Times[d, x]]]], x], FreeQ[List[b, c, d, n], x]]], RuleDelayed[HoldPattern[Int[Power[Times[Power[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[b, Blank[]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[b, Power[d, -1]], Subst[Int[Power[Plus[b, Times[b, Power[x, 2]]], Plus[n, -1]], x], x, Cot[Plus[c, Times[d, x]]]], x]], FreeQ[List[b, c, d, n], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], 2]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Times[-1, a, Power[Tan[Plus[c, Times[d, x]]], 2]], p], x], And[FreeQ[List[a, b, c, d, p], x], ZeroQ[Plus[a, b]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Power[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Times[-1, a, Power[Cot[Plus[c, Times[d, x]]], 2]], p], x], And[FreeQ[List[a, b, c, d, p], x], ZeroQ[Plus[a, b]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], 2]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[a, -1]], x], Times[-1, Dist[Times[b, Power[a, -1]], Int[Times[1, Power[Plus[b, Times[a, Power[Cos[Plus[c, Times[d, x]]], 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[a, b]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Power[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[a, -1]], x], Times[-1, Dist[Times[b, Power[a, -1]], Int[Times[1, Power[Plus[b, Times[a, Power[Sin[Plus[c, Times[d, x]]], 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[a, b]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], 2]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[d, -1]], Subst[Int[Times[Power[Plus[a, b, Times[b, Power[x, 2]]], p], Power[Plus[1, Power[x, 2]], -1]], x], x, Tan[Plus[c, Times[d, x]]]], x], And[FreeQ[List[a, b, c, d, p], x], NonzeroQ[Plus[a, b]], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Power[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[d, -1], Subst[Int[Times[Power[Plus[a, b, Times[b, Power[x, 2]]], p], Power[Plus[1, Power[x, 2]], -1]], x], x, Cot[Plus[c, Times[d, x]]]], x]], And[FreeQ[List[a, b, c, d, p], x], NonzeroQ[Plus[a, b]], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[f, FreeFactors[Tan[Plus[c, Times[d, x]]], x]]], Dist[Times[Power[f, Plus[m, 1]], Power[d, -1]], Subst[Int[Times[Power[x, m], Power[ExpandToSum[Plus[a, Times[b, Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], Times[n, Power[2, -1]]]]], x], p], Power[Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], Plus[Times[m, Power[2, -1]], 1]], -1]], x], x, Times[Tan[Plus[c, Times[d, x]]], Power[f, -1]]], x]], And[FreeQ[List[a, b, c, d, p], x], EvenQ[m], EvenQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[cos[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[m, Blank[]]], Power[Plus[Times[Power[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[f, FreeFactors[Cot[Plus[c, Times[d, x]]], x]]], Times[-1, Dist[Times[Power[f, Plus[m, 1]], Power[d, -1]], Subst[Int[Times[Power[x, m], Power[ExpandToSum[Plus[a, Times[b, Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], Times[n, Power[2, -1]]]]], x], p], Power[Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], Plus[Times[m, Power[2, -1]], 1]], -1]], x], x, Times[Cot[Plus[c, Times[d, x]]], Power[f, -1]]], x]]], And[FreeQ[List[a, b, c, d, p], x], EvenQ[m], EvenQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[f, FreeFactors[Cos[Plus[c, Times[d, x]]], x]]], Times[-1, Dist[Times[f, Power[d, -1]], Subst[Int[Times[Power[Plus[1, Times[-1, Power[f, 2], Power[x, 2]]], Times[Plus[m, -1], Power[2, -1]]], Power[Plus[b, Times[a, Power[Times[f, x], n]]], p], Power[Power[Times[f, x], Times[n, p]], -1]], x], x, Times[Cos[Plus[c, Times[d, x]]], Power[f, -1]]], x]]], And[FreeQ[List[a, b, c, d], x], OddQ[m], IntegersQ[n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[cos[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Power[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[f, FreeFactors[Sin[Plus[c, Times[d, x]]], x]]], Dist[Times[f, Power[d, -1]], Subst[Int[Times[Power[Plus[1, Times[-1, Power[f, 2], Power[x, 2]]], Times[Plus[m, -1], Power[2, -1]]], Power[Plus[b, Times[a, Power[Times[f, x], n]]], p], Power[Power[Times[f, x], Times[n, p]], -1]], x], x, Times[Sin[Plus[c, Times[d, x]]], Power[f, -1]]], x]], And[FreeQ[List[a, b, c, d], x], OddQ[m], IntegersQ[n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[f, FreeFactors[Tan[Plus[c, Times[d, x]]], x]]], Dist[Times[f, Power[d, -1]], Subst[Int[Times[Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], Plus[Times[m, Power[2, -1]], -1]], Power[ExpandToSum[Plus[a, Times[b, Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], Times[n, Power[2, -1]]]]], x], p]], x], x, Times[Tan[Plus[c, Times[d, x]]], Power[f, -1]]], x]], And[FreeQ[List[a, b, c, d, p], x], EvenQ[m], EvenQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[m, Blank[]]], Power[Plus[Times[Power[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[f, FreeFactors[Cot[Plus[c, Times[d, x]]], x]]], Times[-1, Dist[Times[f, Power[d, -1]], Subst[Int[Times[Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], Plus[Times[m, Power[2, -1]], -1]], Power[ExpandToSum[Plus[a, Times[b, Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], Times[n, Power[2, -1]]]]], x], p]], x], x, Times[Cot[Plus[c, Times[d, x]]], Power[f, -1]]], x]]], And[FreeQ[List[a, b, c, d, p], x], EvenQ[m], EvenQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[f, FreeFactors[Sin[Plus[c, Times[d, x]]], x]]], Dist[Times[f, Power[d, -1]], Subst[Int[Times[Power[ExpandToSum[Plus[b, Times[a, Power[Plus[1, Times[-1, Power[f, 2], Power[x, 2]]], Times[n, Power[2, -1]]]]], x], p], Power[Power[Plus[1, Times[-1, Power[f, 2], Power[x, 2]]], Times[Plus[m, Times[n, p], 1], Power[2, -1]]], -1]], x], x, Times[Sin[Plus[c, Times[d, x]]], Power[f, -1]]], x]], And[FreeQ[List[a, b, c, d], x], OddQ[m], EvenQ[n], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Power[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[f, FreeFactors[Cos[Plus[c, Times[d, x]]], x]]], Times[-1, Dist[Times[f, Power[d, -1]], Subst[Int[Times[Power[ExpandToSum[Plus[b, Times[a, Power[Plus[1, Times[-1, Power[f, 2], Power[x, 2]]], Times[n, Power[2, -1]]]]], x], p], Power[Power[Plus[1, Times[-1, Power[f, 2], Power[x, 2]]], Times[Plus[m, Times[n, p], 1], Power[2, -1]]], -1]], x], x, Times[Cos[Plus[c, Times[d, x]]], Power[f, -1]]], x]]], And[FreeQ[List[a, b, c, d], x], OddQ[m], EvenQ[n], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrig[Times[Power[sec[Plus[c, Times[d, x]]], m], Power[Plus[a, Times[b, Power[sec[Plus[c, Times[d, x]]], n]]], p]], x], x], And[FreeQ[List[a, b, c, d], x], IntegersQ[m, n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Power[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrig[Times[Power[csc[Plus[c, Times[d, x]]], m], Power[Plus[a, Times[b, Power[csc[Plus[c, Times[d, x]]], n]]], p]], x], x], And[FreeQ[List[a, b, c, d], x], IntegersQ[m, n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[f, FreeFactors[Cos[Plus[c, Times[d, x]]], x]]], Times[-1, Dist[Power[Times[d, Power[f, Plus[m, Times[n, p], -1]]], -1], Subst[Int[Times[Power[Plus[1, Times[-1, Power[f, 2], Power[x, 2]]], Times[Plus[m, -1], Power[2, -1]]], Power[Plus[b, Times[a, Power[Times[f, x], n]]], p], Power[Power[x, Plus[m, Times[n, p]]], -1]], x], x, Times[Cos[Plus[c, Times[d, x]]], Power[f, -1]]], x]]], And[FreeQ[List[a, b, c, d, n], x], OddQ[m], IntegerQ[n], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Power[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[f, FreeFactors[Sin[Plus[c, Times[d, x]]], x]]], Dist[Times[1, Power[Times[d, Power[f, Plus[m, Times[n, p], -1]]], -1]], Subst[Int[Times[Power[Plus[1, Times[-1, Power[f, 2], Power[x, 2]]], Times[Plus[m, -1], Power[2, -1]]], Power[Plus[b, Times[a, Power[Times[f, x], n]]], p], Power[Power[x, Plus[m, Times[n, p]]], -1]], x], x, Times[Sin[Plus[c, Times[d, x]]], Power[f, -1]]], x]], And[FreeQ[List[a, b, c, d, n], x], OddQ[m], IntegerQ[n], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[f, FreeFactors[Tan[Plus[c, Times[d, x]]], x]]], Dist[Times[Power[f, Plus[m, 1]], Power[d, -1]], Subst[Int[Times[Power[x, m], Power[ExpandToSum[Plus[a, Times[b, Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], Times[n, Power[2, -1]]]]], x], p], Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], -1]], x], x, Times[Tan[Plus[c, Times[d, x]]], Power[f, -1]]], x]], And[FreeQ[List[a, b, c, d], x], EvenQ[m], EvenQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Power[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[f, FreeFactors[Cot[Plus[c, Times[d, x]]], x]]], Times[-1, Dist[Times[Power[f, Plus[m, 1]], Power[d, -1]], Subst[Int[Times[Power[x, m], Power[ExpandToSum[Plus[a, Times[b, Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], Times[n, Power[2, -1]]]]], x], p], Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], -1]], x], x, Times[Cot[Plus[c, Times[d, x]]], Power[f, -1]]], x]]], And[FreeQ[List[a, b, c, d], x], EvenQ[m], EvenQ[n]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[4, p], Power[c, p]], -1]], Int[Power[Plus[b, Times[2, c, Power[Sec[Plus[d, Times[e, x]]], n]]], Times[2, p]], x], x], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[b, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n2, Blank[]]]], Optional[Pattern[c, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[4, p], Power[c, p]], -1]], Int[Power[Plus[b, Times[2, c, Power[Csc[Plus[d, Times[e, x]]], n]]], Times[2, p]], x], x], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, Power[Sec[Plus[d, Times[e, x]]], n]], Times[c, Power[Sec[Plus[d, Times[e, x]]], Times[2, n]]]], p], Power[Power[Plus[b, Times[2, c, Power[Sec[Plus[d, Times[e, x]]], n]]], Times[2, p]], -1]], Int[Times[u, Power[Plus[b, Times[2, c, Power[Sec[Plus[d, Times[e, x]]], n]]], Times[2, p]]], x], x], And[FreeQ[List[a, b, c, d, e, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[b, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n2, Blank[]]]], Optional[Pattern[c, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, Power[Csc[Plus[d, Times[e, x]]], n]], Times[c, Power[Csc[Plus[d, Times[e, x]]], Times[2, n]]]], p], Power[Power[Plus[b, Times[2, c, Power[Csc[Plus[d, Times[e, x]]], n]]], Times[2, p]], -1]], Int[Times[u, Power[Plus[b, Times[2, c, Power[Csc[Plus[d, Times[e, x]]], n]]], Times[2, p]]], x], x], And[FreeQ[List[a, b, c, d, e, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n2, Blank[]]]]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Times[2, c, Power[q, -1]], Int[Times[1, Power[Plus[b, Times[-1, q], Times[2, c, Power[Sec[Plus[d, Times[e, x]]], n]]], -1]], x], x], Times[-1, Dist[Times[2, c, Power[q, -1]], Int[Times[1, Power[Plus[b, q, Times[2, c, Power[Sec[Plus[d, Times[e, x]]], n]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[b, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n2, Blank[]]]], Optional[Pattern[c, Blank[]]]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Times[2, c, Power[q, -1]], Int[Times[1, Power[Plus[b, Times[-1, q], Times[2, c, Power[Csc[Plus[d, Times[e, x]]], n]]], -1]], x], x], Times[-1, Dist[Times[2, c, Power[q, -1]], Int[Times[1, Power[Plus[b, q, Times[2, c, Power[Csc[Plus[d, Times[e, x]]], n]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n2, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[sin[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[f, FreeFactors[Cos[Plus[d, Times[e, x]]], x]]], Times[-1, Dist[Times[f, Power[e, -1]], Subst[Int[Times[Power[Plus[1, Times[-1, Power[f, 2], Power[x, 2]]], Times[Plus[m, -1], Power[2, -1]]], Power[Plus[b, Times[a, Power[Times[f, x], n]]], p], Power[Power[Times[f, x], Times[n, p]], -1]], x], x, Times[Cos[Plus[d, Times[e, x]]], Power[f, -1]]], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], OddQ[m], IntegersQ[n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[cos[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[b, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n2, Blank[]]], Optional[Pattern[c, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[f, FreeFactors[Sin[Plus[d, Times[e, x]]], x]]], Dist[Times[f, Power[e, -1]], Subst[Int[Times[Power[Plus[1, Times[-1, Power[f, 2], Power[x, 2]]], Times[Plus[m, -1], Power[2, -1]]], Power[Plus[b, Times[a, Power[Times[f, x], n]]], p], Power[Power[Times[f, x], Times[n, p]], -1]], x], x, Times[Sin[Plus[d, Times[e, x]]], Power[f, -1]]], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], OddQ[m], IntegersQ[n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n2, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[sin[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[f, FreeFactors[Tan[Plus[d, Times[e, x]]], x]]], Dist[Times[Power[f, Plus[m, 1]], Power[e, -1]], Subst[Int[Times[Power[x, m], Power[ExpandToSum[Plus[a, Times[b, Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], Times[n, Power[2, -1]]]], Times[c, Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], n]]], x], p], Power[Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], Plus[Times[m, Power[2, -1]], 1]], -1]], x], x, Times[Tan[Plus[d, Times[e, x]]], Power[f, -1]]], x]], And[FreeQ[List[a, b, c, d, e, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], EvenQ[m], EvenQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[cos[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Optional[Pattern[b, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n2, Blank[]]], Optional[Pattern[c, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[f, FreeFactors[Cot[Plus[d, Times[e, x]]], x]]], Times[-1, Dist[Times[Power[f, Plus[m, 1]], Power[e, -1]], Subst[Int[Times[Power[x, m], Power[ExpandToSum[Plus[a, Times[b, Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], Times[n, Power[2, -1]]]], Times[c, Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], n]]], x], p], Power[Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], Plus[Times[m, Power[2, -1]], 1]], -1]], x], x, Times[Cot[Plus[d, Times[e, x]]], Power[f, -1]]], x]]], And[FreeQ[List[a, b, c, d, e, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], EvenQ[m], EvenQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[4, p], Power[c, p]], -1]], Int[Times[Power[Sec[Plus[d, Times[e, x]]], m], Power[Plus[b, Times[2, c, Power[Sec[Plus[d, Times[e, x]]], n]]], Times[2, p]]], x], x], And[FreeQ[List[a, b, c, d, e, m, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[b, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n2, Blank[]]]], Optional[Pattern[c, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[4, p], Power[c, p]], -1]], Int[Times[Power[Csc[Plus[d, Times[e, x]]], m], Power[Plus[b, Times[2, c, Power[Csc[Plus[d, Times[e, x]]], n]]], Times[2, p]]], x], x], And[FreeQ[List[a, b, c, d, e, m, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, Power[Sec[Plus[d, Times[e, x]]], n]], Times[c, Power[Sec[Plus[d, Times[e, x]]], Times[2, n]]]], p], Power[Power[Plus[b, Times[2, c, Power[Sec[Plus[d, Times[e, x]]], n]]], Times[2, p]], -1]], Int[Times[Power[Sec[Plus[d, Times[e, x]]], m], Power[Plus[b, Times[2, c, Power[Sec[Plus[d, Times[e, x]]], n]]], Times[2, p]]], x], x], And[FreeQ[List[a, b, c, d, e, m, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[b, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n2, Blank[]]]], Optional[Pattern[c, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, Power[Csc[Plus[d, Times[e, x]]], n]], Times[c, Power[Csc[Plus[d, Times[e, x]]], Times[2, n]]]], p], Power[Power[Plus[b, Times[2, c, Power[Csc[Plus[d, Times[e, x]]], n]]], Times[2, p]], -1]], Int[Times[Power[Csc[Plus[d, Times[e, x]]], m], Power[Plus[b, Times[2, c, Power[Csc[Plus[d, Times[e, x]]], n]]], Times[2, p]]], x], x], And[FreeQ[List[a, b, c, d, e, m, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrig[Times[Power[sec[Plus[d, Times[e, x]]], m], Power[Plus[a, Times[b, Power[sec[Plus[d, Times[e, x]]], n]], Times[c, Power[sec[Plus[d, Times[e, x]]], Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], IntegersQ[m, n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[b, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n2, Blank[]]]], Optional[Pattern[c, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrig[Times[Power[csc[Plus[d, Times[e, x]]], m], Power[Plus[a, Times[b, Power[csc[Plus[d, Times[e, x]]], n]], Times[c, Power[csc[Plus[d, Times[e, x]]], Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], IntegersQ[m, n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[tan[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[f, FreeFactors[Cos[Plus[d, Times[e, x]]], x]]], Times[-1, Dist[Power[Times[e, Power[f, Plus[m, Times[n, p], -1]]], -1], Subst[Int[Times[Power[Plus[1, Times[-1, Power[f, 2], Power[x, 2]]], Times[Plus[m, -1], Power[2, -1]]], Power[Plus[c, Times[b, Power[Times[f, x], n]], Times[c, Power[Times[f, x], Times[2, n]]]], p], Power[Power[x, Plus[m, Times[2, n, p]]], -1]], x], x, Times[Cos[Plus[d, Times[e, x]]], Power[f, -1]]], x]]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], OddQ[m], IntegerQ[n], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[cot[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[f, FreeFactors[Sin[Plus[d, Times[e, x]]], x]]], Dist[Times[1, Power[Times[e, Power[f, Plus[m, Times[n, p], -1]]], -1]], Subst[Int[Times[Power[Plus[1, Times[-1, Power[f, 2], Power[x, 2]]], Times[Plus[m, -1], Power[2, -1]]], Power[Plus[c, Times[b, Power[Times[f, x], n]], Times[c, Power[Times[f, x], Times[2, n]]]], p], Power[Power[x, Plus[m, Times[2, n, p]]], -1]], x], x, Times[Sin[Plus[d, Times[e, x]]], Power[f, -1]]], x]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], OddQ[m], IntegerQ[n], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[tan[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[f, FreeFactors[Tan[Plus[d, Times[e, x]]], x]]], Dist[Times[Power[f, Plus[m, 1]], Power[e, -1]], Subst[Int[Times[Power[x, m], Power[ExpandToSum[Plus[a, Times[b, Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], Times[n, Power[2, -1]]]], Times[c, Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], n]]], x], p], Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], -1]], x], x, Times[Tan[Plus[d, Times[e, x]]], Power[f, -1]]], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], EvenQ[m], EvenQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[cot[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[f, FreeFactors[Cot[Plus[d, Times[e, x]]], x]]], Times[-1, Dist[Times[Power[f, Plus[m, 1]], Power[e, -1]], Subst[Int[Times[Power[x, m], Power[ExpandToSum[Plus[a, Times[b, Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], Times[n, Power[2, -1]]]], Times[c, Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], n]]], x], p], Power[Plus[1, Times[Power[f, 2], Power[x, 2]]], -1]], x], x, Times[Cot[Plus[d, Times[e, x]]], Power[f, -1]]], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], EvenQ[m], EvenQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[c, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[4, n], Power[c, n]], -1]], Int[Times[Plus[A, Times[B, Sec[Plus[d, Times[e, x]]]]], Power[Plus[b, Times[2, c, Sec[Plus[d, Times[e, x]]]]], Times[2, n]]], x], x], And[FreeQ[List[a, b, c, d, e, A, B], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[c, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[4, n], Power[c, n]], -1]], Int[Times[Plus[A, Times[B, Csc[Plus[d, Times[e, x]]]]], Power[Plus[b, Times[2, c, Csc[Plus[d, Times[e, x]]]]], Times[2, n]]], x], x], And[FreeQ[List[a, b, c, d, e, A, B], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[c, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, Sec[Plus[d, Times[e, x]]]], Times[c, Power[Sec[Plus[d, Times[e, x]]], 2]]], n], Power[Power[Plus[b, Times[2, c, Sec[Plus[d, Times[e, x]]]]], Times[2, n]], -1]], Int[Times[Plus[A, Times[B, Sec[Plus[d, Times[e, x]]]]], Power[Plus[b, Times[2, c, Sec[Plus[d, Times[e, x]]]]], Times[2, n]]], x], x], And[FreeQ[List[a, b, c, d, e, A, B], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[c, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, Csc[Plus[d, Times[e, x]]]], Times[c, Power[Csc[Plus[d, Times[e, x]]], 2]]], n], Power[Power[Plus[b, Times[2, c, Csc[Plus[d, Times[e, x]]]]], Times[2, n]], -1]], Int[Times[Plus[A, Times[B, Csc[Plus[d, Times[e, x]]]]], Power[Plus[b, Times[2, c, Csc[Plus[d, Times[e, x]]]]], Times[2, n]]], x], x], And[FreeQ[List[a, b, c, d, e, A, B], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[c, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Plus[B, Times[Plus[Times[b, B], Times[-1, 2, A, c]], Power[q, -1]]], Int[Times[1, Power[Plus[b, q, Times[2, c, Sec[Plus[d, Times[e, x]]]]], -1]], x], x], Dist[Plus[B, Times[-1, Plus[Times[b, B], Times[-1, 2, A, c]], Power[q, -1]]], Int[Times[1, Power[Plus[b, Times[-1, q], Times[2, c, Sec[Plus[d, Times[e, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, A, B], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[c, Blank[]]]]], -1], Plus[Times[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Plus[B, Times[Plus[Times[b, B], Times[-1, 2, A, c]], Power[q, -1]]], Int[Times[1, Power[Plus[b, q, Times[2, c, Csc[Plus[d, Times[e, x]]]]], -1]], x], x], Dist[Plus[B, Times[-1, Plus[Times[b, B], Times[-1, 2, A, c]], Power[q, -1]]], Int[Times[1, Power[Plus[b, Times[-1, q], Times[2, c, Csc[Plus[d, Times[e, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, A, B], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[c, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrig[Times[Plus[A, Times[B, sec[Plus[d, Times[e, x]]]]], Power[Plus[a, Times[b, sec[Plus[d, Times[e, x]]]], Times[c, Power[sec[Plus[d, Times[e, x]]], 2]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, A, B], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[c, Blank[]]]]], Pattern[n, Blank[]]], Plus[Times[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrig[Times[Plus[A, Times[B, csc[Plus[d, Times[e, x]]]]], Power[Plus[a, Times[b, csc[Plus[d, Times[e, x]]]], Times[c, Power[csc[Plus[d, Times[e, x]]], 2]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, A, B], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, I, Power[Plus[c, Times[d, x]], m], ArcTan[Power[E, Plus[Times[I, e], Times[I, f, x]]]], Power[f, -1]], x], Plus[Times[-1, Dist[Times[d, m, Power[f, -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Log[Plus[1, Times[-1, I, Power[E, Times[I, Plus[e, Times[f, x]]]]]]]], x], x]], Dist[Times[d, m, Power[f, -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Log[Plus[1, Times[I, Power[E, Times[I, Plus[e, Times[f, x]]]]]]]], x], x]]], And[FreeQ[List[c, d, e, f], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, Power[Plus[c, Times[d, x]], m], ArcTanh[Power[E, Plus[Times[I, e], Times[I, f, x]]]], Power[f, -1]], x], Plus[Times[-1, Dist[Times[d, m, Power[f, -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Log[Plus[1, Times[-1, Power[E, Times[I, Plus[e, Times[f, x]]]]]]]], x], x]], Dist[Times[d, m, Power[f, -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Log[Plus[1, Power[E, Times[I, Plus[e, Times[f, x]]]]]]], x], x]]], And[FreeQ[List[c, d, e, f], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], m], Tan[Plus[e, Times[f, x]]], Power[f, -1]], x], Times[-1, Dist[Times[d, m, Power[f, -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Tan[Plus[e, Times[f, x]]]], x], x]]], And[FreeQ[List[c, d, e, f], x], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[c, Times[d, x]], m], Cot[Plus[e, Times[f, x]]], Power[f, -1]], x]], Dist[Times[d, m, Power[f, -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Cot[Plus[e, Times[f, x]]]], x], x]], And[FreeQ[List[c, d, e, f], x], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Power[Times[Optional[Pattern[b, Blank[]]], Sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[b, 2], Plus[c, Times[d, x]], Tan[Plus[e, Times[f, x]]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[f, Plus[n, -1]], -1]], x], Plus[Dist[Times[Power[b, 2], Plus[n, -2], Power[Plus[n, -1], -1]], Int[Times[Plus[c, Times[d, x]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]]], x], x], Times[-1, Simp[Times[Power[b, 2], d, Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[Power[f, 2], Plus[n, -1], Plus[n, -2]], -1]], x]]]], And[FreeQ[List[b, c, d, e, f], x], RationalQ[n], Greater[n, 1], Unequal[n, 2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[n, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[b, 2], Plus[c, Times[d, x]], Cot[Plus[e, Times[f, x]]], Power[Times[b, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[f, Plus[n, -1]], -1]], x]], Plus[Dist[Times[Power[b, 2], Plus[n, -2], Power[Plus[n, -1], -1]], Int[Times[Plus[c, Times[d, x]], Power[Times[b, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]]], x], x], Times[-1, Simp[Times[Power[b, 2], d, Power[Times[b, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[Power[f, 2], Plus[n, -1], Plus[n, -2]], -1]], x]]]], And[FreeQ[List[b, c, d, e, f], x], RationalQ[n], Greater[n, 1], Unequal[n, 2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[b, Blank[]]], Sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[b, 2], Power[Plus[c, Times[d, x]], m], Tan[Plus[e, Times[f, x]]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[f, Plus[n, -1]], -1]], x], Plus[Dist[Times[Power[b, 2], Power[d, 2], m, Plus[m, -1], Power[Times[Power[f, 2], Plus[n, -1], Plus[n, -2]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -2]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]]], x], x], Dist[Times[Power[b, 2], Plus[n, -2], Power[Plus[n, -1], -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]]], x], x], Times[-1, Simp[Times[Power[b, 2], d, m, Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[Power[f, 2], Plus[n, -1], Plus[n, -2]], -1]], x]]]], And[FreeQ[List[b, c, d, e, f], x], RationalQ[m, n], Greater[n, 1], Unequal[n, 2], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[b, 2], Power[Plus[c, Times[d, x]], m], Cot[Plus[e, Times[f, x]]], Power[Times[b, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[f, Plus[n, -1]], -1]], x]], Plus[Dist[Times[Power[b, 2], Power[d, 2], m, Plus[m, -1], Power[Times[Power[f, 2], Plus[n, -1], Plus[n, -2]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -2]], Power[Times[b, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]]], x], x], Dist[Times[Power[b, 2], Plus[n, -2], Power[Plus[n, -1], -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Times[b, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]]], x], x], Times[-1, Simp[Times[Power[b, 2], d, m, Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Times[b, Csc[Plus[e, Times[f, x]]]], Plus[n, -2]], Power[Times[Power[f, 2], Plus[n, -1], Plus[n, -2]], -1]], x]]]], And[FreeQ[List[b, c, d, e, f], x], RationalQ[m, n], Greater[n, 1], Unequal[n, 2], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Power[Times[Optional[Pattern[b, Blank[]]], Sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[d, Power[Times[b, Sec[Plus[e, Times[f, x]]]], n], Power[Times[Power[f, 2], Power[n, 2]], -1]], x], Plus[Dist[Times[Plus[n, 1], Power[Times[Power[b, 2], n], -1]], Int[Times[Plus[c, Times[d, x]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[n, 2]]], x], x], Times[-1, Simp[Times[Plus[c, Times[d, x]], Sin[Plus[e, Times[f, x]]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Power[Times[b, f, n], -1]], x]]]], And[FreeQ[List[b, c, d, e, f], x], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[n, Blank[]]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[d, Power[Times[b, Csc[Plus[e, Times[f, x]]]], n], Power[Times[Power[f, 2], Power[n, 2]], -1]], x], Plus[Dist[Times[Plus[n, 1], Power[Times[Power[b, 2], n], -1]], Int[Times[Plus[c, Times[d, x]], Power[Times[b, Csc[Plus[e, Times[f, x]]]], Plus[n, 2]]], x], x], Simp[Times[Plus[c, Times[d, x]], Cos[Plus[e, Times[f, x]]], Power[Times[b, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Power[Times[b, f, n], -1]], x]]], And[FreeQ[List[b, c, d, e, f], x], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[b, Blank[]]], Sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[d, m, Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], n], Power[Times[Power[f, 2], Power[n, 2]], -1]], x], Plus[Dist[Times[Plus[n, 1], Power[Times[Power[b, 2], n], -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[n, 2]]], x], x], Times[-1, Dist[Times[Power[d, 2], m, Plus[m, -1], Power[Times[Power[f, 2], Power[n, 2]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -2]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], n]], x], x]], Times[-1, Simp[Times[Power[Plus[c, Times[d, x]], m], Sin[Plus[e, Times[f, x]]], Power[Times[b, Sec[Plus[e, Times[f, x]]]], Plus[n, 1]], Power[Times[b, f, n], -1]], x]]]], And[FreeQ[List[b, c, d, e, f], x], RationalQ[m, n], Less[n, -1], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[d, m, Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Times[b, Csc[Plus[e, Times[f, x]]]], n], Power[Times[Power[f, 2], Power[n, 2]], -1]], x], Plus[Dist[Times[Plus[n, 1], Power[Times[Power[b, 2], n], -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Times[b, Csc[Plus[e, Times[f, x]]]], Plus[n, 2]]], x], x], Times[-1, Dist[Times[Power[d, 2], m, Plus[m, -1], Power[Times[Power[f, 2], Power[n, 2]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -2]], Power[Times[b, Csc[Plus[e, Times[f, x]]]], n]], x], x]], Simp[Times[Power[Plus[c, Times[d, x]], m], Cos[Plus[e, Times[f, x]]], Power[Times[b, Csc[Plus[e, Times[f, x]]]], Plus[n, 1]], Power[Times[b, f, n], -1]], x]]], And[FreeQ[List[b, c, d, e, f], x], RationalQ[m, n], Less[n, -1], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[b, Blank[]]], Sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[b, Cos[Plus[e, Times[f, x]]]], n], Power[Times[b, Sec[Plus[e, Times[f, x]]]], n]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Power[Times[b, Cos[Plus[e, Times[f, x]]]], n], -1]], x], x], And[FreeQ[List[b, c, d, e, f, m, n], x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[b, Sin[Plus[e, Times[f, x]]]], n], Power[Times[b, Csc[Plus[e, Times[f, x]]]], n]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Power[Times[b, Sin[Plus[e, Times[f, x]]]], n], -1]], x], x], And[FreeQ[List[b, c, d, e, f, m, n], x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[c, Times[d, x]], m], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], n], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], PositiveIntegerQ[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[c, Times[d, x]], m], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], n], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], PositiveIntegerQ[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[c, Times[d, x]], m], Times[Power[Cos[Plus[e, Times[f, x]]], Times[-1, n]], Power[Power[Plus[b, Times[a, Cos[Plus[e, Times[f, x]]]]], Times[-1, n]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], NegativeIntegerQ[n], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[c, Times[d, x]], m], Times[Power[Sin[Plus[e, Times[f, x]]], Times[-1, n]], Power[Power[Plus[b, Times[a, Sin[Plus[e, Times[f, x]]]]], Times[-1, n]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], NegativeIntegerQ[n], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sec[Pattern[v, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Power[Plus[a, Times[b, Sec[ExpandToSum[v, x]]]], n]], x], And[FreeQ[List[a, b, m, n], x], LinearQ[List[u, v], x], Not[LinearMatchQ[List[u, v], x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Csc[Pattern[v, Blank[]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Power[Plus[a, Times[b, Csc[ExpandToSum[v, x]]]], n]], x], And[FreeQ[List[a, b, m, n], x], LinearQ[List[u, v], x], Not[LinearMatchQ[List[u, v], x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sec[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[c, Times[d, x]], m], Power[Plus[a, Times[b, Sec[Plus[e, Times[f, x]]]]], n]], x], FreeQ[List[a, b, c, d, e, f, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Csc[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[c, Times[d, x]], m], Power[Plus[a, Times[b, Csc[Plus[e, Times[f, x]]]]], n]], x], FreeQ[List[a, b, c, d, e, f, m, n], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Times[1, Power[n, -1]], -1]], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, d, p], x], PositiveIntegerQ[Times[1, Power[n, -1]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Times[1, Power[n, -1]], -1]], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, d, p], x], PositiveIntegerQ[Times[1, Power[n, -1]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[a, Times[b, Sec[Plus[c, Times[d, Power[x, n]]]]]], p], x], FreeQ[List[a, b, c, d, n, p], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[a, Times[b, Csc[Plus[c, Times[d, Power[x, n]]]]]], p], x], FreeQ[List[a, b, c, d, n, p], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Power[Plus[a, Times[b, Sec[Plus[c, Times[d, Power[x, n]]]]]], p], x], x, u], x], And[FreeQ[List[a, b, c, d, n, p], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Power[Plus[a, Times[b, Csc[Plus[c, Times[d, Power[x, n]]]]]], p], x], x, u], x], And[FreeQ[List[a, b, c, d, n, p], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sec[Pattern[u, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[a, Times[b, Sec[ExpandToSum[u, x]]]], p], x], And[FreeQ[List[a, b, p], x], BinomialQ[u, x], Not[BinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Csc[Pattern[u, Blank[]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[a, Times[b, Csc[ExpandToSum[u, x]]]], p], x], And[FreeQ[List[a, b, p], x], BinomialQ[u, x], Not[BinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, d, m, n, p], x], PositiveIntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, d, m, n, p], x], PositiveIntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, Power[x, n]]]]]], p]], x], FreeQ[List[a, b, c, d, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, Power[x, n]]]]]], p]], x], FreeQ[List[a, b, c, d, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[e, IntPart[m]], Power[Times[e, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, Power[x, n]]]]]], p]], x], x], FreeQ[List[a, b, c, d, e, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[e, IntPart[m]], Power[Times[e, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, Power[x, n]]]]]], p]], x], x], FreeQ[List[a, b, c, d, e, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Sec[Pattern[u, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Sec[ExpandToSum[u, x]]]], p]], x], And[FreeQ[List[a, b, e, m, p], x], BinomialQ[u, x], Not[BinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Csc[Pattern[u, Blank[]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[b, Csc[ExpandToSum[u, x]]]], p]], x], And[FreeQ[List[a, b, e, m, p], x], BinomialQ[u, x], Not[BinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Pattern[p, Blank[]]], Sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Power[Sec[Plus[a, Times[b, Power[x, n]]]], Plus[p, -1]], Power[Times[b, n, Plus[p, -1]], -1]], x], Times[-1, Dist[Times[Plus[m, Times[-1, n], 1], Power[Times[b, n, Plus[p, -1]], -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Power[Sec[Plus[a, Times[b, Power[x, n]]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, p], x], RationalQ[m], IntegerQ[n], GreaterEqual[Plus[m, Times[-1, n]], 0], NonzeroQ[Plus[p, -1]]]]], RuleDelayed[HoldPattern[Int[Times[Cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Power[Csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Pattern[p, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Power[Csc[Plus[a, Times[b, Power[x, n]]]], Plus[p, -1]], Power[Times[b, n, Plus[p, -1]], -1]], x]], Dist[Times[Plus[m, Times[-1, n], 1], Power[Times[b, n, Plus[p, -1]], -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Power[Csc[Plus[a, Times[b, Power[x, n]]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, p], x], RationalQ[m], IntegerQ[n], GreaterEqual[Plus[m, Times[-1, n]], 0], NonzeroQ[Plus[p, -1]]]]]]