List[RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Times[2, n, p]], Power[Plus[c, Times[b, Power[x, Times[-1, n]]], Times[a, Power[x, Times[-2, n]]]], p]], x], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], RationalQ[n], Less[n, 0], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[n]]], Dist[k, Subst[Int[Times[Power[x, Plus[k, -1]], Power[Plus[a, Times[b, Power[x, Times[k, n]]], Times[c, Power[x, Times[2, k, n]]]], p]], x], x, Power[x, Times[1, Power[k, -1]]]], x]], And[FreeQ[List[a, b, c, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[x, Plus[Times[2, a], Times[b, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Times[2, a], -1]], x], And[FreeQ[List[a, b, c, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[p]], ZeroQ[Plus[Times[n, Plus[Times[2, p], 1]], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[a, Plus[Times[2, p], 1]], -1]], x]], Simp[Times[x, Plus[Times[2, a], Times[b, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Times[2, a, Plus[n, 1]], -1]], x]], And[FreeQ[List[a, b, c, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[p]], ZeroQ[Plus[Times[2, n, Plus[p, 1]], 1]], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]]], Power[Plus[b, Times[2, c, Power[x, n]]], -1]], Int[Times[Plus[b, Times[2, c, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, Times[-1, 1, Power[2, -1]]]]], x], x], And[FreeQ[List[a, b, c, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Or[ZeroQ[Plus[Times[2, n, p], 1]], ZeroQ[Plus[Times[n, Plus[Times[2, p], -1]], 1]]], RationalQ[p], Greater[p, 0], IntegerQ[Plus[p, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], FracPart[p]], Power[Times[Power[Times[4, c], IntPart[p]], Power[Plus[b, Times[2, c, Power[x, n]]], Times[2, FracPart[p]]]], -1]], Int[Power[Plus[b, Times[2, c, Power[x, n]]], Times[2, p]], x], x], And[FreeQ[List[a, b, c, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Or[ZeroQ[Plus[Times[2, n, p], 1]], ZeroQ[Plus[Times[n, Plus[Times[2, p], -1]], 1]]], RationalQ[p], Greater[p, 0], Not[IntegerQ[Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Rational[1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Sqrt[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]]], Power[Plus[n, 1], -1]], x], Simp[Times[b, n, x, Sqrt[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]]], Power[Times[Plus[n, 1], Plus[b, Times[2, c, Power[x, n]]]], -1]], x]], And[FreeQ[List[a, b, c, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[n, 1]], NonzeroQ[Plus[Times[2, n], 1]], NonzeroQ[Plus[Times[3, n], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[a, Times[b, Power[x, Times[-1, n]]], Times[c, Power[x, Times[-2, n]]]], p], Power[Power[x, 2], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, b, c, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[p]], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Plus[Times[2, n, p], 1], -1]], x], Plus[Dist[Times[2, a, Power[n, 2], p, Plus[Times[2, p], -1], Power[Times[Plus[Times[2, n, p], 1], Plus[Times[n, Plus[Times[2, p], -1]], 1]], -1]], Int[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, -1]], x], x], Simp[Times[n, p, x, Plus[Times[2, a], Times[b, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, -1]], Power[Times[Plus[Times[2, n, p], 1], Plus[Times[n, Plus[Times[2, p], -1]], 1]], -1]], x]]], And[FreeQ[List[a, b, c, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[p]], NonzeroQ[Plus[Times[2, n, p], 1]], NonzeroQ[Plus[Times[n, Plus[Times[2, p], -1]], 1]], RationalQ[p], Greater[p, 1]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[n, Plus[Times[2, p], 1]], 1], x, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[2, a, Power[n, 2], Plus[p, 1], Plus[Times[2, p], 1]], -1]], x]], Plus[Dist[Times[Plus[Times[n, Plus[Times[2, p], 1]], 1], Plus[Times[2, n, Plus[p, 1]], 1], Power[Times[2, a, Power[n, 2], Plus[p, 1], Plus[Times[2, p], 1]], -1]], Int[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], x], x], Times[-1, Simp[Times[x, Plus[Times[2, a], Times[b, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Times[2, a, n, Plus[Times[2, p], 1]], -1]], x]]]], And[FreeQ[List[a, b, c, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[p]], NonzeroQ[Plus[Times[n, Plus[Times[2, p], 1]], 1]], NonzeroQ[Plus[Times[2, n, Plus[p, 1]], 1]], RationalQ[n, p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], FracPart[p]], Power[Times[Power[c, IntPart[p]], Power[Plus[Times[b, Power[2, -1]], Times[c, Power[x, n]]], Times[2, FracPart[p]]]], -1]], Int[Power[Plus[Times[b, Power[2, -1]], Times[c, Power[x, n]]], Times[2, p]], x], x], And[FreeQ[List[a, b, c, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[a, Times[b, Power[x, Times[-1, n]]], Times[c, Power[x, Times[-2, n]]]], p], Power[Power[x, 2], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, b, c, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], x], x], And[FreeQ[List[a, b, c, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Plus[Times[2, n, p], 1], -1]], x], Dist[Times[n, p, Power[Plus[Times[2, n, p], 1], -1]], Int[Times[Plus[Times[2, a], Times[b, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p], Greater[p, 0], NonzeroQ[Plus[Times[2, n, p], 1]], IntegerQ[Times[2, p]], Or[IntegerQ[p], ZeroQ[Plus[n, -2]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Plus[Power[b, 2], Times[-1, 2, a, c], Times[b, c, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[a, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x]], Dist[Times[1, Power[Times[a, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Plus[Power[b, 2], Times[-1, 2, a, c], Times[n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], Times[b, c, Plus[Times[n, Plus[Times[2, p], 3]], 1], Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p], Less[p, -1], IntegerQ[Times[2, p]], Or[IntegerQ[p], ZeroQ[Plus[n, -2]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[a, Power[c, -1]], 2]]], With[List[Set[r, Rt[Plus[Times[2, q], Times[-1, b, Power[c, -1]]], 2]]], Plus[Dist[Times[1, Power[Times[2, c, q, r], -1]], Int[Times[Plus[r, Times[-1, Power[x, Times[n, Power[2, -1]]]]], Power[Plus[q, Times[-1, r, Power[x, Times[n, Power[2, -1]]]], Power[x, n]], -1]], x], x], Dist[Times[1, Power[Times[2, c, q, r], -1]], Int[Times[Plus[r, Power[x, Times[n, Power[2, -1]]]], Power[Plus[q, Times[r, Power[x, Times[n, Power[2, -1]]]], Power[x, n]], -1]], x], x]]]], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[Times[n, Power[2, -1]]], NegQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Times[c, Power[q, -1]], Int[Times[1, Power[Plus[Times[b, Power[2, -1]], Times[-1, q, Power[2, -1]], Times[c, Power[x, n]]], -1]], x], x], Times[-1, Dist[Times[c, Power[q, -1]], Int[Times[1, Power[Plus[Times[b, Power[2, -1]], Times[q, Power[2, -1]], Times[c, Power[x, n]]], -1]], x], x]]]], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Dist[Times[2, Sqrt[Times[-1, c]]], Int[Times[1, Power[Times[Sqrt[Plus[b, q, Times[2, c, Power[x, 2]]]], Sqrt[Plus[Times[-1, b], q, Times[-1, 2, c, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, b, c], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeQ[c]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[c, Power[a, -1]], 4]]], Simp[Times[Plus[1, Times[Power[q, 2], Power[x, 2]]], Sqrt[Times[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]], Power[Times[a, Power[Plus[1, Times[Power[q, 2], Power[x, 2]]], 2]], -1]]], Power[Times[2, q, Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1], EllipticF[Times[2, ArcTan[Times[q, x]]], Plus[Times[1, Power[2, -1]], Times[-1, b, Power[q, 2], Power[Times[4, c], -1]]]]], x]], And[FreeQ[List[a, b, c], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveQ[Times[c, Power[a, -1]]], NegativeQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Condition[Simp[Times[Sqrt[Plus[Times[-2, a], Times[-1, Plus[b, Times[-1, q]], Power[x, 2]]]], Sqrt[Times[Plus[Times[2, a], Times[Plus[b, q], Power[x, 2]]], Power[q, -1]]], Power[Times[2, Sqrt[Times[-1, a]], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1], EllipticF[ArcSin[Times[x, Power[Sqrt[Times[Plus[Times[2, a], Times[Plus[b, q], Power[x, 2]]], Power[Times[2, q], -1]]], -1]]], Times[Plus[b, q], Power[Times[2, q], -1]]]], x], IntegerQ[q]]], And[FreeQ[List[a, b, c], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeQ[a], PositiveQ[c]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Simp[Times[Sqrt[Times[Plus[Times[2, a], Times[Plus[b, Times[-1, q]], Power[x, 2]]], Power[Plus[Times[2, a], Times[Plus[b, q], Power[x, 2]]], -1]]], Sqrt[Times[Plus[Times[2, a], Times[Plus[b, q], Power[x, 2]]], Power[q, -1]]], Power[Times[2, Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], Sqrt[Times[a, Power[Plus[Times[2, a], Times[Plus[b, q], Power[x, 2]]], -1]]]], -1], EllipticF[ArcSin[Times[x, Power[Sqrt[Times[Plus[Times[2, a], Times[Plus[b, q], Power[x, 2]]], Power[Times[2, q], -1]]], -1]]], Times[Plus[b, q], Power[Times[2, q], -1]]]], x]], And[FreeQ[List[a, b, c], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeQ[a], PositiveQ[c]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Condition[Simp[Times[Plus[Times[2, a], Times[Plus[b, q], Power[x, 2]]], Sqrt[Times[Plus[Times[2, a], Times[Plus[b, Times[-1, q]], Power[x, 2]]], Power[Plus[Times[2, a], Times[Plus[b, q], Power[x, 2]]], -1]]], Power[Times[2, a, Rt[Times[Plus[b, q], Power[Times[2, a], -1]], 2], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1], EllipticF[ArcTan[Times[Rt[Times[Plus[b, q], Power[Times[2, a], -1]], 2], x]], Times[2, q, Power[Plus[b, q], -1]]]], x], And[PosQ[Times[Plus[b, q], Power[a, -1]]], Not[And[PosQ[Times[Plus[b, Times[-1, q]], Power[a, -1]]], SimplerSqrtQ[Times[Plus[b, Times[-1, q]], Power[Times[2, a], -1]], Times[Plus[b, q], Power[Times[2, a], -1]]]]]]]], And[FreeQ[List[a, b, c], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Condition[Simp[Times[Plus[Times[2, a], Times[Plus[b, Times[-1, q]], Power[x, 2]]], Sqrt[Times[Plus[Times[2, a], Times[Plus[b, q], Power[x, 2]]], Power[Plus[Times[2, a], Times[Plus[b, Times[-1, q]], Power[x, 2]]], -1]]], Power[Times[2, a, Rt[Times[Plus[b, Times[-1, q]], Power[Times[2, a], -1]], 2], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1], EllipticF[ArcTan[Times[Rt[Times[Plus[b, Times[-1, q]], Power[Times[2, a], -1]], 2], x]], Times[-2, q, Power[Plus[b, Times[-1, q]], -1]]]], x], PosQ[Times[Plus[b, Times[-1, q]], Power[a, -1]]]]], And[FreeQ[List[a, b, c], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Condition[Simp[Times[Sqrt[Plus[1, Times[Plus[b, q], Power[x, 2], Power[Times[2, a], -1]]]], Sqrt[Plus[1, Times[Plus[b, Times[-1, q]], Power[x, 2], Power[Times[2, a], -1]]]], Power[Times[Rt[Times[-1, Plus[b, q], Power[Times[2, a], -1]], 2], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1], EllipticF[ArcSin[Times[Rt[Times[-1, Plus[b, q], Power[Times[2, a], -1]], 2], x]], Times[Plus[b, Times[-1, q]], Power[Plus[b, q], -1]]]], x], And[NegQ[Times[Plus[b, q], Power[a, -1]]], Not[And[NegQ[Times[Plus[b, Times[-1, q]], Power[a, -1]]], SimplerSqrtQ[Times[-1, Plus[b, Times[-1, q]], Power[Times[2, a], -1]], Times[-1, Plus[b, q], Power[Times[2, a], -1]]]]]]]], And[FreeQ[List[a, b, c], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Condition[Simp[Times[Sqrt[Plus[1, Times[Plus[b, Times[-1, q]], Power[x, 2], Power[Times[2, a], -1]]]], Sqrt[Plus[1, Times[Plus[b, q], Power[x, 2], Power[Times[2, a], -1]]]], Power[Times[Rt[Times[-1, Plus[b, Times[-1, q]], Power[Times[2, a], -1]], 2], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1], EllipticF[ArcSin[Times[Rt[Times[-1, Plus[b, Times[-1, q]], Power[Times[2, a], -1]], 2], x]], Times[Plus[b, q], Power[Plus[b, Times[-1, q]], -1]]]], x], NegQ[Times[Plus[b, Times[-1, q]], Power[a, -1]]]]], And[FreeQ[List[a, b, c], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[c, Power[a, -1]], 4]]], Simp[Times[Plus[1, Times[Power[q, 2], Power[x, 2]]], Sqrt[Times[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]], Power[Times[a, Power[Plus[1, Times[Power[q, 2], Power[x, 2]]], 2]], -1]]], Power[Times[2, q, Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1], EllipticF[Times[2, ArcTan[Times[q, x]]], Plus[Times[1, Power[2, -1]], Times[-1, b, Power[q, 2], Power[Times[4, c], -1]]]]], x]], And[FreeQ[List[a, b, c], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PosQ[Times[c, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Dist[Times[Sqrt[Plus[1, Times[2, c, Power[x, 2], Power[Plus[b, Times[-1, q]], -1]]]], Sqrt[Plus[1, Times[2, c, Power[x, 2], Power[Plus[b, q], -1]]]], Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], Int[Times[1, Power[Times[Sqrt[Plus[1, Times[2, c, Power[x, 2], Power[Plus[b, Times[-1, q]], -1]]]], Sqrt[Plus[1, Times[2, c, Power[x, 2], Power[Plus[b, q], -1]]]]], -1]], x], x]], And[FreeQ[List[a, b, c], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegQ[Times[c, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, IntPart[p]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], FracPart[p]], Power[Times[Power[Plus[1, Times[2, c, Power[x, n], Power[Plus[b, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]], -1]]], FracPart[p]], Power[Plus[1, Times[2, c, Power[x, n], Power[Plus[b, Times[-1, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], -1]]], FracPart[p]]], -1]], Int[Times[Power[Plus[1, Times[2, c, Power[x, n], Power[Plus[b, Sqrt[Plus[Power[b, 2], Times[-1, 4, a, c]]]], -1]]], p], Power[Plus[1, Times[2, c, Power[x, n], Power[Plus[b, Times[-1, Sqrt[Plus[Power[b, 2], Times[-1, 4, a, c]]]]], -1]]], p]], x], x], And[FreeQ[List[a, b, c, n, p], x], EqQ[n2, Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[mn, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[b, Times[a, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Power[x, Times[n, p]], -1]], x], And[FreeQ[List[a, b, c, n], x], EqQ[mn, Times[-1, n]], IntegerQ[p], PosQ[n]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[mn, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[x, Times[n, FracPart[p]]], Power[Plus[a, Times[b, Power[x, Times[-1, n]]], Times[c, Power[x, n]]], FracPart[p]], Power[Power[Plus[b, Times[a, Power[x, n]], Times[c, Power[x, Times[2, n]]]], FracPart[p]], -1]], Int[Times[Power[Plus[b, Times[a, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Power[x, Times[n, p]], -1]], x], x], And[FreeQ[List[a, b, c, n, p], x], EqQ[mn, Times[-1, n]], Not[IntegerQ[p]], PosQ[n]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[u, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], x], x, u], x], And[FreeQ[List[a, b, c, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, m, n, p], x], EqQ[n2, Times[2, n]], ZeroQ[Simplify[Plus[m, Times[-1, n], 1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[d, x], m], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, m, n], x], EqQ[n2, Times[2, n]], PositiveIntegerQ[p], Not[IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Plus[m, Times[2, n, p]]], Power[Plus[c, Times[b, Power[x, Times[-1, n]]], Times[a, Power[x, Times[-2, n]]]], p]], x], And[FreeQ[List[a, b, c, m, n], x], EqQ[n2, Times[2, n]], NegativeIntegerQ[p], NegQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Sqrt[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]]], Power[n, -1]], x], Simp[Times[b, Sqrt[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]]], Log[x], Power[Plus[b, Times[2, c, Power[x, n]]], -1]], x]], And[FreeQ[List[a, b, c, n], x], EqQ[n2, Times[2, n]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Times[2, n, p], -1]], x], Plus[Dist[a, Int[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, -1]], Power[x, -1]], x], x], Simp[Times[Plus[Times[2, a], Times[b, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, -1]], Power[Times[2, n, Plus[Times[2, p], -1]], -1]], x]]], And[FreeQ[List[a, b, c, n], x], EqQ[n2, Times[2, n]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p], Greater[p, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[2, a, n, Plus[p, 1]], -1]], x]], Plus[Dist[Times[1, Power[a, -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[x, -1]], x], x], Times[-1, Simp[Times[Plus[Times[2, a], Times[b, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Times[2, a, n, Plus[Times[2, p], 1]], -1]], x]]]], And[FreeQ[List[a, b, c, n], x], EqQ[n2, Times[2, n]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], FracPart[p]], Power[Times[Power[c, IntPart[p]], Power[Plus[Times[b, Power[2, -1]], Times[c, Power[x, n]]], Times[2, FracPart[p]]]], -1]], Int[Times[Power[Plus[Times[b, Power[2, -1]], Times[c, Power[x, n]]], Times[2, p]], Power[x, -1]], x], x], And[FreeQ[List[a, b, c, n, p], x], EqQ[n2, Times[2, n]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Times[d, x], Plus[m, 1]], Plus[b, Times[2, c, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Times[b, d, Plus[m, 1]], -1]], x], And[FreeQ[List[a, b, c, d, m, n, p], x], EqQ[n2, Times[2, n]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[m, Times[n, Plus[Times[2, p], 1]], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]]], Power[Plus[b, Times[2, c, Power[x, n]]], -1]], Int[Times[Power[Times[d, x], m], Plus[b, Times[2, c, Power[x, n]]]], x], x], And[FreeQ[List[a, b, c, d, m, n], x], EqQ[n2, Times[2, n]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[m, n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[d, x], Plus[m, 1]], Sqrt[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]]], Power[Times[d, Plus[m, n, 1]], -1]], x], Simp[Times[b, n, Power[Times[d, x], Plus[m, 1]], Sqrt[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]]], Power[Times[d, Plus[m, 1], Plus[m, n, 1], Plus[b, Times[2, c, Power[x, n]]]], -1]], x]], And[FreeQ[List[a, b, c, d, m, n], x], EqQ[n2, Times[2, n]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[m, n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[m, 1]], Sqrt[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]]], Power[Times[a, n], -1]], x]], Times[-1, Dist[Times[b, Power[Times[2, a], -1]], Int[Times[1, Power[Times[x, Sqrt[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, m, n], x], EqQ[n2, Times[2, n]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[m, n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[d, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[2, a, d, n, Plus[p, 1], Plus[Times[2, p], 1]], -1]], x], Times[-1, Simp[Times[Power[Times[d, x], Plus[m, 1]], Plus[Times[2, a], Times[b, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Times[2, a, d, n, Plus[Times[2, p], 1]], -1]], x]]], And[FreeQ[List[a, b, c, d, m, n, p], x], EqQ[n2, Times[2, n]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[m, Times[2, n, Plus[p, 1]], 1]], NonzeroQ[Plus[Times[2, p], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[2, c, n, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[b, Power[Times[2, c], -1]], Int[Times[Power[x, Plus[n, -1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x]]], And[FreeQ[List[a, b, c, m, n, p], x], EqQ[n2, Times[2, n]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[m, Times[-1, 2, n], 1]], NonzeroQ[Plus[p, Times[3, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[d, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Times[d, Plus[m, Times[2, n, p], 1]], -1]], x], Plus[Times[-1, Dist[Times[b, p, Power[n, 2], Plus[Times[2, p], -1], Power[Times[Power[d, n], Plus[m, 1], Plus[m, Times[2, n, p], 1]], -1]], Int[Times[Power[Times[d, x], Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, -1]]], x], x]], Simp[Times[n, p, Power[Times[d, x], Plus[m, 1]], Plus[Times[2, a], Times[b, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, -1]], Power[Times[d, Plus[m, 1], Plus[m, Times[2, n, p], 1]], -1]], x]]], And[FreeQ[List[a, b, c, d], x], EqQ[n2, Times[2, n]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p], Greater[p, 1], Inequality[-1, LessEqual, Plus[m, n], Less, 0], IntegerQ[Times[2, p]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[m, Times[-1, n, Plus[Times[2, p], -1]], 1], Power[Times[d, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Times[d, Plus[m, 1], Plus[m, n, 1]], -1]], x], Plus[Dist[Times[2, c, p, Power[n, 2], Plus[Times[2, p], -1], Power[Times[Power[d, Times[2, n]], Plus[m, 1], Plus[m, n, 1]], -1]], Int[Times[Power[Times[d, x], Plus[m, Times[2, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, -1]]], x], x], Simp[Times[n, p, Power[Times[d, x], Plus[m, 1]], Plus[Times[2, a], Times[b, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, -1]], Power[Times[d, Plus[m, 1], Plus[m, n, 1]], -1]], x]]], And[FreeQ[List[a, b, c, d], x], EqQ[n2, Times[2, n]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p], Greater[p, 1], Less[Plus[m, n], -1], Not[And[NegativeIntegerQ[Times[Plus[m, Times[2, n, Plus[p, 1]], 1], Power[n, -1]]], Greater[Plus[Times[Plus[m, Times[2, n, Plus[p, 1]], 1], Power[n, -1]], p], 0]]], IntegerQ[Times[2, p]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[d, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Times[d, Plus[m, Times[2, n, p], 1]], -1]], x], Plus[Dist[Times[2, a, Power[n, 2], p, Plus[Times[2, p], -1], Power[Times[Plus[m, Times[2, n, p], 1], Plus[m, Times[n, Plus[Times[2, p], -1]], 1]], -1]], Int[Times[Power[Times[d, x], m], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, -1]]], x], x], Simp[Times[n, p, Power[Times[d, x], Plus[m, 1]], Plus[Times[2, a], Times[b, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, -1]], Power[Times[d, Plus[m, Times[2, n, p], 1], Plus[m, Times[n, Plus[Times[2, p], -1]], 1]], -1]], x]]], And[FreeQ[List[a, b, c, d, m], x], EqQ[n2, Times[2, n]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[p], Greater[p, 1], NonzeroQ[Plus[m, Times[2, n, p], 1]], NonzeroQ[Plus[m, Times[n, Plus[Times[2, p], -1]], 1]], Not[And[NegativeIntegerQ[Times[Plus[m, Times[2, n, Plus[p, 1]], 1], Power[n, -1]]], Greater[Plus[Times[Plus[m, Times[2, n, Plus[p, 1]], 1], Power[n, -1]], p], 0]]], Not[And[PositiveIntegerQ[m], IntegerQ[Times[Plus[m, 1], Power[n, -1]]], Less[Plus[Times[Plus[m, 1], Power[n, -1]], -1], Times[2, p]]]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[d, Plus[n, -1]], Plus[m, Times[n, Plus[Times[2, p], 1]], 1], Power[Times[d, x], Plus[m, Times[-1, n], 1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[b, Power[n, 2], Plus[p, 1], Plus[Times[2, p], 1]], -1]], x], Plus[Times[-1, Dist[Times[Power[d, n], Plus[m, Times[-1, n], 1], Plus[m, Times[n, Plus[Times[2, p], 1]], 1], Power[Times[b, Power[n, 2], Plus[p, 1], Plus[Times[2, p], 1]], -1]], Int[Times[Power[Times[d, x], Plus[m, Times[-1, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]]], x], x]], Times[-1, Simp[Times[Power[Times[d, x], Plus[m, 1]], Plus[b, Times[2, c, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Times[b, d, n, Plus[Times[2, p], 1]], -1]], x]]]], And[FreeQ[List[a, b, c, d], x], EqQ[n2, Times[2, n]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p], Less[p, -1], Inequality[Plus[n, -1], Less, m, LessEqual, Plus[Times[2, n], -1]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[d, Plus[Times[2, n], -1]], Plus[m, Times[-1, 3, n], Times[-1, 2, n, p], 1], Power[Times[d, x], Plus[m, Times[-1, 2, n], 1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[2, c, Power[n, 2], Plus[p, 1], Plus[Times[2, p], 1]], -1]], x]], Plus[Dist[Times[Power[d, Times[2, n]], Plus[m, Times[-1, n], 1], Plus[m, Times[-1, 2, n], 1], Power[Times[2, c, Power[n, 2], Plus[p, 1], Plus[Times[2, p], 1]], -1]], Int[Times[Power[Times[d, x], Plus[m, Times[-1, 2, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]]], x], x], Times[-1, Simp[Times[Power[d, Plus[Times[2, n], -1]], Power[Times[d, x], Plus[m, Times[-1, 2, n], 1]], Plus[Times[2, a], Times[b, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Times[2, c, n, Plus[Times[2, p], 1]], -1]], x]]]], And[FreeQ[List[a, b, c, d], x], EqQ[n2, Times[2, n]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p], Less[p, -1], Greater[m, Plus[Times[2, n], -1]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[m, Times[n, Plus[Times[2, p], 1]], 1], Power[Times[d, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[2, a, d, Power[n, 2], Plus[p, 1], Plus[Times[2, p], 1]], -1]], x]], Plus[Dist[Times[Plus[m, Times[n, Plus[Times[2, p], 1]], 1], Plus[m, Times[2, n, Plus[p, 1]], 1], Power[Times[2, a, Power[n, 2], Plus[p, 1], Plus[Times[2, p], 1]], -1]], Int[Times[Power[Times[d, x], m], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]]], x], x], Times[-1, Simp[Times[Power[Times[d, x], Plus[m, 1]], Plus[Times[2, a], Times[b, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Times[2, a, d, n, Plus[Times[2, p], 1]], -1]], x]]]], And[FreeQ[List[a, b, c, d, m], x], EqQ[n2, Times[2, n]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p], Less[p, -1], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[d, Plus[n, -1]], Power[Times[d, x], Plus[m, Times[-1, n], 1]], Plus[b, Times[2, c, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Times[2, c, Plus[m, Times[2, n, p], 1]], -1]], x], Times[-1, Dist[Times[b, Power[d, n], Plus[m, Times[-1, n], 1], Power[Times[2, c, Plus[m, Times[2, n, p], 1]], -1]], Int[Times[Power[Times[d, x], Plus[m, Times[-1, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x]]], And[FreeQ[List[a, b, c, d, p], x], EqQ[n2, Times[2, n]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m], Greater[m, Plus[n, -1]], NonzeroQ[Plus[m, Times[2, n, p], 1]], Or[IntegerQ[Times[2, p]], PositiveIntegerQ[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[d, x], Plus[m, 1]], Plus[b, Times[2, c, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Times[b, d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[2, c, Plus[m, Times[n, Plus[Times[2, p], 1]], 1], Power[Times[b, Power[d, n], Plus[m, 1]], -1]], Int[Times[Power[Times[d, x], Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x]]], And[FreeQ[List[a, b, c, d, p], x], EqQ[n2, Times[2, n]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m], Less[m, -1], Or[IntegerQ[Times[2, p]], PositiveIntegerQ[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[a, Times[b, Power[x, Times[-1, n]]], Times[c, Power[x, Times[-2, n]]]], p], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, b, c, p], x], EqQ[n2, Times[2, n]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[m]]], Times[-1, Dist[Times[k, Power[d, -1]], Subst[Int[Times[Power[Plus[a, Times[b, Power[d, Times[-1, n]], Power[x, Times[-1, k, n]]], Times[c, Power[d, Times[-2, n]], Power[x, Times[-2, k, n]]]], p], Power[Power[x, Plus[Times[k, Plus[m, 1]], 1]], -1]], x], x, Times[1, Power[Power[Times[d, x], Times[1, Power[k, -1]]], -1]]], x]]], And[FreeQ[List[a, b, c, d, p], x], EqQ[n2, Times[2, n]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[n], FractionQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[d, IntPart[m]], Power[Times[d, x], FracPart[m]], Power[Power[x, -1], FracPart[m]]], Subst[Int[Times[Power[Plus[a, Times[b, Power[x, Times[-1, n]]], Times[c, Power[x, Times[-2, n]]]], p], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, d, m, p], x], EqQ[n2, Times[2, n]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[n], Not[RationalQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], FracPart[p]], Power[Times[Power[c, IntPart[p]], Power[Plus[Times[b, Power[2, -1]], Times[c, Power[x, n]]], Times[2, FracPart[p]]]], -1]], Int[Times[Power[Times[d, x], m], Power[Plus[Times[b, Power[2, -1]], Times[c, Power[x, n]]], Times[2, p]]], x], x], And[FreeQ[List[a, b, c, d, m, n, p], x], EqQ[n2, Times[2, n]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, m, n, p], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[d, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[d, IntPart[m]], Power[Times[d, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, m, n, p], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, GCD[Plus[m, 1], n]]], Condition[Dist[Times[1, Power[k, -1]], Subst[Int[Times[Power[x, Plus[Times[Plus[m, 1], Power[k, -1]], -1]], Power[Plus[a, Times[b, Power[x, Times[n, Power[k, -1]]]], Times[c, Power[x, Times[2, n, Power[k, -1]]]]], p]], x], x, Power[x, k]], x], Unequal[k, 1]]], And[FreeQ[List[a, b, c, p], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[m]]], Dist[Times[k, Power[d, -1]], Subst[Int[Times[Power[x, Plus[Times[k, Plus[m, 1]], -1]], Power[Plus[a, Times[b, Power[x, Times[k, n]], Power[Power[d, n], -1]], Times[c, Power[x, Times[2, k, n]], Power[Power[d, Times[2, n]], -1]]], p]], x], x, Power[Times[d, x], Times[1, Power[k, -1]]]], x]], And[FreeQ[List[a, b, c, d, p], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], FractionQ[m], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[d, Plus[n, -1]], Power[Times[d, x], Plus[m, Times[-1, n], 1]], Plus[Times[b, n, p], Times[c, Plus[m, Times[n, Plus[Times[2, p], -1]], 1], Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Times[c, Plus[m, Times[2, n, p], 1], Plus[m, Times[n, Plus[Times[2, p], -1]], 1]], -1]], x], Times[-1, Dist[Times[n, p, Power[d, n], Power[Times[c, Plus[m, Times[2, n, p], 1], Plus[m, Times[n, Plus[Times[2, p], -1]], 1]], -1]], Int[Times[Power[Times[d, x], Plus[m, Times[-1, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, -1]], Simp[Plus[Times[a, b, Plus[m, Times[-1, n], 1]], Times[-1, Plus[Times[2, a, c, Plus[m, Times[n, Plus[Times[2, p], -1]], 1]], Times[-1, Power[b, 2], Plus[m, Times[n, Plus[p, -1]], 1]]], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, b, c, d], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p], Greater[p, 0], Greater[m, Plus[n, -1]], Unequal[Plus[m, Times[2, n, p], 1], 0], Unequal[Plus[m, Times[n, Plus[Times[2, p], -1]], 1], 0], Or[IntegerQ[p], And[IntegerQ[Times[2, p]], IntegerQ[m], Equal[n, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[d, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Times[d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[n, p, Power[Times[Power[d, n], Plus[m, 1]], -1]], Int[Times[Power[Times[d, x], Plus[m, n]], Plus[b, Times[2, c, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, c, d], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p], Greater[p, 0], Less[m, -1], Or[IntegerQ[p], And[IntegerQ[Times[2, p]], IntegerQ[m], Equal[n, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[d, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Times[d, Plus[m, Times[2, n, p], 1]], -1]], x], Dist[Times[n, p, Power[Plus[m, Times[2, n, p], 1], -1]], Int[Times[Power[Times[d, x], m], Plus[Times[2, a], Times[b, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, d, m], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[p], Greater[p, 0], NonzeroQ[Plus[m, Times[2, n, p], 1]], Or[IntegerQ[p], And[IntegerQ[Times[2, p]], IntegerQ[m], Equal[n, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[d, Plus[n, -1]], Power[Times[d, x], Plus[m, Times[-1, n], 1]], Plus[b, Times[2, c, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x], Times[-1, Dist[Times[Power[d, n], Power[Times[n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Times[d, x], Plus[m, Times[-1, n]]], Plus[Times[b, Plus[m, Times[-1, n], 1]], Times[2, c, Plus[m, Times[2, n, Plus[p, 1]], 1], Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, c, d], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p], Less[p, -1], Inequality[Plus[n, -1], Less, m, LessEqual, Plus[Times[2, n], -1]], Or[IntegerQ[p], And[IntegerQ[Times[2, p]], IntegerQ[m], Equal[n, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[d, Plus[Times[2, n], -1]], Power[Times[d, x], Plus[m, Times[-1, 2, n], 1]], Plus[Times[2, a], Times[b, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x]], Dist[Times[Power[d, Times[2, n]], Power[Times[n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Times[d, x], Plus[m, Times[-1, 2, n]]], Plus[Times[2, a, Plus[m, Times[-1, 2, n], 1]], Times[b, Plus[m, Times[n, Plus[Times[2, p], 1]], 1], Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, d], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p], Less[p, -1], Greater[m, Plus[Times[2, n], -1]], Or[IntegerQ[p], And[IntegerQ[Times[2, p]], IntegerQ[m], Equal[n, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[d, x], Plus[m, 1]], Plus[Power[b, 2], Times[-1, 2, a, c], Times[b, c, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[a, d, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x]], Dist[Times[1, Power[Times[a, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Times[d, x], m], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Simp[Plus[Times[Power[b, 2], Plus[Times[n, Plus[p, 1]], m, 1]], Times[-1, 2, a, c, Plus[m, Times[2, n, Plus[p, 1]], 1]], Times[b, c, Plus[Times[2, n, p], Times[3, n], m, 1], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, m], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[p], Less[p, -1], Or[IntegerQ[p], And[IntegerQ[Times[2, p]], IntegerQ[m], Equal[n, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[d, Plus[Times[2, n], -1]], Power[Times[d, x], Plus[m, Times[-1, 2, n], 1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[2, n, p], 1]], -1]], x], Times[-1, Dist[Times[Power[d, Times[2, n]], Power[Times[c, Plus[m, Times[2, n, p], 1]], -1]], Int[Times[Power[Times[d, x], Plus[m, Times[-1, 2, n]]], Simp[Plus[Times[a, Plus[m, Times[-1, 2, n], 1]], Times[b, Plus[m, Times[n, Plus[p, -1]], 1], Power[x, n]]], x], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x]]], And[FreeQ[List[a, b, c, d, p], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m], Greater[m, Plus[Times[2, n], -1]], NonzeroQ[Plus[m, Times[2, n, p], 1]], Or[IntegerQ[p], And[IntegerQ[Times[2, p]], IntegerQ[m], Equal[n, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[d, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[a, d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[a, Power[d, n], Plus[m, 1]], -1]], Int[Times[Power[Times[d, x], Plus[m, n]], Plus[Times[b, Plus[m, Times[n, Plus[p, 1]], 1]], Times[c, Plus[m, Times[2, n, Plus[p, 1]], 1], Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x]]], And[FreeQ[List[a, b, c, d, p], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m], Less[m, -1], Or[IntegerQ[p], And[IntegerQ[Times[2, p]], IntegerQ[m], Equal[n, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[d, x], Plus[m, 1]], Power[Times[a, d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[a, Power[d, n]], -1]], Int[Times[Power[Times[d, x], Plus[m, n]], Plus[b, Times[c, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[PolynomialDivide[Power[x, m], Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], x], x], And[FreeQ[List[a, b, c], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], IntegerQ[m], Greater[m, Plus[Times[3, n], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[d, Plus[Times[2, n], -1]], Power[Times[d, x], Plus[m, Times[-1, 2, n], 1]], Power[Times[c, Plus[m, Times[-1, 2, n], 1]], -1]], x], Times[-1, Dist[Times[Power[d, Times[2, n]], Power[c, -1]], Int[Times[Power[Times[d, x], Plus[m, Times[-1, 2, n]]], Plus[a, Times[b, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m], Greater[m, Plus[Times[2, n], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[a, Power[c, -1]], 2]]], Plus[Dist[Times[1, Power[2, -1]], Int[Times[Plus[q, Power[x, 2]], Power[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]], -1]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Times[Plus[q, Times[-1, Power[x, 2]]], Power[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]], -1]], x], x]]]], And[FreeQ[List[a, b, c], x], NegativeQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PosQ[Times[a, c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[a, Power[c, -1]], 2]]], With[List[Set[r, Rt[Plus[Times[2, q], Times[-1, b, Power[c, -1]]], 2]]], Plus[Times[-1, Dist[Times[1, Power[Times[2, c, r], -1]], Int[Times[Power[x, Plus[m, Times[-1, 3, Times[n, Power[2, -1]]]]], Plus[q, Times[-1, r, Power[x, Times[n, Power[2, -1]]]]], Power[Plus[q, Times[-1, r, Power[x, Times[n, Power[2, -1]]]], Power[x, n]], -1]], x], x]], Dist[Times[1, Power[Times[2, c, r], -1]], Int[Times[Power[x, Plus[m, Times[-1, 3, Times[n, Power[2, -1]]]]], Plus[q, Times[r, Power[x, Times[n, Power[2, -1]]]]], Power[Plus[q, Times[r, Power[x, Times[n, Power[2, -1]]]], Power[x, n]], -1]], x], x]]]], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[Times[n, Power[2, -1]], m], Inequality[Times[3, n, Power[2, -1]], LessEqual, m, Less, Times[2, n]], NegQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[a, Power[c, -1]], 2]]], With[List[Set[r, Rt[Plus[Times[2, q], Times[-1, b, Power[c, -1]]], 2]]], Plus[Dist[Times[1, Power[Times[2, c, r], -1]], Int[Times[Power[x, Plus[m, Times[-1, n, Power[2, -1]]]], Power[Plus[q, Times[-1, r, Power[x, Times[n, Power[2, -1]]]], Power[x, n]], -1]], x], x], Times[-1, Dist[Times[1, Power[Times[2, c, r], -1]], Int[Times[Power[x, Plus[m, Times[-1, n, Power[2, -1]]]], Power[Plus[q, Times[r, Power[x, Times[n, Power[2, -1]]]], Power[x, n]], -1]], x], x]]]]], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[Times[n, Power[2, -1]], m], Inequality[Times[n, Power[2, -1]], LessEqual, m, Less, Times[3, n, Power[2, -1]]], NegQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Times[Power[d, n], Power[2, -1], Plus[Times[b, Power[q, -1]], 1]], Int[Times[Power[Times[d, x], Plus[m, Times[-1, n]]], Power[Plus[Times[b, Power[2, -1]], Times[q, Power[2, -1]], Times[c, Power[x, n]]], -1]], x], x], Times[-1, Dist[Times[Power[d, n], Power[2, -1], Plus[Times[b, Power[q, -1]], -1]], Int[Times[Power[Times[d, x], Plus[m, Times[-1, n]]], Power[Plus[Times[b, Power[2, -1]], Times[-1, q, Power[2, -1]], Times[c, Power[x, n]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m], GreaterEqual[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Times[c, Power[q, -1]], Int[Times[Power[Times[d, x], m], Power[Plus[Times[b, Power[2, -1]], Times[-1, q, Power[2, -1]], Times[c, Power[x, n]]], -1]], x], x], Times[-1, Dist[Times[c, Power[q, -1]], Int[Times[Power[Times[d, x], m], Power[Plus[Times[b, Power[2, -1]], Times[q, Power[2, -1]], Times[c, Power[x, n]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, m], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Dist[Times[2, Sqrt[Times[-1, c]]], Int[Times[Power[x, 2], Power[Times[Sqrt[Plus[b, q, Times[2, c, Power[x, 2]]]], Sqrt[Plus[Times[-1, b], q, Times[-1, 2, c, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, b, c], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeQ[c]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[c, Power[a, -1]], 2]]], Plus[Dist[Times[1, Power[q, -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x], Times[-1, Dist[Times[1, Power[q, -1]], Int[Times[Plus[1, Times[-1, q, Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveQ[Times[c, Power[a, -1]]], NegativeQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Times[-1, Dist[Times[Plus[b, Times[-1, q]], Power[Times[2, c], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x]], Dist[Times[1, Power[Times[2, c], -1]], Int[Times[Plus[b, Times[-1, q], Times[2, c, Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x]]], And[FreeQ[List[a, b, c], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeQ[a], PositiveQ[c]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Condition[Plus[Simp[Times[x, Plus[b, q, Times[2, c, Power[x, 2]]], Power[Times[2, c, Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1]], x], Times[-1, Simp[Times[Rt[Times[Plus[b, q], Power[Times[2, a], -1]], 2], Plus[Times[2, a], Times[Plus[b, q], Power[x, 2]]], Sqrt[Times[Plus[Times[2, a], Times[Plus[b, Times[-1, q]], Power[x, 2]]], Power[Plus[Times[2, a], Times[Plus[b, q], Power[x, 2]]], -1]]], Power[Times[2, c, Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1], EllipticE[ArcTan[Times[Rt[Times[Plus[b, q], Power[Times[2, a], -1]], 2], x]], Times[2, q, Power[Plus[b, q], -1]]]], x]]], And[PosQ[Times[Plus[b, q], Power[a, -1]]], Not[And[PosQ[Times[Plus[b, Times[-1, q]], Power[a, -1]]], SimplerSqrtQ[Times[Plus[b, Times[-1, q]], Power[Times[2, a], -1]], Times[Plus[b, q], Power[Times[2, a], -1]]]]]]]], And[FreeQ[List[a, b, c], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Condition[Plus[Simp[Times[x, Plus[b, Times[-1, q], Times[2, c, Power[x, 2]]], Power[Times[2, c, Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1]], x], Times[-1, Simp[Times[Rt[Times[Plus[b, Times[-1, q]], Power[Times[2, a], -1]], 2], Plus[Times[2, a], Times[Plus[b, Times[-1, q]], Power[x, 2]]], Sqrt[Times[Plus[Times[2, a], Times[Plus[b, q], Power[x, 2]]], Power[Plus[Times[2, a], Times[Plus[b, Times[-1, q]], Power[x, 2]]], -1]]], Power[Times[2, c, Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1], EllipticE[ArcTan[Times[Rt[Times[Plus[b, Times[-1, q]], Power[Times[2, a], -1]], 2], x]], Times[-2, q, Power[Plus[b, Times[-1, q]], -1]]]], x]]], PosQ[Times[Plus[b, Times[-1, q]], Power[a, -1]]]]], And[FreeQ[List[a, b, c], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Condition[Plus[Times[-1, Dist[Times[Plus[b, q], Power[Times[2, c], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x]], Dist[Times[1, Power[Times[2, c], -1]], Int[Times[Plus[b, q, Times[2, c, Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x]], And[NegQ[Times[Plus[b, q], Power[a, -1]]], Not[And[NegQ[Times[Plus[b, Times[-1, q]], Power[a, -1]]], SimplerSqrtQ[Times[-1, Plus[b, Times[-1, q]], Power[Times[2, a], -1]], Times[-1, Plus[b, q], Power[Times[2, a], -1]]]]]]]], And[FreeQ[List[a, b, c], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Condition[Plus[Times[-1, Dist[Times[Plus[b, Times[-1, q]], Power[Times[2, c], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x]], Dist[Times[1, Power[Times[2, c], -1]], Int[Times[Plus[b, Times[-1, q], Times[2, c, Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x]], NegQ[Times[Plus[b, Times[-1, q]], Power[a, -1]]]]], And[FreeQ[List[a, b, c], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[c, Power[a, -1]], 2]]], Plus[Dist[Times[1, Power[q, -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x], Times[-1, Dist[Times[1, Power[q, -1]], Int[Times[Plus[1, Times[-1, q, Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PosQ[Times[c, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Dist[Times[Sqrt[Plus[1, Times[2, c, Power[x, 2], Power[Plus[b, Times[-1, q]], -1]]]], Sqrt[Plus[1, Times[2, c, Power[x, 2], Power[Plus[b, q], -1]]]], Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], Int[Times[Power[x, 2], Power[Times[Sqrt[Plus[1, Times[2, c, Power[x, 2], Power[Plus[b, Times[-1, q]], -1]]]], Sqrt[Plus[1, Times[2, c, Power[x, 2], Power[Plus[b, q], -1]]]]], -1]], x], x]], And[FreeQ[List[a, b, c], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegQ[Times[c, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[a, Times[b, Power[x, Times[-1, n]]], Times[c, Power[x, Times[-2, n]]]], p], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, b, c, p], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[m]]], Times[-1, Dist[Times[k, Power[d, -1]], Subst[Int[Times[Power[Plus[a, Times[b, Power[d, Times[-1, n]], Power[x, Times[-1, k, n]]], Times[c, Power[d, Times[-2, n]], Power[x, Times[-2, k, n]]]], p], Power[Power[x, Plus[Times[k, Plus[m, 1]], 1]], -1]], x], x, Times[1, Power[Power[Times[d, x], Times[1, Power[k, -1]]], -1]]], x]]], And[FreeQ[List[a, b, c, d, p], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[n], FractionQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[d, IntPart[m]], Power[Times[d, x], FracPart[m]], Power[Power[x, -1], FracPart[m]]], Subst[Int[Times[Power[Plus[a, Times[b, Power[x, Times[-1, n]]], Times[c, Power[x, Times[-2, n]]]], p], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, d, m, p], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[n], Not[RationalQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[n]]], Dist[k, Subst[Int[Times[Power[x, Plus[Times[k, Plus[m, 1]], -1]], Power[Plus[a, Times[b, Power[x, Times[k, n]]], Times[c, Power[x, Times[2, k, n]]]], p]], x], x, Power[x, Times[1, Power[k, -1]]]], x]], And[FreeQ[List[a, b, c, m, p], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[d, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[d, IntPart[m]], Power[Times[d, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, m, p], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Plus[m, 1], -1]], Subst[Int[Power[Plus[a, Times[b, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]], Times[c, Power[x, Simplify[Times[2, n, Power[Plus[m, 1], -1]]]]]], p], x], x, Power[x, Plus[m, 1]]], x], And[FreeQ[List[a, b, c, m, n, p], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[d, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[d, IntPart[m]], Power[Times[d, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, m, n, p], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Times[2, c, Power[q, -1]], Int[Times[Power[Times[d, x], m], Power[Plus[b, Times[-1, q], Times[2, c, Power[x, n]]], -1]], x], x], Times[-1, Dist[Times[2, c, Power[q, -1]], Int[Times[Power[Times[d, x], m], Power[Plus[b, q, Times[2, c, Power[x, n]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, m, n], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[d, x], Plus[m, 1]], Plus[Power[b, 2], Times[-1, 2, a, c], Times[b, c, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[a, d, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x]], Dist[Times[1, Power[Times[a, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Times[d, x], m], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Simp[Plus[Times[Power[b, 2], Plus[Times[n, Plus[p, 1]], m, 1]], Times[-1, 2, a, c, Plus[m, Times[2, n, Plus[p, 1]], 1]], Times[b, c, Plus[Times[2, n, p], Times[3, n], m, 1], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, m, n], x], EqQ[n2, Times[2, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, IntPart[p]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], FracPart[p]], Power[Times[Power[Plus[1, Times[2, c, Power[x, n], Power[Plus[b, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]], -1]]], FracPart[p]], Power[Plus[1, Times[2, c, Power[x, n], Power[Plus[b, Times[-1, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], -1]]], FracPart[p]]], -1]], Int[Times[Power[Times[d, x], m], Power[Plus[1, Times[2, c, Power[x, n], Power[Plus[b, Sqrt[Plus[Power[b, 2], Times[-1, 4, a, c]]]], -1]]], p], Power[Plus[1, Times[2, c, Power[x, n], Power[Plus[b, Times[-1, Sqrt[Plus[Power[b, 2], Times[-1, 4, a, c]]]]], -1]]], p]], x], x], And[FreeQ[List[a, b, c, d, m, n, p], x], EqQ[n2, Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[mn, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Plus[m, Times[-1, n, p]]], Power[Plus[b, Times[a, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], And[FreeQ[List[a, b, c, m, n], x], EqQ[mn, Times[-1, n]], IntegerQ[p], PosQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[mn, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[x, Times[n, FracPart[p]]], Power[Plus[a, Times[b, Power[Power[x, n], -1]], Times[c, Power[x, n]]], FracPart[p]], Power[Power[Plus[b, Times[a, Power[x, n]], Times[c, Power[x, Times[2, n]]]], FracPart[p]], -1]], Int[Times[Power[x, Plus[m, Times[-1, n, p]]], Power[Plus[b, Times[a, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, m, n, p], x], EqQ[mn, Times[-1, n]], Not[IntegerQ[p]], PosQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[d, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[mn, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[d, IntPart[m]], Power[Times[d, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, Times[-1, n]]], Times[c, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, d, m, n, p], x], EqQ[mn, Times[-1, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[v, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[Coefficient[v, x, 1], Plus[m, 1]], -1]], Subst[Int[SimplifyIntegrand[Times[Power[Plus[x, Times[-1, Coefficient[v, x, 0]]], m], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], x, v], x], And[FreeQ[List[a, b, c, n, p], x], EqQ[n2, Times[2, n]], LinearQ[v, x], IntegerQ[m], NonzeroQ[Plus[v, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[v, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[u, m], Power[Times[Coefficient[v, x, 1], Power[v, m]], -1]], Subst[Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x, v], x], And[FreeQ[List[a, b, c, m, n, p], x], EqQ[n2, Times[2, n]], LinearPairQ[u, v, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Times[n, Plus[Times[2, p], q]]], Power[Plus[e, Times[d, Power[x, Times[-1, n]]]], q], Power[Plus[c, Times[b, Power[x, Times[-1, n]]], Times[a, Power[x, Times[-2, n]]]], p]], x], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], IntegersQ[p, q], NegQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Times[n, Plus[Times[2, p], q]]], Power[Plus[e, Times[d, Power[x, Times[-1, n]]]], q], Power[Plus[c, Times[a, Power[x, Times[-2, n]]]], p]], x], And[FreeQ[List[a, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], IntegersQ[p, q], NegQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[d, Times[e, Power[x, Times[-1, n]]]], q], Power[Plus[a, Times[b, Power[x, Times[-1, n]]], Times[c, Power[x, Times[-2, n]]]], p], Power[Power[x, 2], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, b, c, d, e, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[d, Times[e, Power[x, Times[-1, n]]]], q], Power[Plus[a, Times[c, Power[x, Times[-2, n]]]], p], Power[Power[x, 2], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, c, d, e, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[g, Denominator[n]]], Dist[g, Subst[Int[Times[Power[x, Plus[g, -1]], Power[Plus[d, Times[e, Power[x, Times[g, n]]]], q], Power[Plus[a, Times[b, Power[x, Times[g, n]]], Times[c, Power[x, Times[2, g, n]]]], p]], x], x, Power[x, Times[1, Power[g, -1]]]], x]], And[FreeQ[List[a, b, c, d, e, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[g, Denominator[n]]], Dist[g, Subst[Int[Times[Power[x, Plus[g, -1]], Power[Plus[d, Times[e, Power[x, Times[g, n]]]], q], Power[Plus[a, Times[c, Power[x, Times[2, g, n]]]], p]], x], x, Power[x, Times[1, Power[g, -1]]]], x]], And[FreeQ[List[a, c, d, e, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[b, e], Times[-1, d, c]], Power[Plus[Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[b, c, n, Plus[p, 1], Power[x, Times[2, n, Plus[p, 1]]]], -1]], x], Dist[Times[e, Power[c, -1]], Int[Times[Power[x, Times[-1, n]], Power[Plus[Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]]], x], x]], And[FreeQ[List[b, c, d, e, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], Not[IntegerQ[p]], ZeroQ[Plus[Times[n, Plus[Times[2, p], 1]], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[e, Power[x, Plus[Times[-1, n], 1]], Power[Plus[Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[c, Plus[Times[n, Plus[Times[2, p], 1]], 1]], -1]], x], And[FreeQ[List[b, c, d, e, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], Not[IntegerQ[p]], NonzeroQ[Plus[Times[n, Plus[Times[2, p], 1]], 1]], ZeroQ[Plus[Times[b, e, Plus[Times[n, p], 1]], Times[-1, c, d, Plus[Times[n, Plus[Times[2, p], 1]], 1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[x, Plus[Times[-1, n], 1]], Power[Plus[Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[c, Plus[Times[n, Plus[Times[2, p], 1]], 1]], -1]], x], Times[-1, Dist[Times[Plus[Times[b, e, Plus[Times[n, p], 1]], Times[-1, c, d, Plus[Times[n, Plus[Times[2, p], 1]], 1]]], Power[Times[c, Plus[Times[n, Plus[Times[2, p], 1]], 1]], -1]], Int[Power[Plus[Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], x], x]]], And[FreeQ[List[b, c, d, e, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], Not[IntegerQ[p]], NonzeroQ[Plus[Times[n, Plus[Times[2, p], 1]], 1]], NonzeroQ[Plus[Times[b, e, Plus[Times[n, p], 1]], Times[-1, c, d, Plus[Times[n, Plus[Times[2, p], 1]], 1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], FracPart[p]], Power[Times[Power[x, Times[n, FracPart[p]]], Power[Plus[b, Times[c, Power[x, n]]], FracPart[p]]], -1]], Int[Times[Power[x, Times[n, p]], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[b, Times[c, Power[x, n]]], p]], x], x], And[FreeQ[List[b, c, d, e, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], FracPart[p]], Power[Times[Power[Times[4, c], IntPart[p]], Power[Plus[b, Times[2, c, Power[x, n]]], Times[2, FracPart[p]]]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[b, Times[2, c, Power[x, n]]], Times[2, p]]], x], x], And[FreeQ[List[a, b, c, d, e, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, Power[x, n]]], Plus[p, q]], Power[Plus[Times[a, Power[d, -1]], Times[c, Power[e, -1], Power[x, n]]], p]], x], And[FreeQ[List[a, b, c, d, e, n, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, Power[x, n]]], Plus[p, q]], Power[Plus[Times[a, Power[d, -1]], Times[c, Power[e, -1], Power[x, n]]], p]], x], And[FreeQ[List[a, c, d, e, n, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], FracPart[p]], Power[Times[Power[Plus[d, Times[e, Power[x, n]]], FracPart[p]], Power[Plus[Times[a, Power[d, -1]], Times[Times[c, Power[x, n]], Power[e, -1]]], FracPart[p]]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, n]]], Plus[p, q]], Power[Plus[Times[a, Power[d, -1]], Times[c, Power[e, -1], Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[c, Power[x, Times[2, n]]]], FracPart[p]], Power[Times[Power[Plus[d, Times[e, Power[x, n]]], FracPart[p]], Power[Plus[Times[a, Power[d, -1]], Times[Times[c, Power[x, n]], Power[e, -1]]], FracPart[p]]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, n]]], Plus[p, q]], Power[Plus[Times[a, Power[d, -1]], Times[c, Power[e, -1], Power[x, n]]], p]], x], x], And[FreeQ[List[a, c, d, e, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, Power[x, n]]], q], Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]]], x], x], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], PositiveIntegerQ[q]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, Power[x, n]]], q], Plus[a, Times[c, Power[x, Times[2, n]]]]], x], x], And[FreeQ[List[a, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], PositiveIntegerQ[q]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], x, Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], Power[Times[d, Power[e, 2], n, Plus[q, 1]], -1]], x]], Dist[Times[1, Power[Times[n, Plus[q, 1], d, Power[e, 2]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], Simp[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2], Plus[Times[n, Plus[q, 1]], 1]], Times[c, d, e, n, Plus[q, 1], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], RationalQ[q], Less[q, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], x, Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], Power[Times[d, Power[e, 2], n, Plus[q, 1]], -1]], x]], Dist[Times[1, Power[Times[n, Plus[q, 1], d, Power[e, 2]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], Simp[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2], Plus[Times[n, Plus[q, 1]], 1]], Times[c, d, e, n, Plus[q, 1], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[q], Less[q, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[c, Power[x, Plus[n, 1]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], Power[Times[e, Plus[Times[n, Plus[q, 2]], 1]], -1]], x], Dist[Times[1, Power[Times[e, Plus[Times[n, Plus[q, 2]], 1]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, n]]], q], Plus[Times[a, e, Plus[Times[n, Plus[q, 2]], 1]], Times[-1, Plus[Times[c, d, Plus[n, 1]], Times[-1, b, e, Plus[Times[n, Plus[q, 2]], 1]]], Power[x, n]]]], x], x]], And[FreeQ[List[a, b, c, d, e, n, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[c, Power[x, Plus[n, 1]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], Power[Times[e, Plus[Times[n, Plus[q, 2]], 1]], -1]], x], Dist[Times[1, Power[Times[e, Plus[Times[n, Plus[q, 2]], 1]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, n]]], q], Plus[Times[a, e, Plus[Times[n, Plus[q, 2]], 1]], Times[-1, c, d, Plus[n, 1], Power[x, n]]]], x], x]], And[FreeQ[List[a, c, d, e, n, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[2, d, e], 2]]], Plus[Dist[Times[Power[e, 2], Power[Times[2, c], -1]], Int[Times[1, Power[Plus[d, Times[q, Power[x, Times[n, Power[2, -1]]]], Times[e, Power[x, n]]], -1]], x], x], Dist[Times[Power[e, 2], Power[Times[2, c], -1]], Int[Times[1, Power[Plus[d, Times[-1, q, Power[x, Times[n, Power[2, -1]]]], Times[e, Power[x, n]]], -1]], x], x]]], And[FreeQ[List[a, c, d, e], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, a, Power[e, 2]]]], PositiveIntegerQ[Times[n, Power[2, -1]]], PosQ[Times[d, e]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-2, d, e], 2]]], Plus[Dist[Times[d, Power[Times[2, a], -1]], Int[Times[Plus[d, Times[-1, q, Power[x, Times[n, Power[2, -1]]]]], Power[Plus[d, Times[-1, q, Power[x, Times[n, Power[2, -1]]]], Times[-1, e, Power[x, n]]], -1]], x], x], Dist[Times[d, Power[Times[2, a], -1]], Int[Times[Plus[d, Times[q, Power[x, Times[n, Power[2, -1]]]]], Power[Plus[d, Times[q, Power[x, Times[n, Power[2, -1]]]], Times[-1, e, Power[x, n]]], -1]], x], x]]], And[FreeQ[List[a, c, d, e], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, a, Power[e, 2]]]], PositiveIntegerQ[Times[n, Power[2, -1]]], NegQ[Times[d, e]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[a, c], 2]]], Plus[Dist[Times[Plus[Times[d, q], Times[a, e]], Power[Times[2, a, c], -1]], Int[Times[Plus[q, Times[c, Power[x, 2]]], Power[Plus[a, Times[c, Power[x, 4]]], -1]], x], x], Dist[Times[Plus[Times[d, q], Times[-1, a, e]], Power[Times[2, a, c], -1]], Int[Times[Plus[q, Times[-1, c, Power[x, 2]]], Power[Plus[a, Times[c, Power[x, 4]]], -1]], x], x]]], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, a, Power[e, 2]]]], PosQ[Times[a, c]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[a, Power[c, -1]], 4]]], Plus[Dist[Times[1, Power[Times[2, Sqrt[2], c, Power[q, 3]], -1]], Int[Times[Plus[Times[Sqrt[2], d, q], Times[-1, Plus[d, Times[-1, e, Power[q, 2]]], Power[x, Times[n, Power[2, -1]]]]], Power[Plus[Power[q, 2], Times[-1, Sqrt[2], q, Power[x, Times[n, Power[2, -1]]]], Power[x, n]], -1]], x], x], Dist[Times[1, Power[Times[2, Sqrt[2], c, Power[q, 3]], -1]], Int[Times[Plus[Times[Sqrt[2], d, q], Times[Plus[d, Times[-1, e, Power[q, 2]]], Power[x, Times[n, Power[2, -1]]]]], Power[Plus[Power[q, 2], Times[Sqrt[2], q, Power[x, Times[n, Power[2, -1]]]], Power[x, n]], -1]], x], x]]], And[FreeQ[List[a, c, d, e], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, a, Power[e, 2]]]], PositiveIntegerQ[Times[n, Power[2, -1]]], PosQ[Times[a, c]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 6]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[c, Power[a, -1]], 6]]], Plus[Dist[Times[1, Power[Times[3, a, Power[q, 2]], -1]], Int[Times[Plus[Times[Power[q, 2], d], Times[-1, e, x]], Power[Plus[1, Times[Power[q, 2], Power[x, 2]]], -1]], x], x], Plus[Dist[Times[1, Power[Times[6, a, Power[q, 2]], -1]], Int[Times[Plus[Times[2, Power[q, 2], d], Times[-1, Plus[Times[Sqrt[3], Power[q, 3], d], Times[-1, e]], x]], Power[Plus[1, Times[-1, Sqrt[3], q, x], Times[Power[q, 2], Power[x, 2]]], -1]], x], x], Dist[Times[1, Power[Times[6, a, Power[q, 2]], -1]], Int[Times[Plus[Times[2, Power[q, 2], d], Times[Plus[Times[Sqrt[3], Power[q, 3], d], e], x]], Power[Plus[1, Times[Sqrt[3], q, x], Times[Power[q, 2], Power[x, 2]]], -1]], x], x]]]], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], PosQ[Times[c, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, a, Power[c, -1]], 2]]], Plus[Dist[Times[Plus[d, Times[e, q]], Power[2, -1]], Int[Times[1, Power[Plus[a, Times[c, q, Power[x, n]]], -1]], x], x], Dist[Times[Plus[d, Times[-1, e, q]], Power[2, -1]], Int[Times[1, Power[Plus[a, Times[-1, c, q, Power[x, n]]], -1]], x], x]]], And[FreeQ[List[a, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], NegQ[Times[a, c]], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[d, Int[Times[1, Power[Plus[a, Times[c, Power[x, Times[2, n]]]], -1]], x], x], Dist[e, Int[Times[Power[x, n], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], -1]], x], x]], And[FreeQ[List[a, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Or[PosQ[Times[a, c]], Not[IntegerQ[n]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Times[2, d, Power[e, -1]], Times[-1, b, Power[c, -1]]], 2]]], Plus[Dist[Times[Power[e, 2], Power[Times[2, c], -1]], Int[Times[1, Power[Plus[d, Times[e, q, Power[x, Times[n, Power[2, -1]]]], Times[e, Power[x, n]]], -1]], x], x], Dist[Times[Power[e, 2], Power[Times[2, c], -1]], Int[Times[1, Power[Plus[d, Times[-1, e, q, Power[x, Times[n, Power[2, -1]]]], Times[e, Power[x, n]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, a, Power[e, 2]]]], PositiveIntegerQ[Times[n, Power[2, -1]]], Or[PositiveQ[Plus[Times[2, d, Power[e, -1]], Times[-1, b, Power[c, -1]]]], And[Not[NegativeQ[Plus[Times[2, d, Power[e, -1]], Times[-1, b, Power[c, -1]]]]], ZeroQ[Plus[d, Times[-1, e, Rt[Times[a, Power[c, -1]], 2]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Plus[Times[e, Power[2, -1]], Times[Plus[Times[2, c, d], Times[-1, b, e]], Power[Times[2, q], -1]]], Int[Times[1, Power[Plus[Times[b, Power[2, -1]], Times[-1, q, Power[2, -1]], Times[c, Power[x, n]]], -1]], x], x], Dist[Plus[Times[e, Power[2, -1]], Times[-1, Plus[Times[2, c, d], Times[-1, b, e]], Power[Times[2, q], -1]]], Int[Times[1, Power[Plus[Times[b, Power[2, -1]], Times[q, Power[2, -1]], Times[c, Power[x, n]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, a, Power[e, 2]]]], PositiveIntegerQ[Times[n, Power[2, -1]]], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[a, Power[c, -1]], 2]]], With[List[Set[r, Rt[Plus[Times[2, q], Times[-1, b, Power[c, -1]]], 2]]], Plus[Dist[Times[1, Power[Times[2, c, q, r], -1]], Int[Times[Plus[Times[d, r], Times[-1, Plus[d, Times[-1, e, q]], Power[x, Times[n, Power[2, -1]]]]], Power[Plus[q, Times[-1, r, Power[x, Times[n, Power[2, -1]]]], Power[x, n]], -1]], x], x], Dist[Times[1, Power[Times[2, c, q, r], -1]], Int[Times[Plus[Times[d, r], Times[Plus[d, Times[-1, e, q]], Power[x, Times[n, Power[2, -1]]]]], Power[Plus[q, Times[r, Power[x, Times[n, Power[2, -1]]]], Power[x, n]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, a, Power[e, 2]]]], PositiveIntegerQ[Times[n, Power[2, -1]]], Not[PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Plus[Times[e, Power[2, -1]], Times[Plus[Times[2, c, d], Times[-1, b, e]], Power[Times[2, q], -1]]], Int[Times[1, Power[Plus[Times[b, Power[2, -1]], Times[-1, q, Power[2, -1]], Times[c, Power[x, n]]], -1]], x], x], Dist[Plus[Times[e, Power[2, -1]], Times[-1, Plus[Times[2, c, d], Times[-1, b, e]], Power[Times[2, q], -1]]], Int[Times[1, Power[Plus[Times[b, Power[2, -1]], Times[q, Power[2, -1]], Times[c, Power[x, n]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Or[PosQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[PositiveIntegerQ[Times[n, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[a, Power[c, -1]], 2]]], With[List[Set[r, Rt[Plus[Times[2, q], Times[-1, b, Power[c, -1]]], 2]]], Plus[Dist[Times[1, Power[Times[2, c, q, r], -1]], Int[Times[Plus[Times[d, r], Times[-1, Plus[d, Times[-1, e, q]], Power[x, Times[n, Power[2, -1]]]]], Power[Plus[q, Times[-1, r, Power[x, Times[n, Power[2, -1]]]], Power[x, n]], -1]], x], x], Dist[Times[1, Power[Times[2, c, q, r], -1]], Int[Times[Plus[Times[d, r], Times[Plus[d, Times[-1, e, q]], Power[x, Times[n, Power[2, -1]]]]], Power[Plus[q, Times[r, Power[x, Times[n, Power[2, -1]]]], Power[x, n]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], PositiveIntegerQ[Times[n, Power[2, -1]]], NegQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], IntegerQ[q]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], -1]], x], x], And[FreeQ[List[a, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], IntegerQ[q]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Power[e, 2], Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], -1]], Int[Power[Plus[d, Times[e, Power[x, n]]], q], x], x], Dist[Times[1, Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], Plus[Times[c, d], Times[-1, b, e], Times[-1, c, e, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[q]], RationalQ[q], Less[q, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Power[e, 2], Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], -1]], Int[Power[Plus[d, Times[e, Power[x, n]]], q], x], x], Dist[Times[c, Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], Plus[d, Times[-1, e, Power[x, n]]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], -1]], x], x]], And[FreeQ[List[a, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[q]], RationalQ[q], Less[q, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Times[2, c, Power[r, -1]], Int[Times[Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[b, Times[-1, r], Times[2, c, Power[x, n]]], -1]], x], x], Times[-1, Dist[Times[2, c, Power[r, -1]], Int[Times[Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[b, r, Times[2, c, Power[x, n]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, n, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[q]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Times[-1, a, c], 2]]], Plus[Times[-1, Dist[Times[c, Power[Times[2, r], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[r, Times[-1, c, Power[x, n]]], -1]], x], x]], Times[-1, Dist[Times[c, Power[Times[2, r], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[r, Times[c, Power[x, n]]], -1]], x], x]]]], And[FreeQ[List[a, c, d, e, n, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[q]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Plus[Times[b, e, n, p], Times[c, d, Plus[Times[2, n, p], n, 1]], Times[c, e, Plus[Times[2, n, p], 1], Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Times[c, Plus[Times[2, n, p], 1], Plus[Times[2, n, p], n, 1]], -1]], x], Dist[Times[n, p, Power[Times[c, Plus[Times[2, n, p], 1], Plus[Times[2, n, p], n, 1]], -1]], Int[Times[Simp[Plus[Times[2, a, c, d, Plus[Times[2, n, p], n, 1]], Times[-1, a, b, e], Times[Plus[Times[2, a, c, e, Plus[Times[2, n, p], 1]], Times[b, d, c, Plus[Times[2, n, p], n, 1]], Times[-1, Power[b, 2], e, Plus[Times[n, p], 1]]], Power[x, n]]], x], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], FractionQ[p], Greater[p, 0], NonzeroQ[Plus[Times[2, n, p], 1]], NonzeroQ[Plus[Times[2, n, p], n, 1]], IntegerQ[Times[2, p]], Or[IntegerQ[p], ZeroQ[Plus[n, -2]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Plus[Times[d, Plus[Times[2, n, p], n, 1]], Times[e, Plus[Times[2, n, p], 1], Power[x, n]]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p], Power[Times[Plus[Times[2, n, p], 1], Plus[Times[2, n, p], n, 1]], -1]], x], Dist[Times[2, a, n, p, Power[Times[Plus[Times[2, n, p], 1], Plus[Times[2, n, p], n, 1]], -1]], Int[Times[Plus[Times[d, Plus[Times[2, n, p], n, 1]], Times[e, Plus[Times[2, n, p], 1], Power[x, n]]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], FractionQ[p], Greater[p, 0], NonzeroQ[Plus[Times[2, n, p], 1]], NonzeroQ[Plus[Times[2, n, p], n, 1]], IntegerQ[Times[2, p]], Or[IntegerQ[p], ZeroQ[Plus[n, -2]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Plus[Times[d, Power[b, 2]], Times[-1, a, b, e], Times[-1, 2, a, c, d], Times[Plus[Times[b, d], Times[-1, 2, a, e]], c, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[a, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x]], Dist[Times[1, Power[Times[a, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Simp[Plus[Times[Plus[Times[n, p], n, 1], d, Power[b, 2]], Times[-1, a, b, e], Times[-1, 2, a, c, d, Plus[Times[2, n, p], Times[2, n], 1]], Times[Plus[Times[2, n, p], Times[3, n], 1], Plus[Times[d, b], Times[-1, 2, a, e]], c, Power[x, n]]], x], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p], Less[p, -1], IntegerQ[Times[2, p]], Or[IntegerQ[p], ZeroQ[Plus[n, -2]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Plus[d, Times[e, Power[x, n]]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[2, a, n, Plus[p, 1]], -1]], x]], Dist[Times[1, Power[Times[2, a, n, Plus[p, 1]], -1]], Int[Times[Plus[Times[d, Plus[Times[2, n, p], Times[2, n], 1]], Times[e, Plus[Times[2, n, p], Times[3, n], 1], Power[x, n]]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], RationalQ[p], Less[p, -1], IntegerQ[Times[2, p]], Or[IntegerQ[p], ZeroQ[Plus[n, -2]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Dist[Times[2, Sqrt[Times[-1, c]]], Int[Times[Plus[d, Times[e, Power[x, 2]]], Power[Times[Sqrt[Plus[b, q, Times[2, c, Power[x, 2]]]], Sqrt[Plus[Times[-1, b], q, Times[-1, 2, c, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeQ[c]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, a, c], 2]]], Dist[Sqrt[Times[-1, c]], Int[Times[Plus[d, Times[e, Power[x, 2]]], Power[Times[Sqrt[Plus[q, Times[c, Power[x, 2]]]], Sqrt[Plus[q, Times[-1, c, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, c, d, e], x], PositiveQ[a], NegativeQ[c]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[c, Power[a, -1]], 4]]], Condition[Plus[Times[-1, Simp[Times[d, x, Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], Power[Times[a, Plus[1, Times[Power[q, 2], Power[x, 2]]]], -1]], x]], Simp[Times[d, Plus[1, Times[Power[q, 2], Power[x, 2]]], Sqrt[Times[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]], Power[Times[a, Power[Plus[1, Times[Power[q, 2], Power[x, 2]]], 2]], -1]]], Power[Times[q, Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1], EllipticE[Times[2, ArcTan[Times[q, x]]], Plus[Times[1, Power[2, -1]], Times[-1, b, Power[q, 2], Power[Times[4, c], -1]]]]], x]], ZeroQ[Plus[e, Times[d, Power[q, 2]]]]]], And[FreeQ[List[a, b, c, d, e], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveQ[Times[c, Power[a, -1]]], NegativeQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[c, Power[a, -1]], 2]]], Condition[Plus[Dist[Times[Plus[e, Times[d, q]], Power[q, -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x], Times[-1, Dist[Times[e, Power[q, -1]], Int[Times[Plus[1, Times[-1, q, Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x]]], NonzeroQ[Plus[e, Times[d, q]]]]], And[FreeQ[List[a, b, c, d, e], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveQ[Times[c, Power[a, -1]]], NegativeQ[Times[b, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Condition[Plus[Simp[Times[e, x, Plus[b, q, Times[2, c, Power[x, 2]]], Power[Times[2, c, Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1]], x], Times[-1, Simp[Times[e, q, Sqrt[Times[Plus[Times[2, a], Times[Plus[b, Times[-1, q]], Power[x, 2]]], Power[Plus[Times[2, a], Times[Plus[b, q], Power[x, 2]]], -1]]], Sqrt[Times[Plus[Times[2, a], Times[Plus[b, q], Power[x, 2]]], Power[q, -1]]], Power[Times[2, c, Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], Sqrt[Times[a, Power[Plus[Times[2, a], Times[Plus[b, q], Power[x, 2]]], -1]]]], -1], EllipticE[ArcSin[Times[x, Power[Sqrt[Times[Plus[Times[2, a], Times[Plus[b, q], Power[x, 2]]], Power[Times[2, q], -1]]], -1]]], Times[Plus[b, q], Power[Times[2, q], -1]]]], x]]], ZeroQ[Plus[Times[2, c, d], Times[-1, e, Plus[b, Times[-1, q]]]]]]], And[FreeQ[List[a, b, c, d, e], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeQ[a], PositiveQ[c]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, a, c], 2]]], Condition[Plus[Simp[Times[e, x, Plus[q, Times[c, Power[x, 2]]], Power[Times[c, Sqrt[Plus[a, Times[c, Power[x, 4]]]]], -1]], x], Times[-1, Simp[Times[Sqrt[2], e, q, Sqrt[Plus[Times[-1, a], Times[q, Power[x, 2]]]], Sqrt[Times[Plus[a, Times[q, Power[x, 2]]], Power[q, -1]]], Power[Times[Sqrt[Times[-1, a]], c, Sqrt[Plus[a, Times[c, Power[x, 4]]]]], -1], EllipticE[ArcSin[Times[x, Power[Sqrt[Times[Plus[a, Times[q, Power[x, 2]]], Power[Times[2, q], -1]]], -1]]], Times[1, Power[2, -1]]]], x]]], And[ZeroQ[Plus[Times[c, d], Times[e, q]]], IntegerQ[q]]]], And[FreeQ[List[a, c, d, e], x], NegativeQ[a], PositiveQ[c]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, a, c], 2]]], Condition[Plus[Simp[Times[e, x, Plus[q, Times[c, Power[x, 2]]], Power[Times[c, Sqrt[Plus[a, Times[c, Power[x, 4]]]]], -1]], x], Times[-1, Simp[Times[Sqrt[2], e, q, Sqrt[Times[Plus[a, Times[-1, q, Power[x, 2]]], Power[Plus[a, Times[q, Power[x, 2]]], -1]]], Sqrt[Times[Plus[a, Times[q, Power[x, 2]]], Power[q, -1]]], Power[Times[c, Sqrt[Plus[a, Times[c, Power[x, 4]]]], Sqrt[Times[a, Power[Plus[a, Times[q, Power[x, 2]]], -1]]]], -1], EllipticE[ArcSin[Times[x, Power[Sqrt[Times[Plus[a, Times[q, Power[x, 2]]], Power[Times[2, q], -1]]], -1]]], Times[1, Power[2, -1]]]], x]]], ZeroQ[Plus[Times[c, d], Times[e, q]]]]], And[FreeQ[List[a, c, d, e], x], NegativeQ[a], PositiveQ[c]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Condition[Plus[Dist[Times[Plus[Times[2, c, d], Times[-1, e, Plus[b, Times[-1, q]]]], Power[Times[2, c], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x], Dist[Times[e, Power[Times[2, c], -1]], Int[Times[Plus[b, Times[-1, q], Times[2, c, Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x]], NonzeroQ[Plus[Times[2, c, d], Times[-1, e, Plus[b, Times[-1, q]]]]]]], And[FreeQ[List[a, b, c, d, e], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeQ[a], PositiveQ[c]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, a, c], 2]]], Condition[Plus[Dist[Times[Plus[Times[c, d], Times[e, q]], Power[c, -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[c, Power[x, 4]]]], -1]], x], x], Times[-1, Dist[Times[e, Power[c, -1]], Int[Times[Plus[q, Times[-1, c, Power[x, 2]]], Power[Sqrt[Plus[a, Times[c, Power[x, 4]]]], -1]], x], x]]], NonzeroQ[Plus[Times[c, d], Times[e, q]]]]], And[FreeQ[List[a, c, d, e], x], NegativeQ[a], PositiveQ[c]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Condition[Plus[Dist[d, Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x], Dist[e, Int[Times[Power[x, 2], Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x]], Or[PosQ[Times[Plus[b, q], Power[a, -1]]], PosQ[Times[Plus[b, Times[-1, q]], Power[a, -1]]]]]], And[FreeQ[List[a, b, c, d, e], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[d, Int[Times[1, Power[Sqrt[Plus[a, Times[c, Power[x, 4]]]], -1]], x], x], Dist[e, Int[Times[Power[x, 2], Power[Sqrt[Plus[a, Times[c, Power[x, 4]]]], -1]], x], x]], And[FreeQ[List[a, c, d, e], x], PositiveQ[Times[-1, a, c]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Condition[Times[-1, Simp[Times[a, e, Rt[Times[-1, Plus[b, q], Power[Times[2, a], -1]], 2], Sqrt[Plus[1, Times[Plus[b, q], Power[x, 2], Power[Times[2, a], -1]]]], Sqrt[Plus[1, Times[Plus[b, Times[-1, q]], Power[x, 2], Power[Times[2, a], -1]]]], Power[Times[c, Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1], EllipticE[ArcSin[Times[Rt[Times[-1, Plus[b, q], Power[Times[2, a], -1]], 2], x]], Times[Plus[b, Times[-1, q]], Power[Plus[b, q], -1]]]], x]], And[NegQ[Times[Plus[b, q], Power[a, -1]]], ZeroQ[Plus[Times[2, c, d], Times[-1, e, Plus[b, q]]]], Not[SimplerSqrtQ[Times[-1, Plus[b, Times[-1, q]], Power[Times[2, a], -1]], Times[-1, Plus[b, q], Power[Times[2, a], -1]]]]]]], And[FreeQ[List[a, b, c, d, e], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Condition[Plus[Dist[Times[Plus[Times[2, c, d], Times[-1, e, Plus[b, q]]], Power[Times[2, c], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x], Dist[Times[e, Power[Times[2, c], -1]], Int[Times[Plus[b, q, Times[2, c, Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x]], And[NegQ[Times[Plus[b, q], Power[a, -1]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, e, Plus[b, q]]]], Not[SimplerSqrtQ[Times[-1, Plus[b, Times[-1, q]], Power[Times[2, a], -1]], Times[-1, Plus[b, q], Power[Times[2, a], -1]]]]]]], And[FreeQ[List[a, b, c, d, e], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Condition[Times[-1, Simp[Times[a, e, Rt[Times[-1, Plus[b, Times[-1, q]], Power[Times[2, a], -1]], 2], Sqrt[Plus[1, Times[Plus[b, Times[-1, q]], Power[x, 2], Power[Times[2, a], -1]]]], Sqrt[Plus[1, Times[Plus[b, q], Power[x, 2], Power[Times[2, a], -1]]]], Power[Times[c, Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1], EllipticE[ArcSin[Times[Rt[Times[-1, Plus[b, Times[-1, q]], Power[Times[2, a], -1]], 2], x]], Times[Plus[b, q], Power[Plus[b, Times[-1, q]], -1]]]], x]], And[NegQ[Times[Plus[b, Times[-1, q]], Power[a, -1]]], ZeroQ[Plus[Times[2, c, d], Times[-1, e, Plus[b, Times[-1, q]]]]]]]], And[FreeQ[List[a, b, c, d, e], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Condition[Plus[Dist[Times[Plus[Times[2, c, d], Times[-1, e, Plus[b, Times[-1, q]]]], Power[Times[2, c], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x], Dist[Times[e, Power[Times[2, c], -1]], Int[Times[Plus[b, Times[-1, q], Times[2, c, Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x]], And[NegQ[Times[Plus[b, Times[-1, q]], Power[a, -1]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, e, Plus[b, Times[-1, q]]]]]]]], And[FreeQ[List[a, b, c, d, e], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[c, Power[a, -1]], 4]]], Condition[Plus[Times[-1, Simp[Times[d, x, Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], Power[Times[a, Plus[1, Times[Power[q, 2], Power[x, 2]]]], -1]], x]], Simp[Times[d, Plus[1, Times[Power[q, 2], Power[x, 2]]], Sqrt[Times[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]], Power[Times[a, Power[Plus[1, Times[Power[q, 2], Power[x, 2]]], 2]], -1]]], Power[Times[q, Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1], EllipticE[Times[2, ArcTan[Times[q, x]]], Plus[Times[1, Power[2, -1]], Times[-1, b, Power[q, 2], Power[Times[4, c], -1]]]]], x]], ZeroQ[Plus[e, Times[d, Power[q, 2]]]]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PosQ[Times[c, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[c, Power[a, -1]], 4]]], Condition[Plus[Times[-1, Simp[Times[d, x, Sqrt[Plus[a, Times[c, Power[x, 4]]]], Power[Times[a, Plus[1, Times[Power[q, 2], Power[x, 2]]]], -1]], x]], Simp[Times[d, Plus[1, Times[Power[q, 2], Power[x, 2]]], Sqrt[Times[Plus[a, Times[c, Power[x, 4]]], Power[Times[a, Power[Plus[1, Times[Power[q, 2], Power[x, 2]]], 2]], -1]]], Power[Times[q, Sqrt[Plus[a, Times[c, Power[x, 4]]]]], -1], EllipticE[Times[2, ArcTan[Times[q, x]]], Times[1, Power[2, -1]]]], x]], ZeroQ[Plus[e, Times[d, Power[q, 2]]]]]], And[FreeQ[List[a, c, d, e], x], PosQ[Times[c, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[c, Power[a, -1]], 2]]], Condition[Plus[Dist[Times[Plus[e, Times[d, q]], Power[q, -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x], Times[-1, Dist[Times[e, Power[q, -1]], Int[Times[Plus[1, Times[-1, q, Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x]]], NonzeroQ[Plus[e, Times[d, q]]]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PosQ[Times[c, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[c, Power[a, -1]], 2]]], Condition[Plus[Dist[Times[Plus[e, Times[d, q]], Power[q, -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[c, Power[x, 4]]]], -1]], x], x], Times[-1, Dist[Times[e, Power[q, -1]], Int[Times[Plus[1, Times[-1, q, Power[x, 2]]], Power[Sqrt[Plus[a, Times[c, Power[x, 4]]]], -1]], x], x]]], NonzeroQ[Plus[e, Times[d, q]]]]], And[FreeQ[List[a, c, d, e], x], PosQ[Times[c, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[d, Power[Sqrt[a], -1]], Int[Times[Sqrt[Plus[1, Times[e, Power[x, 2], Power[d, -1]]]], Power[Sqrt[Plus[1, Times[-1, e, Power[x, 2], Power[d, -1]]]], -1]], x], x], And[FreeQ[List[a, c, d, e], x], NegQ[Times[c, Power[a, -1]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], PositiveQ[a]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[1, Times[c, Power[x, 4], Power[a, -1]]]], Power[Sqrt[Plus[a, Times[c, Power[x, 4]]]], -1]], Int[Times[Plus[d, Times[e, Power[x, 2]]], Power[Sqrt[Plus[1, Times[c, Power[x, 4], Power[a, -1]]]], -1]], x], x], And[FreeQ[List[a, c, d, e], x], NegQ[Times[c, Power[a, -1]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[PositiveQ[a]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, c, Power[a, -1]], 2]]], Plus[Dist[Times[Plus[Times[d, q], Times[-1, e]], Power[q, -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[c, Power[x, 4]]]], -1]], x], x], Dist[Times[e, Power[q, -1]], Int[Times[Plus[1, Times[q, Power[x, 2]]], Power[Sqrt[Plus[a, Times[c, Power[x, 4]]]], -1]], x], x]]], And[FreeQ[List[a, c, d, e], x], NegQ[Times[c, Power[a, -1]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Dist[Times[Sqrt[Plus[1, Times[2, c, Power[x, 2], Power[Plus[b, Times[-1, q]], -1]]]], Sqrt[Plus[1, Times[2, c, Power[x, 2], Power[Plus[b, q], -1]]]], Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], Int[Times[Plus[d, Times[e, Power[x, 2]]], Power[Times[Sqrt[Plus[1, Times[2, c, Power[x, 2], Power[Plus[b, Times[-1, q]], -1]]]], Sqrt[Plus[1, Times[2, c, Power[x, 2], Power[Plus[b, q], -1]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegQ[Times[c, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Plus[d, Times[e, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Plus[d, Times[e, Power[x, n]]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, c, d, e, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[c, p], Power[x, Plus[Times[2, n, p], Times[-1, n], 1]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], Power[Times[e, Plus[Times[2, n, p], Times[n, q], 1]], -1]], x], Int[Times[Power[Plus[d, Times[e, Power[x, n]]], q], ExpandToSum[Plus[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Times[-1, Power[c, p], Power[x, Times[2, n, p]]], Times[-1, d, Power[c, p], Plus[Times[2, n, p], Times[-1, n], 1], Power[x, Plus[Times[2, n, p], Times[-1, n]]], Power[Times[e, Plus[Times[2, n, p], Times[n, q], 1]], -1]]], x]], x]], And[FreeQ[List[a, b, c, d, e, n, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[p], NonzeroQ[Plus[Times[2, n, p], Times[n, q], 1]], PositiveIntegerQ[n], Not[PositiveIntegerQ[q]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[c, p], Power[x, Plus[Times[2, n, p], Times[-1, n], 1]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], Power[Times[e, Plus[Times[2, n, p], Times[n, q], 1]], -1]], x], Int[Times[Power[Plus[d, Times[e, Power[x, n]]], q], ExpandToSum[Plus[Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p], Times[-1, Power[c, p], Power[x, Times[2, n, p]]], Times[-1, d, Power[c, p], Plus[Times[2, n, p], Times[-1, n], 1], Power[x, Plus[Times[2, n, p], Times[-1, n]]], Power[Times[e, Plus[Times[2, n, p], Times[n, q], 1]], -1]]], x]], x]], And[FreeQ[List[a, c, d, e, n, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[p], NonzeroQ[Plus[Times[2, n, p], Times[n, q], 1]], PositiveIntegerQ[n], Not[PositiveIntegerQ[q]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Power[Power[e, 2], -1], Int[Times[Plus[Times[c, d], Times[-1, b, e], Times[-1, c, e, Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x]], Dist[Times[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], Power[Power[e, 2], -1]], Int[Times[1, Power[Times[Plus[d, Times[e, Power[x, 2]]], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[c, Power[Power[e, 2], -1]], Int[Times[Plus[d, Times[-1, e, Power[x, 2]]], Power[Sqrt[Plus[a, Times[c, Power[x, 4]]]], -1]], x], x]], Dist[Times[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], Power[Power[e, 2], -1]], Int[Times[1, Power[Times[Plus[d, Times[e, Power[x, 2]]], Sqrt[Plus[a, Times[c, Power[x, 4]]]]], -1]], x], x]], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Times[-1, Dist[Times[Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], 2], Power[Times[Power[e, 3], Plus[Times[2, c, d], Times[-1, e, Plus[b, q]]]], -1]], Int[Times[Plus[b, q, Times[2, c, Power[x, 2]]], Power[Times[Plus[d, Times[e, Power[x, 2]]], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1]], x], x]], Times[-1, Dist[Times[1, Power[Power[e, 4], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1], Simp[Plus[Times[Plus[Times[c, d], Times[-1, b, e]], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[2, a, Power[e, 2]]]], Times[-1, 2, c, Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], 2], Power[Plus[Times[2, c, d], Times[-1, e, Plus[b, q]]], -1]], Times[-1, e, Plus[Times[Power[c, 2], Power[d, 2]], Times[Power[b, 2], Power[e, 2]], Times[-1, 2, c, e, Plus[Times[b, d], Times[-1, a, e]]]], Power[x, 2]], Times[c, Power[e, 2], Plus[Times[c, d], Times[-1, 2, b, e]], Power[x, 4]], Times[-1, Power[c, 2], Power[e, 3], Power[x, 6]]], x]], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, a, c], 2]]], Plus[Times[-1, Dist[Times[Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], 2], Power[Times[Power[e, 3], Plus[Times[c, d], Times[-1, e, q]]], -1]], Int[Times[Plus[q, Times[c, Power[x, 2]]], Power[Times[Plus[d, Times[e, Power[x, 2]]], Sqrt[Plus[a, Times[c, Power[x, 4]]]]], -1]], x], x]], Times[-1, Dist[Times[c, Power[Power[e, 4], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[c, Power[x, 4]]]], -1], Simp[Plus[Times[d, Plus[Times[c, Power[d, 2]], Times[2, a, Power[e, 2]]]], Times[-1, Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], 2], Power[Plus[Times[c, d], Times[-1, e, q]], -1]], Times[-1, e, Plus[Times[c, Power[d, 2]], Times[2, a, Power[e, 2]]], Power[x, 2]], Times[c, d, Power[e, 2], Power[x, 4]], Times[-1, c, Power[e, 3], Power[x, 6]]], x]], x], x]]]], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], PositiveQ[Times[-1, a, c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[a, Int[Times[Power[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]], Plus[p, -1]], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x], Plus[Dist[b, Int[Times[Power[x, 2], Power[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]], Plus[p, -1]], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x], Dist[c, Int[Times[Power[x, 4], Power[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]], Plus[p, -1]], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], PositiveIntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[a, Int[Times[Power[Plus[a, Times[c, Power[x, 4]]], Plus[p, -1]], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x], Dist[c, Int[Times[Power[x, 4], Power[Plus[a, Times[c, Power[x, 4]]], Plus[p, -1]], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], PositiveIntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Dist[Times[2, Sqrt[Times[-1, c]]], Int[Times[1, Power[Times[Plus[d, Times[e, Power[x, 2]]], Sqrt[Plus[b, q, Times[2, c, Power[x, 2]]]], Sqrt[Plus[Times[-1, b], q, Times[-1, 2, c, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeQ[c]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, a, c], 2]]], Dist[Sqrt[Times[-1, c]], Int[Times[1, Power[Times[Plus[d, Times[e, Power[x, 2]]], Sqrt[Plus[q, Times[c, Power[x, 2]]]], Sqrt[Plus[q, Times[-1, c, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, c, d, e], x], PositiveQ[a], NegativeQ[c]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Times[2, c, Power[Plus[Times[2, c, d], Times[-1, e, Plus[b, Times[-1, q]]]], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x], Times[-1, Dist[Times[e, Power[Plus[Times[2, c, d], Times[-1, e, Plus[b, Times[-1, q]]]], -1]], Int[Times[Plus[b, Times[-1, q], Times[2, c, Power[x, 2]]], Power[Times[Plus[d, Times[e, Power[x, 2]]], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[NegativeQ[c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, a, c], 2]]], Plus[Dist[Times[c, Power[Plus[Times[c, d], Times[e, q]], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[c, Power[x, 4]]]], -1]], x], x], Dist[Times[e, Power[Plus[Times[c, d], Times[e, q]], -1]], Int[Times[Plus[q, Times[-1, c, Power[x, 2]]], Power[Times[Plus[d, Times[e, Power[x, 2]]], Sqrt[Plus[a, Times[c, Power[x, 4]]]]], -1]], x], x]]], And[FreeQ[List[a, c, d, e], x], PositiveQ[Times[-1, a, c]], Not[NegativeQ[c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[c, Power[a, -1]], 4]]], Condition[Plus[Simp[Times[ArcTan[Times[Sqrt[Times[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], Power[Times[d, e], -1]]], x, Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]]], Power[Times[2, d, Sqrt[Times[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], Power[Times[d, e], -1]]]], -1]], x], Plus[Times[-1, Dist[Times[Power[q, 2], Power[Plus[e, Times[-1, d, Power[q, 2]]], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x]], Simp[Times[Plus[e, Times[d, Power[q, 2]]], Plus[1, Times[Power[q, 2], Power[x, 2]]], Sqrt[Times[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]], Power[Times[a, Power[Plus[1, Times[Power[q, 2], Power[x, 2]]], 2]], -1]]], Power[Times[4, d, q, Plus[e, Times[-1, d, Power[q, 2]]], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1], EllipticPi[Times[-1, Power[Plus[e, Times[-1, d, Power[q, 2]]], 2], Power[Times[4, d, e, Power[q, 2]], -1]], Times[2, ArcTan[Times[q, x]]], Plus[Times[1, Power[2, -1]], Times[-1, b, Power[q, 2], Power[Times[4, c], -1]]]]], x]]], NonzeroQ[Plus[e, Times[-1, d, Power[q, 2]]]]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], PosQ[Times[c, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[c, Power[a, -1]], 4]]], Condition[Plus[Simp[Times[ArcTan[Times[Sqrt[Times[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], Power[Times[d, e], -1]]], x, Power[Sqrt[Plus[a, Times[c, Power[x, 4]]]], -1]]], Power[Times[2, d, Sqrt[Times[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], Power[Times[d, e], -1]]]], -1]], x], Plus[Times[-1, Dist[Times[Power[q, 2], Power[Plus[e, Times[-1, d, Power[q, 2]]], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[c, Power[x, 4]]]], -1]], x], x]], Simp[Times[Plus[e, Times[d, Power[q, 2]]], Plus[1, Times[Power[q, 2], Power[x, 2]]], Sqrt[Times[Plus[a, Times[c, Power[x, 4]]], Power[Times[a, Power[Plus[1, Times[Power[q, 2], Power[x, 2]]], 2]], -1]]], Power[Times[4, d, q, Plus[e, Times[-1, d, Power[q, 2]]], Sqrt[Plus[a, Times[c, Power[x, 4]]]]], -1], EllipticPi[Times[-1, Power[Plus[e, Times[-1, d, Power[q, 2]]], 2], Power[Times[4, d, e, Power[q, 2]], -1]], Times[2, ArcTan[Times[q, x]]], Times[1, Power[2, -1]]]], x]]], NonzeroQ[Plus[e, Times[-1, d, Power[q, 2]]]]]], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], PosQ[Times[c, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, c, Power[a, -1]], 4]]], Simp[Times[1, Power[Times[d, Sqrt[a], q], -1], EllipticPi[Times[-1, e, Power[Times[d, Power[q, 2]], -1]], ArcSin[Times[q, x]], -1]], x]], And[FreeQ[List[a, c, d, e], x], NegQ[Times[c, Power[a, -1]]], PositiveQ[a]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[1, Times[c, Power[x, 4], Power[a, -1]]]], Power[Sqrt[Plus[a, Times[c, Power[x, 4]]]], -1]], Int[Times[1, Power[Times[Plus[d, Times[e, Power[x, 2]]], Sqrt[Plus[1, Times[c, Power[x, 4], Power[a, -1]]]]], -1]], x], x], And[FreeQ[List[a, c, d, e], x], NegQ[Times[c, Power[a, -1]]], Not[PositiveQ[a]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Dist[Times[Sqrt[Plus[1, Times[2, c, Power[x, 2], Power[Plus[b, Times[-1, q]], -1]]]], Sqrt[Plus[1, Times[2, c, Power[x, 2], Power[Plus[b, q], -1]]]], Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], Int[Times[1, Power[Times[Plus[d, Times[e, Power[x, 2]]], Sqrt[Plus[1, Times[2, c, Power[x, 2], Power[Plus[b, Times[-1, q]], -1]]]], Sqrt[Plus[1, Times[2, c, Power[x, 2], Power[Plus[b, q], -1]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegQ[Times[c, Power[a, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Plus[Times[Power[b, 2], c, d], Times[-1, Power[b, 3], e], Times[-1, 2, a, Power[c, 2], d], Times[3, a, b, c, e], Times[c, Plus[Times[b, c, d], Times[-1, Power[b, 2], e], Times[2, a, c, e]], Power[x, 2]]], Power[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]], Plus[p, 1]], Power[Times[2, a, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[2, a, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], Int[Times[Times[Power[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]], Plus[p, 1]], Power[Plus[d, Times[e, Power[x, 2]]], -1]], Simp[Plus[Times[Power[b, 3], d, e, Plus[3, Times[2, p]]], Times[-1, a, b, c, d, e, Plus[11, Times[8, p]]], Times[-1, Power[b, 2], Plus[Times[2, a, Power[e, 2], Plus[p, 1]], Times[c, Power[d, 2], Plus[3, Times[2, p]]]]], Times[2, a, c, Plus[Times[4, a, Power[e, 2], Plus[p, 1]], Times[c, Power[d, 2], Plus[5, Times[4, p]]]]], Times[-1, Plus[Times[4, a, Power[c, 2], d, e], Times[-1, 2, Power[b, 2], c, d, e, Plus[2, p]], Times[-1, Power[b, 3], Power[e, 2], Plus[3, Times[2, p]]], Times[b, c, Plus[Times[c, Power[d, 2], Plus[7, Times[4, p]]], Times[a, Power[e, 2], Plus[11, Times[8, p]]]]]], Power[x, 2]], Times[-1, c, e, Plus[Times[b, c, d], Times[-1, Power[b, 2], e], Times[2, a, c, e]], Plus[7, Times[4, p]], Power[x, 4]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NegativeIntegerQ[Plus[p, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Plus[Times[-2, a, Power[c, 2], d], Times[c, Times[2, a, c, e], Power[x, 2]]], Power[Plus[a, Times[c, Power[x, 4]]], Plus[p, 1]], Power[Times[2, a, Plus[p, 1], Times[-4, a, c], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[2, a, Plus[p, 1], Times[-4, a, c], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1]], Int[Times[Times[Power[Plus[a, Times[c, Power[x, 4]]], Plus[p, 1]], Power[Plus[d, Times[e, Power[x, 2]]], -1]], Simp[Plus[Times[2, a, c, Plus[Times[4, a, Power[e, 2], Plus[p, 1]], Times[c, Power[d, 2], Plus[5, Times[4, p]]]]], Times[-1, Times[4, a, Power[c, 2], d, e], Power[x, 2]], Times[-1, c, e, Times[2, a, c, e], Plus[7, Times[4, p]], Power[x, 4]]], x]], x], x]]], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], NegativeIntegerQ[Plus[p, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[e, 2], x, Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], Power[Times[2, d, Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], Plus[d, Times[e, Power[x, 2]]]], -1]], x], Plus[Times[-1, Dist[Times[c, Power[Times[2, d, Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], Int[Times[Plus[d, Times[e, Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x]], Dist[Times[Plus[Times[3, c, Power[d, 2]], Times[-1, 2, b, d, e], Times[a, Power[e, 2]]], Power[Times[2, d, Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], Int[Times[1, Power[Times[Plus[d, Times[e, Power[x, 2]]], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[e, 2], x, Sqrt[Plus[a, Times[c, Power[x, 4]]]], Power[Times[2, d, Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], Plus[d, Times[e, Power[x, 2]]]], -1]], x], Plus[Times[-1, Dist[Times[c, Power[Times[2, d, Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1]], Int[Times[Plus[d, Times[e, Power[x, 2]]], Power[Sqrt[Plus[a, Times[c, Power[x, 4]]]], -1]], x], x]], Dist[Times[Plus[Times[3, c, Power[d, 2]], Times[a, Power[e, 2]]], Power[Times[2, d, Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1]], Int[Times[1, Power[Times[Plus[d, Times[e, Power[x, 2]]], Sqrt[Plus[a, Times[c, Power[x, 4]]]]], -1]], x], x]]], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Dist[Times[Power[a, IntPart[p]], Power[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]], FracPart[p]], Power[Times[Power[Plus[1, Times[2, c, Power[x, 2], Power[Plus[b, Times[-1, r]], -1]]], FracPart[p]], Power[Plus[1, Times[2, c, Power[x, 2], Power[Plus[b, r], -1]]], FracPart[p]]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], q], Power[Plus[1, Times[2, c, Power[x, 2], Power[Plus[b, Times[-1, r]], -1]]], p], Power[Plus[1, Times[2, c, Power[x, 2], Power[Plus[b, r], -1]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, q], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], IntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]], NegativeIntegerQ[q]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Times[-1, a, c], 2]]], Dist[Times[Power[a, IntPart[p]], Power[Plus[a, Times[c, Power[x, 4]]], FracPart[p]], Power[Times[Power[Plus[1, Times[-1, c, Power[x, 2], Power[r, -1]]], FracPart[p]], Power[Plus[1, Times[c, Power[x, 2], Power[r, -1]]], FracPart[p]]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], q], Power[Plus[1, Times[-1, c, Power[x, 2], Power[r, -1]]], p], Power[Plus[1, Times[c, Power[x, 2], Power[r, -1]]], p]], x], x]], And[FreeQ[List[a, c, d, e, q], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], IntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]], NegativeIntegerQ[q]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[1, Power[Times[2, Sqrt[a], Sqrt[d], Rt[Times[-1, e, Power[d, -1]], 2]], -1], EllipticF[Times[2, ArcSin[Times[Rt[Times[-1, e, Power[d, -1]], 2], x]]], Times[b, d, Power[Times[4, a, e], -1]]]], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[c, d], Times[-1, b, e]]], PositiveQ[a], PositiveQ[d]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Times[Plus[d, Times[e, Power[x, 2]]], Power[d, -1]]], Sqrt[Times[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]], Power[a, -1]]], Power[Times[Sqrt[Plus[d, Times[e, Power[x, 2]]]], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1]], Int[Times[1, Power[Times[Sqrt[Plus[1, Times[e, Power[d, -1], Power[x, 2]]]], Sqrt[Plus[1, Times[b, Power[a, -1], Power[x, 2]], Times[c, Power[a, -1], Power[x, 4]]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[c, d], Times[-1, b, e]]], Not[And[PositiveQ[a], PositiveQ[d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Sqrt[a], Power[Times[2, Sqrt[d], Rt[Times[-1, e, Power[d, -1]], 2]], -1], EllipticE[Times[2, ArcSin[Times[Rt[Times[-1, e, Power[d, -1]], 2], x]]], Times[b, d, Power[Times[4, a, e], -1]]]], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[c, d], Times[-1, b, e]]], PositiveQ[a], PositiveQ[d]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], Sqrt[Times[Plus[d, Times[e, Power[x, 2]]], Power[d, -1]]], Power[Times[Sqrt[Plus[d, Times[e, Power[x, 2]]]], Sqrt[Times[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]], Power[a, -1]]]], -1]], Int[Times[Sqrt[Plus[1, Times[b, Power[a, -1], Power[x, 2]], Times[c, Power[a, -1], Power[x, 4]]]], Power[Sqrt[Plus[1, Times[e, Power[d, -1], Power[x, 2]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[c, d], Times[-1, b, e]]], Not[And[PositiveQ[a], PositiveQ[d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Or[And[IntegersQ[p, q], Not[IntegerQ[n]]], PositiveIntegerQ[p], And[PositiveIntegerQ[q], Not[IntegerQ[n]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, c, d, e, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Or[And[IntegersQ[p, q], Not[IntegerQ[n]]], PositiveIntegerQ[p], And[PositiveIntegerQ[q], Not[IntegerQ[n]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p], Power[Plus[Times[d, Power[Plus[Power[d, 2], Times[-1, Power[e, 2], Power[x, Times[2, n]]]], -1]], Times[-1, e, Power[x, n], Power[Plus[Power[d, 2], Times[-1, Power[e, 2], Power[x, Times[2, n]]]], -1]]], Times[-1, q]], x], x], And[FreeQ[List[a, c, d, e, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], NegativeIntegerQ[q], Not[IntegersQ[n, Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], And[FreeQ[List[a, b, c, d, e, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], Not[IntegersQ[n, q]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p]], x], And[FreeQ[List[a, c, d, e, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], Not[IntegersQ[n, q]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n2, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Times[Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x, u], x], And[FreeQ[List[a, b, c, d, e, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[u, Blank[]], Pattern[n2, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Times[Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p]], x], x, u], x], And[FreeQ[List[a, c, d, e, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Times[-1, n, q]], Power[Plus[e, Times[d, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], And[FreeQ[List[a, b, c, d, e, n, p], x], EqQ[n2, Times[2, n]], EqQ[mn, Times[-1, n]], IntegerQ[q]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Times[mn, q]], Power[Plus[e, Times[d, Power[x, Times[-1, mn]]]], q], Power[Plus[a, Times[c, Power[x, n2]]], p]], x], And[FreeQ[List[a, c, d, e, mn, p], x], EqQ[n2, Times[-2, mn]], IntegerQ[q]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Pattern[q, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Times[2, n, p]], Power[Plus[d, Times[e, Power[x, Times[-1, n]]]], q], Power[Plus[c, Times[b, Power[x, Times[-1, n]]], Times[a, Power[x, Times[-2, n]]]], p]], x], And[FreeQ[List[a, b, c, d, e, n, q], x], EqQ[n2, Times[2, n]], EqQ[mn, Times[-1, n]], Not[IntegerQ[q]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Times[-2, mn, p]], Power[Plus[d, Times[e, Power[x, mn]]], q], Power[Plus[c, Times[a, Power[x, Times[2, mn]]]], p]], x], And[FreeQ[List[a, c, d, e, mn, q], x], EqQ[n2, Times[-2, mn]], Not[IntegerQ[q]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Pattern[q, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[x, Times[n, FracPart[q]]], Power[Plus[d, Times[e, Power[x, Times[-1, n]]]], FracPart[q]], Power[Power[Plus[e, Times[d, Power[x, n]]], FracPart[q]], -1]], Int[Times[Power[x, Times[-1, n, q]], Power[Plus[e, Times[d, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, n, p, q], x], EqQ[n2, Times[2, n]], EqQ[mn, Times[-1, n]], Not[IntegerQ[q]], Not[IntegerQ[p]], PosQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[x, Times[-1, mn, FracPart[q]]], Power[Plus[d, Times[e, Power[x, mn]]], FracPart[q]], Power[Power[Plus[e, Times[d, Power[x, Times[-1, mn]]]], FracPart[q]], -1]], Int[Times[Power[x, Times[mn, q]], Power[Plus[e, Times[d, Power[x, Times[-1, mn]]]], q], Power[Plus[a, Times[c, Power[x, n2]]], p]], x], x], And[FreeQ[List[a, c, d, e, mn, p, q], x], EqQ[n2, Times[-2, mn]], Not[IntegerQ[q]], Not[IntegerQ[p]], PosQ[n2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Pattern[q, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], FracPart[p]], Power[Times[Power[x, Times[2, n, FracPart[p]]], Power[Plus[c, Times[b, Power[x, Times[-1, n]]], Times[a, Power[x, Times[-2, n]]]], FracPart[p]]], -1]], Int[Times[Power[x, Times[2, n, p]], Power[Plus[d, Times[e, Power[x, Times[-1, n]]]], q], Power[Plus[c, Times[b, Power[x, Times[-1, n]]], Times[a, Power[x, Times[-2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, n, q], x], EqQ[n2, Times[2, n]], EqQ[mn, Times[-1, n]], Not[IntegerQ[q]], Not[IntegerQ[p]], NegQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[c, Power[x, n2]]], FracPart[p]], Power[Times[Power[x, Times[n2, FracPart[p]]], Power[Plus[c, Times[a, Power[x, Times[2, mn]]]], FracPart[p]]], -1]], Int[Times[Power[x, Times[n2, p]], Power[Plus[d, Times[e, Power[x, mn]]], q], Power[Plus[c, Times[a, Power[x, Times[2, mn]]]], p]], x], x], And[FreeQ[List[a, c, d, e, mn, q], x], EqQ[n2, Times[-2, mn]], Not[IntegerQ[q]], Not[IntegerQ[p]], NegQ[n2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[mn, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Times[-1, n, p]], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[b, Times[a, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], And[FreeQ[List[a, b, c, d, e, n, q], x], EqQ[mn, Times[-1, n]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[mn, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[x, Times[n, FracPart[p]]], Power[Plus[a, Times[b, Power[Power[x, n], -1]], Times[c, Power[x, n]]], FracPart[p]], Power[Power[Plus[b, Times[a, Power[x, n]], Times[c, Power[x, Times[2, n]]]], FracPart[p]], -1]], Int[Times[Power[x, Times[-1, n, p]], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[b, Times[a, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, n, p, q], x], EqQ[mn, Times[-1, n]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], FracPart[p]], Power[Times[Power[Times[4, c], IntPart[p]], Power[Plus[b, Times[2, c, Power[x, n]]], Times[2, FracPart[p]]]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[f, Times[g, Power[x, n]]], r], Power[Plus[b, Times[2, c, Power[x, n]]], Times[2, p]]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, n, p, q, r], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, Power[x, n]]], Plus[p, q]], Power[Plus[f, Times[g, Power[x, n]]], r], Power[Plus[Times[a, Power[d, -1]], Times[c, Power[e, -1], Power[x, n]]], p]], x], And[FreeQ[List[a, b, c, d, e, f, g, n, q, r], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, Power[x, n]]], Plus[p, q]], Power[Plus[f, Times[g, Power[x, n]]], r], Power[Plus[Times[a, Power[d, -1]], Times[c, Power[e, -1], Power[x, n]]], p]], x], And[FreeQ[List[a, c, d, e, f, g, n, q, r], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], FracPart[p]], Power[Times[Power[Plus[d, Times[e, Power[x, n]]], FracPart[p]], Power[Plus[Times[a, Power[d, -1]], Times[Times[c, Power[x, n]], Power[e, -1]]], FracPart[p]]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, n]]], Plus[p, q]], Power[Plus[f, Times[g, Power[x, n]]], r], Power[Plus[Times[a, Power[d, -1]], Times[c, Power[e, -1], Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, n, p, q, r], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[r, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[c, Power[x, Times[2, n]]]], FracPart[p]], Power[Times[Power[Plus[d, Times[e, Power[x, n]]], FracPart[p]], Power[Plus[Times[a, Power[d, -1]], Times[Times[c, Power[x, n]], Power[e, -1]]], FracPart[p]]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, n]]], Plus[p, q]], Power[Plus[f, Times[g, Power[x, n]]], r], Power[Plus[Times[a, Power[d, -1]], Times[c, Power[e, -1], Power[x, n]]], p]], x], x], And[FreeQ[List[a, c, d, e, f, g, n, p, q, r], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Condition[Plus[Dist[Times[Plus[Times[2, c, f], Times[-1, g, Plus[b, Times[-1, q]]]], Power[Plus[Times[2, c, d], Times[-1, e, Plus[b, Times[-1, q]]]], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x], Times[-1, Dist[Times[Plus[Times[e, f], Times[-1, d, g]], Power[Plus[Times[2, c, d], Times[-1, e, Plus[b, Times[-1, q]]]], -1]], Int[Times[Plus[b, Times[-1, q], Times[2, c, Power[x, 2]]], Power[Times[Plus[d, Times[e, Power[x, 2]]], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1]], x], x]]], NonzeroQ[Plus[Times[2, c, f], Times[-1, g, Plus[b, Times[-1, q]]]]]]], And[FreeQ[List[a, b, c, d, e, f, g], x], PositiveQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[NegativeQ[c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, a, c], 2]]], Condition[Plus[Dist[Times[Plus[Times[c, f], Times[g, q]], Power[Plus[Times[c, d], Times[e, q]], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[c, Power[x, 4]]]], -1]], x], x], Dist[Times[Plus[Times[e, f], Times[-1, d, g]], Power[Plus[Times[c, d], Times[e, q]], -1]], Int[Times[Plus[q, Times[-1, c, Power[x, 2]]], Power[Times[Plus[d, Times[e, Power[x, 2]]], Sqrt[Plus[a, Times[c, Power[x, 4]]]]], -1]], x], x]], NonzeroQ[Plus[Times[c, f], Times[g, q]]]]], And[FreeQ[List[a, c, d, e, f, g], x], PositiveQ[Times[-1, a, c]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[NegativeQ[c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[Times[d1, d2], Times[e1, e2, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], And[FreeQ[List[a, b, c, d1, e1, d2, e2, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[non2, Times[-1, n, Power[2, -1]]]], ZeroQ[Plus[Times[d2, e1], Times[d1, e2]]], Or[IntegerQ[q], And[PositiveQ[d1], PositiveQ[d2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[d1, Times[e1, Power[x, Times[n, Power[2, -1]]]]], FracPart[q]], Power[Plus[d2, Times[e2, Power[x, Times[n, Power[2, -1]]]]], FracPart[q]], Power[Power[Plus[Times[d1, d2], Times[e1, e2, Power[x, n]]], FracPart[q]], -1]], Int[Times[Power[Plus[Times[d1, d2], Times[e1, e2, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d1, e1, d2, e2, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[non2, Times[-1, n, Power[2, -1]]]], ZeroQ[Plus[Times[d2, e1], Times[d1, e2]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[A, Int[Times[Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], Dist[B, Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, A, B, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[m, Times[-1, n], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[A, Int[Times[Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p]], x], x], Dist[B, Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p]], x], x]], And[FreeQ[List[a, c, d, e, A, B, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[m, Times[-1, n], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[f, m], Power[Times[n, Power[e, Plus[Times[Plus[m, 1], Power[n, -1]], -1]]], -1]], Subst[Int[Times[Power[Times[e, x], Plus[q, Times[Plus[m, 1], Power[n, -1]], -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, e, f, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], Or[IntegerQ[m], PositiveQ[f]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[f, m], Power[Times[n, Power[e, Plus[Times[Plus[m, 1], Power[n, -1]], -1]]], -1]], Subst[Int[Times[Power[Times[e, x], Plus[q, Times[Plus[m, 1], Power[n, -1]], -1]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, c, e, f, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], Or[IntegerQ[m], PositiveQ[f]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[f, m], Power[e, IntPart[q]], Power[Times[e, Power[x, n]], FracPart[q]], Power[Power[x, Times[n, FracPart[q]]], -1]], Int[Times[Power[x, Plus[m, Times[n, q]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, e, f, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], Or[IntegerQ[m], PositiveQ[f]], Not[IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[f, m], Power[e, IntPart[q]], Power[Times[e, Power[x, n]], FracPart[q]], Power[Power[x, Times[n, FracPart[q]]], -1]], Int[Times[Power[x, Plus[m, Times[n, q]]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, c, e, f, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], Or[IntegerQ[m], PositiveQ[f]], Not[IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[f, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[f, IntPart[m]], Power[Times[f, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Times[e, Power[x, n]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, e, f, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[f, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[f, IntPart[m]], Power[Times[f, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Times[e, Power[x, n]], q], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, c, e, f, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[Plus[d, Times[e, x]], q], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, d, e, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Simplify[Plus[m, Times[-1, n], 1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[Plus[d, Times[e, x]], q], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, c, d, e, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Simplify[Plus[m, Times[-1, n], 1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Plus[m, Times[n, Plus[Times[2, p], q]]]], Power[Plus[e, Times[d, Power[x, Times[-1, n]]]], q], Power[Plus[c, Times[b, Power[x, Times[-1, n]]], Times[a, Power[x, Times[-2, n]]]], p]], x], And[FreeQ[List[a, b, c, d, e, m, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], IntegersQ[p, q], NegQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Plus[m, Times[n, Plus[Times[2, p], q]]]], Power[Plus[e, Times[d, Power[x, Times[-1, n]]]], q], Power[Plus[c, Times[a, Power[x, Times[-2, n]]]], p]], x], And[FreeQ[List[a, c, d, e, m, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], IntegersQ[p, q], NegQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Times[Plus[m, 1], Power[n, -1]], -1]], Power[Plus[d, Times[e, x]], q], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, d, e, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[p]], PositiveIntegerQ[m, n, Times[Plus[m, 1], Power[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], FracPart[p]], Power[Times[Power[c, IntPart[p]], Power[Plus[Times[b, Power[2, -1]], Times[c, Power[x, n]]], Times[2, FracPart[p]]]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[Times[b, Power[2, -1]], Times[c, Power[x, n]]], Times[2, p]]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]], Power[Plus[d, Times[e, x]], q], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, d, e, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]], Power[Plus[d, Times[e, x]], q], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, c, d, e, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[f, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[f, IntPart[m]], Power[Times[f, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[f, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[f, IntPart[m]], Power[Times[f, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, c, d, e, f, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, p]], Power[Plus[Times[a, Power[d, -1]], Times[c, Power[e, -1], Power[x, n]]], p]], x], And[FreeQ[List[a, b, c, d, e, f, m, n, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, p]], Power[Plus[Times[a, Power[d, -1]], Times[c, Power[e, -1], Power[x, n]]], p]], x], And[FreeQ[List[a, c, d, e, f, q, m, n, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], FracPart[p]], Power[Times[Power[Plus[d, Times[e, Power[x, n]]], FracPart[p]], Power[Plus[Times[a, Power[d, -1]], Times[Times[c, Power[x, n]], Power[e, -1]]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, p]], Power[Plus[Times[a, Power[d, -1]], Times[c, Power[e, -1], Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[c, Power[x, Times[2, n]]]], FracPart[p]], Power[Times[Power[Plus[d, Times[e, Power[x, n]]], FracPart[p]], Power[Plus[Times[a, Power[d, -1]], Times[Times[c, Power[x, n]], Power[e, -1]]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, p]], Power[Plus[Times[a, Power[d, -1]], Times[c, Power[e, -1], Power[x, n]]], p]], x], x], And[FreeQ[List[a, c, d, e, f, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[-1, d], Plus[Times[Plus[m, Times[-1, Mod[m, n]]], Power[n, -1]], -1]], Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], p], Power[x, Plus[Mod[m, n], 1]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], Power[Times[n, Power[e, Plus[Times[2, p], Times[Plus[m, Times[-1, Mod[m, n]]], Power[n, -1]]]], Plus[q, 1]], -1]], x], Dist[Times[1, Power[Times[n, Power[e, Plus[Times[2, p], Times[Plus[m, Times[-1, Mod[m, n]]], Power[n, -1]]]], Plus[q, 1]], -1]], Int[Times[Power[x, Mod[m, n]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], ExpandToSum[Together[Times[1, Power[Plus[d, Times[e, Power[x, n]]], -1], Plus[Times[n, Power[e, Plus[Times[2, p], Times[Plus[m, Times[-1, Mod[m, n]]], Power[n, -1]]]], Plus[q, 1], Power[x, Plus[m, Times[-1, Mod[m, n]]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], Times[-1, Power[Times[-1, d], Plus[Times[Plus[m, Times[-1, Mod[m, n]]], Power[n, -1]], -1]], Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], p], Plus[Times[d, Plus[Mod[m, n], 1]], Times[e, Plus[Mod[m, n], Times[n, Plus[q, 1]], 1], Power[x, n]]]]]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n, p], IntegersQ[m, q], Less[q, -1], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[-1, d], Plus[Times[Plus[m, Times[-1, Mod[m, n]]], Power[n, -1]], -1]], Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], p], Power[x, Plus[Mod[m, n], 1]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], Power[Times[n, Power[e, Plus[Times[2, p], Times[Plus[m, Times[-1, Mod[m, n]]], Power[n, -1]]]], Plus[q, 1]], -1]], x], Dist[Times[1, Power[Times[n, Power[e, Plus[Times[2, p], Times[Plus[m, Times[-1, Mod[m, n]]], Power[n, -1]]]], Plus[q, 1]], -1]], Int[Times[Power[x, Mod[m, n]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], ExpandToSum[Together[Times[1, Power[Plus[d, Times[e, Power[x, n]]], -1], Plus[Times[n, Power[e, Plus[Times[2, p], Times[Plus[m, Times[-1, Mod[m, n]]], Power[n, -1]]]], Plus[q, 1], Power[x, Plus[m, Times[-1, Mod[m, n]]]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p]], Times[-1, Power[Times[-1, d], Plus[Times[Plus[m, Times[-1, Mod[m, n]]], Power[n, -1]], -1]], Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], p], Plus[Times[d, Plus[Mod[m, n], 1]], Times[e, Plus[Mod[m, n], Times[n, Plus[q, 1]], 1], Power[x, n]]]]]]], x]], x], x]], And[FreeQ[List[a, c, d, e], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n, p], IntegersQ[m, q], Less[q, -1], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[-1, d], Plus[Times[Plus[m, Times[-1, Mod[m, n]]], Power[n, -1]], -1]], Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], p], Power[x, Plus[Mod[m, n], 1]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], Power[Times[n, Power[e, Plus[Times[2, p], Times[Plus[m, Times[-1, Mod[m, n]]], Power[n, -1]]]], Plus[q, 1]], -1]], x], Dist[Times[Power[Times[-1, d], Plus[Times[Plus[m, Times[-1, Mod[m, n]]], Power[n, -1]], -1]], Power[Times[n, Power[e, Times[2, p]], Plus[q, 1]], -1]], Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], ExpandToSum[Together[Times[1, Power[Plus[d, Times[e, Power[x, n]]], -1], Plus[Times[n, Power[Times[-1, d], Plus[Times[-1, Plus[m, Times[-1, Mod[m, n]]], Power[n, -1]], 1]], Power[e, Times[2, p]], Plus[q, 1], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], Times[-1, Times[Power[e, Times[-1, Plus[m, Times[-1, Mod[m, n]]], Power[n, -1]]], Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], p], Power[x, Times[-1, Plus[m, Times[-1, Mod[m, n]]]]]], Plus[Times[d, Plus[Mod[m, n], 1]], Times[e, Plus[Mod[m, n], Times[n, Plus[q, 1]], 1], Power[x, n]]]]]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n, p], IntegersQ[m, q], Less[q, -1], Less[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[-1, d], Plus[Times[Plus[m, Times[-1, Mod[m, n]]], Power[n, -1]], -1]], Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], p], Power[x, Plus[Mod[m, n], 1]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], Power[Times[n, Power[e, Plus[Times[2, p], Times[Plus[m, Times[-1, Mod[m, n]]], Power[n, -1]]]], Plus[q, 1]], -1]], x], Dist[Times[Power[Times[-1, d], Plus[Times[Plus[m, Times[-1, Mod[m, n]]], Power[n, -1]], -1]], Power[Times[n, Power[e, Times[2, p]], Plus[q, 1]], -1]], Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], ExpandToSum[Together[Times[1, Power[Plus[d, Times[e, Power[x, n]]], -1], Plus[Times[n, Power[Times[-1, d], Plus[Times[-1, Plus[m, Times[-1, Mod[m, n]]], Power[n, -1]], 1]], Power[e, Times[2, p]], Plus[q, 1], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p]], Times[-1, Times[Power[e, Times[-1, Plus[m, Times[-1, Mod[m, n]]], Power[n, -1]]], Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], p], Power[x, Times[-1, Plus[m, Times[-1, Mod[m, n]]]]]], Plus[Times[d, Plus[Mod[m, n], 1]], Times[e, Plus[Mod[m, n], Times[n, Plus[q, 1]], 1], Power[x, n]]]]]]], x]], x], x]], And[FreeQ[List[a, c, d, e], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n, p], IntegersQ[m, q], Less[q, -1], Less[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[c, p], Power[Times[f, x], Plus[m, Times[2, n, p], Times[-1, n], 1]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], Power[Times[e, Power[f, Plus[Times[2, n, p], Times[-1, n], 1]], Plus[m, Times[2, n, p], Times[n, q], 1]], -1]], x], Dist[Times[1, Power[Times[e, Plus[m, Times[2, n, p], Times[n, q], 1]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], q], ExpandToSum[Plus[Times[e, Plus[m, Times[2, n, p], Times[n, q], 1], Plus[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Times[-1, Power[c, p], Power[x, Times[2, n, p]]]]], Times[-1, d, Power[c, p], Plus[m, Times[2, n, p], Times[-1, n], 1], Power[x, Plus[Times[2, n, p], Times[-1, n]]]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, m, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n, p], Greater[Times[2, n, p], Plus[n, -1]], Not[IntegerQ[q]], NonzeroQ[Plus[m, Times[2, n, p], Times[n, q], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[c, p], Power[Times[f, x], Plus[m, Times[2, n, p], Times[-1, n], 1]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], Power[Times[e, Power[f, Plus[Times[2, n, p], Times[-1, n], 1]], Plus[m, Times[2, n, p], Times[n, q], 1]], -1]], x], Dist[Times[1, Power[Times[e, Plus[m, Times[2, n, p], Times[n, q], 1]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], q], ExpandToSum[Plus[Times[e, Plus[m, Times[2, n, p], Times[n, q], 1], Plus[Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p], Times[-1, Power[c, p], Power[x, Times[2, n, p]]]]], Times[-1, d, Power[c, p], Plus[m, Times[2, n, p], Times[-1, n], 1], Power[x, Plus[Times[2, n, p], Times[-1, n]]]]], x]], x], x]], And[FreeQ[List[a, c, d, e, f, m, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n, p], Greater[Times[2, n, p], Plus[n, -1]], Not[IntegerQ[q]], NonzeroQ[Plus[m, Times[2, n, p], Times[n, q], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, c, d, e, f, m, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, GCD[Plus[m, 1], n]]], Condition[Dist[Times[1, Power[k, -1]], Subst[Int[Times[Power[x, Plus[Times[Plus[m, 1], Power[k, -1]], -1]], Power[Plus[d, Times[e, Power[x, Times[n, Power[k, -1]]]]], q], Power[Plus[a, Times[b, Power[x, Times[n, Power[k, -1]]]], Times[c, Power[x, Times[2, n, Power[k, -1]]]]], p]], x], x, Power[x, k]], x], Unequal[k, 1]]], And[FreeQ[List[a, b, c, d, e, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, GCD[Plus[m, 1], n]]], Condition[Dist[Times[1, Power[k, -1]], Subst[Int[Times[Power[x, Plus[Times[Plus[m, 1], Power[k, -1]], -1]], Power[Plus[d, Times[e, Power[x, Times[n, Power[k, -1]]]]], q], Power[Plus[a, Times[c, Power[x, Times[2, n, Power[k, -1]]]]], p]], x], x, Power[x, k]], x], Unequal[k, 1]]], And[FreeQ[List[a, c, d, e, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[m]]], Dist[Times[k, Power[f, -1]], Subst[Int[Times[Power[x, Plus[Times[k, Plus[m, 1]], -1]], Power[Plus[d, Times[e, Power[x, Times[k, n]], Power[Power[f, n], -1]]], q], Power[Plus[a, Times[b, Power[x, Times[k, n]], Power[Power[f, n], -1]], Times[c, Power[x, Times[2, k, n]], Power[Power[f, Times[2, n]], -1]]], p]], x], x, Power[Times[f, x], Times[1, Power[k, -1]]]], x]], And[FreeQ[List[a, b, c, d, e, f, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], FractionQ[m], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[m]]], Dist[Times[k, Power[f, -1]], Subst[Int[Times[Power[x, Plus[Times[k, Plus[m, 1]], -1]], Power[Plus[d, Times[e, Power[x, Times[k, n]], Power[f, -1]]], q], Power[Plus[a, Times[c, Power[x, Times[2, k, n]], Power[f, -1]]], p]], x], x, Power[Times[f, x], Times[1, Power[k, -1]]]], x]], And[FreeQ[List[a, c, d, e, f, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], FractionQ[m], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Plus[Times[d, Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], Times[e, Plus[m, 1], Power[x, n]]], Power[Times[f, Plus[m, 1], Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], -1]], x], Dist[Times[n, p, Power[Times[Power[f, n], Plus[m, 1], Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, -1]], Simp[Plus[Times[2, a, e, Plus[m, 1]], Times[-1, b, d, Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], Times[Plus[Times[b, e, Plus[m, 1]], Times[-1, 2, c, d, Plus[m, Times[n, Plus[Times[2, p], 1]], 1]]], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p], Greater[p, 0], Less[m, -1], Unequal[Plus[m, Times[n, Plus[Times[2, p], 1]], 1], 0], Or[IntegerQ[p], And[IntegerQ[Times[2, p]], IntegerQ[m], Equal[n, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p], Plus[Times[d, Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], Times[e, Plus[m, 1], Power[x, n]]], Power[Times[f, Plus[m, 1], Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], -1]], x], Dist[Times[2, n, p, Power[Times[Power[f, n], Plus[m, 1], Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, n]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, -1]], Plus[Times[a, e, Plus[m, 1]], Times[-1, c, d, Plus[m, Times[n, Plus[Times[2, p], 1]], 1], Power[x, n]]]], x], x]], And[FreeQ[List[a, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], RationalQ[m, p], Greater[p, 0], Less[m, -1], Unequal[Plus[m, Times[n, Plus[Times[2, p], 1]], 1], 0], Or[IntegerQ[p], And[IntegerQ[Times[2, p]], IntegerQ[m], Equal[n, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Plus[Times[b, e, n, p], Times[c, d, Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], Times[c, e, Plus[Times[2, n, p], m, 1], Power[x, n]]], Power[Times[c, f, Plus[Times[2, n, p], m, 1], Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], -1]], x], Dist[Times[n, p, Power[Times[c, Plus[Times[2, n, p], m, 1], Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, -1]], Simp[Plus[Times[2, a, c, d, Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], Times[-1, a, b, e, Plus[m, 1]], Times[Plus[Times[2, a, c, e, Plus[Times[2, n, p], m, 1]], Times[b, c, d, Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], Times[-1, Power[b, 2], e, Plus[m, Times[n, p], 1]]], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[p], Greater[p, 0], NonzeroQ[Plus[Times[2, n, p], m, 1]], NonzeroQ[Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], Or[IntegerQ[p], And[IntegerQ[Times[2, p]], IntegerQ[m], Equal[n, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p], Plus[Times[c, d, Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], Times[c, e, Plus[Times[2, n, p], m, 1], Power[x, n]]], Power[Times[c, f, Plus[Times[2, n, p], m, 1], Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], -1]], x], Dist[Times[2, a, n, p, Power[Times[Plus[Times[2, n, p], m, 1], Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, -1]], Simp[Plus[Times[d, Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], Times[e, Plus[Times[2, n, p], m, 1], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, c, d, e, f, m], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], RationalQ[p], Greater[p, 0], NonzeroQ[Plus[Times[2, n, p], m, 1]], NonzeroQ[Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], Or[IntegerQ[p], And[IntegerQ[Times[2, p]], IntegerQ[m], Equal[n, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[f, Plus[n, -1]], Power[Times[f, x], Plus[m, Times[-1, n], 1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Plus[Times[b, d], Times[-1, 2, a, e], Times[-1, Plus[Times[b, e], Times[-1, 2, c, d]], Power[x, n]]], Power[Times[n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x], Dist[Times[Power[f, n], Power[Times[n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Simp[Plus[Times[Plus[n, Times[-1, m], -1], Plus[Times[b, d], Times[-1, 2, a, e]]], Times[Plus[Times[2, n, p], Times[2, n], m, 1], Plus[Times[b, e], Times[-1, 2, c, d]], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p], Less[p, -1], Greater[m, Plus[n, -1]], Or[IntegerQ[p], And[IntegerQ[Times[2, p]], IntegerQ[m], Equal[n, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[f, Plus[n, -1]], Power[Times[f, x], Plus[m, Times[-1, n], 1]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Plus[Times[a, e], Times[-1, c, d, Power[x, n]]], Power[Times[2, a, c, n, Plus[p, 1]], -1]], x], Dist[Times[Power[f, n], Power[Times[2, a, c, n, Plus[p, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, n]]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Plus[Times[a, e, Plus[n, Times[-1, m], -1]], Times[c, d, Plus[Times[2, n, p], Times[2, n], m, 1], Power[x, n]]]], x], x]], And[FreeQ[List[a, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], RationalQ[m, p], Less[p, -1], Greater[m, Plus[n, -1]], Or[IntegerQ[p], And[IntegerQ[Times[2, p]], IntegerQ[m], Equal[n, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Plus[Times[d, Plus[Power[b, 2], Times[-1, 2, a, c]]], Times[-1, a, b, e], Times[Plus[Times[b, d], Times[-1, 2, a, e]], c, Power[x, n]]], Power[Times[a, f, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x]], Dist[Times[1, Power[Times[a, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Simp[Plus[Times[d, Plus[Times[Power[b, 2], Plus[m, Times[n, Plus[p, 1]], 1]], Times[-1, 2, a, c, Plus[m, Times[2, n, Plus[p, 1]], 1]]]], Times[-1, a, b, e, Plus[m, 1]], Times[c, Plus[m, Times[n, Plus[Times[2, p], 3]], 1], Plus[Times[b, d], Times[-1, 2, a, e]], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[p], Less[p, -1], Or[IntegerQ[p], And[IntegerQ[Times[2, p]], IntegerQ[m], Equal[n, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Plus[d, Times[e, Power[x, n]]], Power[Times[2, a, f, n, Plus[p, 1]], -1]], x]], Dist[Times[1, Power[Times[2, a, n, Plus[p, 1]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Simp[Plus[Times[d, Plus[m, Times[2, n, Plus[p, 1]], 1]], Times[e, Plus[m, Times[n, Plus[Times[2, p], 3]], 1], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, c, d, e, f, m], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], RationalQ[p], Less[p, -1], Or[IntegerQ[p], And[IntegerQ[Times[2, p]], IntegerQ[m], Equal[n, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[f, Plus[n, -1]], Power[Times[f, x], Plus[m, Times[-1, n], 1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], -1]], x], Times[-1, Dist[Times[Power[f, n], Power[Times[c, Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Simp[Plus[Times[a, e, Plus[m, Times[-1, n], 1]], Times[Plus[Times[b, e, Plus[m, Times[n, p], 1]], Times[-1, c, d, Plus[m, Times[n, Plus[Times[2, p], 1]], 1]]], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m], Greater[m, Plus[n, -1]], NonzeroQ[Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], Or[IntegerQ[p], And[IntegerQ[Times[2, p]], IntegerQ[m], Equal[n, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[f, Plus[n, -1]], Power[Times[f, x], Plus[m, Times[-1, n], 1]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], -1]], x], Times[-1, Dist[Times[Power[f, n], Power[Times[c, Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, n]]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p], Plus[Times[a, e, Plus[m, Times[-1, n], 1]], Times[-1, c, d, Plus[m, Times[n, Plus[Times[2, p], 1]], 1], Power[x, n]]]], x], x]]], And[FreeQ[List[a, c, d, e, f, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], RationalQ[m], Greater[m, Plus[n, -1]], NonzeroQ[Plus[m, Times[n, Plus[Times[2, p], 1]], 1]], Or[IntegerQ[p], And[IntegerQ[Times[2, p]], IntegerQ[m], Equal[n, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[d, Power[Times[f, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[a, f, Plus[m, 1]], -1]], x], Dist[Times[1, Power[Times[a, Power[f, n], Plus[m, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Simp[Plus[Times[a, e, Plus[m, 1]], Times[-1, b, d, Plus[m, Times[n, Plus[p, 1]], 1]], Times[-1, c, d, Plus[m, Times[2, n, Plus[p, 1]], 1], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m], Less[m, -1], Or[IntegerQ[p], And[IntegerQ[Times[2, p]], IntegerQ[m], Equal[n, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[d, Power[Times[f, x], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[a, f, Plus[m, 1]], -1]], x], Dist[Times[1, Power[Times[a, Power[f, n], Plus[m, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, n]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p], Plus[Times[a, e, Plus[m, 1]], Times[-1, c, d, Plus[m, Times[2, n, Plus[p, 1]], 1], Power[x, n]]]], x], x]], And[FreeQ[List[a, c, d, e, f, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], RationalQ[m], Less[m, -1], Or[IntegerQ[p], And[IntegerQ[Times[2, p]], IntegerQ[m], Equal[n, 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[a, c], 2]]], Condition[With[List[Set[r, Rt[Plus[Times[2, c, q], Times[-1, b, c]], 2]]], Plus[Dist[Times[c, Power[Times[2, q, r], -1]], Int[Times[Power[Times[f, x], m], Simp[Plus[Times[d, r], Times[-1, Plus[Times[c, d], Times[-1, e, q]], Power[x, Times[n, Power[2, -1]]]]], x], Power[Plus[q, Times[-1, r, Power[x, Times[n, Power[2, -1]]]], Times[c, Power[x, n]]], -1]], x], x], Dist[Times[c, Power[Times[2, q, r], -1]], Int[Times[Power[Times[f, x], m], Simp[Plus[Times[d, r], Times[Plus[Times[c, d], Times[-1, e, q]], Power[x, Times[n, Power[2, -1]]]]], x], Power[Plus[q, Times[r, Power[x, Times[n, Power[2, -1]]]], Times[c, Power[x, n]]], -1]], x], x]]], Not[NegativeQ[Plus[Times[2, c, q], Times[-1, b, c]]]]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NegativeQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], IntegersQ[m, Times[n, Power[2, -1]]], Less[0, m, n], PosQ[Times[a, c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[a, c], 2]]], Condition[With[List[Set[r, Rt[Times[2, c, q], 2]]], Plus[Dist[Times[c, Power[Times[2, q, r], -1]], Int[Times[Power[Times[f, x], m], Simp[Plus[Times[d, r], Times[-1, Plus[Times[c, d], Times[-1, e, q]], Power[x, Times[n, Power[2, -1]]]]], x], Power[Plus[q, Times[-1, r, Power[x, Times[n, Power[2, -1]]]], Times[c, Power[x, n]]], -1]], x], x], Dist[Times[c, Power[Times[2, q, r], -1]], Int[Times[Power[Times[f, x], m], Simp[Plus[Times[d, r], Times[Plus[Times[c, d], Times[-1, e, q]], Power[x, Times[n, Power[2, -1]]]]], x], Power[Plus[q, Times[r, Power[x, Times[n, Power[2, -1]]]], Times[c, Power[x, n]]], -1]], x], x]]], Not[NegativeQ[Times[2, c, q]]]]], And[FreeQ[List[a, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveQ[Times[a, c]], IntegersQ[m, Times[n, Power[2, -1]]], Less[0, m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Times[c, Power[e, -1], Plus[Times[2, c, d], Times[-1, b, e]]], 2]]], Plus[Dist[Times[e, Power[2, -1]], Int[Times[Power[Times[f, x], m], Power[Plus[Times[c, d, Power[e, -1]], Times[-1, r, x], Times[c, Power[x, 2]]], -1]], x], x], Dist[Times[e, Power[2, -1]], Int[Times[Power[Times[f, x], m], Power[Plus[Times[c, d, Power[e, -1]], Times[r, x], Times[c, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, m], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, a, Power[e, 2]]]], PositiveQ[Times[d, Power[e, -1]]], PosQ[Times[c, Power[e, -1], Plus[Times[2, c, d], Times[-1, b, e]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Times[2, Power[c, 2], d, Power[e, -1]], 2]]], Plus[Dist[Times[e, Power[2, -1]], Int[Times[Power[Times[f, x], m], Power[Plus[Times[c, d, Power[e, -1]], Times[-1, r, x], Times[c, Power[x, 2]]], -1]], x], x], Dist[Times[e, Power[2, -1]], Int[Times[Power[Times[f, x], m], Power[Plus[Times[c, d, Power[e, -1]], Times[r, x], Times[c, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, c, d, e, f, m], x], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, a, Power[e, 2]]]], PositiveQ[Times[d, Power[e, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[a, c], 2]]], Condition[With[List[Set[r, Rt[Plus[Times[2, c, q], Times[-1, b, c]], 2]]], Plus[Dist[Times[c, Power[Times[2, q, r], -1]], Int[Times[Power[Times[f, x], m], Plus[Times[d, r], Times[-1, Plus[Times[c, d], Times[-1, e, q]], Power[x, Times[n, Power[2, -1]]]]], Power[Plus[q, Times[-1, r, Power[x, Times[n, Power[2, -1]]]], Times[c, Power[x, n]]], -1]], x], x], Dist[Times[c, Power[Times[2, q, r], -1]], Int[Times[Power[Times[f, x], m], Plus[Times[d, r], Times[Plus[Times[c, d], Times[-1, e, q]], Power[x, Times[n, Power[2, -1]]]]], Power[Plus[q, Times[r, Power[x, Times[n, Power[2, -1]]]], Times[c, Power[x, n]]], -1]], x], x]]], Not[NegativeQ[Plus[Times[2, c, q], Times[-1, b, c]]]]]], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NegativeQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], IntegerQ[Times[n, Power[2, -1]]], Greater[n, 2], PosQ[Times[a, c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[a, c], 2]]], Condition[With[List[Set[r, Rt[Times[2, c, q], 2]]], Plus[Dist[Times[c, Power[Times[2, q, r], -1]], Int[Times[Power[Times[f, x], m], Plus[Times[d, r], Times[-1, Plus[Times[c, d], Times[-1, e, q]], Power[x, Times[n, Power[2, -1]]]]], Power[Plus[q, Times[-1, r, Power[x, Times[n, Power[2, -1]]]], Times[c, Power[x, n]]], -1]], x], x], Dist[Times[c, Power[Times[2, q, r], -1]], Int[Times[Power[Times[f, x], m], Plus[Times[d, r], Times[Plus[Times[c, d], Times[-1, e, q]], Power[x, Times[n, Power[2, -1]]]]], Power[Plus[q, Times[r, Power[x, Times[n, Power[2, -1]]]], Times[c, Power[x, n]]], -1]], x], x]]], Not[NegativeQ[Times[2, c, q]]]]], And[FreeQ[List[a, c, d, e, f, m], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], IntegerQ[Times[n, Power[2, -1]]], Greater[n, 2], PositiveQ[Times[a, c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Plus[Times[e, Power[2, -1]], Times[Plus[Times[2, c, d], Times[-1, b, e]], Power[Times[2, q], -1]]], Int[Times[Power[Times[f, x], m], Power[Plus[Times[b, Power[2, -1]], Times[-1, q, Power[2, -1]], Times[c, Power[x, n]]], -1]], x], x], Dist[Plus[Times[e, Power[2, -1]], Times[-1, Plus[Times[2, c, d], Times[-1, b, e]], Power[Times[2, q], -1]]], Int[Times[Power[Times[f, x], m], Power[Plus[Times[b, Power[2, -1]], Times[q, Power[2, -1]], Times[c, Power[x, n]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, a, c], 2]]], Plus[Times[-1, Dist[Plus[Times[e, Power[2, -1]], Times[c, d, Power[Times[2, q], -1]]], Int[Times[Power[Times[f, x], m], Power[Plus[q, Times[-1, c, Power[x, n]]], -1]], x], x]], Dist[Plus[Times[e, Power[2, -1]], Times[-1, c, d, Power[Times[2, q], -1]]], Int[Times[Power[Times[f, x], m], Power[Plus[q, Times[c, Power[x, n]]], -1]], x], x]]], And[FreeQ[List[a, c, d, e, f, m], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], IntegerQ[q], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], -1]], x], x], And[FreeQ[List[a, c, d, e, f, m], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], IntegerQ[q], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Times[f, x], m], Times[Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], IntegerQ[q], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Times[f, x], m], Times[Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], -1]], x], x], And[FreeQ[List[a, c, d, e, f, m], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], IntegerQ[q], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Power[f, Times[2, n]], Power[Power[c, 2], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, 2, n]]], Plus[Times[c, d], Times[-1, b, e], Times[c, e, Power[x, n]]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, -1]]], x], x], Times[-1, Dist[Times[Power[f, Times[2, n]], Power[Power[c, 2], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, 2, n]]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, -1]], Simp[Plus[Times[a, Plus[Times[c, d], Times[-1, b, e]]], Times[Plus[Times[b, c, d], Times[-1, Power[b, 2], e], Times[a, c, e]], Power[x, n]]], x], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], Not[IntegerQ[q]], RationalQ[m, q], Greater[q, 0], Greater[m, Plus[Times[2, n], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Power[f, Times[2, n]], Power[c, -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, 2, n]]], Power[Plus[d, Times[e, Power[x, n]]], q]], x], x], Times[-1, Dist[Times[a, Power[f, Times[2, n]], Power[c, -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, 2, n]]], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], -1]], x], x]]], And[FreeQ[List[a, c, d, e, f, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], Not[IntegerQ[q]], RationalQ[m], Greater[m, Plus[Times[2, n], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[e, Power[f, n], Power[c, -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, n]]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, -1]]], x], x], Times[-1, Dist[Times[Power[f, n], Power[c, -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, n]]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, -1]], Simp[Plus[Times[a, e], Times[-1, Plus[Times[c, d], Times[-1, b, e]], Power[x, n]]], x], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], Not[IntegerQ[q]], RationalQ[m, q], Greater[q, 0], Inequality[Plus[n, -1], Less, m, LessEqual, Plus[Times[2, n], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[e, Power[f, n], Power[c, -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, n]]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, -1]]], x], x], Times[-1, Dist[Times[Power[f, n], Power[c, -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, n]]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, -1]], Simp[Plus[Times[a, e], Times[-1, c, d, Power[x, n]]], x], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], -1]], x], x]]], And[FreeQ[List[a, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], Not[IntegerQ[q]], RationalQ[m, q], Greater[q, 0], Inequality[Plus[n, -1], Less, m, LessEqual, Plus[Times[2, n], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[d, Power[a, -1]], Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, -1]]], x], x], Times[-1, Dist[Times[1, Power[Times[a, Power[f, n]], -1]], Int[Times[Power[Times[f, x], Plus[m, n]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, -1]], Simp[Plus[Times[b, d], Times[-1, a, e], Times[c, d, Power[x, n]]], x], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], Not[IntegerQ[q]], RationalQ[m, q], Greater[q, 0], Less[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[d, Power[a, -1]], Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, -1]]], x], x], Dist[Times[1, Power[Times[a, Power[f, n]], -1]], Int[Times[Power[Times[f, x], Plus[m, n]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, -1]], Simp[Plus[Times[a, e], Times[-1, c, d, Power[x, n]]], x], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], -1]], x], x]], And[FreeQ[List[a, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], Not[IntegerQ[q]], RationalQ[m, q], Greater[q, 0], Less[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Power[d, 2], Power[f, Times[2, n]], Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, 2, n]]], Power[Plus[d, Times[e, Power[x, n]]], q]], x], x], Times[-1, Dist[Times[Power[f, Times[2, n]], Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, 2, n]]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], Simp[Plus[Times[a, d], Times[Plus[Times[b, d], Times[-1, a, e]], Power[x, n]]], x], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], Not[IntegerQ[q]], RationalQ[m, q], Less[q, -1], Greater[m, Plus[Times[2, n], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Power[d, 2], Power[f, Times[2, n]], Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, 2, n]]], Power[Plus[d, Times[e, Power[x, n]]], q]], x], x], Times[-1, Dist[Times[a, Power[f, Times[2, n]], Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, 2, n]]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], Plus[d, Times[-1, e, Power[x, n]]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], -1]], x], x]]], And[FreeQ[List[a, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], Not[IntegerQ[q]], RationalQ[m, q], Less[q, -1], Greater[m, Plus[Times[2, n], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[d, e, Power[f, n], Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, n]]], Power[Plus[d, Times[e, Power[x, n]]], q]], x], x]], Dist[Times[Power[f, n], Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, n]]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], Simp[Plus[Times[a, e], Times[c, d, Power[x, n]]], x], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], Not[IntegerQ[q]], RationalQ[m, q], Less[q, -1], Inequality[Plus[n, -1], Less, m, LessEqual, Plus[Times[2, n], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[d, e, Power[f, n], Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, n]]], Power[Plus[d, Times[e, Power[x, n]]], q]], x], x]], Dist[Times[Power[f, n], Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, n]]], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], Simp[Plus[Times[a, e], Times[c, d, Power[x, n]]], x], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], -1]], x], x]], And[FreeQ[List[a, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], Not[IntegerQ[q]], RationalQ[m, q], Less[q, -1], Inequality[Plus[n, -1], Less, m, LessEqual, Plus[Times[2, n], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Power[e, 2], Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], q]], x], x], Dist[Times[1, Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], Simp[Plus[Times[c, d], Times[-1, b, e], Times[-1, c, e, Power[x, n]]], x], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], Not[IntegerQ[q]], RationalQ[q], Less[q, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Power[e, 2], Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], q]], x], x], Dist[Times[c, Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], Plus[q, 1]], Plus[d, Times[-1, e, Power[x, n]]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], -1]], x], x]], And[FreeQ[List[a, c, d, e, f, m], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], Not[IntegerQ[q]], RationalQ[q], Less[q, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[d, Times[e, Power[x, n]]], q], Times[Power[Times[f, x], m], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, q, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], Not[IntegerQ[q]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[d, Times[e, Power[x, n]]], q], Times[Power[Times[f, x], m], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], -1]], x], x], And[FreeQ[List[a, c, d, e, f, q, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], Not[IntegerQ[q]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], q]], Times[1, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, q, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], Not[IntegerQ[q]], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], q]], Times[1, Power[Plus[a, Times[c, Power[x, Times[2, n]]]], -1]], x], x], And[FreeQ[List[a, c, d, e, f, m, q, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], Not[IntegerQ[q]], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[Power[d, 2], -1]], Int[Times[Power[Times[f, x], m], Plus[Times[a, d], Times[Plus[Times[b, d], Times[-1, a, e]], Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, -1]]], x], x], Dist[Times[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], Power[Times[Power[d, 2], Power[f, Times[2, n]]], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[2, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, -1]], Power[Plus[d, Times[e, Power[x, n]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p], Greater[p, 0], Less[m, Times[-1, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[a, Power[Power[d, 2], -1]], Int[Times[Power[Times[f, x], m], Plus[d, Times[-1, e, Power[x, n]]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, -1]]], x], x], Dist[Times[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], Power[Times[Power[d, 2], Power[f, Times[2, n]]], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[2, n]]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, -1]], Power[Plus[d, Times[e, Power[x, n]]], -1]], x], x]], And[FreeQ[List[a, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], RationalQ[m, p], Greater[p, 0], Less[m, Times[-1, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[Times[d, e], -1]], Int[Times[Power[Times[f, x], m], Plus[Times[a, e], Times[c, d, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, -1]]], x], x], Times[-1, Dist[Times[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], Power[Times[d, e, Power[f, n]], -1]], Int[Times[Power[Times[f, x], Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, -1]], Power[Plus[d, Times[e, Power[x, n]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p], Greater[p, 0], Less[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[Times[d, e], -1]], Int[Times[Power[Times[f, x], m], Plus[Times[a, e], Times[c, d, Power[x, n]]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, -1]]], x], x], Times[-1, Dist[Times[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], Power[Times[d, e, Power[f, n]], -1]], Int[Times[Power[Times[f, x], Plus[m, n]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, -1]], Power[Plus[d, Times[e, Power[x, n]]], -1]], x], x]]], And[FreeQ[List[a, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], RationalQ[m, p], Greater[p, 0], Less[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[Power[f, Times[2, n]], Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, 2, n]]], Plus[Times[a, d], Times[Plus[Times[b, d], Times[-1, a, e]], Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x]], Dist[Times[Power[d, 2], Power[f, Times[2, n]], Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, 2, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Plus[d, Times[e, Power[x, n]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p], Less[p, -1], Greater[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[a, Power[f, Times[2, n]], Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, 2, n]]], Plus[d, Times[-1, e, Power[x, n]]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p]], x], x]], Dist[Times[Power[d, 2], Power[f, Times[2, n]], Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, 2, n]]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Plus[d, Times[e, Power[x, n]]], -1]], x], x]], And[FreeQ[List[a, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], RationalQ[m, p], Less[p, -1], Greater[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Power[f, n], Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, n]]], Plus[Times[a, e], Times[c, d, Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], Times[-1, Dist[Times[d, e, Power[f, n], Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Plus[d, Times[e, Power[x, n]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p], Less[p, -1], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Power[f, n], Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, n]]], Plus[Times[a, e], Times[c, d, Power[x, n]]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p]], x], x], Times[-1, Dist[Times[d, e, Power[f, n], Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Times[f, x], Plus[m, Times[-1, n]]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Plus[d, Times[e, Power[x, n]]], -1]], x], x]]], And[FreeQ[List[a, c, d, e, f], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], RationalQ[m, p], Less[p, -1], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], q]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], Or[PositiveIntegerQ[q], IntegersQ[m, q]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p], Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], q]], x], x], And[FreeQ[List[a, c, d, e, f, m, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PositiveIntegerQ[n], Or[PositiveIntegerQ[q], IntegersQ[m, q]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[d, Times[e, Power[x, Times[-1, n]]]], q], Power[Plus[a, Times[b, Power[x, Times[-1, n]]], Times[c, Power[x, Times[-2, n]]]], p], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, b, c, d, e, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[d, Times[e, Power[x, Times[-1, n]]]], q], Power[Plus[a, Times[c, Power[x, Times[-2, n]]]], p], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, c, d, e, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NegativeIntegerQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[g, Denominator[m]]], Times[-1, Dist[Times[g, Power[f, -1]], Subst[Int[Times[Power[Plus[d, Times[e, Power[f, Times[-1, n]], Power[x, Times[-1, g, n]]]], q], Power[Plus[a, Times[b, Power[f, Times[-1, n]], Power[x, Times[-1, g, n]]], Times[c, Power[f, Times[-2, n]], Power[x, Times[-2, g, n]]]], p], Power[Power[x, Plus[Times[g, Plus[m, 1]], 1]], -1]], x], x, Times[1, Power[Power[Times[f, x], Times[1, Power[g, -1]]], -1]]], x]]], And[FreeQ[List[a, b, c, d, e, f, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[n], FractionQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[g, Denominator[m]]], Times[-1, Dist[Times[g, Power[f, -1]], Subst[Int[Times[Power[Plus[d, Times[e, Power[f, Times[-1, n]], Power[x, Times[-1, g, n]]]], q], Power[Plus[a, Times[c, Power[f, Times[-2, n]], Power[x, Times[-2, g, n]]]], p], Power[Power[x, Plus[Times[g, Plus[m, 1]], 1]], -1]], x], x, Times[1, Power[Power[Times[f, x], Times[1, Power[g, -1]]], -1]]], x]]], And[FreeQ[List[a, c, d, e, f, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NegativeIntegerQ[n], FractionQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[f, IntPart[m]], Power[Times[f, x], FracPart[m]], Power[Power[x, -1], FracPart[m]]], Subst[Int[Times[Power[Plus[d, Times[e, Power[x, Times[-1, n]]]], q], Power[Plus[a, Times[b, Power[x, Times[-1, n]]], Times[c, Power[x, Times[-2, n]]]], p], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, d, e, f, m, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[n], Not[RationalQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[f, IntPart[m]], Power[Times[f, x], FracPart[m]], Power[Power[x, -1], FracPart[m]]], Subst[Int[Times[Power[Plus[d, Times[e, Power[x, Times[-1, n]]]], q], Power[Plus[a, Times[c, Power[x, Times[-2, n]]]], p], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, c, d, e, f, m, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NegativeIntegerQ[n], Not[RationalQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[g, Denominator[n]]], Dist[g, Subst[Int[Times[Power[x, Plus[Times[g, Plus[m, 1]], -1]], Power[Plus[d, Times[e, Power[x, Times[g, n]]]], q], Power[Plus[a, Times[b, Power[x, Times[g, n]]], Times[c, Power[x, Times[2, g, n]]]], p]], x], x, Power[x, Times[1, Power[g, -1]]]], x]], And[FreeQ[List[a, b, c, d, e, m, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[g, Denominator[n]]], Dist[g, Subst[Int[Times[Power[x, Plus[Times[g, Plus[m, 1]], -1]], Power[Plus[d, Times[e, Power[x, Times[g, n]]]], q], Power[Plus[a, Times[c, Power[x, Times[2, g, n]]]], p]], x], x, Power[x, Times[1, Power[g, -1]]]], x]], And[FreeQ[List[a, c, d, e, m, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[f, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[f, IntPart[m]], Power[Times[f, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[f, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[f, IntPart[m]], Power[Times[f, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, c, d, e, f, m, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Plus[m, 1], -1]], Subst[Int[Times[Power[Plus[d, Times[e, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]]], q], Power[Plus[a, Times[b, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]], Times[c, Power[x, Simplify[Times[2, n, Power[Plus[m, 1], -1]]]]]], p]], x], x, Power[x, Plus[m, 1]]], x], And[FreeQ[List[a, b, c, d, e, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Plus[m, 1], -1]], Subst[Int[Times[Power[Plus[d, Times[e, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]]], q], Power[Plus[a, Times[c, Power[x, Simplify[Times[2, n, Power[Plus[m, 1], -1]]]]]], p]], x], x, Power[x, Plus[m, 1]]], x], And[FreeQ[List[a, c, d, e, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[f, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[f, IntPart[m]], Power[Times[f, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[f, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[f, IntPart[m]], Power[Times[f, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, c, d, e, f, m, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Times[2, c, Power[r, -1]], Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[b, Times[-1, r], Times[2, c, Power[x, n]]], -1]], x], x], Times[-1, Dist[Times[2, c, Power[r, -1]], Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[b, r, Times[2, c, Power[x, n]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, m, n, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Times[-1, a, c], 2]]], Plus[Times[-1, Dist[Times[c, Power[Times[2, r], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[r, Times[-1, c, Power[x, n]]], -1]], x], x]], Times[-1, Dist[Times[c, Power[Times[2, r], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[r, Times[c, Power[x, n]]], -1]], x], x]]]], And[FreeQ[List[a, c, d, e, f, m, n, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Plus[Times[d, Plus[Power[b, 2], Times[-1, 2, a, c]]], Times[-1, a, b, e], Times[Plus[Times[b, d], Times[-1, 2, a, e]], c, Power[x, n]]], Power[Times[a, f, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x]], Dist[Times[1, Power[Times[a, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Simp[Plus[Times[d, Plus[Times[Power[b, 2], Plus[m, Times[n, Plus[p, 1]], 1]], Times[-1, 2, a, c, Plus[m, Times[2, n, Plus[p, 1]], 1]]]], Times[-1, a, b, e, Plus[m, 1]], Times[Plus[m, Times[n, Plus[Times[2, p], 3]], 1], Plus[Times[b, d], Times[-1, 2, a, e]], c, Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, m, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Plus[d, Times[e, Power[x, n]]], Power[Times[2, a, f, n, Plus[p, 1]], -1]], x]], Dist[Times[1, Power[Times[2, a, n, Plus[p, 1]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Simp[Plus[Times[d, Plus[m, Times[2, n, Plus[p, 1]], 1]], Times[e, Plus[m, Times[n, Plus[Times[2, p], 3]], 1], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, c, d, e, f, m, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NegativeIntegerQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Or[PositiveIntegerQ[p], PositiveIntegerQ[q]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, c, d, e, f, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], Or[PositiveIntegerQ[p], PositiveIntegerQ[q]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[f, m], Int[ExpandIntegrand[Times[Power[x, m], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p]], Power[Plus[Times[d, Power[Plus[Power[d, 2], Times[-1, Power[e, 2], Power[x, Times[2, n]]]], -1]], Times[-1, e, Power[x, n], Power[Plus[Power[d, 2], Times[-1, Power[e, 2], Power[x, Times[2, n]]]], -1]]], Times[-1, q]], x], x], x], And[FreeQ[List[a, c, d, e, f, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NegativeIntegerQ[q], Or[IntegerQ[m], PositiveQ[f]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[f, x], m], Power[Power[x, m], -1]], Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, c, d, e, f, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NegativeIntegerQ[q], Not[Or[IntegerQ[m], PositiveQ[f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], And[FreeQ[List[a, b, c, d, e, f, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p]], x], And[FreeQ[List[a, c, d, e, f, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[v, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[u, m], Power[Times[Coefficient[v, x, 1], Power[v, m]], -1]], Subst[Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x, v], x], And[FreeQ[List[a, b, c, d, e, m, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], LinearPairQ[u, v, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[v, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[u, m], Power[Times[Coefficient[v, x, 1], Power[v, m]], -1]], Subst[Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p]], x], x, v], x], And[FreeQ[List[a, c, d, e, m, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], LinearPairQ[u, v, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Plus[m, Times[-1, n, q]]], Power[Plus[e, Times[d, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], And[FreeQ[List[a, b, c, d, e, m, n, p], x], EqQ[n2, Times[2, n]], EqQ[mn, Times[-1, n]], IntegerQ[q]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Plus[m, Times[mn, q]]], Power[Plus[e, Times[d, Power[x, Times[-1, mn]]]], q], Power[Plus[a, Times[c, Power[x, n2]]], p]], x], And[FreeQ[List[a, c, d, e, m, mn, p], x], EqQ[n2, Times[-2, mn]], IntegerQ[q]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Pattern[q, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Plus[m, Times[2, n, p]]], Power[Plus[d, Times[e, Power[x, Times[-1, n]]]], q], Power[Plus[c, Times[b, Power[x, Times[-1, n]]], Times[a, Power[x, Times[-2, n]]]], p]], x], And[FreeQ[List[a, b, c, d, e, m, n, q], x], EqQ[n2, Times[2, n]], EqQ[mn, Times[-1, n]], Not[IntegerQ[q]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Plus[m, Times[-1, 2, mn, p]]], Power[Plus[d, Times[e, Power[x, mn]]], q], Power[Plus[c, Times[a, Power[x, Times[2, mn]]]], p]], x], And[FreeQ[List[a, c, d, e, m, mn, q], x], EqQ[n2, Times[-2, mn]], Not[IntegerQ[q]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Pattern[q, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[x, Times[n, FracPart[q]]], Power[Plus[d, Times[e, Power[x, Times[-1, n]]]], FracPart[q]], Power[Power[Plus[e, Times[d, Power[x, n]]], FracPart[q]], -1]], Int[Times[Power[x, Plus[m, Times[-1, n, q]]], Power[Plus[e, Times[d, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, m, n, p, q], x], EqQ[n2, Times[2, n]], EqQ[mn, Times[-1, n]], Not[IntegerQ[q]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Pattern[q, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[x, Times[-1, mn, FracPart[q]]], Power[Plus[d, Times[e, Power[x, mn]]], FracPart[q]], Power[Power[Plus[e, Times[d, Power[x, Times[-1, mn]]]], FracPart[q]], -1]], Int[Times[Power[x, Plus[m, Times[mn, q]]], Power[Plus[e, Times[d, Power[x, Times[-1, mn]]]], q], Power[Plus[a, Times[c, Power[x, n2]]], p]], x], x], And[FreeQ[List[a, c, d, e, m, mn, p, q], x], EqQ[n2, Times[-2, mn]], Not[IntegerQ[q]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[f, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[f, IntPart[m]], Power[Times[f, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, mn]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, n, p, q], x], EqQ[n2, Times[2, n]], EqQ[mn, Times[-1, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[f, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[mn, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[f, IntPart[m]], Power[Times[f, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, mn]]], q], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, c, d, e, f, m, mn, p, q], x], EqQ[n2, Times[-2, mn]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[mn, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Plus[m, Times[-1, n, p]]], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[b, Times[a, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], And[FreeQ[List[a, b, c, d, e, m, n, q], x], EqQ[mn, Times[-1, n]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[mn, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[x, Times[n, FracPart[p]]], Power[Plus[a, Times[b, Power[Power[x, n], -1]], Times[c, Power[x, n]]], FracPart[p]], Power[Power[Plus[b, Times[a, Power[x, n]], Times[c, Power[x, Times[2, n]]]], FracPart[p]], -1]], Int[Times[Power[x, Plus[m, Times[-1, n, p]]], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[b, Times[a, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, m, n, p, q], x], EqQ[mn, Times[-1, n]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[f, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[mn, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[f, IntPart[m]], Power[Times[f, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, Times[-1, n]]], Times[c, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, n, p, q], x], EqQ[mn, Times[-1, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[f, x], m], Power[Plus[Times[d1, d2], Times[e1, e2, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[non2, Times[-1, n, Power[2, -1]]]], ZeroQ[Plus[Times[d2, e1], Times[d1, e2]]], Or[IntegerQ[q], And[PositiveQ[d1], PositiveQ[d2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[non2, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[d1, Times[e1, Power[x, Times[n, Power[2, -1]]]]], FracPart[q]], Power[Plus[d2, Times[e2, Power[x, Times[n, Power[2, -1]]]]], FracPart[q]], Power[Power[Plus[Times[d1, d2], Times[e1, e2, Power[x, n]]], FracPart[q]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[Times[d1, d2], Times[e1, e2, Power[x, n]]], q], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, n, p, q], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[non2, Times[-1, n, Power[2, -1]]]], ZeroQ[Plus[Times[d2, e1], Times[d1, e2]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Times[Plus[a, b, c], Power[x, n]], p], x], And[FreeQ[List[a, b, c, n, p], x], ZeroQ[Plus[n, Times[-1, q]]], ZeroQ[Plus[r, Times[-1, n]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Times[p, q]], Power[Plus[a, Times[b, Power[x, Plus[n, Times[-1, q]]]], Times[c, Power[x, Times[2, Plus[n, Times[-1, q]]]]]], p]], x], And[FreeQ[List[a, b, c, n, q], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PosQ[Plus[n, Times[-1, q]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Rational[1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]]], Power[Times[Power[x, Times[q, Power[2, -1]]], Sqrt[Plus[a, Times[b, Power[x, Plus[n, Times[-1, q]]]], Times[c, Power[x, Times[2, Plus[n, Times[-1, q]]]]]]]], -1]], Int[Times[Power[x, Times[q, Power[2, -1]]], Sqrt[Plus[a, Times[b, Power[x, Plus[n, Times[-1, q]]]], Times[c, Power[x, Times[2, Plus[n, Times[-1, q]]]]]]]], x], x], And[FreeQ[List[a, b, c, n, q], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PosQ[Plus[n, Times[-1, q]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[x, Times[q, Power[2, -1]]], Sqrt[Plus[a, Times[b, Power[x, Plus[n, Times[-1, q]]]], Times[c, Power[x, Times[2, Plus[n, Times[-1, q]]]]]]], Power[Sqrt[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]]], -1]], Int[Times[1, Power[Times[Power[x, Times[q, Power[2, -1]]], Sqrt[Plus[a, Times[b, Power[x, Plus[n, Times[-1, q]]]], Times[c, Power[x, Times[2, Plus[n, Times[-1, q]]]]]]]], -1]], x], x], And[FreeQ[List[a, b, c, n, q], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PosQ[Plus[n, Times[-1, q]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p], Power[Plus[Times[p, Plus[Times[2, n], Times[-1, q]]], 1], -1]], x], Dist[Times[Plus[n, Times[-1, q]], p, Power[Plus[Times[p, Plus[Times[2, n], Times[-1, q]]], 1], -1]], Int[Times[Power[x, q], Plus[Times[2, a], Times[b, Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, n, q], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PosQ[Plus[n, Times[-1, q]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p], Greater[p, 0], NonzeroQ[Plus[Times[p, Plus[Times[2, n], Times[-1, q]]], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[Times[-1, q], 1]], Plus[Power[b, 2], Times[-1, 2, a, c], Times[b, c, Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]], Power[Times[a, Plus[n, Times[-1, q]], Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x]], Dist[Times[1, Power[Times[a, Plus[n, Times[-1, q]], Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[x, Times[-1, q]], Plus[Times[Plus[Times[p, q], 1], Plus[Power[b, 2], Times[-1, 2, a, c]]], Times[Plus[n, Times[-1, q]], Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], Times[b, c, Plus[Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 3]], 1], Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, n, q], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PosQ[Plus[n, Times[-1, q]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p], Power[Times[Power[x, Times[p, q]], Power[Plus[a, Times[b, Power[x, Plus[n, Times[-1, q]]]], Times[c, Power[x, Times[2, Plus[n, Times[-1, q]]]]]], p]], -1]], Int[Times[Power[x, Times[p, q]], Power[Plus[a, Times[b, Power[x, Plus[n, Times[-1, q]]]], Times[c, Power[x, Times[2, Plus[n, Times[-1, q]]]]]], p]], x], x], And[FreeQ[List[a, b, c, n, p, q], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PosQ[Plus[n, Times[-1, q]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p], x], And[FreeQ[List[a, b, c, n, p, q], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[u, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[u, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[u, Blank[]], Optional[Pattern[r, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p], x], x, u], x], And[FreeQ[List[a, b, c, n, p, q], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[Times[Plus[a, b, c], Power[x, n]], p]], x], And[FreeQ[List[a, b, c, m, n, p], x], ZeroQ[Plus[q, Times[-1, n]]], ZeroQ[Plus[r, Times[-1, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Plus[m, Times[p, q]]], Power[Plus[a, Times[b, Power[x, Plus[n, Times[-1, q]]]], Times[c, Power[x, Times[2, Plus[n, Times[-1, q]]]]]], p]], x], And[FreeQ[List[a, b, c, m, n, q], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], IntegerQ[p], PosQ[Plus[n, Times[-1, q]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[x, Times[q, Power[2, -1]]], Sqrt[Plus[a, Times[b, Power[x, Plus[n, Times[-1, q]]]], Times[c, Power[x, Times[2, Plus[n, Times[-1, q]]]]]]], Power[Sqrt[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]]], -1]], Int[Times[Power[x, Plus[m, Times[-1, q, Power[2, -1]]]], Power[Sqrt[Plus[a, Times[b, Power[x, Plus[n, Times[-1, q]]]], Times[c, Power[x, Times[2, Plus[n, Times[-1, q]]]]]]], -1]], x], x], And[FreeQ[List[a, b, c, m, n, q], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PosQ[Plus[n, Times[-1, q]]], Or[And[ZeroQ[Plus[m, -1]], ZeroQ[Plus[n, -3]], ZeroQ[Plus[q, -2]]], And[Or[ZeroQ[Plus[m, Times[1, Power[2, -1]]]], ZeroQ[Plus[m, Times[-1, 3, Power[2, -1]]]], ZeroQ[Plus[m, Times[-1, 1, Power[2, -1]]]], ZeroQ[Plus[m, Times[-1, 5, Power[2, -1]]]]], ZeroQ[Plus[n, -3]], ZeroQ[Plus[q, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Rational[-3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[-2, Power[x, Times[Plus[n, -1], Power[2, -1]]], Plus[b, Times[2, c, x]], Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Sqrt[Plus[Times[a, Power[x, Plus[n, -1]]], Times[b, Power[x, n]], Times[c, Power[x, Plus[n, 1]]]]]], -1]], x], And[FreeQ[List[a, b, c, n], x], ZeroQ[Plus[m, Times[-1, 3, Plus[n, -1], Power[2, -1]]]], ZeroQ[Plus[q, Times[-1, n], 1]], ZeroQ[Plus[r, Times[-1, n], -1]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Rational[-3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[x, Times[Plus[n, -1], Power[2, -1]]], Plus[Times[4, a], Times[2, b, x]], Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Sqrt[Plus[Times[a, Power[x, Plus[n, -1]]], Times[b, Power[x, n]], Times[c, Power[x, Plus[n, 1]]]]]], -1]], x], And[FreeQ[List[a, b, c, n], x], ZeroQ[Plus[m, Times[-1, Plus[Times[3, n], -1], Power[2, -1]]]], ZeroQ[Plus[q, Times[-1, n], 1]], ZeroQ[Plus[r, Times[-1, n], -1]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, Times[-1, n]]], Power[Plus[Times[a, Power[x, Plus[n, -1]]], Times[b, Power[x, n]], Times[c, Power[x, Plus[n, 1]]]], Plus[p, 1]], Power[Times[2, c, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[b, Power[Times[2, c], -1]], Int[Times[Power[x, Plus[m, -1]], Power[Plus[Times[a, Power[x, Plus[n, -1]]], Times[b, Power[x, n]], Times[c, Power[x, Plus[n, 1]]]], p]], x], x]]], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PosQ[Plus[n, Times[-1, q]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p, q], Equal[Plus[m, Times[p, Plus[n, -1]], -1], 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, Times[-1, n], q, 1]], Plus[b, Times[2, c, Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p], Power[Times[2, c, Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], -1]], x], Times[-1, Dist[Times[p, Plus[Power[b, 2], Times[-1, 4, a, c]], Power[Times[2, c, Plus[Times[2, p], 1]], -1]], Int[Times[Power[x, Plus[m, q]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PosQ[Plus[n, Times[-1, q]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p, q], Greater[p, 0], Equal[Plus[m, Times[p, q], 1], Plus[n, Times[-1, q]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, Times[-1, n], q, 1]], Plus[Times[b, Plus[n, Times[-1, q]], p], Times[c, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], -1]], 1], Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p], Power[Times[c, Plus[m, Times[p, Plus[Times[2, n], Times[-1, q]]], 1], Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], -1]], 1]], -1]], x], Dist[Times[Plus[n, Times[-1, q]], p, Power[Times[c, Plus[m, Times[p, Plus[Times[2, n], Times[-1, q]]], 1], Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], -1]], 1]], -1]], Int[Times[Power[x, Plus[m, Times[-1, Plus[n, Times[-1, 2, q]]]]], Simp[Plus[Times[-1, a, b, Plus[m, Times[p, q], Times[-1, n], q, 1]], Times[Plus[Times[2, a, c, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], -1]], 1]], Times[-1, Power[b, 2], Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[p, -1]], 1]]], Power[x, Plus[n, Times[-1, q]]]]], x], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PosQ[Plus[n, Times[-1, q]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p, q], Greater[p, 0], Greater[Plus[m, Times[p, q], 1], Plus[n, Times[-1, q]]], Unequal[Plus[m, Times[p, Plus[Times[2, n], Times[-1, q]]], 1], 0], Unequal[Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], -1]], 1], 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p], Power[Plus[m, Times[p, q], 1], -1]], x], Times[-1, Dist[Times[Plus[n, Times[-1, q]], p, Power[Plus[m, Times[p, q], 1], -1]], Int[Times[Power[x, Plus[m, n]], Plus[b, Times[2, c, Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PosQ[Plus[n, Times[-1, q]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p, q], Greater[p, 0], LessEqual[Plus[m, Times[p, q], 1], Plus[Times[-1, Plus[n, Times[-1, q]]], 1]], NonzeroQ[Plus[m, Times[p, q], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p], Power[Plus[m, Times[p, Plus[Times[2, n], Times[-1, q]]], 1], -1]], x], Dist[Times[Plus[n, Times[-1, q]], p, Power[Plus[m, Times[p, Plus[Times[2, n], Times[-1, q]]], 1], -1]], Int[Times[Power[x, Plus[m, q]], Plus[Times[2, a], Times[b, Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PosQ[Plus[n, Times[-1, q]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p, q], Greater[p, 0], Greater[Plus[m, Times[p, q], 1], Times[-1, Plus[n, Times[-1, q]]]], Unequal[Plus[m, Times[p, Plus[Times[2, n], Times[-1, q]]], 1], 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[m, Times[-1, q], 1]], Plus[Power[b, 2], Times[-1, 2, a, c], Times[b, c, Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]], Power[Times[a, Plus[n, Times[-1, q]], Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x]], Dist[Times[Plus[Times[2, a, c], Times[-1, Power[b, 2], Plus[p, 2]]], Power[Times[a, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[x, Plus[m, Times[-1, q]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PosQ[Plus[n, Times[-1, q]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p, q], Less[p, -1], Equal[Plus[m, Times[p, q], 1], Times[-1, Plus[n, Times[-1, q]], Plus[Times[2, p], 3]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[m, Times[-1, 2, n], q, 1]], Plus[Times[2, a], Times[b, Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]], Power[Times[Plus[n, Times[-1, q]], Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x]], Dist[Times[1, Power[Times[Plus[n, Times[-1, q]], Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[x, Plus[m, Times[-1, 2, n], q]], Plus[Times[2, a, Plus[m, Times[p, q], Times[-1, 2, Plus[n, Times[-1, q]]], 1]], Times[b, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1], Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PosQ[Plus[n, Times[-1, q]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p, q], Less[p, -1], Greater[Plus[m, Times[p, q], 1], Times[2, Plus[n, Times[-1, q]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[m, Times[-1, q], 1]], Plus[Power[b, 2], Times[-1, 2, a, c], Times[b, c, Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]], Power[Times[a, Plus[n, Times[-1, q]], Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x]], Dist[Times[1, Power[Times[a, Plus[n, Times[-1, q]], Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[x, Plus[m, Times[-1, q]]], Plus[Times[Power[b, 2], Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[p, 1]], 1]], Times[-1, 2, a, c, Plus[m, Times[p, q], Times[2, Plus[n, Times[-1, q]], Plus[p, 1]], 1]], Times[b, c, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 3]], 1], Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PosQ[Plus[n, Times[-1, q]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p, q], Less[p, -1], Less[Plus[m, Times[p, q], 1], Plus[n, Times[-1, q]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Plus[b, Times[2, c, Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]], Power[Times[Plus[n, Times[-1, q]], Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x], Times[-1, Dist[Times[1, Power[Times[Plus[n, Times[-1, q]], Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Plus[Times[b, Plus[m, Times[p, q], Times[-1, n], q, 1]], Times[2, c, Plus[m, Times[p, q], Times[2, Plus[n, Times[-1, q]], Plus[p, 1]], 1], Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PosQ[Plus[n, Times[-1, q]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p, q], Less[p, -1], Less[Plus[n, Times[-1, q]], Plus[m, Times[p, q], 1], Times[2, Plus[n, Times[-1, q]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, Times[-1, 2, n], q, 1]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]], Power[Times[2, c, Plus[n, Times[-1, q]], Plus[p, 1]], -1]], x], Times[-1, Dist[Times[b, Power[Times[2, c], -1]], Int[Times[Power[x, Plus[m, Times[-1, n], q]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p]], x], x]]], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PosQ[Plus[n, Times[-1, q]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p, q], Inequality[-1, LessEqual, p, Less, 0], Equal[Plus[m, Times[p, q], 1], Times[2, Plus[n, Times[-1, q]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[m, Times[-1, q], 1]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]], Power[Times[2, a, Plus[n, Times[-1, q]], Plus[p, 1]], -1]], x]], Times[-1, Dist[Times[b, Power[Times[2, a], -1]], Int[Times[Power[x, Plus[m, n, Times[-1, q]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p]], x], x]]], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PosQ[Plus[n, Times[-1, q]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p, q], Inequality[-1, LessEqual, p, Less, 0], Equal[Plus[m, Times[p, q], 1], Times[-2, Plus[n, Times[-1, q]], Plus[p, 1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, Times[-1, 2, n], q, 1]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[p, q], Times[2, Plus[n, Times[-1, q]], p], 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[c, Plus[m, Times[p, q], Times[2, Plus[n, Times[-1, q]], p], 1]], -1]], Int[Times[Power[x, Plus[m, Times[-1, 2, Plus[n, Times[-1, q]]]]], Plus[Times[a, Plus[m, Times[p, q], Times[-1, 2, Plus[n, Times[-1, q]]], 1]], Times[b, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[p, -1]], 1], Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p]], x], x]]], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PosQ[Plus[n, Times[-1, q]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p, q], Inequality[-1, LessEqual, p, Less, 0], Greater[Plus[m, Times[p, q], 1], Times[2, Plus[n, Times[-1, q]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, Times[-1, q], 1]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]], Power[Times[a, Plus[m, Times[p, q], 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[a, Plus[m, Times[p, q], 1]], -1]], Int[Times[Power[x, Plus[m, n, Times[-1, q]]], Plus[Times[b, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[p, 1]], 1]], Times[c, Plus[m, Times[p, q], Times[2, Plus[n, Times[-1, q]], Plus[p, 1]], 1], Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p]], x], x]]], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PosQ[Plus[n, Times[-1, q]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p, q], Inequality[-1, LessEqual, p, Less, 0], Less[Plus[m, Times[p, q], 1], 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p], Power[Times[Power[x, Times[p, q]], Power[Plus[a, Times[b, Power[x, Plus[n, Times[-1, q]]]], Times[c, Power[x, Times[2, Plus[n, Times[-1, q]]]]]], p]], -1]], Int[Times[Power[x, Plus[m, Times[p, q]]], Power[Plus[a, Times[b, Power[x, Plus[n, Times[-1, q]]]], Times[c, Power[x, Times[2, Plus[n, Times[-1, q]]]]]], p]], x], x], And[FreeQ[List[a, b, c, m, n, p, q], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], Not[IntegerQ[p]], PosQ[Plus[n, Times[-1, q]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[u, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[u, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[u, Blank[]], Optional[Pattern[r, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Times[Power[x, m], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p]], x], x, u], x], And[FreeQ[List[a, b, c, m, n, p, q], x], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Times[p, q]], Plus[A, Times[B, Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[a, Times[b, Power[x, Plus[n, Times[-1, q]]]], Times[c, Power[x, Times[2, Plus[n, Times[-1, q]]]]]], p]], x], And[FreeQ[List[a, b, c, A, B, n, q], x], ZeroQ[Plus[r, Times[-1, Plus[n, Times[-1, q]]]]], ZeroQ[Plus[j, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], IntegerQ[p], PosQ[Plus[n, Times[-1, q]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[x, Times[q, Power[2, -1]]], Sqrt[Plus[a, Times[b, Power[x, Plus[n, Times[-1, q]]]], Times[c, Power[x, Times[2, Plus[n, Times[-1, q]]]]]]], Power[Sqrt[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]]], -1]], Int[Times[Plus[A, Times[B, Power[x, Plus[n, Times[-1, q]]]]], Power[Times[Power[x, Times[q, Power[2, -1]]], Sqrt[Plus[a, Times[b, Power[x, Plus[n, Times[-1, q]]]], Times[c, Power[x, Times[2, Plus[n, Times[-1, q]]]]]]]], -1]], x], x], And[FreeQ[List[a, b, c, A, B, n, q], x], ZeroQ[Plus[j, Times[-1, Plus[n, Times[-1, q]]]]], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PosQ[Plus[n, Times[-1, q]]], ZeroQ[Plus[n, -3]], ZeroQ[Plus[q, -2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]]], Pattern[p, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Plus[Times[b, B, Plus[n, Times[-1, q]], p], Times[A, c, Plus[Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], Times[B, c, Plus[Times[p, Plus[Times[2, n], Times[-1, q]]], 1], Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p], Power[Times[c, Plus[Times[p, Plus[Times[2, n], Times[-1, q]]], 1], Plus[Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], -1]], x], Dist[Times[Plus[n, Times[-1, q]], p, Power[Times[c, Plus[Times[p, Plus[Times[2, n], Times[-1, q]]], 1], Plus[Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], -1]], Int[Times[Power[x, q], Plus[Times[2, a, A, c, Plus[Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], Times[-1, a, b, B, Plus[Times[p, q], 1]], Times[Plus[Times[2, a, B, c, Plus[Times[p, Plus[Times[2, n], Times[-1, q]]], 1]], Times[A, b, c, Plus[Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], Times[-1, Power[b, 2], B, Plus[Times[p, q], Times[Plus[n, Times[-1, q]], p], 1]]], Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, A, B, n, q], x], ZeroQ[Plus[r, Times[-1, Plus[n, Times[-1, q]]]]], ZeroQ[Plus[j, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p], Greater[p, 0], NonzeroQ[Plus[Times[p, Plus[Times[2, n], Times[-1, q]]], 1]], NonzeroQ[Plus[Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]]], Pattern[p, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[n, Plus[q, r]]], Condition[Plus[Simp[Times[x, Plus[Times[A, Plus[Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], Times[B, Plus[Times[p, Plus[Times[2, n], Times[-1, q]]], 1], Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p], Power[Times[Plus[Times[p, Plus[Times[2, n], Times[-1, q]]], 1], Plus[Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], -1]], x], Dist[Times[Plus[n, Times[-1, q]], p, Power[Times[Plus[Times[p, Plus[Times[2, n], Times[-1, q]]], 1], Plus[Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], -1]], Int[Times[Power[x, q], Plus[Times[2, a, A, Plus[Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], Times[Times[2, a, B, Plus[Times[p, Plus[Times[2, n], Times[-1, q]]], 1]], Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, -1]]], x], x]], And[ZeroQ[Plus[j, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], NonzeroQ[Plus[Times[p, Plus[Times[2, n], Times[-1, q]]], 1]], NonzeroQ[Plus[Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]]]]], And[FreeQ[List[a, c, A, B, q], x], Not[IntegerQ[p]], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]]], Pattern[p, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[Times[-1, q], 1]], Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[-1, 2, a, A, c], Times[Plus[Times[A, b], Times[-1, 2, a, B]], c, Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]], Power[Times[a, Plus[n, Times[-1, q]], Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x]], Dist[Times[1, Power[Times[a, Plus[n, Times[-1, q]], Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[x, Times[-1, q]], Times[Plus[Times[A, Power[b, 2], Plus[Times[p, q], Times[Plus[n, Times[-1, q]], Plus[p, 1]], 1]], Times[-1, a, b, B, Plus[Times[p, q], 1]], Times[-1, 2, a, A, c, Plus[Times[p, q], Times[2, Plus[n, Times[-1, q]], Plus[p, 1]], 1]], Times[Plus[Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 3]], 1], Plus[Times[A, b], Times[-1, 2, a, B]], c, Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]]]], x], x]], And[FreeQ[List[a, b, c, A, B, n, q], x], ZeroQ[Plus[r, Times[-1, Plus[n, Times[-1, q]]]]], ZeroQ[Plus[j, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]]], Pattern[p, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[n, Plus[q, r]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[Times[-1, q], 1]], Plus[Times[a, A, c], Times[a, B, c, Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]], Power[Times[a, Plus[n, Times[-1, q]], Plus[p, 1], Times[2, a, c]], -1]], x]], Dist[Times[1, Power[Times[a, Plus[n, Times[-1, q]], Plus[p, 1], Times[2, a, c]], -1]], Int[Times[Power[x, Times[-1, q]], Times[Plus[Times[a, A, c, Plus[Times[p, q], Times[2, Plus[n, Times[-1, q]], Plus[p, 1]], 1]], Times[a, B, c, Plus[Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 3]], 1], Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]]]], x], x]], ZeroQ[Plus[j, Times[-1, Plus[Times[2, n], Times[-1, q]]]]]]], And[FreeQ[List[a, c, A, B, q], x], Not[IntegerQ[p]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Plus[A, Times[B, Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p]], x], And[FreeQ[List[a, b, c, A, B, n, p, q], x], ZeroQ[Plus[j, Times[-1, Plus[n, Times[-1, q]]]]], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[u, Blank[]], Optional[Pattern[j, Blank[]]]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[u, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[u, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[u, Blank[]], Optional[Pattern[r, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Times[Plus[A, Times[B, Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p]], x], x, u], x], And[FreeQ[List[a, b, c, A, B, n, p, q], x], ZeroQ[Plus[j, Times[-1, Plus[n, Times[-1, q]]]]], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, Plus[m, Times[p, q]]], Plus[A, Times[B, Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[a, Times[b, Power[x, Plus[n, Times[-1, q]]]], Times[c, Power[x, Times[2, Plus[n, Times[-1, q]]]]]], p]], x], And[FreeQ[List[a, b, c, A, B, m, n, q], x], ZeroQ[Plus[r, Times[-1, Plus[n, Times[-1, q]]]]], ZeroQ[Plus[j, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], IntegerQ[p], PosQ[Plus[n, Times[-1, q]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Plus[Times[A, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], Times[B, Plus[m, Times[p, q], 1], Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p], Power[Times[Plus[m, Times[p, q], 1], Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], -1]], x], Dist[Times[Plus[n, Times[-1, q]], p, Power[Times[Plus[m, Times[p, q], 1], Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], -1]], Int[Times[Power[x, Plus[n, m]], Simp[Plus[Times[2, a, B, Plus[m, Times[p, q], 1]], Times[-1, A, b, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], Times[Plus[Times[b, B, Plus[m, Times[p, q], 1]], Times[-1, 2, A, c, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]]], Power[x, Plus[n, Times[-1, q]]]]], x], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, A, B], x], ZeroQ[Plus[r, Times[-1, Plus[n, Times[-1, q]]]]], ZeroQ[Plus[j, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p, q], Greater[p, 0], LessEqual[Plus[m, Times[p, q]], Times[-1, Plus[n, Times[-1, q]]]], Unequal[Plus[m, Times[p, q], 1], 0], Unequal[Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1], 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[n, Plus[q, r]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Plus[Times[A, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], Times[B, Plus[m, Times[p, q], 1], Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p], Power[Times[Plus[m, Times[p, q], 1], Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], -1]], x], Dist[Times[2, Plus[n, Times[-1, q]], p, Power[Times[Plus[m, Times[p, q], 1], Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], -1]], Int[Times[Power[x, Plus[n, m]], Simp[Plus[Times[a, B, Plus[m, Times[p, q], 1]], Times[-1, A, c, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1], Power[x, Plus[n, Times[-1, q]]]]], x], Power[Plus[Times[a, Power[x, q]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, -1]]], x], x]], And[ZeroQ[Plus[j, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PositiveIntegerQ[n], LessEqual[Plus[m, Times[p, q]], Times[-1, Plus[n, Times[-1, q]]]], Unequal[Plus[m, Times[p, q], 1], 0], Unequal[Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1], 0]]]], And[FreeQ[List[a, c, A, B], x], Not[IntegerQ[p]], RationalQ[m, p, q], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Plus[Times[A, b], Times[-1, 2, a, B], Times[-1, Plus[Times[b, B], Times[-1, 2, A, c]], Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]], Power[Times[Plus[n, Times[-1, q]], Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x], Dist[Times[1, Power[Times[Plus[n, Times[-1, q]], Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Simp[Plus[Times[Plus[m, Times[p, q], Times[-1, n], q, 1], Plus[Times[2, a, B], Times[-1, A, b]]], Times[Plus[m, Times[p, q], Times[2, Plus[n, Times[-1, q]], Plus[p, 1]], 1], Plus[Times[b, B], Times[-1, 2, A, c]], Power[x, Plus[n, Times[-1, q]]]]], x], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, A, B], x], ZeroQ[Plus[r, Times[-1, Plus[n, Times[-1, q]]]]], ZeroQ[Plus[j, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p, q], Less[p, -1], Greater[Plus[m, Times[p, q]], Plus[n, Times[-1, q], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[n, Plus[q, r]]], Condition[Plus[Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Plus[Times[a, B], Times[-1, A, c, Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]], Power[Times[2, a, c, Plus[n, Times[-1, q]], Plus[p, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[2, a, c, Plus[n, Times[-1, q]], Plus[p, 1]], -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Simp[Plus[Times[a, B, Plus[m, Times[p, q], Times[-1, n], q, 1]], Times[-1, A, c, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], 2, Plus[p, 1]], 1], Power[x, Plus[n, Times[-1, q]]]]], x], Power[Plus[Times[a, Power[x, q]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]]], x], x]]], And[ZeroQ[Plus[j, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PositiveIntegerQ[n], Greater[Plus[m, Times[p, q]], Plus[n, Times[-1, q], -1]]]]], And[FreeQ[List[a, c, A, B], x], Not[IntegerQ[p]], RationalQ[m, p, q], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Plus[Times[b, B, Plus[n, Times[-1, q]], p], Times[A, c, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], Times[B, c, Plus[m, Times[p, q], Times[2, Plus[n, Times[-1, q]], p], 1], Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p], Power[Times[c, Plus[m, Times[p, Plus[Times[2, n], Times[-1, q]]], 1], Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], -1]], x], Dist[Times[Plus[n, Times[-1, q]], p, Power[Times[c, Plus[m, Times[p, Plus[Times[2, n], Times[-1, q]]], 1], Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], -1]], Int[Times[Power[x, Plus[m, q]], Simp[Plus[Times[2, a, A, c, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], Times[-1, a, b, B, Plus[m, Times[p, q], 1]], Times[Plus[Times[2, a, B, c, Plus[m, Times[p, q], Times[2, Plus[n, Times[-1, q]], p], 1]], Times[A, b, c, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], Times[-1, Power[b, 2], B, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], p], 1]]], Power[x, Plus[n, Times[-1, q]]]]], x], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, A, B], x], ZeroQ[Plus[r, Times[-1, Plus[n, Times[-1, q]]]]], ZeroQ[Plus[j, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p, q], Greater[p, 0], Greater[Plus[m, Times[p, q]], Plus[Times[-1, Plus[n, Times[-1, q]]], -1]], Unequal[Plus[m, Times[p, Plus[Times[2, n], Times[-1, q]]], 1], 0], Unequal[Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1], 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[n, Plus[q, r]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Plus[Times[A, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], Times[B, Plus[m, Times[p, q], Times[2, Plus[n, Times[-1, q]], p], 1], Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p], Power[Times[Plus[m, Times[p, Plus[Times[2, n], Times[-1, q]]], 1], Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], -1]], x], Dist[Times[Plus[n, Times[-1, q]], p, Power[Times[Plus[m, Times[p, Plus[Times[2, n], Times[-1, q]]], 1], Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], -1]], Int[Times[Power[x, Plus[m, q]], Simp[Plus[Times[2, a, A, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], Times[2, a, B, Plus[m, Times[p, q], Times[2, Plus[n, Times[-1, q]], p], 1], Power[x, Plus[n, Times[-1, q]]]]], x], Power[Plus[Times[a, Power[x, q]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, -1]]], x], x]], And[ZeroQ[Plus[j, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PositiveIntegerQ[n], Greater[Plus[m, Times[p, q]], Times[-1, Plus[n, Times[-1, q]]]], Unequal[Plus[m, Times[p, q], Times[2, Plus[n, Times[-1, q]], p], 1], 0], Unequal[Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1], 0], Unequal[Plus[m, 1], n]]]], And[FreeQ[List[a, c, A, B], x], Not[IntegerQ[p]], RationalQ[m, p, q], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[m, Times[-1, q], 1]], Plus[Times[A, Power[b, 2]], Times[-1, a, b, B], Times[-1, 2, a, A, c], Times[Plus[Times[A, b], Times[-1, 2, a, B]], c, Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]], Power[Times[a, Plus[n, Times[-1, q]], Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x]], Dist[Times[1, Power[Times[a, Plus[n, Times[-1, q]], Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[x, Plus[m, Times[-1, q]]], Simp[Plus[Times[A, Power[b, 2], Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[p, 1]], 1]], Times[-1, a, b, B, Plus[m, Times[p, q], 1]], Times[-1, 2, a, A, c, Plus[m, Times[p, q], Times[2, Plus[n, Times[-1, q]], Plus[p, 1]], 1]], Times[Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 3]], 1], Plus[Times[A, b], Times[-1, 2, a, B]], c, Power[x, Plus[n, Times[-1, q]]]]], x], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, A, B], x], ZeroQ[Plus[r, Times[-1, Plus[n, Times[-1, q]]]]], ZeroQ[Plus[j, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p, q], Less[p, -1], Less[Plus[m, Times[p, q]], Plus[n, Times[-1, q], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[n, Plus[q, r]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[m, Times[-1, q], 1]], Plus[Times[A, c], Times[B, c, Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]], Power[Times[2, a, c, Plus[n, Times[-1, q]], Plus[p, 1]], -1]], x]], Dist[Times[1, Power[Times[2, a, c, Plus[n, Times[-1, q]], Plus[p, 1]], -1]], Int[Times[Power[x, Plus[m, Times[-1, q]]], Simp[Plus[Times[A, c, Plus[m, Times[p, q], Times[2, Plus[n, Times[-1, q]], Plus[p, 1]], 1]], Times[B, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 3]], 1], c, Power[x, Plus[n, Times[-1, q]]]]], x], Power[Plus[Times[a, Power[x, q]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]]], x], x]], And[ZeroQ[Plus[j, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PositiveIntegerQ[n], Less[Plus[m, Times[p, q]], Plus[n, Times[-1, q], -1]]]]], And[FreeQ[List[a, c, A, B], x], Not[IntegerQ[p]], RationalQ[m, p, q], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[B, Power[x, Plus[m, Times[-1, n], 1]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[c, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], -1]], Int[Times[Power[x, Plus[m, Times[-1, n], q]], Simp[Plus[Times[a, B, Plus[m, Times[p, q], Times[-1, n], q, 1]], Times[Plus[Times[b, B, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], p], 1]], Times[-1, A, c, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]]], Power[x, Plus[n, Times[-1, q]]]]], x], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p]], x], x]]], And[FreeQ[List[a, b, c, A, B], x], ZeroQ[Plus[r, Times[-1, Plus[n, Times[-1, q]]]]], ZeroQ[Plus[j, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p, q], Inequality[-1, LessEqual, p, Less, 0], GreaterEqual[Plus[m, Times[p, q]], Plus[n, Times[-1, q], -1]], Unequal[Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1], 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[n, Plus[q, r]]], Condition[Plus[Simp[Times[B, Power[x, Plus[m, Times[-1, n], 1]], Power[Plus[Times[a, Power[x, q]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[c, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1]], -1]], Int[Times[Power[x, Plus[m, Times[-1, n], q]], Simp[Plus[Times[a, B, Plus[m, Times[p, q], Times[-1, n], q, 1]], Times[-1, A, c, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1], Power[x, Plus[n, Times[-1, q]]]]], x], Power[Plus[Times[a, Power[x, q]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p]], x], x]]], And[ZeroQ[Plus[j, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PositiveIntegerQ[n], GreaterEqual[Plus[m, Times[p, q]], Plus[n, Times[-1, q], -1]], Unequal[Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1], 0]]]], And[FreeQ[List[a, c, A, B], x], Not[IntegerQ[p]], RationalQ[m, p, q], Inequality[-1, LessEqual, p, Less, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[A, Power[x, Plus[m, Times[-1, q], 1]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]], Power[Times[a, Plus[m, Times[p, q], 1]], -1]], x], Dist[Times[1, Power[Times[a, Plus[m, Times[p, q], 1]], -1]], Int[Times[Power[x, Plus[m, n, Times[-1, q]]], Simp[Plus[Times[a, B, Plus[m, Times[p, q], 1]], Times[-1, A, b, Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[p, 1]], 1]], Times[-1, A, c, Plus[m, Times[p, q], Times[2, Plus[n, Times[-1, q]], Plus[p, 1]], 1], Power[x, Plus[n, Times[-1, q]]]]], x], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p]], x], x]], And[FreeQ[List[a, b, c, A, B], x], ZeroQ[Plus[r, Times[-1, Plus[n, Times[-1, q]]]]], ZeroQ[Plus[j, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], Not[IntegerQ[p]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[m, p, q], Or[Inequality[-1, LessEqual, p, Less, 0], Equal[Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1], 0]], LessEqual[Plus[m, Times[p, q]], Times[-1, Plus[n, Times[-1, q]]]], Unequal[Plus[m, Times[p, q], 1], 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[n, Plus[q, r]]], Condition[Plus[Simp[Times[A, Power[x, Plus[m, Times[-1, q], 1]], Power[Plus[Times[a, Power[x, q]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], Plus[p, 1]], Power[Times[a, Plus[m, Times[p, q], 1]], -1]], x], Dist[Times[1, Power[Times[a, Plus[m, Times[p, q], 1]], -1]], Int[Times[Power[x, Plus[m, n, Times[-1, q]]], Simp[Plus[Times[a, B, Plus[m, Times[p, q], 1]], Times[-1, A, c, Plus[m, Times[p, q], Times[2, Plus[n, Times[-1, q]], Plus[p, 1]], 1], Power[x, Plus[n, Times[-1, q]]]]], x], Power[Plus[Times[a, Power[x, q]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p]], x], x]], And[ZeroQ[Plus[j, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PositiveIntegerQ[n], Or[Inequality[-1, LessEqual, p, Less, 0], Equal[Plus[m, Times[p, q], Times[Plus[n, Times[-1, q]], Plus[Times[2, p], 1]], 1], 0]], LessEqual[Plus[m, Times[p, q]], Times[-1, Plus[n, Times[-1, q]]]], Unequal[Plus[m, Times[p, q], 1], 0]]]], And[FreeQ[List[a, c, A, B], x], Not[IntegerQ[p]], RationalQ[m, p, q]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[x, Times[q, Power[2, -1]]], Sqrt[Plus[a, Times[b, Power[x, Plus[n, Times[-1, q]]]], Times[c, Power[x, Times[2, Plus[n, Times[-1, q]]]]]]], Power[Sqrt[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]]], -1]], Int[Times[Power[x, Plus[m, Times[-1, q, Power[2, -1]]]], Plus[A, Times[B, Power[x, Plus[n, Times[-1, q]]]]], Power[Sqrt[Plus[a, Times[b, Power[x, Plus[n, Times[-1, q]]]], Times[c, Power[x, Times[2, Plus[n, Times[-1, q]]]]]]], -1]], x], x], And[FreeQ[List[a, b, c, A, B, m, n, q], x], ZeroQ[Plus[j, Times[-1, Plus[n, Times[-1, q]]]]], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], PosQ[Plus[n, Times[-1, q]]], Or[ZeroQ[Plus[m, Times[-1, 1, Power[2, -1]]]], ZeroQ[Plus[m, Times[1, Power[2, -1]]]]], ZeroQ[Plus[n, -3]], ZeroQ[Plus[q, -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[k, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Pattern[q, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, k]], Times[c, Power[x, n]]], p], Power[Times[Power[x, Times[j, p]], Power[Plus[a, Times[b, Power[x, Plus[k, Times[-1, j]]]], Times[c, Power[x, Times[2, Plus[k, Times[-1, j]]]]]], p]], -1]], Int[Times[Power[x, Plus[m, Times[j, p]]], Plus[A, Times[B, Power[x, Plus[k, Times[-1, j]]]]], Power[Plus[a, Times[b, Power[x, Plus[k, Times[-1, j]]]], Times[c, Power[x, Times[2, Plus[k, Times[-1, j]]]]]], p]], x], x], And[FreeQ[List[a, b, c, A, B, j, k, m, p], x], ZeroQ[Plus[q, Times[-1, Plus[k, Times[-1, j]]]]], ZeroQ[Plus[n, Times[-1, Plus[Times[2, k], Times[-1, j]]]]], Not[IntegerQ[p]], PosQ[Plus[k, Times[-1, j]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[u, Blank[]], Optional[Pattern[j, Blank[]]]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[u, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[u, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[u, Blank[]], Optional[Pattern[r, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Times[Power[x, m], Plus[A, Times[B, Power[x, Plus[n, Times[-1, q]]]]], Power[Plus[Times[a, Power[x, q]], Times[b, Power[x, n]], Times[c, Power[x, Plus[Times[2, n], Times[-1, q]]]]], p]], x], x, u], x], And[FreeQ[List[a, b, c, A, B, m, n, p, q], x], ZeroQ[Plus[j, Times[-1, Plus[n, Times[-1, q]]]]], ZeroQ[Plus[r, Times[-1, Plus[Times[2, n], Times[-1, q]]]]], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]]]