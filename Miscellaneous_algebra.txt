List[RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Pattern[q, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[x, Power[Power[Times[c, Power[x, n]], Times[1, Power[n, -1]]], -1]], Subst[Int[Power[Plus[a, Times[b, Power[x, Times[n, q]]]], p], x], x, Power[Times[c, Power[x, n]], Times[1, Power[n, -1]]]], x], And[FreeQ[List[a, b, c, q, n, p], x], IntegerQ[Times[n, q]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Pattern[q, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[x, Plus[m, 1]], Power[Power[Times[c, Power[x, n]], Times[Plus[m, 1], Power[n, -1]]], -1]], Subst[Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, Times[n, q]]]], p]], x], x, Power[Times[c, Power[x, n]], Times[1, Power[n, -1]]]], x], And[FreeQ[List[a, b, c, m, n, p, q], x], IntegerQ[Times[n, q]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[e, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[p, Blank[]]], Power[Times[Optional[Pattern[f, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[s, Blank[]]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[e, Power[Plus[a, Times[b, Power[x, n]]], r]], p], Power[Times[f, Power[Plus[c, Times[d, Power[x, n]]], s]], q], Power[Times[Power[Plus[a, Times[b, Power[x, n]]], Times[p, r]], Power[Plus[c, Times[d, Power[x, n]]], Times[q, s]]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], Times[p, r]], Power[Plus[c, Times[d, Power[x, n]]], Times[q, s]]], x], x], FreeQ[List[a, b, c, d, e, f, m, n, p, q, r, s], x]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], -1]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Times[b, e, Power[d, -1]], p], Int[u, x], x], And[FreeQ[List[a, b, c, d, e, n, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], -1]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[Times[e, Plus[a, Times[b, Power[x, n]]]], p], Power[Power[Plus[c, Times[d, Power[x, n]]], p], -1]], x], And[FreeQ[List[a, b, c, d, e, n, p], x], PositiveQ[Times[b, d, e]], PositiveQ[Plus[c, Times[-1, a, d, Power[b, -1]]]]]]], RuleDelayed[HoldPattern[Int[Power[Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], -1]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Denominator[p]]], Dist[Times[q, e, Plus[Times[b, c], Times[-1, a, d]], Power[n, -1]], Subst[Int[Times[Power[x, Plus[Times[q, Plus[p, 1]], -1]], Power[Plus[Times[-1, a, e], Times[c, Power[x, q]]], Plus[Times[1, Power[n, -1]], -1]], Power[Power[Plus[Times[b, e], Times[-1, d, Power[x, q]]], Plus[Times[1, Power[n, -1]], 1]], -1]], x], x, Power[Times[e, Plus[a, Times[b, Power[x, n]]], Power[Plus[c, Times[d, Power[x, n]]], -1]], Times[1, Power[q, -1]]]], x]], And[FreeQ[List[a, b, c, d, e], x], FractionQ[p], IntegerQ[Times[1, Power[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], -1]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Denominator[p]]], Dist[Times[q, e, Plus[Times[b, c], Times[-1, a, d]], Power[n, -1]], Subst[Int[Times[Power[x, Plus[Times[q, Plus[p, 1]], -1]], Power[Plus[Times[-1, a, e], Times[c, Power[x, q]]], Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]], Power[Power[Plus[Times[b, e], Times[-1, d, Power[x, q]]], Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], 1]], -1]], x], x, Power[Times[e, Plus[a, Times[b, Power[x, n]]], Power[Plus[c, Times[d, Power[x, n]]], -1]], Times[1, Power[q, -1]]]], x]], And[FreeQ[List[a, b, c, d, e, m, n], x], FractionQ[p], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[r, Blank[]]]], Power[Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], -1]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Denominator[p]]], Dist[Times[q, e, Plus[Times[b, c], Times[-1, a, d]], Power[n, -1]], Subst[Int[SimplifyIntegrand[Times[Power[x, Plus[Times[q, Plus[p, 1]], -1]], Power[Plus[Times[-1, a, e], Times[c, Power[x, q]]], Plus[Times[1, Power[n, -1]], -1]], Power[Power[Plus[Times[b, e], Times[-1, d, Power[x, q]]], Plus[Times[1, Power[n, -1]], 1]], -1], Power[ReplaceAll[u, Rule[x, Times[Power[Plus[Times[-1, a, e], Times[c, Power[x, q]]], Times[1, Power[n, -1]]], Power[Power[Plus[Times[b, e], Times[-1, d, Power[x, q]]], Times[1, Power[n, -1]]], -1]]]], r]], x], x], x, Power[Times[e, Plus[a, Times[b, Power[x, n]]], Power[Plus[c, Times[d, Power[x, n]]], -1]], Times[1, Power[q, -1]]]], x]], And[FreeQ[List[a, b, c, d, e], x], PolynomialQ[u, x], FractionQ[p], IntegerQ[Times[1, Power[n, -1]]], IntegerQ[r]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[r, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], -1]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Denominator[p]]], Dist[Times[q, e, Plus[Times[b, c], Times[-1, a, d]], Power[n, -1]], Subst[Int[SimplifyIntegrand[Times[Power[x, Plus[Times[q, Plus[p, 1]], -1]], Power[Plus[Times[-1, a, e], Times[c, Power[x, q]]], Plus[Times[Plus[m, 1], Power[n, -1]], -1]], Power[Power[Plus[Times[b, e], Times[-1, d, Power[x, q]]], Plus[Times[Plus[m, 1], Power[n, -1]], 1]], -1], Power[ReplaceAll[u, Rule[x, Times[Power[Plus[Times[-1, a, e], Times[c, Power[x, q]]], Times[1, Power[n, -1]]], Power[Power[Plus[Times[b, e], Times[-1, d, Power[x, q]]], Times[1, Power[n, -1]]], -1]]]], r]], x], x], x, Power[Times[e, Plus[a, Times[b, Power[x, n]]], Power[Plus[c, Times[d, Power[x, n]]], -1]], Times[1, Power[q, -1]]]], x]], And[FreeQ[List[a, b, c, d, e], x], PolynomialQ[u, x], FractionQ[p], IntegerQ[Times[1, Power[n, -1]]], IntegersQ[m, r]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], -1]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[c, Subst[Int[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Power[x, 2], -1]], x], x, Times[c, Power[x, -1]]], x]], FreeQ[List[a, b, c, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], -1]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[c, Plus[m, 1]], Subst[Int[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[c, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, n, p], x], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], -1]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[c, Power[Times[d, x], m], Power[Times[c, Power[x, -1]], m]], Subst[Int[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[c, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, d, m, n, p], x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -1]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -1]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[d, Subst[Int[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Power[x, 2], -1]], x], x, Times[d, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, d, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -1]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -1]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[d, Plus[m, 1]], Subst[Int[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[d, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, d, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -1]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -1]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[d, Power[Times[e, x], m], Power[Times[d, Power[x, -1]], m]], Subst[Int[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[d, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, d, e, m, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -1]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[d, Subst[Int[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[Power[d, Times[2, n]], -1], Power[x, Times[2, n]]]], p], Power[Power[x, 2], -1]], x], x, Times[d, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, d, n, p], x], ZeroQ[Plus[n2, Times[2, n]]], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -1]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[d, Plus[m, 1]], Subst[Int[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[Power[d, Times[2, n]], -1], Power[x, Times[2, n]]]], p], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[d, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, d, n, p], x], ZeroQ[Plus[n2, Times[2, n]]], IntegerQ[Times[2, n]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -1]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[d, Power[Times[e, x], m], Power[Times[d, Power[x, -1]], m]], Subst[Int[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[Power[d, Times[2, n]], -1], Power[x, Times[2, n]]]], p], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[d, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, d, e, n, p], x], ZeroQ[Plus[n2, Times[2, n]]], Not[IntegerQ[m]], IntegerQ[Times[2, n]]]]], RuleDelayed[HoldPattern[Int[Power[Pattern[u, Blank[]], Pattern[m, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[ExpandToSum[u, x], m], x], And[FreeQ[m, x], LinearQ[u, x], Not[LinearMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Pattern[v, Blank[]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Power[ExpandToSum[v, x], n]], x], And[FreeQ[List[m, n], x], LinearQ[List[u, v], x], Not[LinearMatchQ[List[u, v], x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Pattern[v, Blank[]], Optional[Pattern[n, Blank[]]]], Power[Pattern[w, Blank[]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Power[ExpandToSum[v, x], n], Power[ExpandToSum[w, x], p]], x], And[FreeQ[List[m, n, p], x], LinearQ[List[u, v, w], x], Not[LinearMatchQ[List[u, v, w], x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Pattern[v, Blank[]], Optional[Pattern[n, Blank[]]]], Power[Pattern[w, Blank[]], Optional[Pattern[p, Blank[]]]], Power[Pattern[z, Blank[]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Power[ExpandToSum[v, x], n], Power[ExpandToSum[w, x], p], Power[ExpandToSum[z, x], q]], x], And[FreeQ[List[m, n, p, q], x], LinearQ[List[u, v, w, z], x], Not[LinearMatchQ[List[u, v, w, z], x]]]]], RuleDelayed[HoldPattern[Int[Power[Pattern[u, Blank[]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[ExpandToSum[u, x], p], x], And[FreeQ[p, x], QuadraticQ[u, x], Not[QuadraticMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Pattern[v, Blank[]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Power[ExpandToSum[v, x], p]], x], And[FreeQ[List[m, p], x], LinearQ[u, x], QuadraticQ[v, x], Not[And[LinearMatchQ[u, x], QuadraticMatchQ[v, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Pattern[v, Blank[]], Optional[Pattern[n, Blank[]]]], Power[Pattern[w, Blank[]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Power[ExpandToSum[v, x], n], Power[ExpandToSum[w, x], p]], x], And[FreeQ[List[m, n, p], x], LinearQ[List[u, v], x], QuadraticQ[w, x], Not[And[LinearMatchQ[List[u, v], x], QuadraticMatchQ[w, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[p, Blank[]]]], Power[Pattern[v, Blank[]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], p], Power[ExpandToSum[v, x], q]], x], And[FreeQ[List[p, q], x], QuadraticQ[List[u, v], x], Not[QuadraticMatchQ[List[u, v], x]]]]], RuleDelayed[HoldPattern[Int[Power[Pattern[u, Blank[]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[ExpandToSum[u, x], p], x], And[FreeQ[p, x], BinomialQ[u, x], Not[BinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[p, Blank[]]]], Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[c, x], m], Power[ExpandToSum[u, x], p]], x], And[FreeQ[List[c, m, p], x], BinomialQ[u, x], Not[BinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[p, Blank[]]]], Power[Pattern[v, Blank[]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], p], Power[ExpandToSum[v, x], q]], x], And[FreeQ[List[p, q], x], BinomialQ[List[u, v], x], ZeroQ[Plus[BinomialDegree[u, x], Times[-1, BinomialDegree[v, x]]]], Not[BinomialMatchQ[List[u, v], x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[p, Blank[]]]], Power[Pattern[v, Blank[]], Optional[Pattern[q, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[ExpandToSum[u, x], p], Power[ExpandToSum[v, x], q]], x], And[FreeQ[List[m, p, q], x], BinomialQ[List[u, v], x], ZeroQ[Plus[BinomialDegree[u, x], Times[-1, BinomialDegree[v, x]]]], Not[BinomialMatchQ[List[u, v], x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Pattern[v, Blank[]], Optional[Pattern[p, Blank[]]]], Power[Pattern[w, Blank[]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Power[ExpandToSum[v, x], p], Power[ExpandToSum[w, x], q]], x], And[FreeQ[List[m, p, q], x], BinomialQ[List[u, v, w], x], ZeroQ[Plus[BinomialDegree[u, x], Times[-1, BinomialDegree[v, x]]]], ZeroQ[Plus[BinomialDegree[u, x], Times[-1, BinomialDegree[w, x]]]], Not[BinomialMatchQ[List[u, v, w], x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[p, Blank[]]]], Power[Pattern[v, Blank[]], Optional[Pattern[q, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Pattern[z, Blank[]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[ExpandToSum[u, x], p], Power[ExpandToSum[v, x], q], Power[ExpandToSum[z, x], r]], x], And[FreeQ[List[m, p, q, r], x], BinomialQ[List[u, v, z], x], ZeroQ[Plus[BinomialDegree[u, x], Times[-1, BinomialDegree[v, x]]]], ZeroQ[Plus[BinomialDegree[u, x], Times[-1, BinomialDegree[z, x]]]], Not[BinomialMatchQ[List[u, v, z], x]]]]], RuleDelayed[HoldPattern[Int[Power[Pattern[u, Blank[]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[ExpandToSum[u, x], p], x], And[FreeQ[p, x], GeneralizedBinomialQ[u, x], Not[GeneralizedBinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[ExpandToSum[u, x], p]], x], And[FreeQ[List[m, p], x], GeneralizedBinomialQ[u, x], Not[GeneralizedBinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Power[Pattern[u, Blank[]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[ExpandToSum[u, x], p], x], And[FreeQ[p, x], TrinomialQ[u, x], Not[TrinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[p, Blank[]]]], Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[d, x], m], Power[ExpandToSum[u, x], p]], x], And[FreeQ[List[d, m, p], x], TrinomialQ[u, x], Not[TrinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[q, Blank[]]]], Power[Pattern[v, Blank[]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], q], Power[ExpandToSum[v, x], p]], x], And[FreeQ[List[p, q], x], BinomialQ[u, x], TrinomialQ[v, x], Not[And[BinomialMatchQ[u, x], TrinomialMatchQ[v, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[q, Blank[]]]], Power[Pattern[v, Blank[]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], q], Power[ExpandToSum[v, x], p]], x], And[FreeQ[List[p, q], x], BinomialQ[u, x], BinomialQ[v, x], Not[And[BinomialMatchQ[u, x], BinomialMatchQ[v, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Pattern[z, Blank[]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[ExpandToSum[z, x], q], Power[ExpandToSum[u, x], p]], x], And[FreeQ[List[m, p, q], x], BinomialQ[z, x], TrinomialQ[u, x], Not[And[BinomialMatchQ[z, x], TrinomialMatchQ[u, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Pattern[z, Blank[]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[ExpandToSum[z, x], q], Power[ExpandToSum[u, x], p]], x], And[FreeQ[List[m, p, q], x], BinomialQ[z, x], BinomialQ[u, x], Not[And[BinomialMatchQ[z, x], BinomialMatchQ[u, x]]]]]], RuleDelayed[HoldPattern[Int[Power[Pattern[u, Blank[]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[ExpandToSum[u, x], p], x], And[FreeQ[p, x], GeneralizedTrinomialQ[u, x], Not[GeneralizedTrinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[ExpandToSum[u, x], p]], x], And[FreeQ[List[m, p], x], GeneralizedTrinomialQ[u, x], Not[GeneralizedTrinomialMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[p, Blank[]]]], Pattern[z, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ExpandToSum[z, x], Power[ExpandToSum[u, x], p]], x], And[FreeQ[p, x], BinomialQ[z, x], GeneralizedTrinomialQ[u, x], ZeroQ[Plus[BinomialDegree[z, x], Times[-1, GeneralizedTrinomialDegree[u, x]]]], Not[And[BinomialMatchQ[z, x], GeneralizedTrinomialMatchQ[u, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Pattern[z, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], ExpandToSum[z, x], Power[ExpandToSum[u, x], p]], x], And[FreeQ[List[m, p], x], BinomialQ[z, x], GeneralizedTrinomialQ[u, x], ZeroQ[Plus[BinomialDegree[z, x], Times[-1, GeneralizedTrinomialDegree[u, x]]]], Not[And[BinomialMatchQ[z, x], GeneralizedTrinomialMatchQ[u, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Rational[-3, 2]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Plus[Times[2, a, g], Times[4, a, h, Power[x, Times[n, Power[4, -1]]]], Times[-1, 2, c, f, Power[x, Times[n, Power[2, -1]]]]], Power[Times[a, c, n, Sqrt[Plus[a, Times[c, Power[x, n]]]]], -1]], x]], And[FreeQ[List[a, c, e, f, g, h, m, n], x], ZeroQ[Plus[q, Times[-1, n, Power[4, -1]]]], ZeroQ[Plus[r, Times[-1, 3, n, Power[4, -1]]]], ZeroQ[Plus[Times[4, m], Times[-1, n], 4]], ZeroQ[Plus[Times[c, e], Times[a, h]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[d, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Rational[-3, 2]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[d, x], m], Power[Power[x, m], -1]], Int[Times[Power[x, m], Plus[e, Times[f, Power[x, Times[n, Power[4, -1]]]], Times[g, Power[x, Times[Times[3, n], Power[4, -1]]]], Times[h, Power[x, n]]], Power[Power[Plus[a, Times[c, Power[x, n]]], Times[3, Power[2, -1]]], -1]], x], x], And[FreeQ[List[a, c, d, e, f, g, h, m, n], x], ZeroQ[Plus[Times[4, m], Times[-1, n], 4]], ZeroQ[Plus[q, Times[-1, n, Power[4, -1]]]], ZeroQ[Plus[r, Times[-1, 3, n, Power[4, -1]]]], ZeroQ[Plus[Times[c, e], Times[a, h]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[n, Denominator[p]]], Dist[Times[n, Power[b, -1]], Subst[Int[Times[Power[x, Plus[Times[n, p], n, -1]], Power[Plus[Times[-1, a, c, Power[b, -1]], Times[c, Power[x, n], Power[b, -1]]], m], ReplaceAll[Pq, Rule[x, Plus[Times[-1, a, Power[b, -1]], Times[Power[x, n], Power[b, -1]]]]]], x], x, Power[Plus[a, Times[b, x]], Times[1, Power[n, -1]]]], x]], And[FreeQ[List[a, b, c, m], x], PolyQ[Pq, x], FractionQ[p], NegativeIntegerQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Plus[m, 1], -1]], Subst[Int[Times[SubstFor[Power[x, Plus[m, 1]], Pq, x], Power[Plus[a, Times[b, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]]], p]], x], x, Power[x, Plus[m, 1]]], x], And[FreeQ[List[a, b, m, n, p], x], NonzeroQ[Plus[m, 1]], PositiveIntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], PolyQ[Pq, Power[x, Plus[m, 1]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Coeff[Pq, x, Plus[n, -1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[b, n, Plus[p, 1]], -1]], x], Int[Times[ExpandToSum[Plus[Pq, Times[-1, Coeff[Pq, x, Plus[n, -1]], Power[x, Plus[n, -1]]]], x], Power[Plus[a, Times[b, Power[x, n]]], p]], x]], And[FreeQ[List[a, b], x], PolyQ[Pq, x], PositiveIntegerQ[n, p], NonzeroQ[Coeff[Pq, x, Plus[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[c, x], m], Pq, Power[Plus[a, Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, m, n], x], PolyQ[Pq, x], Or[PositiveIntegerQ[p], ZeroQ[Plus[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Pq, Power[Plus[a, Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, n], x], PolyQ[Pq, x], Or[PositiveIntegerQ[p], ZeroQ[Plus[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]], SubstFor[Power[x, n], Pq, x], Power[Plus[a, Times[b, x]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, m, n, p], x], PolyQ[Pq, Power[x, n]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[m]], Power[Times[c, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Pq, Power[Plus[a, Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, m, n, p], x], PolyQ[Pq, Power[x, n]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Pq, Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[b, n, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[b, n, Plus[p, 1]], -1]], Int[Times[D[Pq, x], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, m, n], x], PolyQ[Pq, x], ZeroQ[Plus[m, Times[-1, n], 1]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[d, -1]], Int[Times[Power[Times[d, x], Plus[m, 1]], ExpandToSum[Times[Pq, Power[x, -1]], x], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, d, m, n, p], x], PolyQ[Pq, x], ZeroQ[Coeff[Pq, x, 0]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[x, ExpandToSum[Times[Pq, Power[x, -1]], x], Power[Plus[a, Times[b, Power[x, n]]], p]], x], And[FreeQ[List[a, b, n, p], x], PolyQ[Pq, x], ZeroQ[Coeff[Pq, x, 0]], SumQ[Pq]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[u, IntHide[Times[Power[x, m], Pq], x]]], Plus[Simp[Times[u, Power[Plus[a, Times[b, Power[x, n]]], p]], x], Times[-1, Dist[Times[b, n, p], Int[Times[Power[x, Plus[m, n]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, -1]], ExpandToSum[Times[u, Power[Power[x, Plus[m, 1]], -1]], x]], x], x]]]], And[FreeQ[List[a, b], x], PolyQ[Pq, x], PositiveIntegerQ[n], RationalQ[m, p], Greater[p, 0], Less[Plus[m, Expon[Pq, x], 1], 0]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[q, Expon[Pq, x]], i], Plus[Simp[Times[Power[Times[c, x], m], Power[Plus[a, Times[b, Power[x, n]]], p], Sum[Times[Coeff[Pq, x, i], Power[x, Plus[i, 1]], Power[Plus[m, Times[n, p], i, 1], -1]], List[i, 0, q]]], x], Dist[Times[a, n, p], Int[Times[Power[Times[c, x], m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, -1]], Sum[Times[Coeff[Pq, x, i], Power[x, i], Power[Plus[m, Times[n, p], i, 1], -1]], List[i, 0, q]]], x], x]]], And[FreeQ[List[a, b, c, m], x], PolyQ[Pq, x], PositiveIntegerQ[Times[Plus[n, -1], Power[2, -1]]], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[q, Expon[Pq, x]], i], Plus[Simp[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Sum[Times[Coeff[Pq, x, i], Power[x, Plus[i, 1]], Power[Plus[Times[n, p], i, 1], -1]], List[i, 0, q]]], x], Dist[Times[a, n, p], Int[Times[Power[Plus[a, Times[b, Power[x, n]]], Plus[p, -1]], Sum[Times[Coeff[Pq, x, i], Power[x, i], Power[Plus[Times[n, p], i, 1], -1]], List[i, 0, q]]], x], x]]], And[FreeQ[List[a, b], x], PolyQ[Pq, x], PositiveIntegerQ[Times[Plus[n, -1], Power[2, -1]]], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[q, Expon[Pq, x]], i], Condition[Plus[Simp[Times[Plus[Times[a, Coeff[Pq, x, q]], Times[-1, b, x, ExpandToSum[Plus[Pq, Times[-1, Coeff[Pq, x, q], Power[x, q]]], x]]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, b, n, Plus[p, 1]], -1]], x], Dist[Times[1, Power[Times[a, n, Plus[p, 1]], -1]], Int[Times[Sum[Times[Plus[Times[n, Plus[p, 1]], i, 1], Coeff[Pq, x, i], Power[x, i]], List[i, 0, Plus[q, -1]]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]]], x], x]], Equal[q, Plus[n, -1]]]], And[FreeQ[List[a, b], x], PolyQ[Pq, x], PositiveIntegerQ[n], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Pq, Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, n, Plus[p, 1]], -1]], x]], Dist[Times[1, Power[Times[a, n, Plus[p, 1]], -1]], Int[Times[ExpandToSum[Plus[Times[n, Plus[p, 1], Pq], D[Times[x, Pq], x]], x], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b], x], PolyQ[Pq, x], PositiveIntegerQ[n], RationalQ[p], Less[p, -1], Less[Expon[Pq, x], Plus[n, -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-3, 2]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 3]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 4]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Plus[Times[2, a, f], Times[4, a, g, x], Times[-1, 2, b, e, Power[x, 2]]], Power[Times[4, a, b, Sqrt[Plus[a, Times[b, Power[x, 4]]]]], -1]], x]], And[FreeQ[List[a, b, d, e, f, g], x], ZeroQ[Plus[Times[b, d], Times[a, g]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-3, 2]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 3]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 4]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Plus[f, Times[2, g, x]], Power[Times[2, b, Sqrt[Plus[a, Times[b, Power[x, 4]]]]], -1]], x]], And[FreeQ[List[a, b, d, f, g], x], ZeroQ[Plus[Times[b, d], Times[a, g]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-3, 2]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 4]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[x, Plus[Times[2, a, g], Times[-1, b, e, x]], Power[Times[2, a, b, Sqrt[Plus[a, Times[b, Power[x, 4]]]]], -1]], x]], And[FreeQ[List[a, b, d, e, g], x], ZeroQ[Plus[Times[b, d], Times[a, g]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-3, 2]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], 4]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Plus[f, Times[-1, 2, h, Power[x, 3]]], Power[Times[2, b, Sqrt[Plus[a, Times[b, Power[x, 4]]]]], -1]], x]], And[FreeQ[List[a, b, e, f, h], x], ZeroQ[Plus[Times[b, e], Times[-1, 3, a, h]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-3, 2]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], 4]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[h, Power[x, 3], Power[Times[b, Sqrt[Plus[a, Times[b, Power[x, 4]]]]], -1]], x], And[FreeQ[List[a, b, e, h], x], ZeroQ[Plus[Times[b, e], Times[-1, 3, a, h]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-3, 2]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 3]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 4]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], 6]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Plus[Times[a, f], Times[-1, 2, b, d, x], Times[-1, 2, a, h, Power[x, 3]]], Power[Times[2, a, b, Sqrt[Plus[a, Times[b, Power[x, 4]]]]], -1]], x]], And[FreeQ[List[a, b, d, e, f, g, h], x], ZeroQ[Plus[Times[b, e], Times[-1, 3, a, h]]], ZeroQ[Plus[Times[b, d], Times[a, g]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-3, 2]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 4]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], 6]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[x, Plus[Times[b, d], Times[a, h, Power[x, 2]]], Power[Times[a, b, Sqrt[Plus[a, Times[b, Power[x, 4]]]]], -1]], x], And[FreeQ[List[a, b, d, e, g, h], x], ZeroQ[Plus[Times[b, e], Times[-1, 3, a, h]]], ZeroQ[Plus[Times[b, d], Times[a, g]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Expon[Pq, x]]], Condition[Module[List[Set[Q, PolynomialQuotient[Times[Power[b, Plus[Floor[Times[Plus[q, -1], Power[n, -1]]], 1]], Pq], Plus[a, Times[b, Power[x, n]]], x]], Set[R, PolynomialRemainder[Times[Power[b, Plus[Floor[Times[Plus[q, -1], Power[n, -1]]], 1]], Pq], Plus[a, Times[b, Power[x, n]]], x]], i], Plus[Dist[Times[1, Power[Times[a, n, Plus[p, 1], Power[b, Plus[Floor[Times[Plus[q, -1], Power[n, -1]]], 1]]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], ExpandToSum[Plus[Times[a, n, Plus[p, 1], Q], Times[n, Plus[p, 1], R], D[Times[x, R], x]], x]], x], x], Times[-1, Simp[Times[x, R, Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, n, Plus[p, 1], Power[b, Plus[Floor[Times[Plus[q, -1], Power[n, -1]]], 1]]], -1]], x]]]], GreaterEqual[q, n]]], And[FreeQ[List[a, b], x], PolyQ[Pq, x], PositiveIntegerQ[n], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Expon[Pq, x]]], Module[List[Set[Q, PolynomialQuotient[Times[a, Power[b, Plus[Floor[Times[Plus[q, -1], Power[n, -1]]], 1]], Power[x, m], Pq], Plus[a, Times[b, Power[x, n]]], x]], Set[R, PolynomialRemainder[Times[a, Power[b, Plus[Floor[Times[Plus[q, -1], Power[n, -1]]], 1]], Power[x, m], Pq], Plus[a, Times[b, Power[x, n]]], x]], i], Plus[Dist[Times[1, Power[Times[a, n, Plus[p, 1], Power[b, Plus[Floor[Times[Plus[q, -1], Power[n, -1]]], 1]]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], ExpandToSum[Plus[Times[n, Plus[p, 1], Power[x, Times[-1, m]], Q], Sum[Times[Plus[Times[n, Plus[p, 1]], i, 1], Power[a, -1], Coeff[R, x, i], Power[x, Plus[i, Times[-1, m]]]], List[i, 0, Plus[n, -1]]]], x]], x], x], Times[-1, Simp[Times[x, R, Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[Power[a, 2], n, Plus[p, 1], Power[b, Plus[Floor[Times[Plus[q, -1], Power[n, -1]]], 1]]], -1]], x]]]]], And[FreeQ[List[a, b], x], PolyQ[Pq, x], PositiveIntegerQ[n], RationalQ[p], Less[p, -1], NegativeIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[g, GCD[Plus[m, 1], n]]], Condition[Dist[Times[1, Power[g, -1]], Subst[Int[Times[Power[x, Plus[Times[Plus[m, 1], Power[g, -1]], -1]], ReplaceAll[Pq, Rule[x, Power[x, Times[1, Power[g, -1]]]]], Power[Plus[a, Times[b, Power[x, Times[n, Power[g, -1]]]]], p]], x], x, Power[x, g]], x], Unequal[g, 1]]], And[FreeQ[List[a, b, p], x], PolyQ[Pq, Power[x, n]], PositiveIntegerQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[B, 3], Power[b, -1]], Int[Times[1, Power[Plus[Power[A, 2], Times[-1, A, B, x], Times[Power[B, 2], Power[x, 2]]], -1]], x], x], And[FreeQ[List[a, b, A, B], x], ZeroQ[Plus[Times[a, Power[B, 3]], Times[-1, b, Power[A, 3]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numerator[Rt[Times[a, Power[b, -1]], 3]]], Set[s, Denominator[Rt[Times[a, Power[b, -1]], 3]]]], Plus[Times[-1, Dist[Times[r, Plus[Times[B, r], Times[-1, A, s]], Power[Times[3, a, s], -1]], Int[Times[1, Power[Plus[r, Times[s, x]], -1]], x], x]], Dist[Times[r, Power[Times[3, a, s], -1]], Int[Times[Plus[Times[r, Plus[Times[B, r], Times[2, A, s]]], Times[s, Plus[Times[B, r], Times[-1, A, s]], x]], Power[Plus[Power[r, 2], Times[-1, r, s, x], Times[Power[s, 2], Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, A, B], x], NonzeroQ[Plus[Times[a, Power[B, 3]], Times[-1, b, Power[A, 3]]]], PosQ[Times[a, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numerator[Rt[Times[-1, a, Power[b, -1]], 3]]], Set[s, Denominator[Rt[Times[-1, a, Power[b, -1]], 3]]]], Plus[Dist[Times[r, Plus[Times[B, r], Times[A, s]], Power[Times[3, a, s], -1]], Int[Times[1, Power[Plus[r, Times[-1, s, x]], -1]], x], x], Times[-1, Dist[Times[r, Power[Times[3, a, s], -1]], Int[Times[Plus[Times[r, Plus[Times[B, r], Times[-1, 2, A, s]]], Times[-1, s, Plus[Times[B, r], Times[A, s]], x]], Power[Plus[Power[r, 2], Times[r, s, x], Times[Power[s, 2], Power[x, 2]]], -1]], x], x]]]], And[FreeQ[List[a, b, A, B], x], NonzeroQ[Plus[Times[a, Power[B, 3]], Times[-1, b, Power[A, 3]]]], NegQ[Times[a, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[C, 2], Power[b, -1]], Int[Times[1, Power[Plus[B, Times[-1, C, x]], -1]], x], x]], And[FreeQ[List[a, b, A, B, C], x], ZeroQ[Plus[Power[B, 2], Times[-1, A, C]]], ZeroQ[Plus[Times[b, Power[B, 3]], Times[a, Power[C, 3]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Times[Power[a, Times[1, Power[3, -1]]], Power[Power[b, Times[1, Power[3, -1]]], -1]]]], Plus[Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, x], -1]], x], x], Dist[Times[Plus[B, Times[C, q]], Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[-1, q, x], Power[x, 2]], -1]], x], x]]], And[FreeQ[List[a, b, A, B, C], x], ZeroQ[Plus[Times[A, Power[b, Times[2, Power[3, -1]]]], Times[-1, Power[a, Times[1, Power[3, -1]]], Power[b, Times[1, Power[3, -1]]], B], Times[-1, 2, Power[a, Times[2, Power[3, -1]]], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[x, Blank[]], Plus[Pattern[B, Blank[]], Times[Optional[Pattern[C, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Times[Power[a, Times[1, Power[3, -1]]], Power[Power[b, Times[1, Power[3, -1]]], -1]]]], Plus[Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, x], -1]], x], x], Dist[Times[Plus[B, Times[C, q]], Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[-1, q, x], Power[x, 2]], -1]], x], x]]], And[FreeQ[List[a, b, B, C], x], ZeroQ[Plus[Times[Power[a, Times[1, Power[3, -1]]], Power[b, Times[1, Power[3, -1]]], B], Times[2, Power[a, Times[2, Power[3, -1]]], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Times[Power[a, Times[1, Power[3, -1]]], Power[Power[b, Times[1, Power[3, -1]]], -1]]]], Plus[Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, x], -1]], x], x], Dist[Times[C, q, Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[-1, q, x], Power[x, 2]], -1]], x], x]]], And[FreeQ[List[a, b, A, C], x], ZeroQ[Plus[Times[A, Power[b, Times[2, Power[3, -1]]]], Times[-1, 2, Power[a, Times[2, Power[3, -1]]], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Times[Power[Times[-1, a], Times[1, Power[3, -1]]], Power[Power[Times[-1, b], Times[1, Power[3, -1]]], -1]]]], Plus[Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, x], -1]], x], x], Dist[Times[Plus[B, Times[C, q]], Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[-1, q, x], Power[x, 2]], -1]], x], x]]], And[FreeQ[List[a, b, A, B, C], x], ZeroQ[Plus[Times[A, Power[Times[-1, b], Times[2, Power[3, -1]]]], Times[-1, Power[Times[-1, a], Times[1, Power[3, -1]]], Power[Times[-1, b], Times[1, Power[3, -1]]], B], Times[-1, 2, Power[Times[-1, a], Times[2, Power[3, -1]]], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[x, Blank[]], Plus[Pattern[B, Blank[]], Times[Optional[Pattern[C, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Times[Power[Times[-1, a], Times[1, Power[3, -1]]], Power[Power[Times[-1, b], Times[1, Power[3, -1]]], -1]]]], Plus[Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, x], -1]], x], x], Dist[Times[Plus[B, Times[C, q]], Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[-1, q, x], Power[x, 2]], -1]], x], x]]], And[FreeQ[List[a, b, B, C], x], ZeroQ[Plus[Times[Power[Times[-1, a], Times[1, Power[3, -1]]], Power[Times[-1, b], Times[1, Power[3, -1]]], B], Times[2, Power[Times[-1, a], Times[2, Power[3, -1]]], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Times[Power[Times[-1, a], Times[1, Power[3, -1]]], Power[Power[Times[-1, b], Times[1, Power[3, -1]]], -1]]]], Plus[Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, x], -1]], x], x], Dist[Times[C, q, Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[-1, q, x], Power[x, 2]], -1]], x], x]]], And[FreeQ[List[a, b, A, C], x], ZeroQ[Plus[Times[A, Power[Times[-1, b], Times[2, Power[3, -1]]]], Times[-1, 2, Power[Times[-1, a], Times[2, Power[3, -1]]], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Times[Power[Times[-1, a], Times[1, Power[3, -1]]], Power[Power[b, Times[1, Power[3, -1]]], -1]]]], Plus[Times[-1, Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, Times[-1, x]], -1]], x], x]], Dist[Times[Plus[B, Times[-1, C, q]], Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[q, x], Power[x, 2]], -1]], x], x]]], And[FreeQ[List[a, b, A, B, C], x], ZeroQ[Plus[Times[A, Power[b, Times[2, Power[3, -1]]]], Times[Power[Times[-1, a], Times[1, Power[3, -1]]], Power[b, Times[1, Power[3, -1]]], B], Times[-1, 2, Power[Times[-1, a], Times[2, Power[3, -1]]], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[x, Blank[]], Plus[Pattern[B, Blank[]], Times[Optional[Pattern[C, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Times[Power[Times[-1, a], Times[1, Power[3, -1]]], Power[Power[b, Times[1, Power[3, -1]]], -1]]]], Plus[Times[-1, Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, Times[-1, x]], -1]], x], x]], Dist[Times[Plus[B, Times[-1, C, q]], Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[q, x], Power[x, 2]], -1]], x], x]]], And[FreeQ[List[a, b, B, C], x], ZeroQ[Plus[Times[Power[Times[-1, a], Times[1, Power[3, -1]]], Power[b, Times[1, Power[3, -1]]], B], Times[-1, 2, Power[Times[-1, a], Times[2, Power[3, -1]]], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Times[Power[Times[-1, a], Times[1, Power[3, -1]]], Power[Power[b, Times[1, Power[3, -1]]], -1]]]], Plus[Times[-1, Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, Times[-1, x]], -1]], x], x]], Times[-1, Dist[Times[C, q, Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[q, x], Power[x, 2]], -1]], x], x]]]], And[FreeQ[List[a, b, A, C], x], ZeroQ[Plus[Times[A, Power[b, Times[2, Power[3, -1]]]], Times[-1, 2, Power[Times[-1, a], Times[2, Power[3, -1]]], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Times[Power[a, Times[1, Power[3, -1]]], Power[Power[Times[-1, b], Times[1, Power[3, -1]]], -1]]]], Plus[Times[-1, Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, Times[-1, x]], -1]], x], x]], Dist[Times[Plus[B, Times[-1, C, q]], Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[q, x], Power[x, 2]], -1]], x], x]]], And[FreeQ[List[a, b, A, B, C], x], ZeroQ[Plus[Times[A, Power[Times[-1, b], Times[2, Power[3, -1]]]], Times[Power[a, Times[1, Power[3, -1]]], Power[Times[-1, b], Times[1, Power[3, -1]]], B], Times[-1, 2, Power[a, Times[2, Power[3, -1]]], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[x, Blank[]], Plus[Pattern[B, Blank[]], Times[Optional[Pattern[C, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Times[Power[a, Times[1, Power[3, -1]]], Power[Power[Times[-1, b], Times[1, Power[3, -1]]], -1]]]], Plus[Times[-1, Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, Times[-1, x]], -1]], x], x]], Dist[Times[Plus[B, Times[-1, C, q]], Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[q, x], Power[x, 2]], -1]], x], x]]], And[FreeQ[List[a, b, B, C], x], ZeroQ[Plus[Times[Power[a, Times[1, Power[3, -1]]], Power[Times[-1, b], Times[1, Power[3, -1]]], B], Times[-1, 2, Power[a, Times[2, Power[3, -1]]], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Times[Power[a, Times[1, Power[3, -1]]], Power[Power[Times[-1, b], Times[1, Power[3, -1]]], -1]]]], Plus[Times[-1, Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, Times[-1, x]], -1]], x], x]], Times[-1, Dist[Times[C, q, Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[q, x], Power[x, 2]], -1]], x], x]]]], And[FreeQ[List[a, b, A, C], x], ZeroQ[Plus[Times[A, Power[Times[-1, b], Times[2, Power[3, -1]]]], Times[-1, 2, Power[a, Times[2, Power[3, -1]]], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Power[Times[a, Power[b, -1]], Times[1, Power[3, -1]]]]], Plus[Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, x], -1]], x], x], Dist[Times[Plus[B, Times[C, q]], Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[-1, q, x], Power[x, 2]], -1]], x], x]]], And[FreeQ[List[a, b, A, B, C], x], ZeroQ[Plus[A, Times[-1, Power[Times[a, Power[b, -1]], Times[1, Power[3, -1]]], B], Times[-1, 2, Power[Times[a, Power[b, -1]], Times[2, Power[3, -1]]], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[x, Blank[]], Plus[Pattern[B, Blank[]], Times[Optional[Pattern[C, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Power[Times[a, Power[b, -1]], Times[1, Power[3, -1]]]]], Plus[Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, x], -1]], x], x], Dist[Times[Plus[B, Times[C, q]], Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[-1, q, x], Power[x, 2]], -1]], x], x]]], And[FreeQ[List[a, b, B, C], x], ZeroQ[Plus[Times[Power[Times[a, Power[b, -1]], Times[1, Power[3, -1]]], B], Times[2, Power[Times[a, Power[b, -1]], Times[2, Power[3, -1]]], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Power[Times[a, Power[b, -1]], Times[1, Power[3, -1]]]]], Plus[Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, x], -1]], x], x], Dist[Times[C, q, Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[-1, q, x], Power[x, 2]], -1]], x], x]]], And[FreeQ[List[a, b, A, C], x], ZeroQ[Plus[A, Times[-1, 2, Power[Times[a, Power[b, -1]], Times[2, Power[3, -1]]], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[a, Power[b, -1]], 3]]], Plus[Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, x], -1]], x], x], Dist[Times[Plus[B, Times[C, q]], Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[-1, q, x], Power[x, 2]], -1]], x], x]]], And[FreeQ[List[a, b, A, B, C], x], ZeroQ[Plus[A, Times[-1, Rt[Times[a, Power[b, -1]], 3], B], Times[-1, 2, Power[Rt[Times[a, Power[b, -1]], 3], 2], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[x, Blank[]], Plus[Pattern[B, Blank[]], Times[Optional[Pattern[C, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[a, Power[b, -1]], 3]]], Plus[Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, x], -1]], x], x], Dist[Times[Plus[B, Times[C, q]], Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[-1, q, x], Power[x, 2]], -1]], x], x]]], And[FreeQ[List[a, b, B, C], x], ZeroQ[Plus[Times[Rt[Times[a, Power[b, -1]], 3], B], Times[2, Power[Rt[Times[a, Power[b, -1]], 3], 2], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[a, Power[b, -1]], 3]]], Plus[Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, x], -1]], x], x], Dist[Times[C, q, Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[-1, q, x], Power[x, 2]], -1]], x], x]]], And[FreeQ[List[a, b, A, C], x], ZeroQ[Plus[A, Times[-1, 2, Power[Rt[Times[a, Power[b, -1]], 3], 2], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Power[Times[-1, a, Power[b, -1]], Times[1, Power[3, -1]]]]], Plus[Times[-1, Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, Times[-1, x]], -1]], x], x]], Dist[Times[Plus[B, Times[-1, C, q]], Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[q, x], Power[x, 2]], -1]], x], x]]], And[FreeQ[List[a, b, A, B, C], x], ZeroQ[Plus[A, Times[Power[Times[-1, a, Power[b, -1]], Times[1, Power[3, -1]]], B], Times[-1, 2, Power[Times[-1, a, Power[b, -1]], Times[2, Power[3, -1]]], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[x, Blank[]], Plus[Pattern[B, Blank[]], Times[Optional[Pattern[C, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Power[Times[-1, a, Power[b, -1]], Times[1, Power[3, -1]]]]], Plus[Times[-1, Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, Times[-1, x]], -1]], x], x]], Dist[Times[Plus[B, Times[-1, C, q]], Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[q, x], Power[x, 2]], -1]], x], x]]], And[FreeQ[List[a, b, B, C], x], ZeroQ[Plus[Times[Power[Times[-1, a, Power[b, -1]], Times[1, Power[3, -1]]], B], Times[-1, 2, Power[Times[-1, a, Power[b, -1]], Times[2, Power[3, -1]]], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Power[Times[-1, a, Power[b, -1]], Times[1, Power[3, -1]]]]], Plus[Times[-1, Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, Times[-1, x]], -1]], x], x]], Times[-1, Dist[Times[C, q, Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[q, x], Power[x, 2]], -1]], x], x]]]], And[FreeQ[List[a, b, A, C], x], ZeroQ[Plus[A, Times[-1, 2, Power[Times[-1, a, Power[b, -1]], Times[2, Power[3, -1]]], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, a, Power[b, -1]], 3]]], Plus[Times[-1, Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, Times[-1, x]], -1]], x], x]], Dist[Times[Plus[B, Times[-1, C, q]], Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[q, x], Power[x, 2]], -1]], x], x]]], And[FreeQ[List[a, b, A, B, C], x], ZeroQ[Plus[A, Times[Rt[Times[-1, a, Power[b, -1]], 3], B], Times[-1, 2, Power[Rt[Times[-1, a, Power[b, -1]], 3], 2], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[x, Blank[]], Plus[Pattern[B, Blank[]], Times[Optional[Pattern[C, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, a, Power[b, -1]], 3]]], Plus[Times[-1, Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, Times[-1, x]], -1]], x], x]], Dist[Times[Plus[B, Times[-1, C, q]], Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[q, x], Power[x, 2]], -1]], x], x]]], And[FreeQ[List[a, b, B, C], x], ZeroQ[Plus[Times[Rt[Times[-1, a, Power[b, -1]], 3], B], Times[-1, 2, Power[Rt[Times[-1, a, Power[b, -1]], 3], 2], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, a, Power[b, -1]], 3]]], Plus[Times[-1, Dist[Times[C, Power[b, -1]], Int[Times[1, Power[Plus[q, Times[-1, x]], -1]], x], x]], Times[-1, Dist[Times[C, q, Power[b, -1]], Int[Times[1, Power[Plus[Power[q, 2], Times[q, x], Power[x, 2]], -1]], x], x]]]], And[FreeQ[List[a, b, A, C], x], ZeroQ[Plus[A, Times[-1, 2, Power[Rt[Times[-1, a, Power[b, -1]], 3], 2], C]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Int[Times[Plus[A, Times[B, x]], Power[Plus[a, Times[b, Power[x, 3]]], -1]], x], Dist[C, Int[Times[Power[x, 2], Power[Plus[a, Times[b, Power[x, 3]]], -1]], x], x]], And[FreeQ[List[a, b, A, B, C], x], Or[ZeroQ[Plus[Times[a, Power[B, 3]], Times[-1, b, Power[A, 3]]]], Not[RationalQ[Times[a, Power[b, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[x, Blank[]], Plus[Pattern[B, Blank[]], Times[Optional[Pattern[C, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[B, Int[Times[x, Power[Plus[a, Times[b, Power[x, 3]]], -1]], x], x], Dist[C, Int[Times[Power[x, 2], Power[Plus[a, Times[b, Power[x, 3]]], -1]], x], x]], And[FreeQ[List[a, b, B, C], x], Not[RationalQ[Times[a, Power[b, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[A, Int[Times[1, Power[Plus[a, Times[b, Power[x, 3]]], -1]], x], x], Dist[C, Int[Times[Power[x, 2], Power[Plus[a, Times[b, Power[x, 3]]], -1]], x], x]], And[FreeQ[List[a, b, A, C], x], Not[RationalQ[a, b, A, C]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Power[Times[a, Power[b, -1]], Times[1, Power[3, -1]]]]], Dist[Times[Power[q, 2], Power[a, -1]], Int[Times[Plus[A, Times[C, q, x]], Power[Plus[Power[q, 2], Times[-1, q, x], Power[x, 2]], -1]], x], x]], And[FreeQ[List[a, b, A, B, C], x], ZeroQ[Plus[A, Times[-1, B, Power[Times[a, Power[b, -1]], Times[1, Power[3, -1]]]], Times[C, Power[Times[a, Power[b, -1]], Times[2, Power[3, -1]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[x, Blank[]], Plus[Optional[Pattern[B, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Power[Times[a, Power[b, -1]], Times[1, Power[3, -1]]]]], Dist[Times[C, Power[q, 3], Power[a, -1]], Int[Times[x, Power[Plus[Power[q, 2], Times[-1, q, x], Power[x, 2]], -1]], x], x]], And[FreeQ[List[a, b, B, C], x], ZeroQ[Plus[Times[B, Power[Times[a, Power[b, -1]], Times[1, Power[3, -1]]]], Times[-1, C, Power[Times[a, Power[b, -1]], Times[2, Power[3, -1]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Power[Times[a, Power[b, -1]], Times[1, Power[3, -1]]]]], Dist[Times[Power[q, 2], Power[a, -1]], Int[Times[Plus[A, Times[C, q, x]], Power[Plus[Power[q, 2], Times[-1, q, x], Power[x, 2]], -1]], x], x]], And[FreeQ[List[a, b, A, C], x], ZeroQ[Plus[A, Times[C, Power[Times[a, Power[b, -1]], Times[2, Power[3, -1]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Power[Times[-1, a, Power[b, -1]], Times[1, Power[3, -1]]]]], Dist[Times[q, Power[a, -1]], Int[Times[Plus[Times[A, q], Times[Plus[A, Times[B, q]], x]], Power[Plus[Power[q, 2], Times[q, x], Power[x, 2]], -1]], x], x]], And[FreeQ[List[a, b, A, B, C], x], ZeroQ[Plus[A, Times[B, Power[Times[-1, a, Power[b, -1]], Times[1, Power[3, -1]]]], Times[C, Power[Times[-1, a, Power[b, -1]], Times[2, Power[3, -1]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[x, Blank[]], Plus[Pattern[B, Blank[]], Times[Optional[Pattern[C, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Power[Times[-1, a, Power[b, -1]], Times[1, Power[3, -1]]]]], Dist[Times[B, Power[q, 2], Power[a, -1]], Int[Times[x, Power[Plus[Power[q, 2], Times[q, x], Power[x, 2]], -1]], x], x]], And[FreeQ[List[a, b, B, C], x], ZeroQ[Plus[Times[B, Power[Times[-1, a, Power[b, -1]], Times[1, Power[3, -1]]]], Times[C, Power[Times[-1, a, Power[b, -1]], Times[2, Power[3, -1]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Power[Times[-1, a, Power[b, -1]], Times[1, Power[3, -1]]]]], Dist[Times[A, q, Power[a, -1]], Int[Times[Plus[q, x], Power[Plus[Power[q, 2], Times[q, x], Power[x, 2]], -1]], x], x]], And[FreeQ[List[a, b, A, C], x], ZeroQ[Plus[A, Times[C, Power[Times[-1, a, Power[b, -1]], Times[2, Power[3, -1]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Power[Times[a, Power[b, -1]], Times[1, Power[3, -1]]]]], Condition[Plus[Dist[Times[q, Plus[A, Times[-1, B, q], Times[C, Power[q, 2]]], Power[Times[3, a], -1]], Int[Times[1, Power[Plus[q, x], -1]], x], x], Dist[Times[q, Power[Times[3, a], -1]], Int[Times[Plus[Times[q, Plus[Times[2, A], Times[B, q], Times[-1, C, Power[q, 2]]]], Times[-1, Plus[A, Times[-1, B, q], Times[-1, 2, C, Power[q, 2]]], x]], Power[Plus[Power[q, 2], Times[-1, q, x], Power[x, 2]], -1]], x], x]], NonzeroQ[Plus[A, Times[-1, B, q], Times[C, Power[q, 2]]]]]], And[FreeQ[List[a, b, A, B, C], x], NonzeroQ[Plus[Times[a, Power[B, 3]], Times[-1, b, Power[A, 3]]]], RationalQ[Times[a, Power[b, -1]]], Greater[Times[a, Power[b, -1]], 0]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[x, Blank[]], Plus[Pattern[B, Blank[]], Times[Optional[Pattern[C, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Power[Times[a, Power[b, -1]], Times[1, Power[3, -1]]]]], Condition[Plus[Times[-1, Dist[Times[q, Plus[Times[B, q], Times[-1, C, Power[q, 2]]], Power[Times[3, a], -1]], Int[Times[1, Power[Plus[q, x], -1]], x], x]], Dist[Times[q, Power[Times[3, a], -1]], Int[Times[Plus[Times[q, Plus[Times[B, q], Times[-1, C, Power[q, 2]]]], Times[Plus[Times[B, q], Times[2, C, Power[q, 2]]], x]], Power[Plus[Power[q, 2], Times[-1, q, x], Power[x, 2]], -1]], x], x]], NonzeroQ[Plus[Times[B, q], Times[-1, C, Power[q, 2]]]]]], And[FreeQ[List[a, b, B, C], x], RationalQ[Times[a, Power[b, -1]]], Greater[Times[a, Power[b, -1]], 0]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Power[Times[a, Power[b, -1]], Times[1, Power[3, -1]]]]], Condition[Plus[Dist[Times[q, Plus[A, Times[C, Power[q, 2]]], Power[Times[3, a], -1]], Int[Times[1, Power[Plus[q, x], -1]], x], x], Dist[Times[q, Power[Times[3, a], -1]], Int[Times[Plus[Times[q, Plus[Times[2, A], Times[-1, C, Power[q, 2]]]], Times[-1, Plus[A, Times[-1, 2, C, Power[q, 2]]], x]], Power[Plus[Power[q, 2], Times[-1, q, x], Power[x, 2]], -1]], x], x]], NonzeroQ[Plus[A, Times[C, Power[q, 2]]]]]], And[FreeQ[List[a, b, A, C], x], RationalQ[Times[a, Power[b, -1]]], Greater[Times[a, Power[b, -1]], 0]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Power[Times[-1, a, Power[b, -1]], Times[1, Power[3, -1]]]]], Condition[Plus[Dist[Times[q, Plus[A, Times[B, q], Times[C, Power[q, 2]]], Power[Times[3, a], -1]], Int[Times[1, Power[Plus[q, Times[-1, x]], -1]], x], x], Dist[Times[q, Power[Times[3, a], -1]], Int[Times[Plus[Times[q, Plus[Times[2, A], Times[-1, B, q], Times[-1, C, Power[q, 2]]]], Times[Plus[A, Times[B, q], Times[-1, 2, C, Power[q, 2]]], x]], Power[Plus[Power[q, 2], Times[q, x], Power[x, 2]], -1]], x], x]], NonzeroQ[Plus[A, Times[B, q], Times[C, Power[q, 2]]]]]], And[FreeQ[List[a, b, A, B, C], x], NonzeroQ[Plus[Times[a, Power[B, 3]], Times[-1, b, Power[A, 3]]]], RationalQ[Times[a, Power[b, -1]]], Less[Times[a, Power[b, -1]], 0]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[x, Blank[]], Plus[Pattern[B, Blank[]], Times[Optional[Pattern[C, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Power[Times[-1, a, Power[b, -1]], Times[1, Power[3, -1]]]]], Condition[Plus[Dist[Times[q, Plus[Times[B, q], Times[C, Power[q, 2]]], Power[Times[3, a], -1]], Int[Times[1, Power[Plus[q, Times[-1, x]], -1]], x], x], Dist[Times[q, Power[Times[3, a], -1]], Int[Times[Plus[Times[-1, q, Plus[Times[B, q], Times[C, Power[q, 2]]]], Times[Plus[Times[B, q], Times[-1, 2, C, Power[q, 2]]], x]], Power[Plus[Power[q, 2], Times[q, x], Power[x, 2]], -1]], x], x]], NonzeroQ[Plus[Times[B, q], Times[C, Power[q, 2]]]]]], And[FreeQ[List[a, b, B, C], x], RationalQ[Times[a, Power[b, -1]]], Less[Times[a, Power[b, -1]], 0]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Power[Times[-1, a, Power[b, -1]], Times[1, Power[3, -1]]]]], Condition[Plus[Dist[Times[q, Plus[A, Times[C, Power[q, 2]]], Power[Times[3, a], -1]], Int[Times[1, Power[Plus[q, Times[-1, x]], -1]], x], x], Dist[Times[q, Power[Times[3, a], -1]], Int[Times[Plus[Times[q, Plus[Times[2, A], Times[-1, C, Power[q, 2]]]], Times[Plus[A, Times[-1, 2, C, Power[q, 2]]], x]], Power[Plus[Power[q, 2], Times[q, x], Power[x, 2]], -1]], x], x]], NonzeroQ[Plus[A, Times[C, Power[q, 2]]]]]], And[FreeQ[List[a, b, A, C], x], RationalQ[Times[a, Power[b, -1]]], Less[Times[a, Power[b, -1]], 0]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[v, Sum[Times[Power[Times[c, x], Plus[m, ii]], Plus[Coeff[Pq, x, ii], Times[Coeff[Pq, x, Plus[Times[n, Power[2, -1]], ii]], Power[x, Times[n, Power[2, -1]]]]], Power[Times[Power[c, ii], Plus[a, Times[b, Power[x, n]]]], -1]], List[ii, 0, Plus[Times[n, Power[2, -1]], -1]]]]], Condition[Int[v, x], SumQ[v]]], And[FreeQ[List[a, b, c, m], x], PolyQ[Pq, x], PositiveIntegerQ[Times[n, Power[2, -1]]], Less[Expon[Pq, x], n]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[v, Sum[Times[Power[x, ii], Plus[Coeff[Pq, x, ii], Times[Coeff[Pq, x, Plus[Times[n, Power[2, -1]], ii]], Power[x, Times[n, Power[2, -1]]]]], Power[Plus[a, Times[b, Power[x, n]]], -1]], List[ii, 0, Plus[Times[n, Power[2, -1]], -1]]]]], Condition[Int[v, x], SumQ[v]]], And[FreeQ[List[a, b], x], PolyQ[Pq, x], PositiveIntegerQ[Times[n, Power[2, -1]]], Less[Expon[Pq, x], n]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numer[Rt[Times[b, Power[a, -1]], 3]]], Set[s, Denom[Rt[Times[b, Power[a, -1]], 3]]]], Plus[Simp[Times[2, d, Power[s, 3], Sqrt[Plus[a, Times[b, Power[x, 3]]]], Power[Times[a, Power[r, 2], Plus[Times[Plus[1, Sqrt[3]], s], Times[r, x]]], -1]], x], Times[-1, Simp[Times[Power[3, Times[1, Power[4, -1]]], Sqrt[Plus[2, Times[-1, Sqrt[3]]]], d, s, Plus[s, Times[r, x]], Sqrt[Times[Plus[Power[s, 2], Times[-1, r, s, x], Times[Power[r, 2], Power[x, 2]]], Power[Power[Plus[Times[Plus[1, Sqrt[3]], s], Times[r, x]], 2], -1]]], Power[Times[Power[r, 2], Sqrt[Plus[a, Times[b, Power[x, 3]]]], Sqrt[Times[s, Plus[s, Times[r, x]], Power[Power[Plus[Times[Plus[1, Sqrt[3]], s], Times[r, x]], 2], -1]]]], -1], EllipticE[ArcSin[Times[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], s], Times[r, x]], Power[Plus[Times[Plus[1, Sqrt[3]], s], Times[r, x]], -1]]], Plus[-7, Times[-1, 4, Sqrt[3]]]]], x]]]], And[FreeQ[List[a, b, c, d], x], PosQ[a], ZeroQ[Plus[Times[c, Rt[Times[b, Power[a, -1]], 3]], Times[-1, d, Plus[1, Times[-1, Sqrt[3]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numer[Rt[Times[b, Power[a, -1]], 3]]], Set[s, Denom[Rt[Times[b, Power[a, -1]], 3]]]], Plus[Dist[Times[Plus[Times[c, r], Times[-1, Plus[1, Times[-1, Sqrt[3]]], d, s]], Power[r, -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 3]]]], -1]], x], x], Dist[Times[d, Power[r, -1]], Int[Times[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], s], Times[r, x]], Power[Sqrt[Plus[a, Times[b, Power[x, 3]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], PosQ[a], NonzeroQ[Plus[Times[c, Rt[Times[b, Power[a, -1]], 3]], Times[-1, d, Plus[1, Times[-1, Sqrt[3]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numer[Rt[Times[b, Power[a, -1]], 3]]], Set[s, Denom[Rt[Times[b, Power[a, -1]], 3]]]], Plus[Simp[Times[2, d, Power[s, 3], Sqrt[Plus[a, Times[b, Power[x, 3]]]], Power[Times[a, Power[r, 2], Plus[Times[Plus[1, Times[-1, Sqrt[3]]], s], Times[r, x]]], -1]], x], Simp[Times[Power[3, Times[1, Power[4, -1]]], Sqrt[Plus[2, Sqrt[3]]], d, s, Plus[s, Times[r, x]], Sqrt[Times[Plus[Power[s, 2], Times[-1, r, s, x], Times[Power[r, 2], Power[x, 2]]], Power[Power[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], s], Times[r, x]], 2], -1]]], Power[Times[Power[r, 2], Sqrt[Plus[a, Times[b, Power[x, 3]]]], Sqrt[Times[-1, s, Plus[s, Times[r, x]], Power[Power[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], s], Times[r, x]], 2], -1]]]], -1], EllipticE[ArcSin[Times[Plus[Times[Plus[1, Sqrt[3]], s], Times[r, x]], Power[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], s], Times[r, x]], -1]]], Plus[-7, Times[4, Sqrt[3]]]]], x]]], And[FreeQ[List[a, b, c, d], x], NegQ[a], ZeroQ[Plus[Times[c, Rt[Times[b, Power[a, -1]], 3]], Times[-1, d, Plus[1, Sqrt[3]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numer[Rt[Times[b, Power[a, -1]], 3]]], Set[s, Denom[Rt[Times[b, Power[a, -1]], 3]]]], Plus[Dist[Times[Plus[Times[c, r], Times[-1, Plus[1, Sqrt[3]], d, s]], Power[r, -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 3]]]], -1]], x], x], Dist[Times[d, Power[r, -1]], Int[Times[Plus[Times[Plus[1, Sqrt[3]], s], Times[r, x]], Power[Sqrt[Plus[a, Times[b, Power[x, 3]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NegQ[a], NonzeroQ[Plus[Times[c, Rt[Times[b, Power[a, -1]], 3]], Times[-1, d, Plus[1, Sqrt[3]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 6]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numer[Rt[Times[b, Power[a, -1]], 3]]], Set[s, Denom[Rt[Times[b, Power[a, -1]], 3]]]], Plus[Simp[Times[Plus[1, Sqrt[3]], d, Power[s, 3], x, Sqrt[Plus[a, Times[b, Power[x, 6]]]], Power[Times[2, a, Power[r, 2], Plus[s, Times[Plus[1, Sqrt[3]], r, Power[x, 2]]]], -1]], x], Times[-1, Simp[Times[Power[3, Times[1, Power[4, -1]]], d, s, x, Plus[s, Times[r, Power[x, 2]]], Sqrt[Times[Plus[Power[s, 2], Times[-1, r, s, Power[x, 2]], Times[Power[r, 2], Power[x, 4]]], Power[Power[Plus[s, Times[Plus[1, Sqrt[3]], r, Power[x, 2]]], 2], -1]]], Power[Times[2, Power[r, 2], Sqrt[Times[Times[r, Power[x, 2], Plus[s, Times[r, Power[x, 2]]]], Power[Power[Plus[s, Times[Plus[1, Sqrt[3]], r, Power[x, 2]]], 2], -1]]], Sqrt[Plus[a, Times[b, Power[x, 6]]]]], -1], EllipticE[ArcCos[Times[Plus[s, Times[Plus[1, Times[-1, Sqrt[3]]], r, Power[x, 2]]], Power[Plus[s, Times[Plus[1, Sqrt[3]], r, Power[x, 2]]], -1]]], Times[Plus[2, Sqrt[3]], Power[4, -1]]]], x]]]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Times[2, Power[Rt[Times[b, Power[a, -1]], 3], 2], c], Times[-1, Plus[1, Times[-1, Sqrt[3]]], d]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 6]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[b, Power[a, -1]], 3]]], Plus[Dist[Times[Plus[Times[2, c, Power[q, 2]], Times[-1, Plus[1, Times[-1, Sqrt[3]]], d]], Power[Times[2, Power[q, 2]], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 6]]]], -1]], x], x], Dist[Times[d, Power[Times[2, Power[q, 2]], -1]], Int[Times[Plus[1, Times[-1, Sqrt[3]], Times[2, Power[q, 2], Power[x, 4]]], Power[Sqrt[Plus[a, Times[b, Power[x, 6]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[2, Power[Rt[Times[b, Power[a, -1]], 3], 2], c], Times[-1, Plus[1, Times[-1, Sqrt[3]]], d]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 8]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[c, d, Power[x, 3], Sqrt[Times[-1, Power[Plus[c, Times[-1, d, Power[x, 2]]], 2], Power[Times[c, d, Power[x, 2]], -1]]], Sqrt[Times[-1, Power[d, 2], Plus[a, Times[b, Power[x, 8]]], Power[Times[b, Power[c, 2], Power[x, 4]], -1]]], Power[Times[Sqrt[Plus[2, Sqrt[2]]], Plus[c, Times[-1, d, Power[x, 2]]], Sqrt[Plus[a, Times[b, Power[x, 8]]]]], -1], EllipticF[ArcSin[Times[1, Power[2, -1], Sqrt[Times[Plus[Times[Sqrt[2], Power[c, 2]], Times[2, c, d, Power[x, 2]], Times[Sqrt[2], Power[d, 2], Power[x, 4]]], Power[Times[c, d, Power[x, 2]], -1]]]]], Times[-2, Plus[1, Times[-1, Sqrt[2]]]]]], x]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Times[b, Power[c, 4]], Times[-1, a, Power[d, 4]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 8]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[d, Times[Rt[Times[b, Power[a, -1]], 4], c]], Power[Times[2, Rt[Times[b, Power[a, -1]], 4]], -1]], Int[Times[Plus[1, Times[Rt[Times[b, Power[a, -1]], 4], Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 8]]]], -1]], x], x], Times[-1, Dist[Times[Plus[d, Times[-1, Rt[Times[b, Power[a, -1]], 4], c]], Power[Times[2, Rt[Times[b, Power[a, -1]], 4]], -1]], Int[Times[Plus[1, Times[-1, Rt[Times[b, Power[a, -1]], 4], Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 8]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Times[b, Power[c, 4]], Times[-1, a, Power[d, 4]]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Coeff[Pq, x, 0], Int[Times[1, Power[Times[x, Sqrt[Plus[a, Times[b, Power[x, n]]]]], -1]], x], x], Int[Times[ExpandToSum[Times[Plus[Pq, Times[-1, Coeff[Pq, x, 0]]], Power[x, -1]], x], Power[Sqrt[Plus[a, Times[b, Power[x, n]]]], -1]], x]], And[FreeQ[List[a, b], x], PolyQ[Pq, x], PositiveIntegerQ[n], NonzeroQ[Coeff[Pq, x, 0]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[q, Expon[Pq, x]], j, k], Int[Sum[Times[Power[Times[c, x], Plus[m, j]], Power[Power[c, j], -1], Sum[Times[Coeff[Pq, x, Plus[j, Times[k, n, Power[2, -1]]]], Power[x, Times[k, n, Power[2, -1]]]], List[k, 0, Plus[Times[2, Plus[q, Times[-1, j]], Power[n, -1]], 1]]], Power[Plus[a, Times[b, Power[x, n]]], p]], List[j, 0, Plus[Times[n, Power[2, -1]], -1]]], x]], And[FreeQ[List[a, b, c, m, p], x], PolyQ[Pq, x], PositiveIntegerQ[Times[n, Power[2, -1]]], Not[PolyQ[Pq, Power[x, Times[n, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[q, Expon[Pq, x]], j, k], Int[Sum[Times[Power[x, j], Sum[Times[Coeff[Pq, x, Plus[j, Times[k, n, Power[2, -1]]]], Power[x, Times[k, n, Power[2, -1]]]], List[k, 0, Plus[Times[2, Plus[q, Times[-1, j]], Power[n, -1]], 1]]], Power[Plus[a, Times[b, Power[x, n]]], p]], List[j, 0, Plus[Times[n, Power[2, -1]], -1]]], x]], And[FreeQ[List[a, b, p], x], PolyQ[Pq, x], PositiveIntegerQ[Times[n, Power[2, -1]]], Not[PolyQ[Pq, Power[x, Times[n, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Coeff[Pq, x, Plus[n, -1]], Int[Times[Power[x, Plus[n, -1]], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x], Int[Times[ExpandToSum[Plus[Pq, Times[-1, Coeff[Pq, x, Plus[n, -1]], Power[x, Plus[n, -1]]]], x], Power[Plus[a, Times[b, Power[x, n]]], p]], x]], And[FreeQ[List[a, b, p], x], PolyQ[Pq, x], PositiveIntegerQ[n], Equal[Expon[Pq, x], Plus[n, -1]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[c, x], m], Pq, Power[Plus[a, Times[b, Power[x, n]]], -1]], x], x], And[FreeQ[List[a, b, c, m], x], PolyQ[Pq, x], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Pq, Power[Plus[a, Times[b, Power[x, n]]], -1]], x], x], And[FreeQ[List[a, b], x], PolyQ[Pq, x], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[Pq0, Coeff[Pq, x, 0]]], Condition[Plus[Simp[Times[Pq0, Power[Times[c, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, c, Plus[m, 1]], -1]], x], Dist[Times[1, Power[Times[2, a, c, Plus[m, 1]], -1]], Int[Times[Power[Times[c, x], Plus[m, 1]], ExpandToSum[Plus[Times[2, a, Plus[m, 1], Plus[Pq, Times[-1, Pq0]], Power[x, -1]], Times[-1, 2, b, Pq0, Plus[m, Times[n, Plus[p, 1]], 1], Power[x, Plus[n, -1]]]], x], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x]], NonzeroQ[Pq0]]], And[FreeQ[List[a, b, c, p], x], PolyQ[Pq, x], PositiveIntegerQ[n], RationalQ[m], Less[m, -1], LessEqual[Plus[n, -1], Expon[Pq, x]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Expon[Pq, x]]], Condition[With[List[Set[Pqq, Coeff[Pq, x, q]]], Plus[Dist[Times[1, Power[Times[b, Plus[m, q, Times[n, p], 1]], -1]], Int[Times[Power[Times[c, x], m], ExpandToSum[Plus[Times[b, Plus[m, q, Times[n, p], 1], Plus[Pq, Times[-1, Pqq, Power[x, q]]]], Times[-1, a, Pqq, Plus[m, q, Times[-1, n], 1], Power[x, Plus[q, Times[-1, n]]]]], x], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x], Simp[Times[Pqq, Power[Times[c, x], Plus[m, q, Times[-1, n], 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[b, Power[c, Plus[q, Times[-1, n], 1]], Plus[m, q, Times[n, p], 1]], -1]], x]]], And[NonzeroQ[Plus[m, q, Times[n, p], 1]], GreaterEqual[Plus[q, Times[-1, n]], 0], Or[IntegerQ[Times[2, p]], IntegerQ[Plus[p, Times[Plus[q, 1], Power[Times[2, n], -1]]]]]]]], And[FreeQ[List[a, b, c, m, p], x], PolyQ[Pq, x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Expon[Pq, x]]], Condition[With[List[Set[Pqq, Coeff[Pq, x, q]]], Plus[Dist[Times[1, Power[Times[b, Plus[q, Times[n, p], 1]], -1]], Int[Times[ExpandToSum[Plus[Times[b, Plus[q, Times[n, p], 1], Plus[Pq, Times[-1, Pqq, Power[x, q]]]], Times[-1, a, Pqq, Plus[q, Times[-1, n], 1], Power[x, Plus[q, Times[-1, n]]]]], x], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x], Simp[Times[Pqq, Power[x, Plus[q, Times[-1, n], 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[b, Plus[q, Times[n, p], 1]], -1]], x]]], And[NonzeroQ[Plus[q, Times[n, p], 1]], GreaterEqual[Plus[q, Times[-1, n]], 0], Or[IntegerQ[Times[2, p]], IntegerQ[Plus[p, Times[Plus[q, 1], Power[Times[2, n], -1]]]]]]]], And[FreeQ[List[a, b, p], x], PolyQ[Pq, x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Expon[Pq, x]]], Times[-1, Subst[Int[Times[ExpandToSum[Times[Power[x, q], ReplaceAll[Pq, Rule[x, Power[x, -1]]]], x], Power[Plus[a, Times[b, Power[x, Times[-1, n]]]], p], Power[Power[x, Plus[m, q, 2]], -1]], x], x, Times[1, Power[x, -1]]]]], And[FreeQ[List[a, b, p], x], PolyQ[Pq, x], NegativeIntegerQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[g, Denominator[m]], Set[q, Expon[Pq, x]]], Times[-1, Dist[Times[g, Power[c, -1]], Subst[Int[Times[ExpandToSum[Times[Power[x, Times[g, q]], ReplaceAll[Pq, Rule[x, Times[Power[c, -1], Power[x, Times[-1, g]]]]]], x], Power[Plus[a, Times[b, Power[c, Times[-1, n]], Power[x, Times[-1, g, n]]]], p], Power[Power[x, Plus[Times[g, Plus[m, q, 1]], 1]], -1]], x], x, Times[1, Power[Power[Times[c, x], Times[1, Power[g, -1]]], -1]]], x]]], And[FreeQ[List[a, b, c, p], x], PolyQ[Pq, x], NegativeIntegerQ[n], FractionQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Expon[Pq, x]]], Times[-1, Dist[Times[Power[Times[c, x], m], Power[Power[x, -1], m]], Subst[Int[Times[ExpandToSum[Times[Power[x, q], ReplaceAll[Pq, Rule[x, Power[x, -1]]]], x], Power[Plus[a, Times[b, Power[x, Times[-1, n]]]], p], Power[Power[x, Plus[m, q, 2]], -1]], x], x, Times[1, Power[x, -1]]], x]]], And[FreeQ[List[a, b, c, m, p], x], PolyQ[Pq, x], NegativeIntegerQ[n], Not[RationalQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[g, Denominator[n]]], Dist[g, Subst[Int[Times[Power[x, Plus[Times[g, Plus[m, 1]], -1]], ReplaceAll[Pq, Rule[x, Power[x, g]]], Power[Plus[a, Times[b, Power[x, Times[g, n]]]], p]], x], x, Power[x, Times[1, Power[g, -1]]]], x]], And[FreeQ[List[a, b, m, p], x], PolyQ[Pq, x], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[g, Denominator[n]]], Dist[g, Subst[Int[Times[Power[x, Plus[g, -1]], ReplaceAll[Pq, Rule[x, Power[x, g]]], Power[Plus[a, Times[b, Power[x, Times[g, n]]]], p]], x], x, Power[x, Times[1, Power[g, -1]]]], x]], And[FreeQ[List[a, b, p], x], PolyQ[Pq, x], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[m]], Power[Times[c, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Pq, Power[Plus[a, Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, m, p], x], PolyQ[Pq, x], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Plus[m, 1], -1]], Subst[Int[Times[ReplaceAll[SubstFor[Power[x, n], Pq, x], Rule[x, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]]], Power[Plus[a, Times[b, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]]], p]], x], x, Power[x, Plus[m, 1]]], x], And[FreeQ[List[a, b, m, n, p], x], PolyQ[Pq, Power[x, n]], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[m]], Power[Times[c, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Pq, Power[Plus[a, Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, m, n, p], x], PolyQ[Pq, Power[x, n]], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[A, Int[Power[Plus[a, Times[b, Power[x, n]]], p], x], x], Dist[B, Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x]], And[FreeQ[List[a, b, A, B, m, n, p], x], ZeroQ[Plus[m, Times[-1, n], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[c, x], m], Pq, Power[Plus[a, Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, m, n, p], x], Or[PolyQ[Pq, x], PolyQ[Pq, Power[x, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Pq, Power[Plus[a, Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, n, p], x], Or[PolyQ[Pq, x], PolyQ[Pq, Power[x, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[v, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[u, m], Power[Times[Coeff[v, x, 1], Power[v, m]], -1]], Subst[Int[Times[Power[x, m], SubstFor[v, Pq, x], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x, v], x], And[FreeQ[List[a, b, m, n, p], x], LinearPairQ[u, v, x], PolyQ[Pq, Power[v, n]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[v, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coeff[v, x, 1], -1]], Subst[Int[Times[SubstFor[v, Pq, x], Power[Plus[a, Times[b, Power[x, n]]], p]], x], x, v], x], And[FreeQ[List[a, b, n, p], x], LinearQ[v, x], PolyQ[Pq, Power[v, n]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[c, x], m], Pq, Power[Plus[Times[a1, a2], Times[b1, b2, Power[x, Times[2, n]]]], p]], x], And[FreeQ[List[a1, b1, a2, b2, c, m, n, p], x], PolyQ[Pq, x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], Or[IntegerQ[p], And[PositiveQ[a1], PositiveQ[a2]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Pq, Power[Plus[Times[a1, a2], Times[b1, b2, Power[x, Times[2, n]]]], p]], x], And[FreeQ[List[a1, b1, a2, b2, n, p], x], PolyQ[Pq, x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]], Or[IntegerQ[p], And[PositiveQ[a1], PositiveQ[a2]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a1, Times[b1, Power[x, n]]], FracPart[p]], Power[Plus[a2, Times[b2, Power[x, n]]], FracPart[p]], Power[Power[Plus[Times[a1, a2], Times[b1, b2, Power[x, Times[2, n]]]], FracPart[p]], -1]], Int[Times[Power[Times[c, x], m], Pq, Power[Plus[Times[a1, a2], Times[b1, b2, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a1, b1, a2, b2, c, m, n, p], x], PolyQ[Pq, x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a1, Blank[]], Times[Optional[Pattern[b1, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[a2, Blank[]], Times[Optional[Pattern[b2, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a1, Times[b1, Power[x, n]]], FracPart[p]], Power[Plus[a2, Times[b2, Power[x, n]]], FracPart[p]], Power[Power[Plus[Times[a1, a2], Times[b1, b2, Power[x, Times[2, n]]]], FracPart[p]], -1]], Int[Times[Pq, Power[Plus[Times[a1, a2], Times[b1, b2, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a1, b1, a2, b2, n, p], x], PolyQ[Pq, x], ZeroQ[Plus[Times[a2, b1], Times[a1, b2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[e, x, Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[p, 1]], Power[Times[a, c], -1]], x], And[FreeQ[List[a, b, c, d, e, f, g, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Times[a, c, f], Times[-1, e, Plus[Times[b, c], Times[a, d]], Plus[Times[n, Plus[p, 1]], 1]]]], ZeroQ[Plus[Times[a, c, g], Times[-1, b, d, e, Plus[Times[2, n, Plus[p, 1]], 1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[e, x, Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[p, 1]], Power[Times[a, c], -1]], x], And[FreeQ[List[a, b, c, d, e, g, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Times[n, Plus[p, 1]], 1]], ZeroQ[Plus[Times[a, c, g], Times[-1, b, d, e, Plus[Times[2, n, Plus[p, 1]], 1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[e, Power[Times[h, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[p, 1]], Power[Times[a, c, h, Plus[m, 1]], -1]], x], And[FreeQ[List[a, b, c, d, e, f, g, h, m, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Times[a, c, f, Plus[m, 1]], Times[-1, e, Plus[Times[b, c], Times[a, d]], Plus[m, Times[n, Plus[p, 1]], 1]]]], ZeroQ[Plus[Times[a, c, g, Plus[m, 1]], Times[-1, b, d, e, Plus[m, Times[2, n, Plus[p, 1]], 1]]]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[e, Power[Times[h, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]]], Plus[p, 1]], Power[Plus[c, Times[d, Power[x, n]]], Plus[p, 1]], Power[Times[a, c, h, Plus[m, 1]], -1]], x], And[FreeQ[List[a, b, c, d, e, g, h, m, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[m, Times[n, Plus[p, 1]], 1]], ZeroQ[Plus[Times[a, c, g, Plus[m, 1]], Times[-1, b, d, e, Plus[m, Times[2, n, Plus[p, 1]], 1]]]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[A, Int[Times[Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x], Dist[B, Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x]], And[FreeQ[List[a, b, c, d, A, B, m, n, p, q], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[m, Times[-1, n], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[Px, Blank[]], Optional[Pattern[q, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[k, Denominator[n]]], Dist[Times[k, Power[d, -1]], Subst[Int[SimplifyIntegrand[Times[Power[x, Plus[k, -1]], Power[ReplaceAll[Px, Rule[x, Plus[Times[Power[x, k], Power[d, -1]], Times[-1, c, Power[d, -1]]]]], q], Power[Plus[a, Times[b, Power[x, Times[k, n]]]], p]], x], x], x, Power[Plus[c, Times[d, x]], Times[1, Power[k, -1]]]], x]], And[FreeQ[List[a, b, c, d, p], x], PolynomialQ[Px, x], IntegerQ[q], RationalQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[SubstFor[Power[x, n], Pq, x], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, m, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, Power[x, n]], ZeroQ[Simplify[Plus[m, Times[-1, n], 1]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[d, x], m], Pq, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, m, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Pq, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[d, x, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[a, -1]], x], And[FreeQ[List[a, b, c, d, e, f, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Times[a, e], Times[-1, b, d, Plus[Times[n, Plus[p, 1]], 1]]]], ZeroQ[Plus[Times[a, f], Times[-1, c, d, Plus[Times[2, n, Plus[p, 1]], 1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[d, x, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[a, -1]], x], And[FreeQ[List[a, b, c, d, f, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Times[n, Plus[p, 1]], 1]], ZeroQ[Plus[Times[c, d], Times[a, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[d, Power[Times[g, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[a, g, Plus[m, 1]], -1]], x], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[Times[a, e, Plus[m, 1]], Times[-1, b, d, Plus[m, Times[n, Plus[p, 1]], 1]]]], ZeroQ[Plus[Times[a, f, Plus[m, 1]], Times[-1, c, d, Plus[m, Times[2, n, Plus[p, 1]], 1]]]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[d, Power[Times[g, x], Plus[m, 1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[a, g, Plus[m, 1]], -1]], x], And[FreeQ[List[a, b, c, d, f, g, m, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[m, Times[n, Plus[p, 1]], 1]], ZeroQ[Plus[Times[c, d], Times[a, f]]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], FracPart[p]], Power[Times[Power[Times[4, c], IntPart[p]], Power[Plus[b, Times[2, c, Power[x, n]]], Times[2, FracPart[p]]]], -1]], Int[Times[Power[Times[d, x], m], Pq, Power[Plus[b, Times[2, c, Power[x, n]]], Times[2, p]]], x], x], And[FreeQ[List[a, b, c, d, m, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], FracPart[p]], Power[Times[Power[Times[4, c], IntPart[p]], Power[Plus[b, Times[2, c, Power[x, n]]], Times[2, FracPart[p]]]], -1]], Int[Times[Pq, Power[Plus[b, Times[2, c, Power[x, n]]], Times[2, p]]], x], x], And[FreeQ[List[a, b, c, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]], SubstFor[Power[x, n], Pq, x], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, m, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, Power[x, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Pattern[d, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[d, x], m], Power[Power[x, m], -1]], Int[Times[Power[x, m], Pq, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, m, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, Power[x, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[d, -1]], Int[Times[Power[Times[d, x], Plus[m, 1]], ExpandToSum[Times[Pq, Power[x, -1]], x], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, m, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], ZeroQ[Coeff[Pq, x, 0]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[x, ExpandToSum[Times[Pq, Power[x, -1]], x], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], And[FreeQ[List[a, b, c, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], ZeroQ[Coeff[Pq, x, 0]], SumQ[Pq]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n3, Blank[]]]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[x, Plus[Times[3, a, d], Times[-1, Plus[Times[3, b, d], Times[-1, a, e], Times[2, b, d, p]], Power[x, 2]]], Power[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]], Plus[p, 1]], Power[Times[3, Power[a, 2]], -1]], x], And[FreeQ[List[a, b, c, d, e, f, g, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[n3, Times[-1, 3, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[Power[a, 2], g, Plus[n, 1]], Times[-1, c, Plus[Times[n, Plus[Times[2, p], 3]], 1], Plus[Times[a, e], Times[-1, b, d, Plus[Times[n, Plus[p, 1]], 1]]]]]], ZeroQ[Plus[Times[Power[a, 2], f, Plus[n, 1]], Times[-1, a, c, d, Plus[n, 1], Plus[Times[2, n, Plus[p, 1]], 1]], Times[-1, b, Plus[Times[n, Plus[p, 2]], 1], Plus[Times[a, e], Times[-1, b, d, Plus[Times[n, Plus[p, 1]], 1]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n3, Blank[]]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[x, Plus[Times[3, a, d], Times[-1, Plus[Times[3, b, d], Times[2, b, d, p]], Power[x, 2]]], Power[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]], Plus[p, 1]], Power[Times[3, Power[a, 2]], -1]], x], And[FreeQ[List[a, b, c, d, f, g, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[n3, Times[-1, 3, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[Power[a, 2], g, Plus[n, 1]], Times[c, b, d, Plus[Times[n, Plus[Times[2, p], 3]], 1], Plus[Times[n, Plus[p, 1]], 1]]]], ZeroQ[Plus[Times[Power[a, 2], f, Plus[n, 1]], Times[-1, a, c, d, Plus[n, 1], Plus[Times[2, n, Plus[p, 1]], 1]], Times[Power[b, 2], d, Plus[Times[n, Plus[p, 2]], 1], Plus[Times[n, Plus[p, 1]], 1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n3, Blank[]]]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[x, Plus[Times[3, a, d], Times[-1, Plus[Times[3, b, d], Times[-1, a, e], Times[2, b, d, p]], Power[x, 2]]], Power[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]], Plus[p, 1]], Power[Times[3, Power[a, 2]], -1]], x], And[FreeQ[List[a, b, c, d, e, g, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[n3, Times[-1, 3, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[Power[a, 2], g, Plus[n, 1]], Times[-1, c, Plus[Times[n, Plus[Times[2, p], 3]], 1], Plus[Times[a, e], Times[-1, b, d, Plus[Times[n, Plus[p, 1]], 1]]]]]], ZeroQ[Plus[Times[a, c, d, Plus[n, 1], Plus[Times[2, n, Plus[p, 1]], 1]], Times[b, Plus[Times[n, Plus[p, 2]], 1], Plus[Times[a, e], Times[-1, b, d, Plus[Times[n, Plus[p, 1]], 1]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n3, Blank[]]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[x, Plus[Times[3, a, d], Times[-1, Plus[Times[3, b, d], Times[2, b, d, p]], Power[x, 2]]], Power[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]], Plus[p, 1]], Power[Times[3, Power[a, 2]], -1]], x], And[FreeQ[List[a, b, c, d, g, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[n3, Times[-1, 3, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[Power[a, 2], g, Plus[n, 1]], Times[c, b, d, Plus[Times[n, Plus[Times[2, p], 3]], 1], Plus[Times[n, Plus[p, 1]], 1]]]], ZeroQ[Plus[Times[a, c, d, Plus[n, 1], Plus[Times[2, n, Plus[p, 1]], 1]], Times[-1, Power[b, 2], d, Plus[Times[n, Plus[p, 2]], 1], Plus[Times[n, Plus[p, 1]], 1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Rational[-3, 2]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[s, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Plus[Times[2, c, Plus[Times[b, f], Times[-1, 2, a, g]]], Times[2, h, Plus[Power[b, 2], Times[-1, 4, a, c]], Power[x, Times[n, Power[2, -1]]]], Times[2, c, Plus[Times[2, c, f], Times[-1, b, g]], Power[x, n]]], Power[Times[c, n, Plus[Power[b, 2], Times[-1, 4, a, c]], Sqrt[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]]]], -1]], x]], And[FreeQ[List[a, b, c, e, f, g, h, m, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[q, Times[-1, n, Power[2, -1]]]], ZeroQ[Plus[r, Times[-1, 3, n, Power[2, -1]]]], ZeroQ[Plus[s, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, m], Times[-1, n], 2]], ZeroQ[Plus[Times[c, e], Times[a, h]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[d, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Rational[-3, 2]], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[r, Blank[]]]]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[s, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[d, x], m], Power[Power[x, m], -1]], Int[Times[Power[x, m], Plus[e, Times[f, Power[x, Times[n, Power[2, -1]]]], Times[g, Power[x, Times[Times[3, n], Power[2, -1]]]], Times[h, Power[x, Times[2, n]]]], Power[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Times[3, Power[2, -1]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, h, m, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[q, Times[-1, n, Power[2, -1]]]], ZeroQ[Plus[r, Times[-1, 3, n, Power[2, -1]]]], ZeroQ[Plus[s, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, m], Times[-1, n], 2]], ZeroQ[Plus[Times[c, e], Times[a, h]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[q, Expon[Pq, x]], i], Condition[Plus[Times[-1, Simp[Times[x, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[a, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1], Sum[Plus[Times[Plus[Times[Plus[Power[b, 2], Times[-1, 2, a, c]], Coeff[Pq, x, i]], Times[-1, a, b, Coeff[Pq, x, Plus[n, i]]]], Power[x, i]], Times[c, Plus[Times[b, Coeff[Pq, x, i]], Times[-1, 2, a, Coeff[Pq, x, Plus[n, i]]]], Power[x, Plus[n, i]]]], List[i, 0, Plus[n, -1]]]], x]], Dist[Times[1, Power[Times[a, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Sum[Plus[Times[Plus[Times[Plus[Times[Power[b, 2], Plus[Times[n, Plus[p, 1]], i, 1]], Times[-1, 2, a, c, Plus[Times[2, n, Plus[p, 1]], i, 1]]], Coeff[Pq, x, i]], Times[-1, a, b, Plus[i, 1], Coeff[Pq, x, Plus[n, i]]]], Power[x, i]], Times[c, Plus[Times[n, Plus[Times[2, p], 3]], i, 1], Plus[Times[b, Coeff[Pq, x, i]], Times[-1, 2, a, Coeff[Pq, x, Plus[n, i]]]], Power[x, Plus[n, i]]]], List[i, 0, Plus[n, -1]]]], x], x]], Less[q, Times[2, n]]]], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-3, 2]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 3]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 4]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Plus[Times[c, Plus[Times[b, e], Times[-1, 2, a, f]]], Times[g, Plus[Power[b, 2], Times[-1, 4, a, c]], x], Times[c, Plus[Times[2, c, e], Times[-1, b, f]], Power[x, 2]]], Power[Times[c, Plus[Power[b, 2], Times[-1, 4, a, c]], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1]], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, d], Times[a, g]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-3, 2]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 3]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 4]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Plus[Times[2, a, c, f], Times[-1, g, Plus[Power[b, 2], Times[-1, 4, a, c]], x], Times[b, c, f, Power[x, 2]]], Power[Times[c, Plus[Power[b, 2], Times[-1, 4, a, c]], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1]], x], And[FreeQ[List[a, b, c, d, f, g], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, d], Times[a, g]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-3, 2]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 4]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Plus[Times[b, c, e], Times[Plus[Power[b, 2], Times[-1, 4, a, c]], g, x], Times[2, Power[c, 2], e, Power[x, 2]]], Power[Times[c, Plus[Power[b, 2], Times[-1, 4, a, c]], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1]], x]], And[FreeQ[List[a, b, c, d, e, g], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, d], Times[a, g]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-3, 2]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], 4]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Plus[Times[2, Power[a, 2], c, f], Times[a, b, c, f, Power[x, 2]], Times[a, Plus[Power[b, 2], Times[-1, 4, a, c]], h, Power[x, 3]]], Power[Times[a, c, Plus[Power[b, 2], Times[-1, 4, a, c]], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1]], x], And[FreeQ[List[a, b, c, e, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, e], Times[-1, 3, a, h]]], ZeroQ[Plus[Times[c, g], Times[-1, 2, b, h]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-3, 2]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], 4]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[h, Power[x, 3], Power[Times[c, Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1]], x], And[FreeQ[List[a, b, c, e, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, e], Times[-1, 3, a, h]]], ZeroQ[Plus[Times[c, g], Times[-1, 2, b, h]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-3, 2]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 3]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 4]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], 6]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Plus[Times[2, Power[a, 2], c, f], Times[c, Plus[Power[b, 2], Times[-1, 4, a, c]], d, x], Times[a, b, c, f, Power[x, 2]], Times[a, Plus[Power[b, 2], Times[-1, 4, a, c]], h, Power[x, 3]]], Power[Times[a, c, Plus[Power[b, 2], Times[-1, 4, a, c]], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1]], x], And[FreeQ[List[a, b, c, d, e, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, e], Times[-1, 3, a, h]]], ZeroQ[Plus[Times[3, c, d], Times[-1, 2, b, e], Times[3, a, g]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-3, 2]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 3]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], 6]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Plus[Times[2, Power[a, 2], c, f], Times[c, Plus[Power[b, 2], Times[-1, 4, a, c]], d, x], Times[a, b, c, f, Power[x, 2]], Times[a, Plus[Power[b, 2], Times[-1, 4, a, c]], h, Power[x, 3]]], Power[Times[a, c, Plus[Power[b, 2], Times[-1, 4, a, c]], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1]], x], And[FreeQ[List[a, b, c, d, e, f, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, e], Times[-1, 3, a, h]]], ZeroQ[Plus[Times[3, c, d], Times[-1, 2, b, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Expon[Pq, x]]], Condition[Module[List[Set[Q, PolynomialQuotient[Times[Power[Times[b, c], Plus[Floor[Times[Plus[q, -1], Power[n, -1]]], 1]], Pq], Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], x]], Set[R, PolynomialRemainder[Times[Power[Times[b, c], Plus[Floor[Times[Plus[q, -1], Power[n, -1]]], 1]], Pq], Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], x]], i], Plus[Dist[Times[1, Power[Times[a, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]], Power[Times[b, c], Plus[Floor[Times[Plus[q, -1], Power[n, -1]]], 1]]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], ExpandToSum[Plus[Times[a, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]], Q], Sum[Plus[Times[Plus[Times[Plus[Times[Power[b, 2], Plus[Times[n, Plus[p, 1]], i, 1]], Times[-1, 2, a, c, Plus[Times[2, n, Plus[p, 1]], i, 1]]], Coeff[R, x, i]], Times[-1, a, b, Plus[i, 1], Coeff[R, x, Plus[n, i]]]], Power[x, i]], Times[c, Plus[Times[n, Plus[Times[2, p], 3]], i, 1], Plus[Times[b, Coeff[R, x, i]], Times[-1, 2, a, Coeff[R, x, Plus[n, i]]]], Power[x, Plus[n, i]]]], List[i, 0, Plus[n, -1]]]], x]], x], x], Times[-1, Simp[Times[x, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[a, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]], Power[Times[b, c], Plus[Floor[Times[Plus[q, -1], Power[n, -1]]], 1]]], -1], Sum[Plus[Times[Plus[Times[Plus[Power[b, 2], Times[-1, 2, a, c]], Coeff[R, x, i]], Times[-1, a, b, Coeff[R, x, Plus[n, i]]]], Power[x, i]], Times[c, Plus[Times[b, Coeff[R, x, i]], Times[-1, 2, a, Coeff[R, x, Plus[n, i]]]], Power[x, Plus[n, i]]]], List[i, 0, Plus[n, -1]]]], x]]]], GreaterEqual[q, Times[2, n]]]], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[q, Expon[Pq, x]]], Condition[Module[List[Set[Q, PolynomialQuotient[Times[a, Power[Times[b, c], Plus[Floor[Times[Plus[q, -1], Power[n, -1]]], 1]], Power[x, m], Pq], Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], x]], Set[R, PolynomialRemainder[Times[a, Power[Times[b, c], Plus[Floor[Times[Plus[q, -1], Power[n, -1]]], 1]], Power[x, m], Pq], Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], x]], i], Plus[Dist[Times[1, Power[Times[a, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]], Power[Times[b, c], Plus[Floor[Times[Plus[q, -1], Power[n, -1]]], 1]]], -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], ExpandToSum[Plus[Times[n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]], Power[x, Times[-1, m]], Q], Sum[Plus[Times[Plus[Times[Plus[Times[Power[b, 2], Plus[Times[n, Plus[p, 1]], i, 1], Power[a, -1]], Times[-1, 2, c, Plus[Times[2, n, Plus[p, 1]], i, 1]]], Coeff[R, x, i]], Times[-1, b, Plus[i, 1], Coeff[R, x, Plus[n, i]]]], Power[x, Plus[i, Times[-1, m]]]], Times[c, Plus[Times[n, Plus[Times[2, p], 3]], i, 1], Plus[Times[b, Power[a, -1], Coeff[R, x, i]], Times[-1, 2, Coeff[R, x, Plus[n, i]]]], Power[x, Plus[n, i, Times[-1, m]]]]], List[i, 0, Plus[n, -1]]]], x]], x], x], Times[-1, Simp[Times[x, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[Power[a, 2], n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]], Power[Times[b, c], Plus[Floor[Times[Plus[q, -1], Power[n, -1]]], 1]]], -1], Sum[Plus[Times[Plus[Times[Plus[Power[b, 2], Times[-1, 2, a, c]], Coeff[R, x, i]], Times[-1, a, b, Coeff[R, x, Plus[n, i]]]], Power[x, i]], Times[c, Plus[Times[b, Coeff[R, x, i]], Times[-1, 2, a, Coeff[R, x, Plus[n, i]]]], Power[x, Plus[n, i]]]], List[i, 0, Plus[n, -1]]]], x]]]], GreaterEqual[q, Times[2, n]]]], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], RationalQ[p], Less[p, -1], NegativeIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[g, GCD[Plus[m, 1], n]]], Condition[Dist[Times[1, Power[g, -1]], Subst[Int[Times[Power[x, Plus[Times[Plus[m, 1], Power[g, -1]], -1]], ReplaceAll[Pq, Rule[x, Power[x, Times[1, Power[g, -1]]]]], Power[Plus[a, Times[b, Power[x, Times[n, Power[g, -1]]]], Times[c, Power[x, Times[2, n, Power[g, -1]]]]], p]], x], x, Power[x, g]], x], Unequal[g, 1]]], And[FreeQ[List[a, b, c, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, Power[x, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[d, x], m], Pq, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, m], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, Power[x, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], NiceSqrtQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Pq, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], -1]], x], x], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, Power[x, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], Or[NiceSqrtQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Less[Expon[Pq, x], n]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Expon[Pq, x]]], Condition[With[List[Set[Pqq, Coeff[Pq, x, q]]], Plus[Dist[Times[1, Power[2, -1]], Int[Times[ExpandToSum[Plus[Times[2, Pq], Times[-1, Power[c, p], Pqq, Plus[b, Times[2, c, x]], Power[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], -1]]], x], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x], Simp[Times[Power[c, p], Pqq, Log[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[2, -1]], x]]], Equal[Plus[q, Times[2, p], 1], 0]]], And[FreeQ[List[a, b, c], x], PolyQ[Pq, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Expon[Pq, x]]], Condition[With[List[Set[Pqq, Coeff[Pq, x, q]]], Plus[Int[Times[ExpandToSum[Plus[Pq, Times[-1, Power[c, Plus[p, Times[1, Power[2, -1]]]], Pqq, Power[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, Times[1, Power[2, -1]]]], -1]]], x], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], Simp[Times[Power[c, p], Pqq, ArcTanh[Times[Plus[b, Times[2, c, x]], Power[Times[2, Rt[c, 2], Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], -1]]]], x]]], Equal[Plus[q, Times[2, p], 1], 0]]], And[FreeQ[List[a, b, c], x], PolyQ[Pq, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[Plus[p, Times[1, Power[2, -1]]]], PosQ[c]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Expon[Pq, x]]], Condition[With[List[Set[Pqq, Coeff[Pq, x, q]]], Plus[Int[Times[ExpandToSum[Plus[Pq, Times[-1, Power[Times[-1, c], Plus[p, Times[1, Power[2, -1]]]], Pqq, Power[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, Times[1, Power[2, -1]]]], -1]]], x], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], Times[-1, Simp[Times[Power[Times[-1, c], p], Pqq, ArcTan[Times[Plus[b, Times[2, c, x]], Power[Times[2, Rt[Times[-1, c], 2], Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], -1]]]], x]]]], Equal[Plus[q, Times[2, p], 1], 0]]], And[FreeQ[List[a, b, c], x], PolyQ[Pq, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[Plus[p, Times[1, Power[2, -1]]]], NegQ[c]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Expon[Pq, x]]], Condition[With[List[Set[Pqq, Coeff[Pq, x, q]]], Plus[Int[Times[Power[Times[d, x], m], ExpandToSum[Plus[Pq, Times[-1, Pqq, Power[x, q]], Times[-1, Pqq, Plus[Times[a, Plus[m, q, Times[-1, 2, n], 1], Power[x, Plus[q, Times[-1, 2, n]]]], Times[b, Plus[m, q, Times[n, Plus[p, -1]], 1], Power[x, Plus[q, Times[-1, n]]]]], Power[Times[c, Plus[m, q, Times[2, n, p], 1]], -1]]], x], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], Simp[Times[Pqq, Power[Times[d, x], Plus[m, q, Times[-1, 2, n], 1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[c, Power[d, Plus[q, Times[-1, 2, n], 1]], Plus[m, q, Times[2, n, p], 1]], -1]], x]]], And[GreaterEqual[q, Times[2, n]], Unequal[Plus[m, q, Times[2, n, p], 1], 0], Or[IntegerQ[Times[2, p]], And[Equal[n, 1], IntegerQ[Times[4, p]]], IntegerQ[Plus[p, Times[Plus[q, 1], Power[Times[2, n], -1]]]]]]]], And[FreeQ[List[a, b, c, d, m, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, Power[x, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Expon[Pq, x]]], Condition[With[List[Set[Pqq, Coeff[Pq, x, q]]], Plus[Int[Times[ExpandToSum[Plus[Pq, Times[-1, Pqq, Power[x, q]], Times[-1, Pqq, Plus[Times[a, Plus[q, Times[-1, 2, n], 1], Power[x, Plus[q, Times[-1, 2, n]]]], Times[b, Plus[q, Times[n, Plus[p, -1]], 1], Power[x, Plus[q, Times[-1, n]]]]], Power[Times[c, Plus[q, Times[2, n, p], 1]], -1]]], x], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], Simp[Times[Pqq, Power[x, Plus[q, Times[-1, 2, n], 1]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[c, Plus[q, Times[2, n, p], 1]], -1]], x]]], And[GreaterEqual[q, Times[2, n]], Unequal[Plus[q, Times[2, n, p], 1], 0], Or[IntegerQ[Times[2, p]], And[Equal[n, 1], IntegerQ[Times[4, p]]], IntegerQ[Plus[p, Times[Plus[q, 1], Power[Times[2, n], -1]]]]]]]], And[FreeQ[List[a, b, c, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, Power[x, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[q, Expon[Pq, x]], j, k], Int[Sum[Times[1, Power[Power[d, j], -1], Power[Times[d, x], Plus[m, j]], Sum[Times[Coeff[Pq, x, Plus[j, Times[k, n]]], Power[x, Times[k, n]]], List[k, 0, Plus[Times[Plus[q, Times[-1, j]], Power[n, -1]], 1]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], List[j, 0, Plus[n, -1]]], x]], And[FreeQ[List[a, b, c, d, m, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], Not[PolyQ[Pq, Power[x, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[q, Expon[Pq, x]], j, k], Int[Sum[Times[Power[x, j], Sum[Times[Coeff[Pq, x, Plus[j, Times[k, n]]], Power[x, Times[k, n]]], List[k, 0, Plus[Times[Plus[q, Times[-1, j]], Power[n, -1]], 1]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], List[j, 0, Plus[n, -1]]], x]], And[FreeQ[List[a, b, c, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n], Not[PolyQ[Pq, Power[x, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[RationalFunctionExpand[Times[Power[Times[d, x], m], Pq, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, m], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[RationalFunctionExpand[Times[Pq, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], -1]], x], x], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Expon[Pq, x]]], Times[-1, Subst[Int[Times[ExpandToSum[Times[Power[x, q], ReplaceAll[Pq, Rule[x, Power[x, -1]]]], x], Power[Plus[a, Times[b, Power[x, Times[-1, n]]], Times[c, Power[x, Times[-2, n]]]], p], Power[Power[x, Plus[m, q, 2]], -1]], x], x, Times[1, Power[x, -1]]]]], And[FreeQ[List[a, b, c, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[g, Denominator[m]], Set[q, Expon[Pq, x]]], Times[-1, Dist[Times[g, Power[d, -1]], Subst[Int[Times[ExpandToSum[Times[Power[x, Times[g, q]], ReplaceAll[Pq, Rule[x, Times[Power[d, -1], Power[x, Times[-1, g]]]]]], x], Power[Plus[a, Times[b, Power[d, Times[-1, n]], Power[x, Times[-1, g, n]]], Times[c, Power[d, Times[-2, n]], Power[x, Times[-2, g, n]]]], p], Power[Power[x, Plus[Times[g, Plus[m, q, 1]], 1]], -1]], x], x, Times[1, Power[Power[Times[d, x], Times[1, Power[g, -1]]], -1]]], x]]], And[FreeQ[List[a, b, c, d, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[n], FractionQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Expon[Pq, x]]], Times[-1, Dist[Times[Power[Times[d, x], m], Power[Power[x, -1], m]], Subst[Int[Times[ExpandToSum[Times[Power[x, q], ReplaceAll[Pq, Rule[x, Power[x, -1]]]], x], Power[Plus[a, Times[b, Power[x, Times[-1, n]]], Times[c, Power[x, Times[-2, n]]]], p], Power[Power[x, Plus[m, q, 2]], -1]], x], x, Times[1, Power[x, -1]]], x]]], And[FreeQ[List[a, b, c, d, m, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[n], Not[RationalQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[g, Denominator[n]]], Dist[g, Subst[Int[Times[Power[x, Plus[Times[g, Plus[m, 1]], -1]], ReplaceAll[Pq, Rule[x, Power[x, g]]], Power[Plus[a, Times[b, Power[x, Times[g, n]]], Times[c, Power[x, Times[2, g, n]]]], p]], x], x, Power[x, Times[1, Power[g, -1]]]], x]], And[FreeQ[List[a, b, c, m, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[g, Denominator[n]]], Dist[g, Subst[Int[Times[Power[x, Plus[g, -1]], ReplaceAll[Pq, Rule[x, Power[x, g]]], Power[Plus[a, Times[b, Power[x, Times[g, n]]], Times[c, Power[x, Times[2, g, n]]]], p]], x], x, Power[x, Times[1, Power[g, -1]]]], x]], And[FreeQ[List[a, b, c, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Pattern[d, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[d, Plus[m, Times[-1, 1, Power[2, -1]]]], Sqrt[Times[d, x]], Power[Sqrt[x], -1]], Int[Times[Power[x, m], Pq, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], FractionQ[n], PositiveIntegerQ[Plus[m, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Pattern[d, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[d, Plus[m, Times[1, Power[2, -1]]]], Sqrt[x], Power[Sqrt[Times[d, x]], -1]], Int[Times[Power[x, m], Pq, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], FractionQ[n], NegativeIntegerQ[Plus[m, Times[-1, 1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Pattern[d, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[d, x], m], Power[Power[x, m], -1]], Int[Times[Power[x, m], Pq, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, m, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], FractionQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Plus[m, 1], -1]], Subst[Int[Times[ReplaceAll[SubstFor[Power[x, n], Pq, x], Rule[x, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]]], Power[Plus[a, Times[b, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]], Times[c, Power[x, Simplify[Times[2, n, Power[Plus[m, 1], -1]]]]]], p]], x], x, Power[x, Plus[m, 1]]], x], And[FreeQ[List[a, b, c, m, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, Power[x, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Pattern[d, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[d, x], m], Power[Power[x, m], -1]], Int[Times[Power[x, m], Pq, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, m, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, Power[x, n]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Times[2, c, Power[q, -1]], Int[Times[Power[Times[d, x], m], Pq, Power[Plus[b, Times[-1, q], Times[2, c, Power[x, n]]], -1]], x], x], Times[-1, Dist[Times[2, c, Power[q, -1]], Int[Times[Power[Times[d, x], m], Pq, Power[Plus[b, q, Times[2, c, Power[x, n]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, m, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Times[2, c, Power[q, -1]], Int[Times[Pq, Power[Plus[b, Times[-1, q], Times[2, c, Power[x, n]]], -1]], x], x], Times[-1, Dist[Times[2, c, Power[q, -1]], Int[Times[Pq, Power[Plus[b, q, Times[2, c, Power[x, n]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[d, x], m], Pq, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, d, m, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], NegativeIntegerQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Pq, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x], And[FreeQ[List[a, b, c, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], PolyQ[Pq, x], NegativeIntegerQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[d, x], m], Pq, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], And[FreeQ[List[a, b, c, d, m, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], Or[PolyQ[Pq, x], PolyQ[Pq, Power[x, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n2, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Pq, Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], And[FreeQ[List[a, b, c, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], Or[PolyQ[Pq, x], PolyQ[Pq, Power[x, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[v, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[u, m], Power[Times[Coefficient[v, x, 1], Power[v, m]], -1]], Subst[Int[Times[Power[x, m], SubstFor[v, Pq, x], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x, v], x], And[FreeQ[List[a, b, c, m, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], LinearPairQ[u, v, x], PolyQ[Pq, Power[v, n]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[v, Blank[]], Optional[Pattern[n2, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[v, x, 1], -1]], Subst[Int[Times[SubstFor[v, Pq, x], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], p]], x], x, v], x], And[FreeQ[List[a, b, c, n, p], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], LinearQ[v, x], PolyQ[Pq, Power[v, n]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[b, Plus[n, Times[-1, j]], Plus[p, 1], Power[x, Plus[n, -1]]], -1]], x], And[FreeQ[List[a, b, j, n, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]], ZeroQ[Plus[Times[j, p], Times[-1, n], j, 1]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, Plus[n, Times[-1, j]], Plus[p, 1], Power[x, Plus[j, -1]]], -1]], x]], Dist[Times[Plus[Times[n, p], n, Times[-1, j], 1], Power[Times[a, Plus[n, Times[-1, j]], Plus[p, 1]], -1]], Int[Times[Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]], Power[Power[x, j], -1]], x], x]], And[FreeQ[List[a, b, j, n], x], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]], NegativeIntegerQ[Simplify[Times[Plus[Times[n, p], n, Times[-1, j], 1], Power[Plus[n, Times[-1, j]], -1]]]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, Plus[Times[j, p], 1], Power[x, Plus[j, -1]]], -1]], x], Times[-1, Dist[Times[b, Plus[Times[n, p], n, Times[-1, j], 1], Power[Times[a, Plus[Times[j, p], 1]], -1]], Int[Times[Power[x, Plus[n, Times[-1, j]]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p]], x], x]]], And[FreeQ[List[a, b, j, n, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]], NegativeIntegerQ[Simplify[Times[Plus[Times[n, p], n, Times[-1, j], 1], Power[Plus[n, Times[-1, j]], -1]]]], NonzeroQ[Plus[Times[j, p], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p], Power[Plus[Times[j, p], 1], -1]], x], Times[-1, Dist[Times[b, Plus[n, Times[-1, j]], p, Power[Plus[Times[j, p], 1], -1]], Int[Times[Power[x, n], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b], x], Not[IntegerQ[p]], RationalQ[j, n, p], Less[0, j, n], Greater[p, 0], Less[Plus[Times[j, p], 1], 0]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p], Power[Plus[Times[n, p], 1], -1]], x], Dist[Times[a, Plus[n, Times[-1, j]], p, Power[Plus[Times[n, p], 1], -1]], Int[Times[Power[x, j], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b], x], Not[IntegerQ[p]], RationalQ[j, n, p], Less[0, j, n], Greater[p, 0], NonzeroQ[Plus[Times[n, p], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[b, Plus[n, Times[-1, j]], Plus[p, 1], Power[x, Plus[n, -1]]], -1]], x], Times[-1, Dist[Times[Plus[Times[j, p], Times[-1, n], j, 1], Power[Times[b, Plus[n, Times[-1, j]], Plus[p, 1]], -1]], Int[Times[Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]], Power[Power[x, n], -1]], x], x]]], And[FreeQ[List[a, b], x], Not[IntegerQ[p]], RationalQ[j, n, p], Less[0, j, n], Less[p, -1], Greater[Plus[Times[j, p], 1], Plus[n, Times[-1, j]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, Plus[n, Times[-1, j]], Plus[p, 1], Power[x, Plus[j, -1]]], -1]], x]], Dist[Times[Plus[Times[n, p], n, Times[-1, j], 1], Power[Times[a, Plus[n, Times[-1, j]], Plus[p, 1]], -1]], Int[Times[Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]], Power[Power[x, j], -1]], x], x]], And[FreeQ[List[a, b], x], Not[IntegerQ[p]], RationalQ[j, n, p], Less[0, j, n], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p], Power[Times[p, Plus[n, Times[-1, j]]], -1]], x], Dist[a, Int[Times[Power[x, j], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, j, n], x], PositiveIntegerQ[Plus[p, Times[1, Power[2, -1]]]], NonzeroQ[Plus[n, Times[-1, j]]], ZeroQ[Simplify[Plus[Times[j, p], 1]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, Power[Plus[2, Times[-1, n]], -1]], Subst[Int[Times[1, Power[Plus[1, Times[-1, a, Power[x, 2]]], -1]], x], x, Times[x, Power[Sqrt[Plus[Times[a, Power[x, 2]], Times[b, Power[x, n]]]], -1]]], x], And[FreeQ[List[a, b, n], x], NonzeroQ[Plus[n, -2]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, Plus[n, Times[-1, j]], Plus[p, 1], Power[x, Plus[j, -1]]], -1]], x]], Dist[Times[Plus[Times[n, p], n, Times[-1, j], 1], Power[Times[a, Plus[n, Times[-1, j]], Plus[p, 1]], -1]], Int[Times[Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]], Power[Power[x, j], -1]], x], x]], And[FreeQ[List[a, b, j, n], x], NegativeIntegerQ[Plus[p, Times[1, Power[2, -1]]]], NonzeroQ[Plus[n, Times[-1, j]]], ZeroQ[Simplify[Plus[Times[j, p], 1]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, Sqrt[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]]], Power[Times[b, Plus[n, -2], Power[x, Plus[n, -1]]], -1]], x], Times[-1, Dist[Times[a, Plus[Times[2, n], Times[-1, j], -2], Power[Times[b, Plus[n, -2]], -1]], Int[Times[1, Power[Times[Power[x, Plus[n, Times[-1, j]]], Sqrt[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]]]], -1]], x], x]]], And[FreeQ[List[a, b], x], RationalQ[j, n], Less[Times[2, Plus[n, -1]], j, n]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], FracPart[p]], Power[Times[Power[x, Times[j, FracPart[p]]], Power[Plus[a, Times[b, Power[x, Plus[n, Times[-1, j]]]]], FracPart[p]]], -1]], Int[Times[Power[x, Times[j, p]], Power[Plus[a, Times[b, Power[x, Plus[n, Times[-1, j]]]]], p]], x], x], And[FreeQ[List[a, b, j, n, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]], PosQ[Plus[n, Times[-1, j]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[u, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[u, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p], x], x, u], x], And[FreeQ[List[a, b, j, n, p], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Power[Plus[Times[a, Power[x, Simplify[Times[j, Power[n, -1]]]]], Times[b, x]], p], x], x, Power[x, n]], x], And[FreeQ[List[a, b, j, m, n, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]], IntegerQ[Simplify[Times[j, Power[n, -1]]]], ZeroQ[Simplify[Plus[m, Times[-1, n], 1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Power[c, Plus[j, -1]], Power[Times[c, x], Plus[m, Times[-1, j], 1]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, Plus[n, Times[-1, j]], Plus[p, 1]], -1]], x]], And[FreeQ[List[a, b, c, j, m, n, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]], ZeroQ[Plus[m, Times[n, p], n, Times[-1, j], 1]], Or[IntegerQ[j], PositiveQ[c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[c, Plus[j, -1]], Power[Times[c, x], Plus[m, Times[-1, j], 1]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, Plus[n, Times[-1, j]], Plus[p, 1]], -1]], x]], Dist[Times[Power[c, j], Plus[m, Times[n, p], n, Times[-1, j], 1], Power[Times[a, Plus[n, Times[-1, j]], Plus[p, 1]], -1]], Int[Times[Power[Times[c, x], Plus[m, Times[-1, j]]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, j, m, n], x], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]], NegativeIntegerQ[Simplify[Times[Plus[m, Times[n, p], n, Times[-1, j], 1], Power[Plus[n, Times[-1, j]], -1]]]], RationalQ[p], Less[p, -1], Or[IntegerQ[j], PositiveQ[c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[c, Plus[j, -1]], Power[Times[c, x], Plus[m, Times[-1, j], 1]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, Plus[m, Times[j, p], 1]], -1]], x], Times[-1, Dist[Times[b, Plus[m, Times[n, p], n, Times[-1, j], 1], Power[Times[a, Power[c, Plus[n, Times[-1, j]]], Plus[m, Times[j, p], 1]], -1]], Int[Times[Power[Times[c, x], Plus[m, n, Times[-1, j]]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p]], x], x]]], And[FreeQ[List[a, b, c, j, m, n, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]], NegativeIntegerQ[Simplify[Times[Plus[m, Times[n, p], n, Times[-1, j], 1], Power[Plus[n, Times[-1, j]], -1]]]], NonzeroQ[Plus[m, Times[j, p], 1]], Or[IntegersQ[j, n], PositiveQ[c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[m]], Power[Times[c, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, j, m, n, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]], NegativeIntegerQ[Simplify[Times[Plus[m, Times[n, p], n, Times[-1, j], 1], Power[Plus[n, Times[-1, j]], -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]], Power[Plus[Times[a, Power[x, Simplify[Times[j, Power[n, -1]]]]], Times[b, x]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, j, m, n, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]], IntegerQ[Simplify[Times[j, Power[n, -1]]]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]], NonzeroQ[Plus[Power[n, 2], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[m]], Power[Times[c, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, j, m, n, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]], IntegerQ[Simplify[Times[j, Power[n, -1]]]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]], NonzeroQ[Plus[Power[n, 2], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[c, x], Plus[m, 1]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p], Power[Times[c, Plus[m, Times[j, p], 1]], -1]], x], Times[-1, Dist[Times[b, p, Plus[n, Times[-1, j]], Power[Times[Power[c, n], Plus[m, Times[j, p], 1]], -1]], Int[Times[Power[Times[c, x], Plus[m, n]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, c], x], Not[IntegerQ[p]], RationalQ[j, m, n, p], Less[0, j, n], Or[IntegersQ[j, n], PositiveQ[c]], Greater[p, 0], Less[Plus[m, Times[j, p], 1], 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[c, x], Plus[m, 1]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p], Power[Times[c, Plus[m, Times[n, p], 1]], -1]], x], Dist[Times[a, Plus[n, Times[-1, j]], p, Power[Times[Power[c, j], Plus[m, Times[n, p], 1]], -1]], Int[Times[Power[Times[c, x], Plus[m, j]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, m], x], Not[IntegerQ[p]], RationalQ[j, n, p], Less[0, j, n], Or[IntegersQ[j, n], PositiveQ[c]], Greater[p, 0], NonzeroQ[Plus[m, Times[n, p], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[c, Plus[n, -1]], Power[Times[c, x], Plus[m, Times[-1, n], 1]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[b, Plus[n, Times[-1, j]], Plus[p, 1]], -1]], x], Times[-1, Dist[Times[Power[c, n], Plus[m, Times[j, p], Times[-1, n], j, 1], Power[Times[b, Plus[n, Times[-1, j]], Plus[p, 1]], -1]], Int[Times[Power[Times[c, x], Plus[m, Times[-1, n]]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, c], x], Not[IntegerQ[p]], RationalQ[j, m, n, p], Less[0, j, n], Or[IntegersQ[j, n], PositiveQ[c]], Less[p, -1], Greater[Plus[m, Times[j, p], 1], Plus[n, Times[-1, j]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[c, Plus[j, -1]], Power[Times[c, x], Plus[m, Times[-1, j], 1]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, Plus[n, Times[-1, j]], Plus[p, 1]], -1]], x]], Dist[Times[Power[c, j], Plus[m, Times[n, p], n, Times[-1, j], 1], Power[Times[a, Plus[n, Times[-1, j]], Plus[p, 1]], -1]], Int[Times[Power[Times[c, x], Plus[m, Times[-1, j]]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, m], x], Not[IntegerQ[p]], RationalQ[j, n, p], Less[0, j, n], Or[IntegersQ[j, n], PositiveQ[c]], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[c, Plus[n, -1]], Power[Times[c, x], Plus[m, Times[-1, n], 1]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[b, Plus[m, Times[n, p], 1]], -1]], x], Times[-1, Dist[Times[a, Power[c, Plus[n, Times[-1, j]]], Plus[m, Times[j, p], Times[-1, n], j, 1], Power[Times[b, Plus[m, Times[n, p], 1]], -1]], Int[Times[Power[Times[c, x], Plus[m, Times[-1, Plus[n, Times[-1, j]]]]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p]], x], x]]], And[FreeQ[List[a, b, c, m, p], x], Not[IntegerQ[p]], RationalQ[j, n], Less[0, j, n], Or[IntegersQ[j, n], PositiveQ[c]], PositiveQ[Plus[m, Times[j, p], 1, Times[-1, n], j]], NonzeroQ[Plus[m, Times[n, p], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[c, Plus[j, -1]], Power[Times[c, x], Plus[m, Times[-1, j], 1]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, Plus[m, Times[j, p], 1]], -1]], x], Times[-1, Dist[Times[b, Plus[m, Times[n, p], n, Times[-1, j], 1], Power[Times[a, Power[c, Plus[n, Times[-1, j]]], Plus[m, Times[j, p], 1]], -1]], Int[Times[Power[Times[c, x], Plus[m, n, Times[-1, j]]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p]], x], x]]], And[FreeQ[List[a, b, c, m, p], x], Not[IntegerQ[p]], RationalQ[j, n], Less[0, j, n], Or[IntegersQ[j, n], PositiveQ[c]], NegativeQ[Plus[m, Times[j, p], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Plus[m, 1], -1]], Subst[Int[Power[Plus[Times[a, Power[x, Simplify[Times[j, Power[Plus[m, 1], -1]]]]], Times[b, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]]], p], x], x, Power[x, Plus[m, 1]]], x], And[FreeQ[List[a, b, j, m, n, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]], IntegerQ[Simplify[Times[j, Power[n, -1]]]], NonzeroQ[Plus[m, 1]], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[m]], Power[Times[c, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, j, m, n, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]], IntegerQ[Simplify[Times[j, Power[n, -1]]]], NonzeroQ[Plus[m, 1]], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[c, x], Plus[m, 1]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p], Power[Times[c, p, Plus[n, Times[-1, j]]], -1]], x], Dist[Times[a, Power[Power[c, j], -1]], Int[Times[Power[Times[c, x], Plus[m, j]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, j, m, n], x], PositiveIntegerQ[Plus[p, Times[1, Power[2, -1]]]], NonzeroQ[Plus[n, Times[-1, j]]], ZeroQ[Simplify[Plus[m, Times[j, p], 1]]], Or[IntegerQ[j], PositiveQ[c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-2, Power[Plus[n, Times[-1, j]], -1]], Subst[Int[Times[1, Power[Plus[1, Times[-1, a, Power[x, 2]]], -1]], x], x, Times[Power[x, Times[j, Power[2, -1]]], Power[Sqrt[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]]], -1]]], x], And[FreeQ[List[a, b, j, n], x], ZeroQ[Plus[m, Times[-1, j, Power[2, -1]], 1]], NonzeroQ[Plus[n, Times[-1, j]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[c, Plus[j, -1]], Power[Times[c, x], Plus[m, Times[-1, j], 1]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[a, Plus[n, Times[-1, j]], Plus[p, 1]], -1]], x]], Dist[Times[Power[c, j], Plus[m, Times[n, p], n, Times[-1, j], 1], Power[Times[a, Plus[n, Times[-1, j]], Plus[p, 1]], -1]], Int[Times[Power[Times[c, x], Plus[m, Times[-1, j]]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, j, m, n], x], NegativeIntegerQ[Plus[p, Times[1, Power[2, -1]]]], NonzeroQ[Plus[n, Times[-1, j]]], ZeroQ[Simplify[Plus[m, Times[j, p], 1]]], Or[IntegerQ[j], PositiveQ[c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[m]], Power[Times[c, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, j, m, n, p], x], IntegerQ[Plus[p, Times[1, Power[2, -1]]]], NonzeroQ[Plus[n, Times[-1, j]]], ZeroQ[Simplify[Plus[m, Times[j, p], 1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[m]], Power[Times[c, x], FracPart[m]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], FracPart[p]], Power[Times[Power[x, Plus[FracPart[m], Times[j, FracPart[p]]]], Power[Plus[a, Times[b, Power[x, Plus[n, Times[-1, j]]]]], FracPart[p]]], -1]], Int[Times[Power[x, Plus[m, Times[j, p]]], Power[Plus[a, Times[b, Power[x, Plus[n, Times[-1, j]]]]], p]], x], x], And[FreeQ[List[a, b, c, j, m, n, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]], PosQ[Plus[n, Times[-1, j]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[v, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[v, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[u, m], Power[Times[Coefficient[v, x, 1], Power[v, m]], -1]], Subst[Int[Times[Power[x, m], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p]], x], x, v], x], And[FreeQ[List[a, b, j, m, n, p], x], LinearPairQ[u, v, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[k, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Pattern[j, Blank[]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]], Power[Plus[Times[a, Power[x, Simplify[Times[j, Power[n, -1]]]]], Times[b, Power[x, Simplify[Times[k, Power[n, -1]]]]]], p], Power[Plus[c, Times[d, x]], q]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, d, j, k, m, n, p, q], x], Not[IntegerQ[p]], NonzeroQ[Plus[k, Times[-1, j]]], IntegerQ[Simplify[Times[j, Power[n, -1]]]], IntegerQ[Simplify[Times[k, Power[n, -1]]]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]], NonzeroQ[Plus[Power[n, 2], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[k, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Pattern[j, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[e, IntPart[m]], Power[Times[e, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, k]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x], And[FreeQ[List[a, b, c, d, e, j, k, m, n, p, q], x], Not[IntegerQ[p]], NonzeroQ[Plus[k, Times[-1, j]]], IntegerQ[Simplify[Times[j, Power[n, -1]]]], IntegerQ[Simplify[Times[k, Power[n, -1]]]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]], NonzeroQ[Plus[Power[n, 2], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[jn, Blank[]]]]]], Pattern[p, Blank[]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[c, Power[e, Plus[j, -1]], Power[Times[e, x], Plus[m, Times[-1, j], 1]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, Plus[j, n]]]], Plus[p, 1]], Power[Times[a, Plus[m, Times[j, p], 1]], -1]], x], And[FreeQ[List[a, b, c, d, e, j, m, n, p], x], ZeroQ[Plus[jn, Times[-1, j], Times[-1, n]]], Not[IntegerQ[p]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[a, d, Plus[m, Times[j, p], 1]], Times[-1, b, c, Plus[m, n, Times[p, Plus[j, n]], 1]]]], Or[PositiveQ[e], IntegersQ[j]], NonzeroQ[Plus[m, Times[j, p], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[jn, Blank[]]]]]], Pattern[p, Blank[]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[e, Plus[j, -1]], Plus[Times[b, c], Times[-1, a, d]], Power[Times[e, x], Plus[m, Times[-1, j], 1]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, Plus[j, n]]]], Plus[p, 1]], Power[Times[a, b, n, Plus[p, 1]], -1]], x]], Times[-1, Dist[Times[Power[e, j], Plus[Times[a, d, Plus[m, Times[j, p], 1]], Times[-1, b, c, Plus[m, n, Times[p, Plus[j, n]], 1]]], Power[Times[a, b, n, Plus[p, 1]], -1]], Int[Times[Power[Times[e, x], Plus[m, Times[-1, j]]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, Plus[j, n]]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, j, m, n], x], ZeroQ[Plus[jn, Times[-1, j], Times[-1, n]]], Not[IntegerQ[p]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[j, m, p], Less[p, -1], Inequality[0, Less, j, LessEqual, m], Or[PositiveQ[e], IntegerQ[j]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[jn, Blank[]]]]]], Pattern[p, Blank[]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[c, Power[e, Plus[j, -1]], Power[Times[e, x], Plus[m, Times[-1, j], 1]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, Plus[j, n]]]], Plus[p, 1]], Power[Times[a, Plus[m, Times[j, p], 1]], -1]], x], Dist[Times[Plus[Times[a, d, Plus[m, Times[j, p], 1]], Times[-1, b, c, Plus[m, n, Times[p, Plus[j, n]], 1]]], Power[Times[a, Power[e, n], Plus[m, Times[j, p], 1]], -1]], Int[Times[Power[Times[e, x], Plus[m, n]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, Plus[j, n]]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, j, p], x], ZeroQ[Plus[jn, Times[-1, j], Times[-1, n]]], Not[IntegerQ[p]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], RationalQ[m, n], Greater[n, 0], Or[Less[Plus[m, Times[j, p]], -1], And[IntegersQ[Plus[m, Times[-1, 1, Power[2, -1]]], Plus[p, Times[-1, 1, Power[2, -1]]]], Less[p, 0], Less[m, Plus[Times[-1, n, p], -1]]]], Or[PositiveQ[e], IntegersQ[j, n]], NonzeroQ[Plus[m, Times[j, p], 1]], NonzeroQ[Plus[m, Times[-1, n], Times[j, p], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[jn, Blank[]]]]]], Pattern[p, Blank[]]], Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[d, Power[e, Plus[j, -1]], Power[Times[e, x], Plus[m, Times[-1, j], 1]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, Plus[j, n]]]], Plus[p, 1]], Power[Times[b, Plus[m, n, Times[p, Plus[j, n]], 1]], -1]], x], Times[-1, Dist[Times[Plus[Times[a, d, Plus[m, Times[j, p], 1]], Times[-1, b, c, Plus[m, n, Times[p, Plus[j, n]], 1]]], Power[Times[b, Plus[m, n, Times[p, Plus[j, n]], 1]], -1]], Int[Times[Power[Times[e, x], m], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, Plus[j, n]]]], p]], x], x]]], And[FreeQ[List[a, b, c, d, e, j, m, n, p], x], ZeroQ[Plus[jn, Times[-1, j], Times[-1, n]]], Not[IntegerQ[p]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], NonzeroQ[Plus[m, n, Times[p, Plus[j, n]], 1]], Or[PositiveQ[e], IntegerQ[j]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[k, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Pattern[j, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Plus[m, 1], -1]], Subst[Int[Times[Power[Plus[Times[a, Power[x, Simplify[Times[j, Power[Plus[m, 1], -1]]]]], Times[b, Power[x, Simplify[Times[k, Power[Plus[m, 1], -1]]]]]], p], Power[Plus[c, Times[d, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]]], q]], x], x, Power[x, Plus[m, 1]]], x], And[FreeQ[List[a, b, c, d, j, k, m, n, p, q], x], Not[IntegerQ[p]], NonzeroQ[Plus[k, Times[-1, j]]], IntegerQ[Simplify[Times[j, Power[n, -1]]]], IntegerQ[Simplify[Times[k, Power[n, -1]]]], NonzeroQ[Plus[m, 1]], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[k, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Pattern[j, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[e, IntPart[m]], Power[Times[e, x], FracPart[m]], Power[Power[x, FracPart[m]], -1]], Int[Times[Power[x, m], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, k]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x], And[FreeQ[List[a, b, c, d, e, j, k, m, n, p, q], x], Not[IntegerQ[p]], NonzeroQ[Plus[k, Times[-1, j]]], IntegerQ[Simplify[Times[j, Power[n, -1]]]], IntegerQ[Simplify[Times[k, Power[n, -1]]]], NonzeroQ[Plus[m, 1]], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[jn, Blank[]]]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[e, IntPart[m]], Power[Times[e, x], FracPart[m]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, Plus[j, n]]]], FracPart[p]], Power[Times[Power[x, Plus[FracPart[m], Times[j, FracPart[p]]]], Power[Plus[a, Times[b, Power[x, n]]], FracPart[p]]], -1]], Int[Times[Power[x, Plus[m, Times[j, p]]], Power[Plus[a, Times[b, Power[x, n]]], p], Power[Plus[c, Times[d, Power[x, n]]], q]], x], x], And[FreeQ[List[a, b, c, d, e, j, m, n, p, q], x], ZeroQ[Plus[jn, Times[-1, j], Times[-1, n]]], Not[IntegerQ[p]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], Not[And[ZeroQ[Plus[n, -1]], ZeroQ[Plus[j, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[d, Denominator[n]]], Dist[d, Subst[Int[Times[Power[x, Plus[d, -1]], ReplaceAll[SubstFor[Power[x, n], Pq, x], Rule[x, Power[x, Times[d, n]]]], Power[Plus[Times[a, Power[x, Times[d, j]]], Times[b, Power[x, Times[d, n]]]], p]], x], x, Power[x, Times[1, Power[d, -1]]]], x]], And[FreeQ[List[a, b, j, n, p], x], PolyQ[Pq, Power[x, n]], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]], RationalQ[j, n], IntegerQ[Times[j, Power[n, -1]]], Less[-1, n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Simplify[Times[Plus[m, 1], Power[n, -1]]], -1]], SubstFor[Power[x, n], Pq, x], Power[Plus[Times[a, Power[x, Simplify[Times[j, Power[n, -1]]]]], Times[b, x]], p]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, j, m, n, p], x], PolyQ[Pq, Power[x, n]], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]], IntegerQ[Simplify[Times[j, Power[n, -1]]]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, Times[Sign[m], Quotient[m, Sign[m]]]], Power[Times[c, x], Mod[m, Sign[m]]], Power[Power[x, Mod[m, Sign[m]]], -1]], Int[Times[Power[x, m], Pq, Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, j, n, p], x], PolyQ[Pq, Power[x, n]], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]], IntegerQ[Simplify[Times[j, Power[n, -1]]]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]], RationalQ[m], Greater[Power[m, 2], 1]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, x], m], Power[Power[x, m], -1]], Int[Times[Power[x, m], Pq, Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, j, m, n, p], x], PolyQ[Pq, Power[x, n]], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]], IntegerQ[Simplify[Times[j, Power[n, -1]]]], IntegerQ[Simplify[Times[Plus[m, 1], Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[g, GCD[Plus[m, 1], n]]], Condition[Dist[Times[1, Power[g, -1]], Subst[Int[Times[Power[x, Plus[Times[Plus[m, 1], Power[g, -1]], -1]], ReplaceAll[Pq, Rule[x, Power[x, Times[1, Power[g, -1]]]]], Power[Plus[Times[a, Power[x, Times[j, Power[g, -1]]]], Times[b, Power[x, Times[n, Power[g, -1]]]]], p]], x], x, Power[x, g]], x], Unequal[g, 1]]], And[FreeQ[List[a, b, p], x], PolyQ[Pq, Power[x, n]], Not[IntegerQ[p]], PositiveIntegerQ[j, n, Times[j, Power[n, -1]]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Expon[Pq, x]]], Condition[With[List[Set[Pqq, Coeff[Pq, x, q]]], Plus[Int[Times[Power[Times[c, x], m], ExpandToSum[Plus[Pq, Times[-1, Pqq, Power[x, q]], Times[-1, a, Pqq, Plus[m, q, Times[-1, n], 1], Power[x, Plus[q, Times[-1, n]]], Power[Times[b, Plus[m, q, Times[n, p], 1]], -1]]], x], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p]], x], Simp[Times[Pqq, Power[Times[c, x], Plus[m, q, Times[-1, n], 1]], Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], Plus[p, 1]], Power[Times[b, Power[c, Plus[q, Times[-1, n], 1]], Plus[m, q, Times[n, p], 1]], -1]], x]]], And[Greater[q, Plus[n, -1]], Unequal[Plus[m, q, Times[n, p], 1], 0], Or[IntegerQ[Times[2, p]], IntegerQ[Plus[p, Times[Plus[q, 1], Power[Times[2, n], -1]]]]]]]], And[FreeQ[List[a, b, c, m, p], x], PolyQ[Pq, x], Not[IntegerQ[p]], PositiveIntegerQ[j, n], Less[j, n]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Plus[m, 1], -1]], Subst[Int[Times[ReplaceAll[SubstFor[Power[x, n], Pq, x], Rule[x, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]]], Power[Plus[Times[a, Power[x, Simplify[Times[j, Power[Plus[m, 1], -1]]]]], Times[b, Power[x, Simplify[Times[n, Power[Plus[m, 1], -1]]]]]], p]], x], x, Power[x, Plus[m, 1]]], x], And[FreeQ[List[a, b, j, m, n, p], x], PolyQ[Pq, Power[x, n]], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]], IntegerQ[Simplify[Times[j, Power[n, -1]]]], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, Times[Sign[m], Quotient[m, Sign[m]]]], Power[Times[c, x], Mod[m, Sign[m]]], Power[Power[x, Mod[m, Sign[m]]], -1]], Int[Times[Power[x, m], Pq, Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, j, n, p], x], PolyQ[Pq, Power[x, n]], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]], IntegerQ[Simplify[Times[j, Power[n, -1]]]], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]], RationalQ[m], Greater[Power[m, 2], 1]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Pattern[c, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, x], m], Power[Power[x, m], -1]], Int[Times[Power[x, m], Pq, Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, j, m, n, p], x], PolyQ[Pq, Power[x, n]], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]], IntegerQ[Simplify[Times[j, Power[n, -1]]]], IntegerQ[Simplify[Times[n, Power[Plus[m, 1], -1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Times[c, x], m], Pq, Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, c, j, m, n, p], x], Or[PolyQ[Pq, x], PolyQ[Pq, Power[x, n]]], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[Pq, Blank[]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[j, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Pq, Power[Plus[Times[a, Power[x, j]], Times[b, Power[x, n]]], p]], x], x], And[FreeQ[List[a, b, j, n, p], x], Or[PolyQ[Pq, x], PolyQ[Pq, Power[x, n]]], Not[IntegerQ[p]], NonzeroQ[Plus[n, Times[-1, j]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[3, Times[3, p]], Power[a, Times[2, p]]], -1]], Int[Times[Power[Plus[Times[3, a], Times[-1, b, x]], p], Power[Plus[Times[3, a], Times[2, b, x]], Times[2, p]]], x], x], And[FreeQ[List[a, b, d], x], IntegerQ[p], ZeroQ[Plus[Times[4, Power[b, 3]], Times[27, Power[a, 2], d]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandToSum[Power[Plus[a, Times[b, x], Times[d, Power[x, 3]]], p], x], x], And[FreeQ[List[a, b, d], x], PositiveIntegerQ[p], NonzeroQ[Plus[Times[4, Power[b, 3]], Times[27, Power[a, 2], d]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, Factor[Plus[a, Times[b, x], Times[d, Power[x, 3]]]]]], Condition[Dist[Power[FreeFactors[u, x], p], Int[DistributeDegree[NonfreeFactors[u, x], p], x], x], ProductQ[NonfreeFactors[u, x]]]], And[FreeQ[List[a, b, d], x], NegativeIntegerQ[p], NonzeroQ[Plus[Times[4, Power[b, 3]], Times[27, Power[a, 2], d]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Plus[Times[-27, a, Power[d, 2]], Times[3, Sqrt[3], d, Sqrt[Plus[Times[4, Power[b, 3], d], Times[27, Power[a, 2], Power[d, 2]]]]]], 3]]], Dist[Times[1, Power[Times[Power[3, Times[3, p]], Power[d, Times[2, p]]], -1]], Int[Times[Power[Plus[Times[Plus[Times[6, b, d], Times[-1, Power[2, Times[1, Power[3, -1]]], Power[r, 2]]], Power[Times[Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[Times[Plus[Times[6, Plus[1, Times[I, Sqrt[3]]], b, d], Times[-1, Power[2, Times[1, Power[3, -1]]], Plus[1, Times[-1, I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[-1, 3, d, x]], p], Power[Plus[Times[Plus[Times[6, Plus[1, Times[-1, I, Sqrt[3]]], b, d], Times[-1, Power[2, Times[1, Power[3, -1]]], Plus[1, Times[I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[-1, 3, d, x]], p]], x], x]], And[FreeQ[List[a, b, d], x], NegativeIntegerQ[p], NonzeroQ[Plus[Times[4, Power[b, 3]], Times[27, Power[a, 2], d]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, x], Times[d, Power[x, 3]]], p], Power[Times[Power[Plus[Times[3, a], Times[-1, b, x]], p], Power[Plus[Times[3, a], Times[2, b, x]], Times[2, p]]], -1]], Int[Times[Power[Plus[Times[3, a], Times[-1, b, x]], p], Power[Plus[Times[3, a], Times[2, b, x]], Times[2, p]]], x], x], And[FreeQ[List[a, b, d, p], x], Not[IntegerQ[p]], ZeroQ[Plus[Times[4, Power[b, 3]], Times[27, Power[a, 2], d]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, NonfreeFactors[Factor[Plus[a, Times[b, x], Times[d, Power[x, 3]]]], x]]], Condition[Dist[Times[Power[Plus[a, Times[b, x], Times[d, Power[x, 3]]], p], Power[DistributeDegree[u, p], -1]], Int[DistributeDegree[u, p], x], x], ProductQ[u]]], And[FreeQ[List[a, b, d, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[Times[4, Power[b, 3]], Times[27, Power[a, 2], d]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Plus[Times[-27, a, Power[d, 2]], Times[3, Sqrt[3], d, Sqrt[Plus[Times[4, Power[b, 3], d], Times[27, Power[a, 2], Power[d, 2]]]]]], 3]]], Dist[Times[Power[Plus[a, Times[b, x], Times[d, Power[x, 3]]], p], Power[Times[Power[Plus[Times[Plus[Times[6, b, d], Times[-1, Power[2, Times[1, Power[3, -1]]], Power[r, 2]]], Power[Times[Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[Times[Plus[Times[6, Plus[1, Times[I, Sqrt[3]]], b, d], Times[-1, Power[2, Times[1, Power[3, -1]]], Plus[1, Times[-1, I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[-1, 3, d, x]], p], Power[Plus[Times[Plus[Times[6, Plus[1, Times[-1, I, Sqrt[3]]], b, d], Times[-1, Power[2, Times[1, Power[3, -1]]], Plus[1, Times[I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[-1, 3, d, x]], p]], -1]], Int[Times[Power[Plus[Times[Plus[Times[6, b, d], Times[-1, Power[2, Times[1, Power[3, -1]]], Power[r, 2]]], Power[Times[Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[Times[Plus[Times[6, Plus[1, Times[I, Sqrt[3]]], b, d], Times[-1, Power[2, Times[1, Power[3, -1]]], Plus[1, Times[-1, I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[-1, 3, d, x]], p], Power[Plus[Times[Plus[Times[6, Plus[1, Times[-1, I, Sqrt[3]]], b, d], Times[-1, Power[2, Times[1, Power[3, -1]]], Plus[1, Times[I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[-1, 3, d, x]], p]], x], x]], And[FreeQ[List[a, b, d, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[Times[4, Power[b, 3]], Times[27, Power[a, 2], d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[3, Times[3, p]], Power[a, Times[2, p]]], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[Times[3, a], Times[-1, b, x]], p], Power[Plus[Times[3, a], Times[2, b, x]], Times[2, p]]], x], x], And[FreeQ[List[a, b, d, e, f, m], x], IntegerQ[p], ZeroQ[Plus[Times[4, Power[b, 3]], Times[27, Power[a, 2], d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[a, Times[b, x], Times[d, Power[x, 3]]], p]], x], x], And[FreeQ[List[a, b, d, e, f, m], x], PositiveIntegerQ[p], NonzeroQ[Plus[Times[4, Power[b, 3]], Times[27, Power[a, 2], d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, Factor[Plus[a, Times[b, x], Times[d, Power[x, 3]]]]]], Condition[Dist[Power[FreeFactors[u, x], p], Int[Times[Power[Plus[e, Times[f, x]], m], DistributeDegree[NonfreeFactors[u, x], p]], x], x], ProductQ[NonfreeFactors[u, x]]]], And[FreeQ[List[a, b, d, e, f, m], x], NegativeIntegerQ[p], NonzeroQ[Plus[Times[4, Power[b, 3]], Times[27, Power[a, 2], d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Plus[Times[-27, a, Power[d, 2]], Times[3, Sqrt[3], d, Sqrt[Plus[Times[4, Power[b, 3], d], Times[27, Power[a, 2], Power[d, 2]]]]]], 3]]], Dist[Times[1, Power[Times[Power[3, Times[3, p]], Power[d, Times[2, p]]], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[Times[Plus[Times[6, b, d], Times[-1, Power[2, Times[1, Power[3, -1]]], Power[r, 2]]], Power[Times[Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[Times[Plus[Times[6, Plus[1, Times[I, Sqrt[3]]], b, d], Times[-1, Power[2, Times[1, Power[3, -1]]], Plus[1, Times[-1, I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[-1, 3, d, x]], p], Power[Plus[Times[Plus[Times[6, Plus[1, Times[-1, I, Sqrt[3]]], b, d], Times[-1, Power[2, Times[1, Power[3, -1]]], Plus[1, Times[I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[-1, 3, d, x]], p]], x], x]], And[FreeQ[List[a, b, d, e, f, m], x], NegativeIntegerQ[p], NonzeroQ[Plus[Times[4, Power[b, 3]], Times[27, Power[a, 2], d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, x], Times[d, Power[x, 3]]], p], Power[Times[Power[Plus[Times[3, a], Times[-1, b, x]], p], Power[Plus[Times[3, a], Times[2, b, x]], Times[2, p]]], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[Times[3, a], Times[-1, b, x]], p], Power[Plus[Times[3, a], Times[2, b, x]], Times[2, p]]], x], x], And[FreeQ[List[a, b, d, e, f, m, p], x], Not[IntegerQ[p]], ZeroQ[Plus[Times[4, Power[b, 3]], Times[27, Power[a, 2], d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, NonfreeFactors[Factor[Plus[a, Times[b, x], Times[d, Power[x, 3]]]], x]]], Condition[Dist[Times[Power[Plus[a, Times[b, x], Times[d, Power[x, 3]]], p], Power[DistributeDegree[u, p], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], DistributeDegree[u, p]], x], x], ProductQ[u]]], And[FreeQ[List[a, b, d, e, f, m, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[Times[4, Power[b, 3]], Times[27, Power[a, 2], d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Plus[Times[-27, a, Power[d, 2]], Times[3, Sqrt[3], d, Sqrt[Plus[Times[4, Power[b, 3], d], Times[27, Power[a, 2], Power[d, 2]]]]]], 3]]], Dist[Times[Power[Plus[a, Times[b, x], Times[d, Power[x, 3]]], p], Power[Times[Power[Plus[Times[Plus[Times[6, b, d], Times[-1, Power[2, Times[1, Power[3, -1]]], Power[r, 2]]], Power[Times[Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[Times[Plus[Times[6, Plus[1, Times[I, Sqrt[3]]], b, d], Times[-1, Power[2, Times[1, Power[3, -1]]], Plus[1, Times[-1, I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[-1, 3, d, x]], p], Power[Plus[Times[Plus[Times[6, Plus[1, Times[-1, I, Sqrt[3]]], b, d], Times[-1, Power[2, Times[1, Power[3, -1]]], Plus[1, Times[I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[-1, 3, d, x]], p]], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[Times[Plus[Times[6, b, d], Times[-1, Power[2, Times[1, Power[3, -1]]], Power[r, 2]]], Power[Times[Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[Times[Plus[Times[6, Plus[1, Times[I, Sqrt[3]]], b, d], Times[-1, Power[2, Times[1, Power[3, -1]]], Plus[1, Times[-1, I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[-1, 3, d, x]], p], Power[Plus[Times[Plus[Times[6, Plus[1, Times[-1, I, Sqrt[3]]], b, d], Times[-1, Power[2, Times[1, Power[3, -1]]], Plus[1, Times[I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[-1, 3, d, x]], p]], x], x]], And[FreeQ[List[a, b, d, e, f, m, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[Times[4, Power[b, 3]], Times[27, Power[a, 2], d]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[Times[Power[3, Times[3, p]], Power[d, Times[2, p]]], -1], Int[Times[Power[Plus[c, Times[-1, 3, d, x]], p], Power[Plus[Times[2, c], Times[3, d, x]], Times[2, p]]], x], x]], And[FreeQ[List[a, c, d], x], IntegerQ[p], ZeroQ[Plus[Times[4, Power[c, 3]], Times[27, a, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandToSum[Power[Plus[a, Times[c, Power[x, 2]], Times[d, Power[x, 3]]], p], x], x], And[FreeQ[List[a, c, d], x], PositiveIntegerQ[p], NonzeroQ[Plus[Times[4, Power[c, 3]], Times[27, a, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, Factor[Plus[a, Times[c, Power[x, 2]], Times[d, Power[x, 3]]]]]], Condition[Dist[Power[FreeFactors[u, x], p], Int[DistributeDegree[NonfreeFactors[u, x], p], x], x], ProductQ[NonfreeFactors[u, x]]]], And[FreeQ[List[a, c, d], x], NegativeIntegerQ[p], NonzeroQ[Plus[Times[4, Power[c, 3]], Times[27, a, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Plus[Times[-2, Power[c, 3]], Times[-1, 27, a, Power[d, 2]], Times[3, Sqrt[3], d, Sqrt[Plus[Times[4, a, Power[c, 3]], Times[27, Power[a, 2], Power[d, 2]]]]]], 3]]], Dist[Times[1, Power[Times[Power[3, Times[3, p]], Power[d, Times[2, p]]], -1]], Int[Times[Power[Plus[c, Times[-1, Plus[Times[2, Power[c, 2]], Times[Power[2, Times[1, Power[3, -1]]], Power[r, 2]]], Power[Times[Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[c, Times[Plus[Times[2, Plus[1, Times[I, Sqrt[3]]], Power[c, 2]], Times[Power[2, Times[1, Power[3, -1]]], Plus[1, Times[-1, I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[c, Times[Plus[Times[2, Plus[1, Times[-1, I, Sqrt[3]]], Power[c, 2]], Times[Power[2, Times[1, Power[3, -1]]], Plus[1, Times[I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p]], x], x]], And[FreeQ[List[a, c, d], x], NegativeIntegerQ[p], NonzeroQ[Plus[Times[4, Power[c, 3]], Times[27, a, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[c, Power[x, 2]], Times[d, Power[x, 3]]], p], Power[Times[Power[Plus[c, Times[-1, 3, d, x]], p], Power[Plus[Times[2, c], Times[3, d, x]], Times[2, p]]], -1]], Int[Times[Power[Plus[c, Times[-1, 3, d, x]], p], Power[Plus[Times[2, c], Times[3, d, x]], Times[2, p]]], x], x], And[FreeQ[List[a, c, d, p], x], Not[IntegerQ[p]], ZeroQ[Plus[Times[4, Power[c, 3]], Times[27, a, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, NonfreeFactors[Factor[Plus[a, Times[c, Power[x, 2]], Times[d, Power[x, 3]]]], x]]], Condition[Dist[Times[Power[Plus[a, Times[c, Power[x, 2]], Times[d, Power[x, 3]]], p], Power[DistributeDegree[u, p], -1]], Int[DistributeDegree[u, p], x], x], ProductQ[u]]], And[FreeQ[List[a, c, d, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[Times[4, Power[c, 3]], Times[27, a, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Plus[Times[-2, Power[c, 3]], Times[-1, 27, a, Power[d, 2]], Times[3, Sqrt[3], d, Sqrt[Plus[Times[4, a, Power[c, 3]], Times[27, Power[a, 2], Power[d, 2]]]]]], 3]]], Dist[Times[Power[Plus[a, Times[c, Power[x, 2]], Times[d, Power[x, 3]]], p], Power[Times[Power[Plus[c, Times[-1, Plus[Times[2, Power[c, 2]], Times[Power[2, Times[1, Power[3, -1]]], Power[r, 2]]], Power[Times[Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[c, Times[Plus[Times[2, Plus[1, Times[I, Sqrt[3]]], Power[c, 2]], Times[Power[2, Times[1, Power[3, -1]]], Plus[1, Times[-1, I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[c, Times[Plus[Times[2, Plus[1, Times[-1, I, Sqrt[3]]], Power[c, 2]], Times[Power[2, Times[1, Power[3, -1]]], Plus[1, Times[I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p]], -1]], Int[Times[Power[Plus[c, Times[-1, Plus[Times[2, Power[c, 2]], Times[Power[2, Times[1, Power[3, -1]]], Power[r, 2]]], Power[Times[Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[c, Times[Plus[Times[2, Plus[1, Times[I, Sqrt[3]]], Power[c, 2]], Times[Power[2, Times[1, Power[3, -1]]], Plus[1, Times[-1, I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[c, Times[Plus[Times[2, Plus[1, Times[-1, I, Sqrt[3]]], Power[c, 2]], Times[Power[2, Times[1, Power[3, -1]]], Plus[1, Times[I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p]], x], x]], And[FreeQ[List[a, c, d, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[Times[4, Power[c, 3]], Times[27, a, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[Times[Power[3, Times[3, p]], Power[d, Times[2, p]]], -1], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[c, Times[-1, 3, d, x]], p], Power[Plus[Times[2, c], Times[3, d, x]], Times[2, p]]], x], x]], And[FreeQ[List[a, c, d, e, f, m], x], IntegerQ[p], ZeroQ[Plus[Times[4, Power[c, 3]], Times[27, a, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[a, Times[c, Power[x, 2]], Times[d, Power[x, 3]]], p]], x], x], And[FreeQ[List[a, c, d, e, f, m], x], PositiveIntegerQ[p], NonzeroQ[Plus[Times[4, Power[c, 3]], Times[27, a, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, Factor[Plus[a, Times[c, Power[x, 2]], Times[d, Power[x, 3]]]]]], Condition[Dist[Power[FreeFactors[u, x], p], Int[Times[Power[Plus[e, Times[f, x]], m], DistributeDegree[NonfreeFactors[u, x], p]], x], x], ProductQ[NonfreeFactors[u, x]]]], And[FreeQ[List[a, c, d, e, f, m], x], NegativeIntegerQ[p], NonzeroQ[Plus[Times[4, Power[c, 3]], Times[27, a, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Plus[Times[-2, Power[c, 3]], Times[-1, 27, a, Power[d, 2]], Times[3, Sqrt[3], d, Sqrt[Plus[Times[4, a, Power[c, 3]], Times[27, Power[a, 2], Power[d, 2]]]]]], 3]]], Dist[Times[1, Power[Times[Power[3, Times[3, p]], Power[d, Times[2, p]]], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[c, Times[-1, Plus[Times[2, Power[c, 2]], Times[Power[2, Times[1, Power[3, -1]]], Power[r, 2]]], Power[Times[Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[c, Times[Plus[Times[2, Plus[1, Times[I, Sqrt[3]]], Power[c, 2]], Times[Power[2, Times[1, Power[3, -1]]], Plus[1, Times[-1, I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[c, Times[Plus[Times[2, Plus[1, Times[-1, I, Sqrt[3]]], Power[c, 2]], Times[Power[2, Times[1, Power[3, -1]]], Plus[1, Times[I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p]], x], x]], And[FreeQ[List[a, c, d, e, f, m], x], NegativeIntegerQ[p], NonzeroQ[Plus[Times[4, Power[c, 3]], Times[27, a, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[c, Power[x, 2]], Times[d, Power[x, 3]]], p], Power[Times[Power[Plus[c, Times[-1, 3, d, x]], p], Power[Plus[Times[2, c], Times[3, d, x]], Times[2, p]]], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[c, Times[-1, 3, d, x]], p], Power[Plus[Times[2, c], Times[3, d, x]], Times[2, p]]], x], x], And[FreeQ[List[a, c, d, e, f, m, p], x], Not[IntegerQ[p]], ZeroQ[Plus[Times[4, Power[c, 3]], Times[27, a, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, NonfreeFactors[Factor[Plus[a, Times[c, Power[x, 2]], Times[d, Power[x, 3]]]], x]]], Condition[Dist[Times[Power[Plus[a, Times[c, Power[x, 2]], Times[d, Power[x, 3]]], p], Power[DistributeDegree[u, p], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], DistributeDegree[u, p]], x], x], ProductQ[u]]], And[FreeQ[List[a, c, d, e, f, m, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[Times[4, Power[c, 3]], Times[27, a, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Plus[Times[-2, Power[c, 3]], Times[-1, 27, a, Power[d, 2]], Times[3, Sqrt[3], d, Sqrt[Plus[Times[4, a, Power[c, 3]], Times[27, Power[a, 2], Power[d, 2]]]]]], 3]]], Dist[Times[Power[Plus[a, Times[c, Power[x, 2]], Times[d, Power[x, 3]]], p], Power[Times[Power[Plus[c, Times[-1, Plus[Times[2, Power[c, 2]], Times[Power[2, Times[1, Power[3, -1]]], Power[r, 2]]], Power[Times[Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[c, Times[Plus[Times[2, Plus[1, Times[I, Sqrt[3]]], Power[c, 2]], Times[Power[2, Times[1, Power[3, -1]]], Plus[1, Times[-1, I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[c, Times[Plus[Times[2, Plus[1, Times[-1, I, Sqrt[3]]], Power[c, 2]], Times[Power[2, Times[1, Power[3, -1]]], Plus[1, Times[I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p]], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[c, Times[-1, Plus[Times[2, Power[c, 2]], Times[Power[2, Times[1, Power[3, -1]]], Power[r, 2]]], Power[Times[Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[c, Times[Plus[Times[2, Plus[1, Times[I, Sqrt[3]]], Power[c, 2]], Times[Power[2, Times[1, Power[3, -1]]], Plus[1, Times[-1, I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[c, Times[Plus[Times[2, Plus[1, Times[-1, I, Sqrt[3]]], Power[c, 2]], Times[Power[2, Times[1, Power[3, -1]]], Plus[1, Times[I, Sqrt[3]]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p]], x], x]], And[FreeQ[List[a, c, d, e, f, m, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[Times[4, Power[c, 3]], Times[27, a, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[3, p], Power[b, p], Power[c, p]], -1]], Int[Power[Plus[b, Times[c, x]], Times[3, p]], x], x], And[FreeQ[List[a, b, c, d], x], IntegerQ[p], ZeroQ[Plus[Power[c, 2], Times[-1, 3, b, d]]], ZeroQ[Plus[Power[b, 2], Times[-1, 3, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[3, p], Power[b, p], Power[c, p]], -1]], Subst[Int[Power[Plus[Times[3, a, b, c], Times[-1, Power[b, 3]], Times[Power[c, 3], Power[x, 3]]], p], x], x, Plus[x, Times[c, Power[Times[3, d], -1]]]], x], And[FreeQ[List[a, b, c, d], x], IntegerQ[p], ZeroQ[Plus[Power[c, 2], Times[-1, 3, b, d]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 3, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Plus[Power[c, 3], Times[-1, 3, b, c, d]], 3]]], Dist[Times[1, Power[Times[Power[3, p], Power[b, p], Power[c, p]], -1]], Int[Times[Power[Plus[b, Times[Plus[c, Times[-1, r]], x]], p], Power[Plus[b, Times[Plus[c, Times[Plus[1, Times[-1, I, Sqrt[3]]], r, Power[2, -1]]], x]], p], Power[Plus[b, Times[Plus[c, Times[Plus[1, Times[I, Sqrt[3]]], r, Power[2, -1]]], x]], p]], x], x]], And[FreeQ[List[a, b, c, d], x], IntegerQ[p], NonzeroQ[Plus[Power[c, 2], Times[-1, 3, b, d]]], ZeroQ[Plus[Power[b, 2], Times[-1, 3, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandToSum[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[d, Power[x, 3]]], p], x], x], And[FreeQ[List[a, b, c, d], x], PositiveIntegerQ[p], NonzeroQ[Plus[Power[c, 2], Times[-1, 3, b, d]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 3, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, Factor[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[d, Power[x, 3]]]]]], Condition[Dist[Power[FreeFactors[u, x], p], Int[DistributeDegree[NonfreeFactors[u, x], p], x], x], ProductQ[NonfreeFactors[u, x]]]], And[FreeQ[List[a, b, c, d], x], NegativeIntegerQ[p], NonzeroQ[Plus[Power[c, 2], Times[-1, 3, b, d]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 3, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[3, Times[3, p]], Power[d, Times[2, p]]], -1]], Subst[Int[Power[Plus[Times[2, Power[c, 3]], Times[-1, 9, b, c, d], Times[27, a, Power[d, 2]], Times[-1, 9, d, Plus[Power[c, 2], Times[-1, 3, b, d]], x], Times[27, Power[d, 3], Power[x, 3]]], p], x], x, Plus[x, Times[c, Power[Times[3, d], -1]]]], x], And[FreeQ[List[a, b, c, d], x], NegativeIntegerQ[p], NonzeroQ[Plus[Power[c, 2], Times[-1, 3, b, d]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 3, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[d, Power[x, 3]]], p], Power[Power[Plus[b, Times[c, x]], Times[3, p]], -1]], Int[Power[Plus[b, Times[c, x]], Times[3, p]], x], x], And[FreeQ[List[a, b, c, d, p], x], Not[IntegerQ[p]], ZeroQ[Plus[Power[c, 2], Times[-1, 3, b, d]]], ZeroQ[Plus[Power[b, 2], Times[-1, 3, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Plus[Power[b, 3], Times[-1, 3, a, b, c]], 3]]], Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[d, Power[x, 3]]], p], Power[Times[Power[Plus[b, Times[-1, r], Times[c, x]], p], Power[Plus[b, Times[Plus[1, Times[-1, I, Sqrt[3]]], r, Power[2, -1]], Times[c, x]], p], Power[Plus[b, Times[Plus[1, Times[I, Sqrt[3]]], r, Power[2, -1]], Times[c, x]], p]], -1]], Int[Times[Power[Plus[b, Times[-1, r], Times[c, x]], p], Power[Plus[b, Times[Plus[1, Times[-1, I, Sqrt[3]]], r, Power[2, -1]], Times[c, x]], p], Power[Plus[b, Times[Plus[1, Times[I, Sqrt[3]]], r, Power[2, -1]], Times[c, x]], p]], x], x]], And[FreeQ[List[a, b, c, d, p], x], Not[IntegerQ[p]], ZeroQ[Plus[Power[c, 2], Times[-1, 3, b, d]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 3, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Plus[Power[c, 3], Times[-1, 3, b, c, d]], 3]]], Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[d, Power[x, 3]]], p], Power[Times[Power[Plus[b, Times[Plus[c, Times[-1, r]], x]], p], Power[Plus[b, Times[Plus[c, Times[Plus[1, Times[-1, I, Sqrt[3]]], r, Power[2, -1]]], x]], p], Power[Plus[b, Times[Plus[c, Times[Plus[1, Times[I, Sqrt[3]]], r, Power[2, -1]]], x]], p]], -1]], Int[Times[Power[Plus[b, Times[Plus[c, Times[-1, r]], x]], p], Power[Plus[b, Times[Plus[c, Times[Plus[1, Times[-1, I, Sqrt[3]]], r, Power[2, -1]]], x]], p], Power[Plus[b, Times[Plus[c, Times[Plus[1, Times[I, Sqrt[3]]], r, Power[2, -1]]], x]], p]], x], x]], And[FreeQ[List[a, b, c, d, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[Power[c, 2], Times[-1, 3, b, d]]], ZeroQ[Plus[Power[b, 2], Times[-1, 3, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, NonfreeFactors[Factor[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[d, Power[x, 3]]]], x]]], Condition[Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[d, Power[x, 3]]], p], Power[DistributeDegree[u, p], -1]], Int[DistributeDegree[u, p], x], x], ProductQ[u]]], And[FreeQ[List[a, b, c, d, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[Power[c, 2], Times[-1, 3, b, d]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 3, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Plus[Times[-2, Power[c, 3]], Times[9, b, c, d], Times[-1, 27, a, Power[d, 2]], Times[3, Sqrt[3], d, Sqrt[Plus[Times[-1, Power[b, 2], Power[c, 2]], Times[4, a, Power[c, 3]], Times[4, Power[b, 3], d], Times[-1, 18, a, b, c, d], Times[27, Power[a, 2], Power[d, 2]]]]]], 3]]], Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[d, Power[x, 3]]], p], Power[Times[Power[Plus[c, Times[-1, Plus[Times[2, Power[c, 2]], Times[-1, 6, b, d], Times[Power[2, Times[1, Power[3, -1]]], Power[r, 2]]], Power[Times[Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[c, Times[Plus[Times[2, Plus[1, Times[I, Sqrt[3]]], Power[c, 2]], Times[-1, 6, Plus[1, Times[I, Sqrt[3]]], b, d], Times[-1, I, Power[2, Times[1, Power[3, -1]]], Plus[I, Sqrt[3]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[c, Times[Plus[Times[2, Plus[1, Times[-1, I, Sqrt[3]]], Power[c, 2]], Times[-1, 6, Plus[1, Times[-1, I, Sqrt[3]]], b, d], Times[I, Power[2, Times[1, Power[3, -1]]], Plus[Times[-1, I], Sqrt[3]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p]], -1]], Int[Times[Power[Plus[c, Times[-1, Plus[Times[2, Power[c, 2]], Times[-1, 6, b, d], Times[Power[2, Times[1, Power[3, -1]]], Power[r, 2]]], Power[Times[Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[c, Times[Plus[Times[2, Plus[1, Times[I, Sqrt[3]]], Power[c, 2]], Times[-1, 6, Plus[1, Times[I, Sqrt[3]]], b, d], Times[-1, I, Power[2, Times[1, Power[3, -1]]], Plus[I, Sqrt[3]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[c, Times[Plus[Times[2, Plus[1, Times[-1, I, Sqrt[3]]], Power[c, 2]], Times[-1, 6, Plus[1, Times[-1, I, Sqrt[3]]], b, d], Times[I, Power[2, Times[1, Power[3, -1]]], Plus[Times[-1, I], Sqrt[3]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p]], x], x]], And[FreeQ[List[a, b, c, d, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[Power[c, 2], Times[-1, 3, b, d]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 3, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Pattern[u, Blank[]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[ExpandToSum[u, x], p], x], And[FreeQ[p, x], PolyQ[u, x, 3], Not[CubicMatchQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[3, p], Power[b, p], Power[c, p]], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[b, Times[c, x]], Times[3, p]]], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], IntegerQ[p], ZeroQ[Plus[Power[c, 2], Times[-1, 3, b, d]]], ZeroQ[Plus[Power[b, 2], Times[-1, 3, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Plus[Power[b, 3], Times[-1, 3, a, b, c]], 3]]], Dist[Times[1, Power[Times[Power[3, p], Power[b, p], Power[c, p]], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[b, Times[-1, r], Times[c, x]], p], Power[Plus[b, Times[Plus[1, Times[-1, I, Sqrt[3]]], r, Power[2, -1]], Times[c, x]], p], Power[Plus[b, Times[Plus[1, Times[I, Sqrt[3]]], r, Power[2, -1]], Times[c, x]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, f, m], x], IntegerQ[p], ZeroQ[Plus[Power[c, 2], Times[-1, 3, b, d]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 3, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Plus[Power[c, 3], Times[-1, 3, b, c, d]], 3]]], Dist[Times[1, Power[Times[Power[3, p], Power[b, p], Power[c, p]], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[b, Times[Plus[c, Times[-1, r]], x]], p], Power[Plus[b, Times[Plus[c, Times[Plus[1, Times[-1, I, Sqrt[3]]], r, Power[2, -1]]], x]], p], Power[Plus[b, Times[Plus[c, Times[Plus[1, Times[I, Sqrt[3]]], r, Power[2, -1]]], x]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, f, m], x], IntegerQ[p], NonzeroQ[Plus[Power[c, 2], Times[-1, 3, b, d]]], ZeroQ[Plus[Power[b, 2], Times[-1, 3, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[d, Power[x, 3]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], PositiveIntegerQ[p], NonzeroQ[Plus[Power[c, 2], Times[-1, 3, b, d]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 3, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, Factor[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[d, Power[x, 3]]]]]], Condition[Dist[Power[FreeFactors[u, x], p], Int[Times[Power[Plus[e, Times[f, x]], m], DistributeDegree[NonfreeFactors[u, x], p]], x], x], ProductQ[NonfreeFactors[u, x]]]], And[FreeQ[List[a, b, c, d, e, f, m], x], NegativeIntegerQ[p], NonzeroQ[Plus[Power[c, 2], Times[-1, 3, b, d]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 3, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[3, Times[3, p]], Power[d, Times[2, p]]], -1]], Subst[Int[Power[Plus[Times[2, Power[c, 3]], Times[-1, 9, b, c, d], Times[27, a, Power[d, 2]], Times[-1, 9, d, Plus[Power[c, 2], Times[-1, 3, b, d]], x], Times[27, Power[d, 3], Power[x, 3]]], p], x], x, Plus[x, Times[c, Power[Times[3, d], -1]]]], x], And[FreeQ[List[a, b, c, d, e, f, m], x], NegativeIntegerQ[p], NonzeroQ[Plus[Power[c, 2], Times[-1, 3, b, d]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 3, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[d, Power[x, 3]]], p], Power[Power[Plus[b, Times[c, x]], Times[3, p]], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[b, Times[c, x]], Times[3, p]]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, p], x], Not[IntegerQ[p]], ZeroQ[Plus[Power[c, 2], Times[-1, 3, b, d]]], ZeroQ[Plus[Power[b, 2], Times[-1, 3, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Plus[Power[b, 3], Times[-1, 3, a, b, c]], 3]]], Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[d, Power[x, 3]]], p], Power[Times[Power[Plus[b, Times[-1, r], Times[c, x]], p], Power[Plus[b, Times[Plus[1, Times[-1, I, Sqrt[3]]], r, Power[2, -1]], Times[c, x]], p], Power[Plus[b, Times[Plus[1, Times[I, Sqrt[3]]], r, Power[2, -1]], Times[c, x]], p]], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[b, Times[-1, r], Times[c, x]], p], Power[Plus[b, Times[Plus[1, Times[-1, I, Sqrt[3]]], r, Power[2, -1]], Times[c, x]], p], Power[Plus[b, Times[Plus[1, Times[I, Sqrt[3]]], r, Power[2, -1]], Times[c, x]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, f, m, p], x], Not[IntegerQ[p]], ZeroQ[Plus[Power[c, 2], Times[-1, 3, b, d]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 3, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Plus[Power[c, 3], Times[-1, 3, b, c, d]], 3]]], Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[d, Power[x, 3]]], p], Power[Times[Power[Plus[b, Times[Plus[c, Times[-1, r]], x]], p], Power[Plus[b, Times[Plus[c, Times[Plus[1, Times[-1, I, Sqrt[3]]], r, Power[2, -1]]], x]], p], Power[Plus[b, Times[Plus[c, Times[Plus[1, Times[I, Sqrt[3]]], r, Power[2, -1]]], x]], p]], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[b, Times[Plus[c, Times[-1, r]], x]], p], Power[Plus[b, Times[Plus[c, Times[Plus[1, Times[-1, I, Sqrt[3]]], r, Power[2, -1]]], x]], p], Power[Plus[b, Times[Plus[c, Times[Plus[1, Times[I, Sqrt[3]]], r, Power[2, -1]]], x]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, f, m, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[Power[c, 2], Times[-1, 3, b, d]]], ZeroQ[Plus[Power[b, 2], Times[-1, 3, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, NonfreeFactors[Factor[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[d, Power[x, 3]]]], x]]], Condition[Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[d, Power[x, 3]]], p], Power[DistributeDegree[u, p], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], DistributeDegree[u, p]], x], x], ProductQ[u]]], And[FreeQ[List[a, b, c, d, e, f, m, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[Power[c, 2], Times[-1, 3, b, d]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 3, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Plus[Times[-2, Power[c, 3]], Times[9, b, c, d], Times[-1, 27, a, Power[d, 2]], Times[3, Sqrt[3], d, Sqrt[Plus[Times[-1, Power[b, 2], Power[c, 2]], Times[4, a, Power[c, 3]], Times[4, Power[b, 3], d], Times[-1, 18, a, b, c, d], Times[27, Power[a, 2], Power[d, 2]]]]]], 3]]], Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[d, Power[x, 3]]], p], Power[Times[Power[Plus[c, Times[-1, Plus[Times[2, Power[c, 2]], Times[-1, 6, b, d], Times[Power[2, Times[1, Power[3, -1]]], Power[r, 2]]], Power[Times[Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[c, Times[Plus[Times[2, Plus[1, Times[I, Sqrt[3]]], Power[c, 2]], Times[-1, 6, Plus[1, Times[I, Sqrt[3]]], b, d], Times[-1, I, Power[2, Times[1, Power[3, -1]]], Plus[I, Sqrt[3]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[c, Times[Plus[Times[2, Plus[1, Times[-1, I, Sqrt[3]]], Power[c, 2]], Times[-1, 6, Plus[1, Times[-1, I, Sqrt[3]]], b, d], Times[I, Power[2, Times[1, Power[3, -1]]], Plus[Times[-1, I], Sqrt[3]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p]], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[c, Times[-1, Plus[Times[2, Power[c, 2]], Times[-1, 6, b, d], Times[Power[2, Times[1, Power[3, -1]]], Power[r, 2]]], Power[Times[Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[c, Times[Plus[Times[2, Plus[1, Times[I, Sqrt[3]]], Power[c, 2]], Times[-1, 6, Plus[1, Times[I, Sqrt[3]]], b, d], Times[-1, I, Power[2, Times[1, Power[3, -1]]], Plus[I, Sqrt[3]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p], Power[Plus[c, Times[Plus[Times[2, Plus[1, Times[-1, I, Sqrt[3]]], Power[c, 2]], Times[-1, 6, Plus[1, Times[-1, I, Sqrt[3]]], b, d], Times[I, Power[2, Times[1, Power[3, -1]]], Plus[Times[-1, I], Sqrt[3]], Power[r, 2]]], Power[Times[2, Power[2, Times[2, Power[3, -1]]], r], -1]], Times[3, d, x]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, f, m, p], x], Not[IntegerQ[p]], NonzeroQ[Plus[Power[c, 2], Times[-1, 3, b, d]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 3, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Pattern[v, Blank[]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Power[ExpandToSum[v, x], p]], x], And[FreeQ[List[m, p], x], LinearQ[u, x], PolyQ[v, x, 3], Not[And[LinearMatchQ[u, x], CubicMatchQ[v, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[a, f, Power[Times[d, Rt[Times[Power[a, 2], Plus[Times[2, a], Times[-1, c]]], 2]], -1], ArcTan[Times[Plus[Times[a, b], Times[Plus[Times[4, Power[a, 2]], Power[b, 2], Times[-1, 2, a, c]], x], Times[a, b, Power[x, 2]]], Power[Times[2, Rt[Times[Power[a, 2], Plus[Times[2, a], Times[-1, c]]], 2], Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[b, Power[x, 3]], Times[a, Power[x, 4]]]]], -1]]]], x], And[FreeQ[List[a, b, c, d, e, f, g], x], ZeroQ[Plus[Times[b, d], Times[-1, a, e]]], ZeroQ[Plus[f, g]], PosQ[Times[Power[a, 2], Plus[Times[2, a], Times[-1, c]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]], Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[a, f, Power[Times[d, Rt[Times[-1, Power[a, 2], Plus[Times[2, a], Times[-1, c]]], 2]], -1], ArcTanh[Times[Plus[Times[a, b], Times[Plus[Times[4, Power[a, 2]], Power[b, 2], Times[-1, 2, a, c]], x], Times[a, b, Power[x, 2]]], Power[Times[2, Rt[Times[-1, Power[a, 2], Plus[Times[2, a], Times[-1, c]]], 2], Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[b, Power[x, 3]], Times[a, Power[x, 4]]]]], -1]]]], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], ZeroQ[Plus[Times[b, d], Times[-1, a, e]]], ZeroQ[Plus[f, g]], NegQ[Times[Power[a, 2], Plus[Times[2, a], Times[-1, c]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Subst[Int[SimplifyIntegrand[Power[Plus[a, Times[Power[d, 4], Power[Times[256, Power[e, 3]], -1]], Times[-1, b, d, Power[Times[8, e], -1]], Times[Plus[c, Times[-1, 3, Power[d, 2], Power[Times[8, e], -1]]], Power[x, 2]], Times[e, Power[x, 4]]], p], x], x], x, Plus[Times[d, Power[Times[4, e], -1]], x]], And[FreeQ[List[a, b, c, d, e, p], x], ZeroQ[Plus[Power[d, 3], Times[-1, 4, c, d, e], Times[8, b, Power[e, 2]]]], UnsameQ[p, 2], UnsameQ[p, 3]]]], RuleDelayed[HoldPattern[Int[Power[Pattern[v, Blank[]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[a, Coefficient[v, x, 0]], Set[b, Coefficient[v, x, 1]], Set[c, Coefficient[v, x, 2]], Set[d, Coefficient[v, x, 3]], Set[e, Coefficient[v, x, 4]]], Condition[Subst[Int[SimplifyIntegrand[Power[Plus[a, Times[Power[d, 4], Power[Times[256, Power[e, 3]], -1]], Times[-1, b, d, Power[Times[8, e], -1]], Times[Plus[c, Times[-1, 3, Power[d, 2], Power[Times[8, e], -1]]], Power[x, 2]], Times[e, Power[x, 4]]], p], x], x], x, Plus[Times[d, Power[Times[4, e], -1]], x]], And[ZeroQ[Plus[Power[d, 3], Times[-1, 4, c, d, e], Times[8, b, Power[e, 2]]]], NonzeroQ[d]]]], And[FreeQ[p, x], PolynomialQ[v, x], Equal[Exponent[v, x], 4], UnsameQ[p, 2], UnsameQ[p, 3]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Subst[Int[SimplifyIntegrand[Times[ReplaceAll[u, Rule[x, Plus[Times[-1, d, Power[Times[4, e], -1]], x]]], Power[Plus[a, Times[Power[d, 4], Power[Times[256, Power[e, 3]], -1]], Times[-1, b, d, Power[Times[8, e], -1]], Times[Plus[c, Times[-1, 3, Power[d, 2], Power[Times[8, e], -1]]], Power[x, 2]], Times[e, Power[x, 4]]], p]], x], x], x, Plus[Times[d, Power[Times[4, e], -1]], x]], And[FreeQ[List[a, b, c, d, e, p], x], PolynomialQ[u, x], ZeroQ[Plus[Power[d, 3], Times[-1, 4, c, d, e], Times[8, b, Power[e, 2]]]], Not[PositiveIntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Pattern[v, Blank[]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[a, Coefficient[v, x, 0]], Set[b, Coefficient[v, x, 1]], Set[c, Coefficient[v, x, 2]], Set[d, Coefficient[v, x, 3]], Set[e, Coefficient[v, x, 4]]], Condition[Subst[Int[SimplifyIntegrand[Times[ReplaceAll[u, Rule[x, Plus[Times[-1, d, Power[Times[4, e], -1]], x]]], Power[Plus[a, Times[Power[d, 4], Power[Times[256, Power[e, 3]], -1]], Times[-1, b, d, Power[Times[8, e], -1]], Times[Plus[c, Times[-1, 3, Power[d, 2], Power[Times[8, e], -1]]], Power[x, 2]], Times[e, Power[x, 4]]], p]], x], x], x, Plus[Times[d, Power[Times[4, e], -1]], x]], And[ZeroQ[Plus[Power[d, 3], Times[-1, 4, c, d, e], Times[8, b, Power[e, 2]]]], NonzeroQ[d]]]], And[FreeQ[p, x], PolynomialQ[u, x], PolynomialQ[v, x], Equal[Exponent[v, x], 4], Not[PositiveIntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-16, Power[a, 2]], Subst[Int[Times[1, Power[Power[Plus[b, Times[-1, 4, a, x]], 2], -1], Power[Times[a, Plus[Times[-3, Power[b, 4]], Times[16, a, Power[b, 2], c], Times[-1, 64, Power[a, 2], b, d], Times[256, Power[a, 3], e], Times[-1, 32, Power[a, 2], Plus[Times[3, Power[b, 2]], Times[-1, 8, a, c]], Power[x, 2]], Times[256, Power[a, 4], Power[x, 4]]], Power[Power[Plus[b, Times[-1, 4, a, x]], 4], -1]], p]], x], x, Plus[Times[b, Power[Times[4, a], -1]], Times[1, Power[x, -1]]]], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Power[b, 3], Times[-1, 4, a, b, c], Times[8, Power[a, 2], d]]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Power[Pattern[v, Blank[]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[a, Coefficient[v, x, 0]], Set[b, Coefficient[v, x, 1]], Set[c, Coefficient[v, x, 2]], Set[d, Coefficient[v, x, 3]], Set[e, Coefficient[v, x, 4]]], Condition[Dist[Times[-16, Power[a, 2]], Subst[Int[Times[1, Power[Power[Plus[b, Times[-1, 4, a, x]], 2], -1], Power[Times[a, Plus[Times[-3, Power[b, 4]], Times[16, a, Power[b, 2], c], Times[-1, 64, Power[a, 2], b, d], Times[256, Power[a, 3], e], Times[-1, 32, Power[a, 2], Plus[Times[3, Power[b, 2]], Times[-1, 8, a, c]], Power[x, 2]], Times[256, Power[a, 4], Power[x, 4]]], Power[Power[Plus[b, Times[-1, 4, a, x]], 4], -1]], p]], x], x, Plus[Times[b, Power[Times[4, a], -1]], Times[1, Power[x, -1]]]], x], And[NonzeroQ[a], NonzeroQ[b], ZeroQ[Plus[Power[b, 3], Times[-1, 4, a, b, c], Times[8, Power[a, 2], d]]]]]], And[FreeQ[p, x], PolynomialQ[v, x], Equal[Exponent[v, x], 4], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[D, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Sqrt[Plus[Times[8, Power[a, 2]], Power[b, 2], Times[-1, 4, a, c]]]]], Plus[Dist[Times[1, Power[q, -1]], Int[Times[Plus[Times[b, A], Times[-1, 2, a, B], Times[2, a, D], Times[A, q], Times[Plus[Times[2, a, A], Times[-1, 2, a, C], Times[b, D], Times[D, q]], x]], Power[Plus[Times[2, a], Times[Plus[b, q], x], Times[2, a, Power[x, 2]]], -1]], x], x], Times[-1, Dist[Times[1, Power[q, -1]], Int[Times[Plus[Times[b, A], Times[-1, 2, a, B], Times[2, a, D], Times[-1, A, q], Times[Plus[Times[2, a, A], Times[-1, 2, a, C], Times[b, D], Times[-1, D, q]], x]], Power[Plus[Times[2, a], Times[Plus[b, Times[-1, q]], x], Times[2, a, Power[x, 2]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, A, B, C, D], x], ZeroQ[Plus[d, Times[-1, b]]], ZeroQ[Plus[e, Times[-1, a]]], SumQ[Factor[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[b, Power[x, 3]], Times[a, Power[x, 4]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[D, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Sqrt[Plus[Times[8, Power[a, 2]], Power[b, 2], Times[-1, 4, a, c]]]]], Plus[Dist[Times[1, Power[q, -1]], Int[Times[Plus[Times[b, A], Times[-1, 2, a, B], Times[2, a, D], Times[A, q], Times[Plus[Times[2, a, A], Times[b, D], Times[D, q]], x]], Power[Plus[Times[2, a], Times[Plus[b, q], x], Times[2, a, Power[x, 2]]], -1]], x], x], Times[-1, Dist[Times[1, Power[q, -1]], Int[Times[Plus[Times[b, A], Times[-1, 2, a, B], Times[2, a, D], Times[-1, A, q], Times[Plus[Times[2, a, A], Times[b, D], Times[-1, D, q]], x]], Power[Plus[Times[2, a], Times[Plus[b, Times[-1, q]], x], Times[2, a, Power[x, 2]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, A, B, D], x], ZeroQ[Plus[d, Times[-1, b]]], ZeroQ[Plus[e, Times[-1, a]]], SumQ[Factor[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[b, Power[x, 3]], Times[a, Power[x, 4]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[D, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Sqrt[Plus[Times[8, Power[a, 2]], Power[b, 2], Times[-1, 4, a, c]]]]], Plus[Dist[Times[1, Power[q, -1]], Int[Times[Power[x, m], Plus[Times[b, A], Times[-1, 2, a, B], Times[2, a, D], Times[A, q], Times[Plus[Times[2, a, A], Times[-1, 2, a, C], Times[b, D], Times[D, q]], x]], Power[Plus[Times[2, a], Times[Plus[b, q], x], Times[2, a, Power[x, 2]]], -1]], x], x], Times[-1, Dist[Times[1, Power[q, -1]], Int[Times[Power[x, m], Plus[Times[b, A], Times[-1, 2, a, B], Times[2, a, D], Times[-1, A, q], Times[Plus[Times[2, a, A], Times[-1, 2, a, C], Times[b, D], Times[-1, D, q]], x]], Power[Plus[Times[2, a], Times[Plus[b, Times[-1, q]], x], Times[2, a, Power[x, 2]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, A, B, C, D, m], x], ZeroQ[Plus[d, Times[-1, b]]], ZeroQ[Plus[e, Times[-1, a]]], SumQ[Factor[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[b, Power[x, 3]], Times[a, Power[x, 4]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[D, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Sqrt[Plus[Times[8, Power[a, 2]], Power[b, 2], Times[-1, 4, a, c]]]]], Plus[Dist[Times[1, Power[q, -1]], Int[Times[Power[x, m], Plus[Times[b, A], Times[-1, 2, a, B], Times[2, a, D], Times[A, q], Times[Plus[Times[2, a, A], Times[b, D], Times[D, q]], x]], Power[Plus[Times[2, a], Times[Plus[b, q], x], Times[2, a, Power[x, 2]]], -1]], x], x], Times[-1, Dist[Times[1, Power[q, -1]], Int[Times[Power[x, m], Plus[Times[b, A], Times[-1, 2, a, B], Times[2, a, D], Times[-1, A, q], Times[Plus[Times[2, a, A], Times[b, D], Times[-1, D, q]], x]], Power[Plus[Times[2, a], Times[Plus[b, Times[-1, q]], x], Times[2, a, Power[x, 2]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, A, B, D, m], x], ZeroQ[Plus[d, Times[-1, b]]], ZeroQ[Plus[e, Times[-1, a]]], SumQ[Factor[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[b, Power[x, 3]], Times[a, Power[x, 4]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[C, Plus[Times[2, e, Plus[Times[B, d], Times[-1, 4, A, e]]], Times[C, Plus[Power[d, 2], Times[-1, 4, c, e]]]]], 2]]], Plus[Simp[Times[-2, Power[C, 2], Power[q, -1], ArcTanh[Times[Plus[Times[C, d], Times[-1, B, e], Times[2, C, e, x]], Power[q, -1]]]], x], Simp[Times[2, Power[C, 2], Power[q, -1], ArcTanh[Times[C, Plus[Times[4, B, c, C], Times[-1, 3, Power[B, 2], d], Times[-1, 4, A, C, d], Times[12, A, B, e], Times[4, C, Plus[Times[2, c, C], Times[-1, B, d], Times[2, A, e]], x], Times[4, C, Plus[Times[2, C, d], Times[-1, B, e]], Power[x, 2]], Times[8, Power[C, 2], e, Power[x, 3]]], Power[Times[q, Plus[Power[B, 2], Times[-1, 4, A, C]]], -1]]]], x]]], And[FreeQ[List[a, b, c, d, e, A, B, C], x], ZeroQ[Plus[Times[Power[B, 2], d], Times[2, C, Plus[Times[b, C], Times[A, d]]], Times[-1, 2, B, Plus[Times[c, C], Times[2, A, e]]]]], ZeroQ[Plus[Times[2, Power[B, 2], c, C], Times[-1, 8, a, Power[C, 3]], Times[-1, Power[B, 3], d], Times[-1, 4, A, B, C, d], Times[4, A, Plus[Power[B, 2], Times[2, A, C]], e]]], PosQ[Times[C, Plus[Times[2, e, Plus[Times[B, d], Times[-1, 4, A, e]]], Times[C, Plus[Power[d, 2], Times[-1, 4, c, e]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[C, Plus[Times[-8, A, Power[e, 2]], Times[C, Plus[Power[d, 2], Times[-1, 4, c, e]]]]], 2]]], Plus[Simp[Times[-2, Power[C, 2], Power[q, -1], ArcTanh[Times[C, Plus[d, Times[2, e, x]], Power[q, -1]]]], x], Simp[Times[2, Power[C, 2], Power[q, -1], ArcTanh[Times[C, Plus[Times[A, d], Times[-1, 2, Plus[Times[c, C], Times[A, e]], x], Times[-1, 2, C, d, Power[x, 2]], Times[-1, 2, C, e, Power[x, 3]]], Power[Times[A, q], -1]]]], x]]], And[FreeQ[List[a, b, c, d, e, A, C], x], ZeroQ[Plus[Times[b, C], Times[A, d]]], ZeroQ[Plus[Times[a, Power[C, 2]], Times[-1, Power[A, 2], e]]], PosQ[Times[C, Plus[Times[-8, A, Power[e, 2]], Times[C, Plus[Power[d, 2], Times[-1, 4, c, e]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, C, Plus[Times[2, e, Plus[Times[B, d], Times[-1, 4, A, e]]], Times[C, Plus[Power[d, 2], Times[-1, 4, c, e]]]]], 2]]], Plus[Simp[Times[2, Power[C, 2], Power[q, -1], ArcTan[Times[Plus[Times[C, d], Times[-1, B, e], Times[2, C, e, x]], Power[q, -1]]]], x], Times[-1, Simp[Times[2, Power[C, 2], Power[q, -1], ArcTan[Times[C, Plus[Times[4, B, c, C], Times[-1, 3, Power[B, 2], d], Times[-1, 4, A, C, d], Times[12, A, B, e], Times[4, C, Plus[Times[2, c, C], Times[-1, B, d], Times[2, A, e]], x], Times[4, C, Plus[Times[2, C, d], Times[-1, B, e]], Power[x, 2]], Times[8, Power[C, 2], e, Power[x, 3]]], Power[Times[q, Plus[Power[B, 2], Times[-1, 4, A, C]]], -1]]]], x]]]], And[FreeQ[List[a, b, c, d, e, A, B, C], x], ZeroQ[Plus[Times[Power[B, 2], d], Times[2, C, Plus[Times[b, C], Times[A, d]]], Times[-1, 2, B, Plus[Times[c, C], Times[2, A, e]]]]], ZeroQ[Plus[Times[2, Power[B, 2], c, C], Times[-1, 8, a, Power[C, 3]], Times[-1, Power[B, 3], d], Times[-1, 4, A, B, C, d], Times[4, A, Plus[Power[B, 2], Times[2, A, C]], e]]], NegQ[Times[C, Plus[Times[2, e, Plus[Times[B, d], Times[-1, 4, A, e]]], Times[C, Plus[Power[d, 2], Times[-1, 4, c, e]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, C, Plus[Times[-8, A, Power[e, 2]], Times[C, Plus[Power[d, 2], Times[-1, 4, c, e]]]]], 2]]], Plus[Simp[Times[2, Power[C, 2], Power[q, -1], ArcTan[Times[Plus[Times[C, d], Times[2, C, e, x]], Power[q, -1]]]], x], Times[-1, Simp[Times[2, Power[C, 2], Power[q, -1], ArcTan[Times[-1, C, Plus[Times[-1, A, d], Times[2, Plus[Times[c, C], Times[A, e]], x], Times[2, C, d, Power[x, 2]], Times[2, C, e, Power[x, 3]]], Power[Times[A, q], -1]]]], x]]]], And[FreeQ[List[a, b, c, d, e, A, C], x], ZeroQ[Plus[Times[b, C], Times[A, d]]], ZeroQ[Plus[Times[a, Power[C, 2]], Times[-1, Power[A, 2], e]]], NegQ[Times[C, Plus[Times[-8, A, Power[e, 2]], Times[C, Plus[Power[d, 2], Times[-1, 4, c, e]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[D, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[D, Power[Times[4, e], -1], Log[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[d, Power[x, 3]], Times[e, Power[x, 4]]]]], x], Times[-1, Dist[Times[1, Power[Times[4, e], -1]], Int[Times[Plus[Times[b, D], Times[-1, 4, A, e], Times[2, Plus[Times[c, D], Times[-1, 2, B, e]], x], Times[Plus[Times[3, d, D], Times[-1, 4, C, e]], Power[x, 2]]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[d, Power[x, 3]], Times[e, Power[x, 4]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, A, B, C, D], x], ZeroQ[Plus[Times[4, d, Power[Plus[Times[c, D], Times[-1, 2, B, e]], 2]], Times[8, Plus[Times[3, d, D], Times[-1, 4, C, e]], Plus[Times[b, d, D], Times[-1, b, C, e], Times[-1, A, d, e]]], Times[-1, 4, Plus[Times[c, D], Times[-1, 2, B, e]], Plus[Times[3, c, d, D], Times[-1, 4, c, C, e], Times[2, b, D, e], Times[-1, 8, A, Power[e, 2]]]]]], ZeroQ[Plus[Times[8, d, Power[Plus[Times[c, D], Times[-1, 2, B, e]], 3]], Times[8, d, Plus[Times[b, D], Times[-1, 4, A, e]], Plus[Times[c, D], Times[-1, 2, B, e]], Plus[Times[3, d, D], Times[-1, 4, C, e]]], Times[8, a, Power[Plus[Times[3, d, D], Times[-1, 4, C, e]], 3]], Times[-1, 8, c, Power[Plus[Times[c, D], Times[-1, 2, B, e]], 2], Plus[Times[3, d, D], Times[-1, 4, C, e]]], Times[-1, 4, e, Plus[Times[b, D], Times[-1, 4, A, e]], Plus[Times[4, Power[Plus[Times[c, D], Times[-1, 2, B, e]], 2]], Times[2, Plus[Times[b, D], Times[-1, 4, A, e]], Plus[Times[3, d, D], Times[-1, 4, C, e]]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[D, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 3]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[D, Power[Times[4, e], -1], Log[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[d, Power[x, 3]], Times[e, Power[x, 4]]]]], x], Times[-1, Dist[Times[1, Power[Times[4, e], -1]], Int[Times[Plus[Times[b, D], Times[-1, 4, A, e], Times[2, Plus[Times[c, D], Times[-1, 2, B, e]], x], Times[Times[3, d, D], Power[x, 2]]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]], Times[d, Power[x, 3]], Times[e, Power[x, 4]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, A, B, D], x], ZeroQ[Plus[Times[Power[c, 2], d, Power[D, 2]], Times[2, Plus[Times[3, d, D], Times[-1, 4, C, e]], Plus[Times[b, d, D], Times[-1, b, C, e], Times[-1, A, d, e]]], Times[-1, c, D, Plus[Times[3, c, d, D], Times[-1, 4, c, C, e], Times[2, b, D, e], Times[-1, 8, A, Power[e, 2]]]]]], ZeroQ[Plus[Times[54, a, Power[d, 3], Power[D, 3]], Times[6, Power[d, 2], D, Plus[Times[b, D], Times[-1, 4, A, e]], Plus[Times[c, D], Times[-1, 2, B, e]]], Times[-1, 6, c, d, D, Power[Plus[Times[c, D], Times[-1, 2, B, e]], 2]], Times[2, d, Power[Plus[Times[c, D], Times[-1, 2, B, e]], 3]], Times[-1, e, Plus[Times[b, D], Times[-1, 4, A, e]], Plus[Times[6, d, D, Plus[Times[b, D], Times[-1, 4, A, e]]], Times[4, Power[Plus[Times[c, D], Times[-1, 2, B, e]], 2]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Plus[Times[Optional[Pattern[e, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Rational[1, 2]]], Times[Optional[Pattern[f, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Rational[1, 2]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[c, Power[Times[e, Plus[Times[b, c], Times[-1, a, d]]], -1]], Int[Times[Times[u, Sqrt[Plus[a, Times[b, x]]]], Power[x, -1]], x], x], Times[-1, Dist[Times[a, Power[Times[f, Plus[Times[b, c], Times[-1, a, d]]], -1]], Int[Times[Times[u, Sqrt[Plus[c, Times[d, x]]]], Power[x, -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[a, Power[e, 2]], Times[-1, c, Power[f, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Plus[Times[Optional[Pattern[e, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Rational[1, 2]]], Times[Optional[Pattern[f, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Rational[1, 2]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[d, Power[Times[e, Plus[Times[b, c], Times[-1, a, d]]], -1]], Int[Times[u, Sqrt[Plus[a, Times[b, x]]]], x], x]], Dist[Times[b, Power[Times[f, Plus[Times[b, c], Times[-1, a, d]]], -1]], Int[Times[u, Sqrt[Plus[c, Times[d, x]]]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[b, Power[e, 2]], Times[-1, d, Power[f, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Plus[Times[Optional[Pattern[e, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Rational[1, 2]]], Times[Optional[Pattern[f, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Rational[1, 2]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[e, Int[Times[Times[u, Sqrt[Plus[a, Times[b, x]]]], Power[Plus[Times[a, Power[e, 2]], Times[-1, c, Power[f, 2]], Times[Plus[Times[b, Power[e, 2]], Times[-1, d, Power[f, 2]]], x]], -1]], x], x], Times[-1, Dist[f, Int[Times[Times[u, Sqrt[Plus[c, Times[d, x]]]], Power[Plus[Times[a, Power[e, 2]], Times[-1, c, Power[f, 2]], Times[Plus[Times[b, Power[e, 2]], Times[-1, d, Power[f, 2]]], x]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[a, Power[e, 2]], Times[-1, c, Power[f, 2]]]], NonzeroQ[Plus[Times[b, Power[e, 2]], Times[-1, d, Power[f, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Plus[Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[p, Blank[]]]]]], Rational[1, 2]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[b, Power[Times[a, d], -1]], Int[Times[u, Power[x, n]], x], x]], Dist[Times[1, Power[Times[a, c], -1]], Int[Times[u, Sqrt[Plus[a, Times[b, Power[x, Times[2, n]]]]]], x], x]], And[FreeQ[List[a, b, c, d, n], x], ZeroQ[Plus[p, Times[-1, 2, n]]], ZeroQ[Plus[Times[b, Power[c, 2]], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[p, Blank[]]]]]], Rational[1, 2]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[d, Int[Times[Power[x, Plus[m, n]], Power[Plus[Times[a, Power[c, 2]], Times[Plus[Times[b, Power[c, 2]], Times[-1, Power[d, 2]]], Power[x, Times[2, n]]]], -1]], x], x]], Dist[c, Int[Times[Times[Power[x, m], Sqrt[Plus[a, Times[b, Power[x, Times[2, n]]]]]], Power[Plus[Times[a, Power[c, 2]], Times[Plus[Times[b, Power[c, 2]], Times[-1, Power[d, 2]]], Power[x, Times[2, n]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, m, n], x], ZeroQ[Plus[p, Times[-1, 2, n]]], NonzeroQ[Plus[Times[b, Power[c, 2]], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numerator[Rt[Times[a, Power[b, -1]], 3]]], Set[s, Denominator[Rt[Times[a, Power[b, -1]], 3]]]], Plus[Dist[Times[r, Power[Times[3, a], -1]], Int[Times[1, Power[Times[Plus[r, Times[s, x]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x], Dist[Times[r, Power[Times[3, a], -1]], Int[Times[Plus[Times[2, r], Times[-1, s, x]], Power[Times[Plus[Power[r, 2], Times[-1, r, s, x], Times[Power[s, 2], Power[x, 2]]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], PosQ[Times[a, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numerator[Rt[Times[a, Power[b, -1]], 3]]], Set[s, Denominator[Rt[Times[a, Power[b, -1]], 3]]]], Plus[Dist[Times[r, Power[Times[3, a], -1]], Int[Times[1, Power[Times[Plus[r, Times[s, x]], Sqrt[Plus[d, Times[f, Power[x, 2]]]]], -1]], x], x], Dist[Times[r, Power[Times[3, a], -1]], Int[Times[Plus[Times[2, r], Times[-1, s, x]], Power[Times[Plus[Power[r, 2], Times[-1, r, s, x], Times[Power[s, 2], Power[x, 2]]], Sqrt[Plus[d, Times[f, Power[x, 2]]]]], -1]], x], x]]], And[FreeQ[List[a, b, d, f], x], PosQ[Times[a, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numerator[Rt[Times[-1, a, Power[b, -1]], 3]]], Set[s, Denominator[Rt[Times[-1, a, Power[b, -1]], 3]]]], Plus[Dist[Times[r, Power[Times[3, a], -1]], Int[Times[1, Power[Times[Plus[r, Times[-1, s, x]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x], Dist[Times[r, Power[Times[3, a], -1]], Int[Times[Plus[Times[2, r], Times[s, x]], Power[Times[Plus[Power[r, 2], Times[r, s, x], Times[Power[s, 2], Power[x, 2]]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x]]], And[FreeQ[List[a, b, d, e, f], x], NegQ[Times[a, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Numerator[Rt[Times[-1, a, Power[b, -1]], 3]]], Set[s, Denominator[Rt[Times[-1, a, Power[b, -1]], 3]]]], Plus[Dist[Times[r, Power[Times[3, a], -1]], Int[Times[1, Power[Times[Plus[r, Times[-1, s, x]], Sqrt[Plus[d, Times[f, Power[x, 2]]]]], -1]], x], x], Dist[Times[r, Power[Times[3, a], -1]], Int[Times[Plus[Times[2, r], Times[s, x]], Power[Times[Plus[Power[r, 2], Times[r, s, x], Times[Power[s, 2], Power[x, 2]]], Sqrt[Plus[d, Times[f, Power[x, 2]]]]], -1]], x], x]]], And[FreeQ[List[a, b, d, f], x], NegQ[Times[a, Power[b, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[d, Int[Times[1, Power[Times[Plus[Power[d, 2], Times[-1, Power[e, 2], Power[x, 2]]], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1]], x], x], Times[-1, Dist[e, Int[Times[x, Power[Times[Plus[Power[d, 2], Times[-1, Power[e, 2], Power[x, 2]]], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1]], x], x]]], FreeQ[List[a, b, c, d, e], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[d, Int[Times[1, Power[Times[Plus[Power[d, 2], Times[-1, Power[e, 2], Power[x, 2]]], Sqrt[Plus[a, Times[c, Power[x, 4]]]]], -1]], x], x], Times[-1, Dist[e, Int[Times[x, Power[Times[Plus[Power[d, 2], Times[-1, Power[e, 2], Power[x, 2]]], Sqrt[Plus[a, Times[c, Power[x, 4]]]]], -1]], x], x]]], FreeQ[List[a, c, d, e], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[e, 3], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], Power[Times[Plus[Times[c, Power[d, 4]], Times[b, Power[d, 2], Power[e, 2]], Times[a, Power[e, 4]]], Plus[d, Times[e, x]]], -1]], x]], Times[-1, Dist[Times[c, Power[Plus[Times[c, Power[d, 4]], Times[b, Power[d, 2], Power[e, 2]], Times[a, Power[e, 4]]], -1]], Int[Times[Plus[Power[d, 2], Times[-1, Power[e, 2], Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 4]], Times[b, Power[d, 2], Power[e, 2]], Times[a, Power[e, 4]]]], ZeroQ[Plus[Times[2, c, Power[d, 3]], Times[b, d, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[e, 3], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], Power[Times[Plus[Times[c, Power[d, 4]], Times[b, Power[d, 2], Power[e, 2]], Times[a, Power[e, 4]]], Plus[d, Times[e, x]]], -1]], x]], Plus[Times[-1, Dist[Times[c, Power[Plus[Times[c, Power[d, 4]], Times[b, Power[d, 2], Power[e, 2]], Times[a, Power[e, 4]]], -1]], Int[Times[Plus[Power[d, 2], Times[-1, Power[e, 2], Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x]], Dist[Times[Plus[Times[2, c, Power[d, 3]], Times[b, d, Power[e, 2]]], Power[Plus[Times[c, Power[d, 4]], Times[b, Power[d, 2], Power[e, 2]], Times[a, Power[e, 4]]], -1]], Int[Times[1, Power[Times[Plus[d, Times[e, x]], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 4]], Times[b, Power[d, 2], Power[e, 2]], Times[a, Power[e, 4]]]], NonzeroQ[Plus[Times[2, c, Power[d, 3]], Times[b, d, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[e, 3], Sqrt[Plus[a, Times[c, Power[x, 4]]]], Power[Times[Plus[Times[c, Power[d, 4]], Times[a, Power[e, 4]]], Plus[d, Times[e, x]]], -1]], x]], Plus[Times[-1, Dist[Times[c, Power[Plus[Times[c, Power[d, 4]], Times[a, Power[e, 4]]], -1]], Int[Times[Plus[Power[d, 2], Times[-1, Power[e, 2], Power[x, 2]]], Power[Sqrt[Plus[a, Times[c, Power[x, 4]]]], -1]], x], x]], Dist[Times[2, c, Power[d, 3], Power[Plus[Times[c, Power[d, 4]], Times[a, Power[e, 4]]], -1]], Int[Times[1, Power[Times[Plus[d, Times[e, x]], Sqrt[Plus[a, Times[c, Power[x, 4]]]]], -1]], x], x]]], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 4]], Times[a, Power[e, 4]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[A, Subst[Int[Times[1, Power[Plus[d, Times[-1, Plus[Times[b, d], Times[-1, 2, a, e]], Power[x, 2]]], -1]], x], x, Times[x, Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]]], x], And[FreeQ[List[a, b, c, d, e, A, B], x], ZeroQ[Plus[Times[B, d], Times[A, e]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[A, Subst[Int[Times[1, Power[Plus[d, Times[2, a, e, Power[x, 2]]], -1]], x], x, Times[x, Power[Sqrt[Plus[a, Times[c, Power[x, 4]]]], -1]]], x], And[FreeQ[List[a, c, d, e, A, B], x], ZeroQ[Plus[Times[B, d], Times[A, e]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[A, Subst[Int[Times[1, Power[Plus[d, Times[-1, Plus[Times[b, d], Times[-1, a, e]], Power[x, 2]]], -1]], x], x, Times[x, Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]]], x], And[FreeQ[List[a, b, c, d, e, f, A, B], x], ZeroQ[Plus[Times[c, d], Times[-1, a, f]]], ZeroQ[Plus[Times[a, B], Times[A, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[A, Subst[Int[Times[1, Power[Plus[d, Times[a, e, Power[x, 2]]], -1]], x], x, Times[x, Power[Sqrt[Plus[a, Times[c, Power[x, 4]]]], -1]]], x], And[FreeQ[List[a, c, d, e, f, A, B], x], ZeroQ[Plus[Times[c, d], Times[-1, a, f]]], ZeroQ[Plus[Times[a, B], Times[A, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[A, Subst[Int[Times[1, Power[Plus[d, Times[-1, b, d, Power[x, 2]]], -1]], x], x, Times[x, Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]]], x], And[FreeQ[List[a, b, c, d, f, A, B], x], ZeroQ[Plus[Times[c, d], Times[-1, a, f]]], ZeroQ[Plus[Times[a, B], Times[A, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[1, 2]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[a, Power[d, -1]], Subst[Int[Times[1, Power[Plus[1, Times[-1, 2, b, Power[x, 2]], Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Power[x, 4]]], -1]], x], x, Times[x, Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]]], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[c, d], Times[a, e]]], PosQ[Times[a, c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[1, 2]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 4]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Sqrt[Plus[Power[b, 2], Times[-1, 4, a, c]]]]], Plus[Times[-1, Simp[Times[a, Sqrt[Plus[b, q]], Power[Times[2, Sqrt[2], Rt[Times[-1, a, c], 2], d], -1], ArcTan[Times[Sqrt[Plus[b, q]], x, Plus[b, Times[-1, q], Times[2, c, Power[x, 2]]], Power[Times[2, Sqrt[2], Rt[Times[-1, a, c], 2], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1]]]], x]], Simp[Times[a, Sqrt[Plus[Times[-1, b], q]], Power[Times[2, Sqrt[2], Rt[Times[-1, a, c], 2], d], -1], ArcTanh[Times[Sqrt[Plus[Times[-1, b], q]], x, Plus[b, q, Times[2, c, Power[x, 2]]], Power[Times[2, Sqrt[2], Rt[Times[-1, a, c], 2], Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]]], -1]]]], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[c, d], Times[a, e]]], NegQ[Times[a, c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[a, Int[Times[1, Power[Times[Plus[Power[a, 2], Times[-1, Power[b, 2], Power[x, 2]]], Sqrt[Plus[c, Times[d, Power[x, 2]]]], Sqrt[Plus[e, Times[f, Power[x, 2]]]]], -1]], x], x], Times[-1, Dist[b, Int[Times[x, Power[Times[Plus[Power[a, 2], Times[-1, Power[b, 2], Power[x, 2]]], Sqrt[Plus[c, Times[d, Power[x, 2]]]], Sqrt[Plus[e, Times[f, Power[x, 2]]]]], -1]], x], x]]], FreeQ[List[a, b, c, d, e, f], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[2, Plus[Times[f, Plus[Times[5, b, c, Power[g, 2]], Times[-1, 2, Power[b, 2], g, h], Times[-1, 3, a, c, g, h], Times[2, a, b, Power[h, 2]]]], Times[c, f, Plus[Times[10, c, Power[g, 2]], Times[-1, b, g, h], Times[a, Power[h, 2]]], x], Times[9, Power[c, 2], f, g, h, Power[x, 2]], Times[3, Power[c, 2], f, Power[h, 2], Power[x, 3]], Times[-1, Plus[Times[e, g], Times[-1, d, h]], Plus[Times[5, c, g], Times[-1, 2, b, h], Times[c, h, x]], Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]]], Power[Times[15, Power[c, 2], f, Plus[g, Times[h, x]]], -1], Sqrt[Plus[d, Times[e, x], Times[f, Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]]]]], x], And[FreeQ[List[a, b, c, d, e, f, g, h], x], ZeroQ[Plus[Power[Plus[Times[e, g], Times[-1, d, h]], 2], Times[-1, Power[f, 2], Plus[Times[c, Power[g, 2]], Times[-1, b, g, h], Times[a, Power[h, 2]]]]]], ZeroQ[Plus[Times[2, Power[e, 2], g], Times[-1, 2, d, e, h], Times[-1, Power[f, 2], Plus[Times[2, c, g], Times[-1, b, h]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[u, Blank[]], Times[Optional[Pattern[f, Blank[]]], Plus[Optional[Pattern[j, Blank[]]], Times[Optional[Pattern[k, Blank[]]], Power[Pattern[v, Blank[]], Rational[1, 2]]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[ExpandToSum[Plus[u, Times[f, j]], x], Times[f, k, Sqrt[ExpandToSum[v, x]]]], n]], x], And[FreeQ[List[f, g, h, j, k, m, n], x], LinearQ[u, x], QuadraticQ[v, x], Not[And[LinearMatchQ[u, x], QuadraticMatchQ[v, x], Or[ZeroQ[j], ZeroQ[Plus[f, -1]]]]], ZeroQ[Plus[Power[Plus[Times[Coefficient[u, x, 1], g], Times[-1, h, Plus[Coefficient[u, x, 0], Times[f, j]]]], 2], Times[-1, Power[f, 2], Power[k, 2], Plus[Times[Coefficient[v, x, 2], Power[g, 2]], Times[-1, Coefficient[v, x, 1], g, h], Times[Coefficient[v, x, 0], Power[h, 2]]]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[2, Subst[Int[Times[Power[Plus[g, Times[h, Power[x, n]]], p], Plus[Times[Power[d, 2], e], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Power[f, 2]], Times[-1, Plus[Times[2, d, e], Times[-1, b, Power[f, 2]]], x], Times[e, Power[x, 2]]], Power[Power[Plus[Times[-2, d, e], Times[b, Power[f, 2]], Times[2, e, x]], 2], -1]], x], x, Plus[d, Times[e, x], Times[f, Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]]]], x], And[FreeQ[List[a, b, c, d, e, f, g, h, n], x], ZeroQ[Plus[Power[e, 2], Times[-1, c, Power[f, 2]]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[2, e], -1]], Subst[Int[Times[Power[Plus[g, Times[h, Power[x, n]]], p], Plus[Power[d, 2], Times[a, Power[f, 2]], Times[-1, 2, d, x], Power[x, 2]], Power[Power[Plus[d, Times[-1, x]], 2], -1]], x], x, Plus[d, Times[e, x], Times[f, Sqrt[Plus[a, Times[c, Power[x, 2]]]]]]], x], And[FreeQ[List[a, c, d, e, f, g, h, n], x], ZeroQ[Plus[Power[e, 2], Times[-1, c, Power[f, 2]]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Power[Plus[Pattern[u, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[v, Blank[]], Rational[1, 2]]]], Pattern[n, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[g, Times[h, Power[Plus[ExpandToSum[u, x], Times[f, Sqrt[ExpandToSum[v, x]]]], n]]], p], x], And[FreeQ[List[f, g, h, n], x], LinearQ[u, x], QuadraticQ[v, x], Not[And[LinearMatchQ[u, x], QuadraticMatchQ[v, x]]], ZeroQ[Plus[Power[Coefficient[u, x, 1], 2], Times[-1, Coefficient[v, x, 2], Power[f, 2]]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[2, Plus[m, 1]], Power[e, Plus[m, 1]]], -1]], Subst[Int[Times[Power[x, Plus[n, Times[-1, m], -2]], Plus[Times[a, Power[f, 2]], Power[x, 2]], Power[Plus[Times[-1, a, Power[f, 2], h], Times[2, e, g, x], Times[h, Power[x, 2]]], m]], x], x, Plus[Times[e, x], Times[f, Sqrt[Plus[a, Times[c, Power[x, 2]]]]]]], x], And[FreeQ[List[a, c, e, f, g, h, n], x], ZeroQ[Plus[Power[e, 2], Times[-1, c, Power[f, 2]]]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[i, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[2, Plus[Times[2, m], p, 1]], Power[e, Plus[p, 1]], Power[f, Times[2, m]]], -1], Power[Times[i, Power[c, -1]], m]], Subst[Int[Times[Power[x, Plus[n, Times[-1, 2, m], Times[-1, p], -2]], Power[Plus[Times[-1, a, Power[f, 2]], Power[x, 2]], p], Power[Plus[Times[a, Power[f, 2]], Power[x, 2]], Plus[Times[2, m], 1]]], x], x, Plus[Times[e, x], Times[f, Sqrt[Plus[a, Times[c, Power[x, 2]]]]]]], x], And[FreeQ[List[a, c, e, f, g, i, n], x], ZeroQ[Plus[Power[e, 2], Times[-1, c, Power[f, 2]]]], ZeroQ[Plus[Times[c, g], Times[-1, a, i]]], IntegersQ[p, Times[2, m]], Or[IntegerQ[m], PositiveQ[Times[i, Power[c, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[i, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, Power[Power[f, Times[2, m]], -1], Power[Times[i, Power[c, -1]], m]], Subst[Int[Times[Power[x, n], Power[Plus[Times[Power[d, 2], e], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Power[f, 2]], Times[-1, Plus[Times[2, d, e], Times[-1, b, Power[f, 2]]], x], Times[e, Power[x, 2]]], Plus[Times[2, m], 1]], Power[Power[Plus[Times[-2, d, e], Times[b, Power[f, 2]], Times[2, e, x]], Times[2, Plus[m, 1]]], -1]], x], x, Plus[d, Times[e, x], Times[f, Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]]]], x], And[FreeQ[List[a, b, c, d, e, f, g, h, i, n], x], ZeroQ[Plus[Power[e, 2], Times[-1, c, Power[f, 2]]]], ZeroQ[Plus[Times[c, g], Times[-1, a, i]]], ZeroQ[Plus[Times[c, h], Times[-1, b, i]]], IntegerQ[Times[2, m]], Or[IntegerQ[m], PositiveQ[Times[i, Power[c, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[i, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[2, Plus[Times[2, m], 1]], e, Power[f, Times[2, m]]], -1], Power[Times[i, Power[c, -1]], m]], Subst[Int[Times[Power[x, n], Power[Plus[Power[d, 2], Times[a, Power[f, 2]], Times[-1, 2, d, x], Power[x, 2]], Plus[Times[2, m], 1]], Power[Power[Plus[Times[-1, d], x], Times[2, Plus[m, 1]]], -1]], x], x, Plus[d, Times[e, x], Times[f, Sqrt[Plus[a, Times[c, Power[x, 2]]]]]]], x], And[FreeQ[List[a, c, d, e, f, g, i, n], x], ZeroQ[Plus[Power[e, 2], Times[-1, c, Power[f, 2]]]], ZeroQ[Plus[Times[c, g], Times[-1, a, i]]], IntegerQ[Times[2, m]], Or[IntegerQ[m], PositiveQ[Times[i, Power[c, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[i, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[i, Power[c, -1]], Plus[m, Times[-1, 1, Power[2, -1]]]], Sqrt[Plus[g, Times[h, x], Times[i, Power[x, 2]]]], Power[Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], m], Power[Plus[d, Times[e, x], Times[f, Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, h, i, n], x], ZeroQ[Plus[Power[e, 2], Times[-1, c, Power[f, 2]]]], ZeroQ[Plus[Times[c, g], Times[-1, a, i]]], ZeroQ[Plus[Times[c, h], Times[-1, b, i]]], PositiveIntegerQ[Plus[m, Times[1, Power[2, -1]]]], Not[PositiveQ[Times[i, Power[c, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[i, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[i, Power[c, -1]], Plus[m, Times[-1, 1, Power[2, -1]]]], Sqrt[Plus[g, Times[i, Power[x, 2]]]], Power[Sqrt[Plus[a, Times[c, Power[x, 2]]]], -1]], Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], m], Power[Plus[d, Times[e, x], Times[f, Sqrt[Plus[a, Times[c, Power[x, 2]]]]]], n]], x], x], And[FreeQ[List[a, c, d, e, f, g, i, n], x], ZeroQ[Plus[Power[e, 2], Times[-1, c, Power[f, 2]]]], ZeroQ[Plus[Times[c, g], Times[-1, a, i]]], PositiveIntegerQ[Plus[m, Times[1, Power[2, -1]]]], Not[PositiveQ[Times[i, Power[c, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[i, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[i, Power[c, -1]], Plus[m, Times[1, Power[2, -1]]]], Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Sqrt[Plus[g, Times[h, x], Times[i, Power[x, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], m], Power[Plus[d, Times[e, x], Times[f, Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, h, i, n], x], ZeroQ[Plus[Power[e, 2], Times[-1, c, Power[f, 2]]]], ZeroQ[Plus[Times[c, g], Times[-1, a, i]]], ZeroQ[Plus[Times[c, h], Times[-1, b, i]]], NegativeIntegerQ[Plus[m, Times[-1, 1, Power[2, -1]]]], Not[PositiveQ[Times[i, Power[c, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[i, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[i, Power[c, -1]], Plus[m, Times[1, Power[2, -1]]]], Sqrt[Plus[a, Times[c, Power[x, 2]]]], Power[Sqrt[Plus[g, Times[i, Power[x, 2]]]], -1]], Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], m], Power[Plus[d, Times[e, x], Times[f, Sqrt[Plus[a, Times[c, Power[x, 2]]]]]], n]], x], x], And[FreeQ[List[a, c, d, e, f, g, i, n], x], ZeroQ[Plus[Power[e, 2], Times[-1, c, Power[f, 2]]]], ZeroQ[Plus[Times[c, g], Times[-1, a, i]]], NegativeIntegerQ[Plus[m, Times[-1, 1, Power[2, -1]]]], Not[PositiveQ[Times[i, Power[c, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[u, Blank[]], Times[Optional[Pattern[f, Blank[]]], Plus[Optional[Pattern[j, Blank[]]], Times[Optional[Pattern[k, Blank[]]], Power[Pattern[v, Blank[]], Rational[1, 2]]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[w, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[w, x], m], Power[Plus[ExpandToSum[Plus[u, Times[f, j]], x], Times[f, k, Sqrt[ExpandToSum[v, x]]]], n]], x], And[FreeQ[List[f, j, k, m, n], x], LinearQ[u, x], QuadraticQ[List[v, w], x], Not[And[LinearMatchQ[u, x], QuadraticMatchQ[List[v, w], x], Or[ZeroQ[j], ZeroQ[Plus[f, -1]]]]], ZeroQ[Plus[Power[Coefficient[u, x, 1], 2], Times[-1, Coefficient[v, x, 2], Power[f, 2], Power[k, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], -1], Power[Plus[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[a, -1]], Subst[Int[Times[1, Power[Plus[1, Times[-1, c, Power[x, 2]]], -1]], x], x, Times[x, Power[Sqrt[Plus[Times[c, Power[x, 2]], Times[d, Power[Plus[a, Times[b, Power[x, n]]], Times[2, Power[n, -1]]]]]], -1]]], x], And[FreeQ[List[a, b, c, d, n], x], ZeroQ[Plus[p, Times[-1, 2, Power[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]]], Rational[1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, Power[b, 2], d, Power[x, 3], Power[Times[3, Power[Plus[a, Times[b, Sqrt[Plus[c, Times[d, Power[x, 2]]]]]], Times[3, Power[2, -1]]]], -1]], x], Simp[Times[2, a, x, Power[Sqrt[Plus[a, Times[b, Sqrt[Plus[c, Times[d, Power[x, 2]]]]]]], -1]], x]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2], c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[2], b, Power[a, -1]], Subst[Int[Times[1, Power[Sqrt[Plus[1, Times[Power[x, 2], Power[a, -1]]]], -1]], x], x, Plus[Times[a, x], Times[b, Sqrt[Plus[c, Times[d, Power[x, 2]]]]]]], x], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2], d]]], ZeroQ[Plus[Times[Power[b, 2], c], a]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]], Plus[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Sqrt[Plus[Times[a, e, Power[x, 2]], Times[b, e, x, Sqrt[Plus[c, Times[d, Power[x, 2]]]]]]], Power[Times[x, Sqrt[Plus[c, Times[d, Power[x, 2]]]]], -1]], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2], d]]], ZeroQ[Plus[Times[Power[b, 2], c, e], a]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]], Power[Plus[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[d, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[1, 2]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[d, Subst[Int[Times[1, Power[Plus[1, Times[-1, 2, c, Power[x, 2]]], -1]], x], x, Times[x, Power[Sqrt[Plus[Times[c, Power[x, 2]], Times[d, Sqrt[Plus[a, Times[b, Power[x, 4]]]]]]], -1]]], x], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[c, 2], Times[-1, b, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[-1, 2]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Rational[1, 2]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[1, Times[-1, I]], Power[2, -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Sqrt[Plus[Sqrt[a], Times[-1, I, b, Power[x, 2]]]], -1]], x], x], Dist[Times[Plus[1, I], Power[2, -1]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Sqrt[Plus[Sqrt[a], Times[I, b, Power[x, 2]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, m], x], ZeroQ[Plus[e, Times[-1, Power[b, 2]]]], PositiveQ[a]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[b, Power[a, -1]], 3]]], Plus[Times[-1, Dist[Times[q, Power[Plus[Times[Plus[1, Sqrt[3]], d], Times[-1, c, q]], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 3]]]], -1]], x], x]], Dist[Times[d, Power[Plus[Times[Plus[1, Sqrt[3]], d], Times[-1, c, q]], -1]], Int[Times[Plus[1, Sqrt[3], Times[q, x]], Power[Times[Plus[c, Times[d, x]], Sqrt[Plus[a, Times[b, Power[x, 3]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], PosQ[a], PosQ[b]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, b, Power[a, -1]], 3]]], Plus[Dist[Times[q, Power[Plus[Times[Plus[1, Sqrt[3]], d], Times[c, q]], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 3]]]], -1]], x], x], Dist[Times[d, Power[Plus[Times[Plus[1, Sqrt[3]], d], Times[c, q]], -1]], Int[Times[Plus[1, Sqrt[3], Times[-1, q, x]], Power[Times[Plus[c, Times[d, x]], Sqrt[Plus[a, Times[b, Power[x, 3]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], PosQ[a], NegQ[b]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, b, Power[a, -1]], 3]]], Plus[Dist[Times[q, Power[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], d], Times[c, q]], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 3]]]], -1]], x], x], Dist[Times[d, Power[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], d], Times[c, q]], -1]], Int[Times[Plus[1, Times[-1, Sqrt[3]], Times[-1, q, x]], Power[Times[Plus[c, Times[d, x]], Sqrt[Plus[a, Times[b, Power[x, 3]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NegQ[a], PosQ[b]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[b, Power[a, -1]], 3]]], Plus[Times[-1, Dist[Times[q, Power[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], d], Times[-1, c, q]], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 3]]]], -1]], x], x]], Dist[Times[d, Power[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], d], Times[-1, c, q]], -1]], Int[Times[Plus[1, Times[-1, Sqrt[3]], Times[q, x]], Power[Times[Plus[c, Times[d, x]], Sqrt[Plus[a, Times[b, Power[x, 3]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NegQ[a], NegQ[b]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[b, Power[a, -1]], 3]]], Condition[Dist[Times[4, Power[3, Times[1, Power[4, -1]]], Sqrt[Plus[2, Times[-1, Sqrt[3]]]], f, Plus[1, Times[q, x]], Sqrt[Times[Plus[1, Times[-1, q, x], Times[Power[q, 2], Power[x, 2]]], Power[Power[Plus[1, Sqrt[3], Times[q, x]], 2], -1]]], Power[Times[q, Sqrt[Plus[a, Times[b, Power[x, 3]]]], Sqrt[Times[Plus[1, Times[q, x]], Power[Power[Plus[1, Sqrt[3], Times[q, x]], 2], -1]]]], -1]], Subst[Int[Times[1, Power[Times[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], d], Times[-1, c, q], Times[Plus[Times[Plus[1, Sqrt[3]], d], Times[-1, c, q]], x]], Sqrt[Plus[1, Times[-1, Power[x, 2]]]], Sqrt[Plus[7, Times[-1, 4, Sqrt[3]], Power[x, 2]]]], -1]], x], x, Times[Plus[-1, Sqrt[3], Times[-1, q, x]], Power[Plus[1, Sqrt[3], Times[q, x]], -1]]], x], ZeroQ[Plus[Times[Plus[1, Sqrt[3]], f], Times[-1, e, q]]]]], And[FreeQ[List[a, b, c, d, e, f], x], PosQ[a], PosQ[b]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[b, Power[a, -1]], 3]]], Condition[Plus[Dist[Times[Plus[Times[Plus[1, Sqrt[3]], f], Times[-1, e, q]], Power[Plus[Times[Plus[1, Sqrt[3]], d], Times[-1, c, q]], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 3]]]], -1]], x], x], Dist[Times[Plus[Times[d, e], Times[-1, c, f]], Power[Plus[Times[Plus[1, Sqrt[3]], d], Times[-1, c, q]], -1]], Int[Times[Plus[1, Sqrt[3], Times[q, x]], Power[Times[Plus[c, Times[d, x]], Sqrt[Plus[a, Times[b, Power[x, 3]]]]], -1]], x], x]], NonzeroQ[Plus[Times[Plus[1, Sqrt[3]], f], Times[-1, e, q]]]]], And[FreeQ[List[a, b, c, d, e, f], x], PosQ[a], PosQ[b]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, b, Power[a, -1]], 3]]], Condition[Dist[Times[-4, Power[3, Times[1, Power[4, -1]]], Sqrt[Plus[2, Times[-1, Sqrt[3]]]], f, Plus[1, Times[-1, q, x]], Sqrt[Times[Plus[1, Times[q, x], Times[Power[q, 2], Power[x, 2]]], Power[Power[Plus[1, Sqrt[3], Times[-1, q, x]], 2], -1]]], Power[Times[q, Sqrt[Plus[a, Times[b, Power[x, 3]]]], Sqrt[Times[Plus[1, Times[-1, q, x]], Power[Power[Plus[1, Sqrt[3], Times[-1, q, x]], 2], -1]]]], -1]], Subst[Int[Times[1, Power[Times[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], d], Times[c, q], Times[Plus[Times[Plus[1, Sqrt[3]], d], Times[c, q]], x]], Sqrt[Plus[1, Times[-1, Power[x, 2]]]], Sqrt[Plus[7, Times[-1, 4, Sqrt[3]], Power[x, 2]]]], -1]], x], x, Times[Plus[-1, Sqrt[3], Times[q, x]], Power[Plus[1, Sqrt[3], Times[-1, q, x]], -1]]], x], ZeroQ[Plus[Times[Plus[1, Sqrt[3]], f], Times[e, q]]]]], And[FreeQ[List[a, b, c, d, e, f], x], PosQ[a], NegQ[b]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, b, Power[a, -1]], 3]]], Condition[Plus[Dist[Times[Plus[Times[Plus[1, Sqrt[3]], f], Times[e, q]], Power[Plus[Times[Plus[1, Sqrt[3]], d], Times[c, q]], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 3]]]], -1]], x], x], Dist[Times[Plus[Times[d, e], Times[-1, c, f]], Power[Plus[Times[Plus[1, Sqrt[3]], d], Times[c, q]], -1]], Int[Times[Plus[1, Sqrt[3], Times[-1, q, x]], Power[Times[Plus[c, Times[d, x]], Sqrt[Plus[a, Times[b, Power[x, 3]]]]], -1]], x], x]], NonzeroQ[Plus[Times[Plus[1, Sqrt[3]], f], Times[e, q]]]]], And[FreeQ[List[a, b, c, d, e, f], x], PosQ[a], NegQ[b]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, b, Power[a, -1]], 3]]], Condition[Dist[Times[4, Power[3, Times[1, Power[4, -1]]], Sqrt[Plus[2, Sqrt[3]]], f, Plus[1, Times[-1, q, x]], Sqrt[Times[Plus[1, Times[q, x], Times[Power[q, 2], Power[x, 2]]], Power[Power[Plus[1, Times[-1, Sqrt[3]], Times[-1, q, x]], 2], -1]]], Power[Times[q, Sqrt[Plus[a, Times[b, Power[x, 3]]]], Sqrt[Times[-1, Plus[1, Times[-1, q, x]], Power[Power[Plus[1, Times[-1, Sqrt[3]], Times[-1, q, x]], 2], -1]]]], -1]], Subst[Int[Times[1, Power[Times[Plus[Times[Plus[1, Sqrt[3]], d], Times[c, q], Times[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], d], Times[c, q]], x]], Sqrt[Plus[1, Times[-1, Power[x, 2]]]], Sqrt[Plus[7, Times[4, Sqrt[3]], Power[x, 2]]]], -1]], x], x, Times[Plus[1, Sqrt[3], Times[-1, q, x]], Power[Plus[-1, Sqrt[3], Times[q, x]], -1]]], x], ZeroQ[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], f], Times[e, q]]]]], And[FreeQ[List[a, b, c, d, e, f], x], NegQ[a], PosQ[b]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, b, Power[a, -1]], 3]]], Condition[Plus[Dist[Times[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], f], Times[e, q]], Power[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], d], Times[c, q]], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 3]]]], -1]], x], x], Dist[Times[Plus[Times[d, e], Times[-1, c, f]], Power[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], d], Times[c, q]], -1]], Int[Times[Plus[1, Times[-1, Sqrt[3]], Times[-1, q, x]], Power[Times[Plus[c, Times[d, x]], Sqrt[Plus[a, Times[b, Power[x, 3]]]]], -1]], x], x]], NonzeroQ[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], f], Times[e, q]]]]], And[FreeQ[List[a, b, c, d, e, f], x], NegQ[a], PosQ[b]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], Plus[Pattern[e, Blank[]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[b, Power[a, -1]], 3]]], Condition[Dist[Times[-4, Power[3, Times[1, Power[4, -1]]], Sqrt[Plus[2, Sqrt[3]]], f, Plus[1, Times[q, x]], Sqrt[Times[Plus[1, Times[-1, q, x], Times[Power[q, 2], Power[x, 2]]], Power[Power[Plus[1, Times[-1, Sqrt[3]], Times[q, x]], 2], -1]]], Power[Times[q, Sqrt[Plus[a, Times[b, Power[x, 3]]]], Sqrt[Times[-1, Plus[1, Times[q, x]], Power[Power[Plus[1, Times[-1, Sqrt[3]], Times[q, x]], 2], -1]]]], -1]], Subst[Int[Times[1, Power[Times[Plus[Times[Plus[1, Sqrt[3]], d], Times[-1, c, q], Times[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], d], Times[-1, c, q]], x]], Sqrt[Plus[1, Times[-1, Power[x, 2]]]], Sqrt[Plus[7, Times[4, Sqrt[3]], Power[x, 2]]]], -1]], x], x, Times[Plus[1, Sqrt[3], Times[q, x]], Power[Plus[-1, Sqrt[3], Times[-1, q, x]], -1]]], x], ZeroQ[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], f], Times[-1, e, q]]]]], And[FreeQ[List[a, b, c, d, e, f], x], NegQ[a], NegQ[b]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 3]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[b, Power[a, -1]], 3]]], Condition[Plus[Dist[Times[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], f], Times[-1, e, q]], Power[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], d], Times[-1, c, q]], -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, Power[x, 3]]]], -1]], x], x], Dist[Times[Plus[Times[d, e], Times[-1, c, f]], Power[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], d], Times[-1, c, q]], -1]], Int[Times[Plus[1, Times[-1, Sqrt[3]], Times[q, x]], Power[Times[Plus[c, Times[d, x]], Sqrt[Plus[a, Times[b, Power[x, 3]]]]], -1]], x], x]], NonzeroQ[Plus[Times[Plus[1, Times[-1, Sqrt[3]]], f], Times[-1, e, q]]]]], And[FreeQ[List[a, b, c, d, e, f], x], NegQ[a], NegQ[b]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[e, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Rational[1, 2]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[n, -1]], Subst[Int[Times[Power[x, Plus[Times[Plus[m, 1], Power[n, -1]], -1]], Power[Plus[c, Times[d, x], Times[e, Sqrt[Plus[a, Times[b, x]]]]], -1]], x], x, Power[x, n]], x], And[FreeQ[List[a, b, c, d, e, m, n], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]], 0], IntegerQ[Times[Plus[m, 1], Power[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[e, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Rational[1, 2]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[c, Int[Times[u, Power[Plus[Power[c, 2], Times[-1, a, Power[e, 2]], Times[c, d, Power[x, n]]], -1]], x], x], Times[-1, Dist[Times[a, e], Int[Times[u, Power[Times[Plus[Power[c, 2], Times[-1, a, Power[e, 2]], Times[c, d, Power[x, n]]], Sqrt[Plus[a, Times[b, Power[x, n]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]], 0]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[A, 2], Plus[n, -1]], Subst[Int[Times[1, Power[Plus[a, Times[Power[A, 2], b, Power[Plus[n, -1], 2], Power[x, 2]]], -1]], x], x, Times[x, Power[Plus[Times[A, Plus[n, -1]], Times[-1, B, Power[x, n]]], -1]]], x], And[FreeQ[List[a, b, c, d, A, B, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[n, -2]], ZeroQ[Plus[Times[a, Power[B, 2]], Times[-1, Power[A, 2], d, Power[Plus[n, -1], 2]]]], ZeroQ[Plus[Times[B, c], Times[2, A, d, Plus[n, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[k, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[A, 2], Plus[m, Times[-1, n], 1], Power[Plus[m, 1], -1]], Subst[Int[Times[1, Power[Plus[a, Times[Power[A, 2], b, Power[Plus[m, Times[-1, n], 1], 2], Power[x, 2]]], -1]], x], x, Times[Power[x, Plus[m, 1]], Power[Plus[Times[A, Plus[m, Times[-1, n], 1]], Times[B, Plus[m, 1], Power[x, n]]], -1]]], x], And[FreeQ[List[a, b, c, d, A, B, m, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[k, Times[-1, 2, Plus[m, 1]]]], ZeroQ[Plus[Times[a, Power[B, 2], Power[Plus[m, 1], 2]], Times[-1, Power[A, 2], d, Power[Plus[m, Times[-1, n], 1], 2]]]], ZeroQ[Plus[Times[B, c, Plus[m, 1]], Times[-1, 2, A, d, Plus[m, Times[-1, n], 1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]], Times[Pattern[g, Blank[]], Power[Pattern[x, Blank[]], Pattern[n3, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Plus[Times[Power[b, 2], c, d], Times[-1, 2, a, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, b, Plus[Times[c, e], Times[a, g]]], Times[Plus[Times[b, c, Plus[Times[c, d], Times[a, f]]], Times[-1, a, Power[b, 2], g], Times[-1, 2, a, c, Plus[Times[c, e], Times[-1, a, g]]]], Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[a, c, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[a, c, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Simp[Plus[Times[a, b, Plus[Times[c, e], Times[a, g]]], Times[-1, Power[b, 2], c, d, Plus[n, Times[n, p], 1]], Times[-1, 2, a, c, Plus[Times[a, f], Times[-1, c, d, Plus[Times[2, n, Plus[p, 1]], 1]]]], Times[Plus[Times[a, Power[b, 2], g, Plus[Times[n, Plus[p, 2]], 1]], Times[-1, b, c, Plus[Times[c, d], Times[a, f]], Plus[Times[n, Plus[Times[2, p], 3]], 1]], Times[-1, 2, a, c, Plus[Times[a, g, Plus[n, 1]], Times[-1, c, e, Plus[Times[n, Plus[Times[2, p], 3]], 1]]]]], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[n3, Times[-1, 3, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Plus[Times[Power[b, 2], d], Times[-1, 2, a, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, b, e], Times[Plus[Times[b, Plus[Times[c, d], Times[a, f]]], Times[-1, 2, a, c, e]], Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[a, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[a, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Simp[Plus[Times[a, b, e], Times[-1, Power[b, 2], d, Plus[n, Times[n, p], 1]], Times[-1, 2, a, Plus[Times[a, f], Times[-1, c, d, Plus[Times[2, n, Plus[p, 1]], 1]]]], Times[-1, Plus[Times[b, Plus[Times[c, d], Times[a, f]], Plus[Times[n, Plus[Times[2, p], 3]], 1]], Times[-1, 2, a, c, e, Plus[Times[n, Plus[Times[2, p], 3]], 1]]], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Pattern[g, Blank[]], Power[Pattern[x, Blank[]], Pattern[n3, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Plus[Times[Power[b, 2], c, d], Times[-1, 2, a, Power[c, 2], d], Times[-1, a, b, Plus[Times[c, e], Times[a, g]]], Times[Plus[Times[b, Power[c, 2], d], Times[-1, a, Power[b, 2], g], Times[-1, 2, a, c, Plus[Times[c, e], Times[-1, a, g]]]], Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[a, c, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[a, c, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Simp[Plus[Times[a, b, Plus[Times[c, e], Times[a, g]]], Times[-1, Power[b, 2], c, d, Plus[n, Times[n, p], 1]], Times[2, a, Power[c, 2], d, Plus[Times[2, n, Plus[p, 1]], 1]], Times[Plus[Times[a, Power[b, 2], g, Plus[Times[n, Plus[p, 2]], 1]], Times[-1, b, Power[c, 2], d, Plus[Times[n, Plus[Times[2, p], 3]], 1]], Times[-1, 2, a, c, Plus[Times[a, g, Plus[n, 1]], Times[-1, c, e, Plus[Times[n, Plus[Times[2, p], 3]], 1]]]]], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, g, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[n3, Times[-1, 3, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]], Times[Pattern[g, Blank[]], Power[Pattern[x, Blank[]], Pattern[n3, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Plus[Times[Power[b, 2], c, d], Times[-1, 2, a, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, Power[a, 2], b, g], Times[Plus[Times[b, c, Plus[Times[c, d], Times[a, f]]], Times[-1, a, Power[b, 2], g], Times[2, Power[a, 2], c, g]], Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[a, c, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[a, c, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Simp[Plus[Times[Power[a, 2], b, g], Times[-1, Power[b, 2], c, d, Plus[n, Times[n, p], 1]], Times[-1, 2, a, c, Plus[Times[a, f], Times[-1, c, d, Plus[Times[2, n, Plus[p, 1]], 1]]]], Times[Plus[Times[a, Power[b, 2], g, Plus[Times[n, Plus[p, 2]], 1]], Times[-1, b, c, Plus[Times[c, d], Times[a, f]], Plus[Times[n, Plus[Times[2, p], 3]], 1]], Times[-1, 2, Power[a, 2], c, g, Plus[n, 1]]], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, f, g, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[n3, Times[-1, 3, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Plus[Times[Power[b, 2], d], Times[-1, 2, a, Plus[Times[c, d], Times[-1, a, f]]], Times[b, Plus[Times[c, d], Times[a, f]], Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[a, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x]], Dist[Times[1, Power[Times[a, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Simp[Plus[Times[Power[b, 2], d, Plus[n, Times[n, p], 1]], Times[2, a, Plus[Times[a, f], Times[-1, c, d, Plus[Times[2, n, Plus[p, 1]], 1]]]], Times[b, Plus[Times[c, d], Times[a, f]], Plus[Times[n, Plus[Times[2, p], 3]], 1], Power[x, n]]], x]], x], x]], And[FreeQ[List[a, b, c, d, f, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]], Plus[Pattern[d, Blank[]], Times[Pattern[g, Blank[]], Power[Pattern[x, Blank[]], Pattern[n3, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Plus[Times[Power[b, 2], c, d], Times[-1, 2, a, Power[c, 2], d], Times[-1, Power[a, 2], b, g], Times[Plus[Times[b, Power[c, 2], d], Times[-1, a, Power[b, 2], g], Times[2, Power[a, 2], c, g]], Power[x, n]]], Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[a, c, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[a, c, n, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Plus[a, Times[b, Power[x, n]], Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Simp[Plus[Times[Power[a, 2], b, g], Times[-1, Power[b, 2], c, d, Plus[n, Times[n, p], 1]], Times[2, a, Power[c, 2], d, Plus[Times[2, n, Plus[p, 1]], 1]], Times[Plus[Times[a, Power[b, 2], g, Plus[Times[n, Plus[p, 2]], 1]], Times[-1, b, Power[c, 2], d, Plus[Times[n, Plus[Times[2, p], 3]], 1]], Times[-1, 2, a, c, Times[a, g, Plus[n, 1]]]], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, g, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[n3, Times[-1, 3, n]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegativeIntegerQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]], Times[Pattern[g, Blank[]], Power[Pattern[x, Blank[]], Pattern[n3, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Plus[Times[-2, a, c, Plus[Times[c, d], Times[-1, a, f]]], Times[Times[-2, a, c, Plus[Times[c, e], Times[-1, a, g]]], Power[x, n]]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[a, c, n, Plus[p, 1], Times[-4, a, c]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[a, c, n, Plus[p, 1], Times[-4, a, c]], -1]], Int[Times[Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Simp[Plus[Times[-2, a, c, Plus[Times[a, f], Times[-1, c, d, Plus[Times[2, n, Plus[p, 1]], 1]]]], Times[Times[-2, a, c, Plus[Times[a, g, Plus[n, 1]], Times[-1, c, e, Plus[Times[n, Plus[Times[2, p], 3]], 1]]]], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, c, d, e, f, g, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[n3, Times[-1, 3, n]]], NegativeIntegerQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Plus[Times[-2, a, Plus[Times[c, d], Times[-1, a, f]]], Times[Times[-2, a, c, e], Power[x, n]]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[a, n, Plus[p, 1], Times[-4, a, c]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[a, n, Plus[p, 1], Times[-4, a, c]], -1]], Int[Times[Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Simp[Plus[Times[-2, a, Plus[Times[a, f], Times[-1, c, d, Plus[Times[2, n, Plus[p, 1]], 1]]]], Times[-1, Times[-2, a, c, e, Plus[Times[n, Plus[Times[2, p], 3]], 1]], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, c, d, e, f, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], NegativeIntegerQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n2, Blank[]]]]], Pattern[p, Blank[]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]], Times[Pattern[g, Blank[]], Power[Pattern[x, Blank[]], Pattern[n3, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Plus[Times[-2, a, Power[c, 2], d], Times[Times[-2, a, c, Plus[Times[c, e], Times[-1, a, g]]], Power[x, n]]], Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Power[Times[a, c, n, Plus[p, 1], Times[-4, a, c]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[a, c, n, Plus[p, 1], Times[-4, a, c]], -1]], Int[Times[Power[Plus[a, Times[c, Power[x, Times[2, n]]]], Plus[p, 1]], Simp[Plus[Times[2, a, Power[c, 2], d, Plus[Times[2, n, Plus[p, 1]], 1]], Times[Times[-2, a, c, Plus[Times[a, g, Plus[n, 1]], Times[-1, c, e, Plus[Times[n, Plus[Times[2, p], 3]], 1]]]], Power[x, n]]], x]], x], x]]], And[FreeQ[List[a, c, d, e, g, n], x], ZeroQ[Plus[n2, Times[-1, 2, n]]], ZeroQ[Plus[n3, Times[-1, 3, n]]], NegativeIntegerQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 4]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 6]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[Plus[Times[-1, a, c, Power[f, 2]], Times[12, Power[a, 2], Power[g, 2]], Times[f, Plus[Times[3, Power[c, 2], d], Times[-1, 2, a, b, g]]]], Power[Times[c, g, Plus[Times[3, c, d], Times[-1, a, f]]], -1]], 2]], Set[r, Rt[Times[Plus[Times[a, c, Power[f, 2]], Times[4, g, Plus[Times[b, c, d], Times[Power[a, 2], g]]], Times[-1, f, Plus[Times[3, Power[c, 2], d], Times[2, a, b, g]]]], Power[Times[c, g, Plus[Times[3, c, d], Times[-1, a, f]]], -1]], 2]]], Plus[Simp[Times[c, Power[Times[g, q], -1], ArcTan[Times[Plus[r, Times[2, x]], Power[q, -1]]]], x], Plus[Times[-1, Simp[Times[c, Power[Times[g, q], -1], ArcTan[Times[Plus[r, Times[-1, 2, x]], Power[q, -1]]]], x]], Times[-1, Simp[Times[c, Power[Times[g, q], -1], ArcTan[Times[Plus[Times[3, c, d], Times[-1, a, f]], x, Power[Times[g, q, Plus[Times[b, c, d], Times[-1, 2, Power[a, 2], g]], Plus[Times[b, c, d], Times[-1, a, b, f], Times[4, Power[a, 2], g]]], -1], Plus[Times[b, Power[c, 2], d, f], Times[-1, a, Power[b, 2], f, g], Times[-1, 2, Power[a, 2], c, f, g], Times[6, Power[a, 2], b, Power[g, 2]], Times[c, Plus[Times[3, Power[c, 2], d, f], Times[-1, a, c, Power[f, 2]], Times[-1, b, c, d, g], Times[2, Power[a, 2], Power[g, 2]]], Power[x, 2]], Times[Power[c, 2], g, Plus[Times[3, c, d], Times[-1, a, f]], Power[x, 4]]]]]], x]]]]], And[FreeQ[List[a, b, c, d, e, f, g], x], ZeroQ[Plus[Times[9, Power[c, 3], Power[d, 2]], Times[-1, c, Plus[Power[b, 2], Times[6, a, c]], d, f], Times[Power[a, 2], c, Power[f, 2]], Times[2, a, b, Plus[Times[3, c, d], Times[a, f]], g], Times[-1, 12, Power[a, 3], Power[g, 2]]]], ZeroQ[Plus[Times[3, Power[c, 4], Power[d, 2], e], Times[-1, 3, Power[a, 2], Power[c, 2], d, f, g], Times[Power[a, 3], c, Power[f, 2], g], Times[2, Power[a, 3], Power[g, 2], Plus[Times[b, f], Times[-1, 6, a, g]]], Times[-1, Power[c, 3], d, Plus[Times[2, b, d, f], Times[a, e, f], Times[-1, 12, a, d, g]]]]], NonzeroQ[Plus[Times[3, c, d], Times[-1, a, f]]], NonzeroQ[Plus[Times[b, c, d], Times[-1, 2, Power[a, 2], g]]], NonzeroQ[Plus[Times[b, c, d], Times[-1, a, b, f], Times[4, Power[a, 2], g]]], PosQ[Times[Plus[Times[-1, a, c, Power[f, 2]], Times[12, Power[a, 2], Power[g, 2]], Times[f, Plus[Times[3, Power[c, 2], d], Times[-1, 2, a, b, g]]]], Power[Times[c, g, Plus[Times[3, c, d], Times[-1, a, f]]], -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 4]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 4]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 6]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[Plus[Times[-1, a, c, Power[f, 2]], Times[12, Power[a, 2], Power[g, 2]], Times[3, f, Power[c, 2], d]], Power[Times[c, g, Plus[Times[3, c, d], Times[-1, a, f]]], -1]], 2]], Set[r, Rt[Times[Plus[Times[a, c, Power[f, 2]], Times[4, Power[a, 2], Power[g, 2]], Times[-1, 3, Power[c, 2], d, f]], Power[Times[c, g, Plus[Times[3, c, d], Times[-1, a, f]]], -1]], 2]]], Plus[Simp[Times[c, Power[Times[g, q], -1], ArcTan[Times[Plus[r, Times[2, x]], Power[q, -1]]]], x], Plus[Times[-1, Simp[Times[c, Power[Times[g, q], -1], ArcTan[Times[Plus[r, Times[-1, 2, x]], Power[q, -1]]]], x]], Times[-1, Simp[Times[c, Power[Times[g, q], -1], ArcTan[Times[Times[c, Plus[Times[3, c, d], Times[-1, a, f]], x, Plus[Times[2, Power[a, 2], f, g], Times[-1, Plus[Times[3, Power[c, 2], d, f], Times[-1, a, c, Power[f, 2]], Times[2, Power[a, 2], Power[g, 2]]], Power[x, 2]], Times[-1, c, Plus[Times[3, c, d], Times[-1, a, f]], g, Power[x, 4]]]], Power[Times[8, Power[a, 4], Power[g, 3], q], -1]]]], x]]]]], And[FreeQ[List[a, c, d, e, f, g], x], ZeroQ[Plus[Times[9, Power[c, 3], Power[d, 2]], Times[-1, 6, a, Power[c, 2], d, f], Times[Power[a, 2], c, Power[f, 2]], Times[-1, 12, Power[a, 3], Power[g, 2]]]], ZeroQ[Plus[Times[3, Power[c, 4], Power[d, 2], e], Times[-1, 3, Power[a, 2], Power[c, 2], d, f, g], Times[Power[a, 3], c, Power[f, 2], g], Times[-1, 12, Power[a, 4], Power[g, 3]], Times[-1, a, Power[c, 3], d, Plus[Times[e, f], Times[-1, 12, d, g]]]]], NonzeroQ[Plus[Times[3, c, d], Times[-1, a, f]]], PosQ[Times[Plus[Times[-1, a, c, Power[f, 2]], Times[12, Power[a, 2], Power[g, 2]], Times[3, Power[c, 2], d, f]], Power[Times[c, g, Plus[Times[3, c, d], Times[-1, a, f]]], -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Pattern[v, Blank[]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[m, Exponent[u, x]], Set[n, Exponent[v, x]]], Condition[Module[List[Set[c, Times[Coefficient[u, x, m], Power[Times[Coefficient[v, x, n], Plus[m, 1, Times[n, p]]], -1]]], w], Simp[CompoundExpression[Set[c, Times[Coefficient[u, x, m], Power[Times[Coefficient[v, x, n], Plus[m, 1, Times[n, p]]], -1]]], Set[w, Apart[Plus[u, Times[-1, c, Power[x, Plus[m, Times[-1, n]]], Plus[Times[Plus[m, Times[-1, n], 1], v], Times[Plus[p, 1], x, D[v, x]]]]], x]], If[ZeroQ[w], Times[c, Power[x, Plus[m, Times[-1, n], 1]], Power[v, Plus[p, 1]]], Plus[Times[c, Power[x, Plus[m, Times[-1, n], 1]], Power[v, Plus[p, 1]]], Int[Times[w, Power[v, p]], x]]]], x]], And[Inequality[1, Less, n, LessEqual, Plus[m, 1]], Less[Plus[m, Times[n, p]], -1], FalseQ[DerivativeDivides[v, u, x]]]]], And[RationalQ[p], Less[p, -1], PolynomialQ[u, x], PolynomialQ[v, x], SumQ[v], Not[And[MonomialQ[u, x], BinomialQ[v, x]]], Not[And[ZeroQ[Coefficient[u, x, 0]], ZeroQ[Coefficient[v, x, 0]]]]]]]]