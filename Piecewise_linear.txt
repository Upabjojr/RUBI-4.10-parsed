List[RuleDelayed[HoldPattern[Int[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[c, Simplify[D[u, x]]]], Dist[Times[1, Power[c, -1]], Subst[Int[Power[x, m], x], x, u], x]], And[FreeQ[m, x], PiecewiseLinearQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], -1], Pattern[v, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[a, Simplify[D[u, x]]], Set[b, Simplify[D[v, x]]]], Condition[Plus[Simp[Times[b, x, Power[a, -1]], x], Times[-1, Dist[Times[Plus[Times[b, u], Times[-1, a, v]], Power[a, -1]], Int[Times[1, Power[u, -1]], x], x]]], NonzeroQ[Plus[Times[b, u], Times[-1, a, v]]]]], PiecewiseLinearQ[u, v, x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], -1], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[a, Simplify[D[u, x]]], Set[b, Simplify[D[v, x]]]], Condition[Plus[Simp[Times[Power[v, n], Power[Times[a, n], -1]], x], Times[-1, Dist[Times[Plus[Times[b, u], Times[-1, a, v]], Power[a, -1]], Int[Times[Power[v, Plus[n, -1]], Power[u, -1]], x], x]]], NonzeroQ[Plus[Times[b, u], Times[-1, a, v]]]]], And[PiecewiseLinearQ[u, v, x], RationalQ[n], Greater[n, 0], Unequal[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], -1], Power[Pattern[v, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[a, Simplify[D[u, x]]], Set[b, Simplify[D[v, x]]]], Condition[Plus[Dist[Times[b, Power[Plus[Times[b, u], Times[-1, a, v]], -1]], Int[Times[1, Power[v, -1]], x], x], Times[-1, Dist[Times[a, Power[Plus[Times[b, u], Times[-1, a, v]], -1]], Int[Times[1, Power[u, -1]], x], x]]], NonzeroQ[Plus[Times[b, u], Times[-1, a, v]]]]], PiecewiseLinearQ[u, v, x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], -1], Power[Pattern[v, Blank[]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[a, Simplify[D[u, x]]], Set[b, Simplify[D[v, x]]]], Condition[Simp[Times[2, ArcTan[Times[Sqrt[v], Power[Rt[Times[Plus[Times[b, u], Times[-1, a, v]], Power[a, -1]], 2], -1]]], Power[Times[a, Rt[Times[Plus[Times[b, u], Times[-1, a, v]], Power[a, -1]], 2]], -1]], x], And[NonzeroQ[Plus[Times[b, u], Times[-1, a, v]]], PosQ[Times[Plus[Times[b, u], Times[-1, a, v]], Power[a, -1]]]]]], PiecewiseLinearQ[u, v, x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], -1], Power[Pattern[v, Blank[]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[a, Simplify[D[u, x]]], Set[b, Simplify[D[v, x]]]], Condition[Simp[Times[-2, ArcTanh[Times[Sqrt[v], Power[Rt[Times[-1, Plus[Times[b, u], Times[-1, a, v]], Power[a, -1]], 2], -1]]], Power[Times[a, Rt[Times[-1, Plus[Times[b, u], Times[-1, a, v]], Power[a, -1]], 2]], -1]], x], And[NonzeroQ[Plus[Times[b, u], Times[-1, a, v]]], NegQ[Times[Plus[Times[b, u], Times[-1, a, v]], Power[a, -1]]]]]], PiecewiseLinearQ[u, v, x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], -1], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[a, Simplify[D[u, x]]], Set[b, Simplify[D[v, x]]]], Condition[Plus[Simp[Times[Power[v, Plus[n, 1]], Power[Times[Plus[n, 1], Plus[Times[b, u], Times[-1, a, v]]], -1]], x], Times[-1, Dist[Times[a, Plus[n, 1], Power[Times[Plus[n, 1], Plus[Times[b, u], Times[-1, a, v]]], -1]], Int[Times[Power[v, Plus[n, 1]], Power[u, -1]], x], x]]], NonzeroQ[Plus[Times[b, u], Times[-1, a, v]]]]], And[PiecewiseLinearQ[u, v, x], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], -1], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[a, Simplify[D[u, x]]], Set[b, Simplify[D[v, x]]]], Condition[Simp[Times[Power[v, Plus[n, 1]], Power[Times[Plus[n, 1], Plus[Times[b, u], Times[-1, a, v]]], -1], Hypergeometric2F1[1, Plus[n, 1], Plus[n, 2], Times[-1, a, v, Power[Plus[Times[b, u], Times[-1, a, v]], -1]]]], x], NonzeroQ[Plus[Times[b, u], Times[-1, a, v]]]]], And[PiecewiseLinearQ[u, v, x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Rational[-1, 2]], Power[Pattern[v, Blank[]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[a, Simplify[D[u, x]]], Set[b, Simplify[D[v, x]]]], Condition[Simp[Times[2, Power[Rt[Times[a, b], 2], -1], ArcTanh[Times[Rt[Times[a, b], 2], Sqrt[u], Power[Times[a, Sqrt[v]], -1]]]], x], And[NonzeroQ[Plus[Times[b, u], Times[-1, a, v]]], PosQ[Times[a, b]]]]], PiecewiseLinearQ[u, v, x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Rational[-1, 2]], Power[Pattern[v, Blank[]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[a, Simplify[D[u, x]]], Set[b, Simplify[D[v, x]]]], Condition[Simp[Times[2, Power[Rt[Times[-1, a, b], 2], -1], ArcTan[Times[Rt[Times[-1, a, b], 2], Sqrt[u], Power[Times[a, Sqrt[v]], -1]]]], x], And[NonzeroQ[Plus[Times[b, u], Times[-1, a, v]]], NegQ[Times[a, b]]]]], PiecewiseLinearQ[u, v, x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Pattern[m, Blank[]]], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[a, Simplify[D[u, x]]], Set[b, Simplify[D[v, x]]]], Condition[Times[-1, Simp[Times[Power[u, Plus[m, 1]], Power[v, Plus[n, 1]], Power[Times[Plus[m, 1], Plus[Times[b, u], Times[-1, a, v]]], -1]], x]], NonzeroQ[Plus[Times[b, u], Times[-1, a, v]]]]], And[FreeQ[List[m, n], x], PiecewiseLinearQ[u, v, x], ZeroQ[Plus[m, n, 2]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Pattern[m, Blank[]]], Power[Pattern[v, Blank[]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[a, Simplify[D[u, x]]], Set[b, Simplify[D[v, x]]]], Condition[Plus[Simp[Times[Power[u, Plus[m, 1]], Power[v, n], Power[Times[a, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, n, Power[Times[a, Plus[m, 1]], -1]], Int[Times[Power[u, Plus[m, 1]], Power[v, Plus[n, -1]]], x], x]]], NonzeroQ[Plus[Times[b, u], Times[-1, a, v]]]]], And[FreeQ[List[m, n], x], PiecewiseLinearQ[u, v, x], NonzeroQ[Plus[m, 1]], Or[And[RationalQ[m, n], Less[m, -1], Greater[n, 0], Not[And[IntegerQ[Plus[m, n]], Less[Plus[m, n, 2], 0], Or[FractionQ[m], GreaterEqual[Plus[Times[2, n], m, 1], 0]]]]], And[PositiveIntegerQ[n, m], LessEqual[n, m]], And[PositiveIntegerQ[n], Not[IntegerQ[m]]], And[NegativeIntegerQ[m], Not[IntegerQ[n]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Pattern[m, Blank[]]], Power[Pattern[v, Blank[]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[a, Simplify[D[u, x]]], Set[b, Simplify[D[v, x]]]], Condition[Plus[Simp[Times[Power[u, Plus[m, 1]], Power[v, n], Power[Times[a, Plus[m, n, 1]], -1]], x], Times[-1, Dist[Times[n, Plus[Times[b, u], Times[-1, a, v]], Power[Times[a, Plus[m, n, 1]], -1]], Int[Times[Power[u, m], Power[v, Plus[n, -1]]], x], x]]], NonzeroQ[Plus[Times[b, u], Times[-1, a, v]]]]], And[PiecewiseLinearQ[u, v, x], NonzeroQ[Plus[m, n, 2]], RationalQ[n], Greater[n, 0], NonzeroQ[Plus[m, n, 1]], Not[And[PositiveIntegerQ[m], Or[Not[IntegerQ[n]], Less[0, m, n]]]], Not[And[IntegerQ[Plus[m, n]], Less[Plus[m, n, 2], 0]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Pattern[m, Blank[]]], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[a, Simplify[D[u, x]]], Set[b, Simplify[D[v, x]]]], Condition[Plus[Simp[Times[Power[u, Plus[m, 1]], Power[v, n], Power[Times[a, Plus[m, n, 1]], -1]], x], Times[-1, Dist[Times[n, Plus[Times[b, u], Times[-1, a, v]], Power[Times[a, Plus[m, n, 1]], -1]], Int[Times[Power[u, m], Power[v, Simplify[Plus[n, -1]]]], x], x]]], NonzeroQ[Plus[Times[b, u], Times[-1, a, v]]]]], And[PiecewiseLinearQ[u, v, x], NonzeroQ[Plus[m, n, 1]], Not[RationalQ[n]], SumSimplerQ[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Pattern[m, Blank[]]], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[a, Simplify[D[u, x]]], Set[b, Simplify[D[v, x]]]], Condition[Plus[Times[-1, Simp[Times[Power[u, Plus[m, 1]], Power[v, Plus[n, 1]], Power[Times[Plus[m, 1], Plus[Times[b, u], Times[-1, a, v]]], -1]], x]], Dist[Times[b, Plus[m, n, 2], Power[Times[Plus[m, 1], Plus[Times[b, u], Times[-1, a, v]]], -1]], Int[Times[Power[u, Plus[m, 1]], Power[v, n]], x], x]], NonzeroQ[Plus[Times[b, u], Times[-1, a, v]]]]], And[PiecewiseLinearQ[u, v, x], NonzeroQ[Plus[m, n, 2]], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Pattern[m, Blank[]]], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[a, Simplify[D[u, x]]], Set[b, Simplify[D[v, x]]]], Condition[Plus[Times[-1, Simp[Times[Power[u, Plus[m, 1]], Power[v, Plus[n, 1]], Power[Times[Plus[m, 1], Plus[Times[b, u], Times[-1, a, v]]], -1]], x]], Dist[Times[b, Plus[m, n, 2], Power[Times[Plus[m, 1], Plus[Times[b, u], Times[-1, a, v]]], -1]], Int[Times[Power[u, Simplify[Plus[m, 1]]], Power[v, n]], x], x]], NonzeroQ[Plus[Times[b, u], Times[-1, a, v]]]]], And[PiecewiseLinearQ[u, v, x], Not[RationalQ[m]], SumSimplerQ[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Pattern[m, Blank[]]], Power[Pattern[v, Blank[]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[a, Simplify[D[u, x]]], Set[b, Simplify[D[v, x]]]], Condition[Simp[Times[Power[u, m], Power[v, Plus[n, 1]], Power[Times[b, Plus[n, 1], Power[Times[b, u, Power[Plus[Times[b, u], Times[-1, a, v]], -1]], m]], -1], Hypergeometric2F1[Times[-1, m], Plus[n, 1], Plus[n, 2], Times[-1, a, v, Power[Plus[Times[b, u], Times[-1, a, v]], -1]]]], x], NonzeroQ[Plus[Times[b, u], Times[-1, a, v]]]]], And[PiecewiseLinearQ[u, v, x], Not[IntegerQ[m]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[Pattern[u, Blank[]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[c, Simplify[D[u, x]]]], Plus[Simp[Times[Power[u, n], Plus[a, Times[b, x]], Log[Plus[a, Times[b, x]]], Power[b, -1]], x], Plus[Times[-1, Dist[Times[c, n, Power[b, -1]], Int[Times[Power[u, Plus[n, -1]], Plus[a, Times[b, x]], Log[Plus[a, Times[b, x]]]], x], x]], Times[-1, Int[Power[u, n], x]]]]], And[FreeQ[List[a, b], x], PiecewiseLinearQ[u, x], Not[LinearQ[u, x]], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Log[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[Pattern[u, Blank[]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[c, Simplify[D[u, x]]]], Plus[Simp[Times[Power[u, n], Power[Plus[a, Times[b, x]], Plus[m, 1]], Log[Plus[a, Times[b, x]]], Power[Times[b, Plus[m, 1]], -1]], x], Plus[Times[-1, Dist[Times[1, Power[Plus[m, 1], -1]], Int[Times[Power[u, n], Power[Plus[a, Times[b, x]], m]], x], x]], Times[-1, Dist[Times[c, n, Power[Times[b, Plus[m, 1]], -1]], Int[Times[Power[u, Plus[n, -1]], Power[Plus[a, Times[b, x]], Plus[m, 1]], Log[Plus[a, Times[b, x]]]], x], x]]]]], And[FreeQ[List[a, b, m], x], PiecewiseLinearQ[u, x], Not[LinearQ[u, x]], RationalQ[n], Greater[n, 0], NonzeroQ[Plus[m, 1]]]]]]