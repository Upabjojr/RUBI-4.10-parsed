List[RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], Times[-1, Dist[Times[b, c, n], Int[Times[x, Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, -1]], Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x]]], And[FreeQ[List[a, b, c], x], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], Times[-1, Dist[Times[b, c, n], Int[Times[x, Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]], Power[Times[Sqrt[Plus[-1, Times[c, x]]], Sqrt[Plus[1, Times[c, x]]]], -1]], x], x]]], And[FreeQ[List[a, b, c], x], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[c, Power[Times[b, Plus[n, 1]], -1]], Int[Times[x, Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]], Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x]]], And[FreeQ[List[a, b, c], x], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Sqrt[Plus[-1, Times[c, x]]], Sqrt[Plus[1, Times[c, x]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[c, Power[Times[b, Plus[n, 1]], -1]], Int[Times[x, Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]], Power[Times[Sqrt[Plus[-1, Times[c, x]]], Sqrt[Plus[1, Times[c, x]]]], -1]], x], x]]], And[FreeQ[List[a, b, c], x], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[b, c], -1]], Subst[Int[Times[Power[x, n], Cosh[Plus[Times[a, Power[b, -1]], Times[-1, x, Power[b, -1]]]]], x], x, Plus[a, Times[b, ArcSinh[Times[c, x]]]]], x], FreeQ[List[a, b, c, n], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[Times[b, c], -1], Subst[Int[Times[Power[x, n], Sinh[Plus[Times[a, Power[b, -1]], Times[-1, x, Power[b, -1]]]]], x], x, Plus[a, Times[b, ArcCosh[Times[c, x]]]]], x]], FreeQ[List[a, b, c, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Tanh[x], -1]], x], x, ArcSinh[Times[c, x]]], And[FreeQ[List[a, b, c], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Coth[x], -1]], x], x, ArcCosh[Times[c, x]]], And[FreeQ[List[a, b, c], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[d, x], Plus[m, 1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Times[d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, c, n, Power[Times[d, Plus[m, 1]], -1]], Int[Times[Power[Times[d, x], Plus[m, 1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, -1]], Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, m], x], PositiveIntegerQ[n], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[d, x], Plus[m, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, c, n, Power[Times[d, Plus[m, 1]], -1]], Int[Times[Power[Times[d, x], Plus[m, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]], Power[Times[Sqrt[Plus[-1, Times[c, x]]], Sqrt[Plus[1, Times[c, x]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, m], x], PositiveIntegerQ[n], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Plus[m, 1], -1]], x], Times[-1, Dist[Times[b, c, n, Power[Plus[m, 1], -1]], Int[Times[Power[x, Plus[m, 1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, -1]], Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x]]], And[FreeQ[List[a, b, c], x], PositiveIntegerQ[m], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Plus[m, 1], -1]], x], Times[-1, Dist[Times[b, c, n, Power[Plus[m, 1], -1]], Int[Times[Power[x, Plus[m, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]], Power[Times[Sqrt[Plus[-1, Times[c, x]]], Sqrt[Plus[1, Times[c, x]]]], -1]], x], x]]], And[FreeQ[List[a, b, c], x], PositiveIntegerQ[m], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, m], Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[b, Power[c, Plus[m, 1]], Plus[n, 1]], -1]], Subst[Int[ExpandTrigReduce[Power[Plus[a, Times[b, x]], Plus[n, 1]], Times[Power[Sinh[x], Plus[m, -1]], Plus[m, Times[Plus[m, 1], Power[Sinh[x], 2]]]], x], x], x, ArcSinh[Times[c, x]]], x]]], And[FreeQ[List[a, b, c], x], PositiveIntegerQ[m], RationalQ[n], Inequality[-2, LessEqual, n, Less, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, m], Sqrt[Plus[-1, Times[c, x]]], Sqrt[Plus[1, Times[c, x]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Plus[n, 1]], -1]], x], Dist[Times[1, Power[Times[b, Power[c, Plus[m, 1]], Plus[n, 1]], -1]], Subst[Int[ExpandTrigReduce[Times[Power[Plus[a, Times[b, x]], Plus[n, 1]], Power[Cosh[x], Plus[m, -1]], Plus[m, Times[-1, Plus[m, 1], Power[Cosh[x], 2]]]], x], x], x, ArcCosh[Times[c, x]]], x]], And[FreeQ[List[a, b, c], x], PositiveIntegerQ[m], RationalQ[n], Inequality[-2, LessEqual, n, Less, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, m], Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Plus[n, 1]], -1]], x], Plus[Times[-1, Dist[Times[c, Plus[m, 1], Power[Times[b, Plus[n, 1]], -1]], Int[Times[Power[x, Plus[m, 1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]], Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x]], Times[-1, Dist[Times[m, Power[Times[b, c, Plus[n, 1]], -1]], Int[Times[Power[x, Plus[m, -1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]], Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c], x], PositiveIntegerQ[m], RationalQ[n], Less[n, -2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, m], Sqrt[Plus[-1, Times[c, x]]], Sqrt[Plus[1, Times[c, x]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Plus[n, 1]], -1]], x], Plus[Times[-1, Dist[Times[c, Plus[m, 1], Power[Times[b, Plus[n, 1]], -1]], Int[Times[Power[x, Plus[m, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]], Power[Times[Sqrt[Plus[-1, Times[c, x]]], Sqrt[Plus[1, Times[c, x]]]], -1]], x], x]], Dist[Times[m, Power[Times[b, c, Plus[n, 1]], -1]], Int[Times[Power[x, Plus[m, -1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]], Power[Times[Sqrt[Plus[-1, Times[c, x]]], Sqrt[Plus[1, Times[c, x]]]], -1]], x], x]]], And[FreeQ[List[a, b, c], x], PositiveIntegerQ[m], RationalQ[n], Less[n, -2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[c, Plus[m, 1]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Sinh[x], m], Cosh[x]], x], x, ArcSinh[Times[c, x]]], x], And[FreeQ[List[a, b, c, n], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[c, Plus[m, 1]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Cosh[x], m], Sinh[x]], x], x, ArcCosh[Times[c, x]]], x], And[FreeQ[List[a, b, c, n], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[d, x], m], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], FreeQ[List[a, b, c, d, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[d, x], m], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], FreeQ[List[a, b, c, d, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Log[Plus[a, Times[b, ArcSinh[Times[c, x]]]]], Power[Times[b, c, Sqrt[d]], -1]], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], PositiveQ[d]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], -1], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Log[Plus[a, Times[b, ArcCosh[Times[c, x]]]]], Power[Times[b, c, Sqrt[Times[-1, d1, d2]]], -1]], x], And[FreeQ[List[a, b, c, d1, e1, d2, e2], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], PositiveQ[d1], NegativeQ[d2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Sqrt[d], Plus[n, 1]], -1]], x], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], PositiveQ[d], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Sqrt[Times[-1, d1, d2]], Plus[n, 1]], -1]], x], And[FreeQ[List[a, b, c, d1, e1, d2, e2, n], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], PositiveQ[d1], NegativeQ[d2], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], Not[PositiveQ[d]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]], Power[Times[Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]]], -1]], Int[Times[Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], x], x], And[FreeQ[List[a, b, c, d1, e1, d2, e2, n], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], Not[And[PositiveQ[d1], NegativeQ[d2]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Power[Plus[d, Times[e, Power[x, 2]]], p], x]]], Plus[Dist[Plus[a, Times[b, ArcSinh[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c], Int[SimplifyIntegrand[Times[u, Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Power[Plus[d, Times[e, Power[x, 2]]], p], x]]], Plus[Dist[Plus[a, Times[b, ArcCosh[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c], Int[SimplifyIntegrand[Times[u, Power[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Plus[Times[2, p], 1], -1]], x], Plus[Times[-1, Dist[Times[b, c, n, Power[Times[-1, d], p], Power[Plus[Times[2, p], 1], -1]], Int[Times[x, Power[Plus[-1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]], Dist[Times[2, d, p, Power[Plus[Times[2, p], 1], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, -1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n, p], Greater[n, 0], Greater[p, 0], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[2, -1]], x], Plus[Dist[Times[Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Times[2, Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]]], -1]], Int[Times[Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x], Times[-1, Dist[Times[b, c, n, Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Times[2, Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]]], -1]], Int[Times[x, Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Rational[1, 2]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[2, -1]], x], Plus[Times[-1, Dist[Times[Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]], Power[Times[2, Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], Int[Times[Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], x], x]], Times[-1, Dist[Times[b, c, n, Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]], Power[Times[2, Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], Int[Times[x, Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Plus[Times[2, p], 1], -1]], x], Plus[Dist[Times[2, d, p, Power[Plus[Times[2, p], 1], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, -1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[b, c, n, Power[d, IntPart[p]], Power[Plus[d, Times[e, Power[x, 2]]], FracPart[p]], Power[Times[Plus[Times[2, p], 1], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], FracPart[p]]], -1]], Int[Times[x, Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], RationalQ[n, p], Greater[n, 0], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[d1, Times[e1, x]], p], Power[Plus[d2, Times[e2, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Plus[Times[2, p], 1], -1]], x], Plus[Dist[Times[2, d1, d2, p, Power[Plus[Times[2, p], 1], -1]], Int[Times[Power[Plus[d1, Times[e1, x]], Plus[p, -1]], Power[Plus[d2, Times[e2, x]], Plus[p, -1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[b, c, n, Power[Times[-1, d1, d2], Plus[p, Times[-1, 1, Power[2, -1]]]], Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]], Power[Times[Plus[Times[2, p], 1], Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], Int[Times[x, Power[Plus[-1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[n, p], Greater[n, 0], Greater[p, 0], IntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[d1, Times[e1, x]], p], Power[Plus[d2, Times[e2, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Plus[Times[2, p], 1], -1]], x], Plus[Dist[Times[2, d1, d2, p, Power[Plus[Times[2, p], 1], -1]], Int[Times[Power[Plus[d1, Times[e1, x]], Plus[p, -1]], Power[Plus[d2, Times[e2, x]], Plus[p, -1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[b, c, n, Power[Times[-1, d1, d2], IntPart[p]], Power[Plus[d1, Times[e1, x]], FracPart[p]], Power[Plus[d2, Times[e2, x]], FracPart[p]], Power[Times[Plus[Times[2, p], 1], Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[x, Power[Plus[-1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[n, p], Greater[n, 0], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Times[d, Sqrt[Plus[d, Times[e, Power[x, 2]]]]], -1]], x], Times[-1, Dist[Times[b, c, n, Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], Power[Times[d, Sqrt[Plus[d, Times[e, Power[x, 2]]]]], -1]], Int[Times[x, Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, -1]], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Rational[-3, 2]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Rational[-3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[d1, d2, Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]]], -1]], x], Dist[Times[b, c, n, Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]], Power[Times[d1, d2, Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]]], -1]], Int[Times[x, Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]], Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, b, c, d1, e1, d2, e2], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[2, d, Plus[p, 1]], -1]], x]], Plus[Times[-1, Dist[Times[b, c, n, Power[Times[-1, d], p], Power[Times[2, Plus[p, 1]], -1]], Int[Times[x, Power[Plus[1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]], Dist[Times[Plus[Times[2, p], 3], Power[Times[2, d, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n, p], Greater[n, 0], Less[p, -1], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Times[2, d, Plus[p, 1]], -1]], x]], Plus[Dist[Times[Plus[Times[2, p], 3], Power[Times[2, d, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], x], Dist[Times[b, c, n, Power[d, IntPart[p]], Power[Plus[d, Times[e, Power[x, 2]]], FracPart[p]], Power[Times[2, Plus[p, 1], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], FracPart[p]]], -1]], Int[Times[x, Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], RationalQ[n, p], Greater[n, 0], Less[p, -1], Unequal[p, Times[-3, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Power[Plus[d1, Times[e1, x]], Plus[p, 1]], Power[Plus[d2, Times[e2, x]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[2, d1, d2, Plus[p, 1]], -1]], x]], Plus[Dist[Times[Plus[Times[2, p], 3], Power[Times[2, d1, d2, Plus[p, 1]], -1]], Int[Times[Power[Plus[d1, Times[e1, x]], Plus[p, 1]], Power[Plus[d2, Times[e2, x]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[b, c, n, Power[Times[-1, d1, d2], Plus[p, Times[1, Power[2, -1]]]], Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]], Power[Times[2, Plus[p, 1], Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]]], -1]], Int[Times[x, Power[Plus[-1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[n, p], Greater[n, 0], Less[p, -1], Unequal[p, Times[-3, Power[2, -1]]], IntegerQ[Plus[p, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Power[Plus[d1, Times[e1, x]], Plus[p, 1]], Power[Plus[d2, Times[e2, x]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[2, d1, d2, Plus[p, 1]], -1]], x]], Plus[Dist[Times[Plus[Times[2, p], 3], Power[Times[2, d1, d2, Plus[p, 1]], -1]], Int[Times[Power[Plus[d1, Times[e1, x]], Plus[p, 1]], Power[Plus[d2, Times[e2, x]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[b, c, n, Power[Times[-1, d1, d2], IntPart[p]], Power[Plus[d1, Times[e1, x]], FracPart[p]], Power[Plus[d2, Times[e2, x]], FracPart[p]], Power[Times[2, Plus[p, 1], Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[x, Power[Plus[1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[n, p], Greater[n, 0], Less[p, -1], Unequal[p, Times[-3, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[c, d], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Sech[x]], x], x, ArcSinh[Times[c, x]]], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[Times[c, d], -1], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Csch[x]], x], x, ArcCosh[Times[c, x]]], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[-1, d], p], Power[Plus[-1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[c, Power[Times[-1, d], p], Plus[Times[2, p], 1], Power[Times[b, Plus[n, 1]], -1]], Int[Times[x, Power[Plus[-1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, p], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Less[n, -1], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[c, Plus[Times[2, p], 1], Power[d, IntPart[p]], Power[Plus[d, Times[e, Power[x, 2]]], FracPart[p]], Power[Times[b, Plus[n, 1], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], FracPart[p]]], -1]], Int[Times[x, Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, p], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]], Power[Plus[d1, Times[e1, x]], p], Power[Plus[d2, Times[e2, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[c, Plus[Times[2, p], 1], Power[Times[-1, d1, d2], Plus[p, Times[-1, 1, Power[2, -1]]]], Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]], Power[Times[b, Plus[n, 1], Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], Int[Times[x, Power[Plus[-1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, p], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[n], Less[n, -1], IntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]], Power[Plus[d1, Times[e1, x]], p], Power[Plus[d2, Times[e2, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[c, Plus[Times[2, p], 1], Power[Times[-1, d1, d2], IntPart[p]], Power[Plus[d1, Times[e1, x]], FracPart[p]], Power[Plus[d2, Times[e2, x]], FracPart[p]], Power[Times[b, Plus[n, 1], Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[x, Power[Plus[1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, p], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[d, p], Power[c, -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Cosh[x], Plus[Times[2, p], 1]]], x], x, ArcSinh[Times[c, x]]], x], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], PositiveIntegerQ[Times[2, p]], Or[IntegerQ[p], PositiveQ[d]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[-1, d], p], Power[c, -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Sinh[x], Plus[Times[2, p], 1]]], x], x, ArcCosh[Times[c, x]]], x], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[-1, d1, d2], p], Power[c, -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Sinh[x], Plus[Times[2, p], 1]]], x], x, ArcCosh[Times[c, x]]], x], And[FreeQ[List[a, b, c, d1, e1, d2, e2, n], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], PositiveIntegerQ[Plus[p, Times[1, Power[2, -1]]]], And[PositiveQ[d1], NegativeQ[d2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[d, Plus[p, Times[-1, 1, Power[2, -1]]]], Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], Int[Times[Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], PositiveIntegerQ[Times[2, p]], Not[Or[IntegerQ[p], PositiveQ[d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[-1, d1, d2], Plus[p, Times[-1, 1, Power[2, -1]]]], Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]], Power[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], Int[Times[Power[Plus[1, Times[c, x]], p], Power[Plus[-1, Times[c, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d1, e1, d2, e2, n], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], PositiveIntegerQ[Times[2, p]], Not[And[PositiveQ[d1], NegativeQ[d2]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Power[Plus[d, Times[e, Power[x, 2]]], p], x]]], Plus[Dist[Plus[a, Times[b, ArcSinh[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c], Int[SimplifyIntegrand[Times[u, Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[e, Times[-1, Power[c, 2], d]]], Or[PositiveIntegerQ[p], NegativeIntegerQ[Plus[p, Times[1, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Power[Plus[d, Times[e, Power[x, 2]]], p], x]]], Plus[Dist[Plus[a, Times[b, ArcCosh[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c], Int[SimplifyIntegrand[Times[u, Power[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Times[Power[c, 2], d], e]], Or[PositiveIntegerQ[p], NegativeIntegerQ[Plus[p, Times[1, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Plus[d, Times[e, Power[x, 2]]], p], x], x], And[FreeQ[List[a, b, c, d, e, n], x], NonzeroQ[Plus[e, Times[-1, Power[c, 2], d]]], IntegerQ[p], Or[Greater[p, 0], PositiveIntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Plus[d, Times[e, Power[x, 2]]], p], x], x], And[FreeQ[List[a, b, c, d, e, n], x], NonzeroQ[Plus[Times[Power[c, 2], d], e]], IntegerQ[p], Or[Greater[p, 0], PositiveIntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], FreeQ[List[a, b, c, d, e, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], And[FreeQ[List[a, b, c, d, e, n, p], x], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d1, Times[e1, x]], p], Power[Plus[d2, Times[e2, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], FreeQ[List[a, b, c, d1, e1, d2, e2, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[d, Times[e, x]], FracPart[p]], Power[Plus[f, Times[g, x]], FracPart[p]], Power[Power[Plus[Times[d, f], Times[e, g, Power[x, 2]]], FracPart[p]], -1]], Int[Times[Power[Plus[Times[d, f], Times[e, g, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, n, p], x], ZeroQ[Plus[Times[e, f], Times[d, g]]], ZeroQ[Plus[Times[Power[c, 2], Power[f, 2]], Power[g, 2]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[-1, d], IntPart[p]], Power[Plus[d, Times[e, Power[x, 2]]], FracPart[p]], Power[Times[Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[Power[Plus[1, Times[c, x]], p], Power[Plus[-1, Times[c, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, n, p], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[e, -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Tanh[x]], x], x, ArcSinh[Times[c, x]]], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[e, -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Coth[x]], x], x, ArcCosh[Times[c, x]]], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[2, e, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[b, n, Power[Times[-1, d], p], Power[Times[2, c, Plus[p, 1]], -1]], Int[Times[Power[Plus[1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, p], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0], NonzeroQ[Plus[p, 1]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Times[2, e, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[b, n, Power[d, IntPart[p]], Power[Plus[d, Times[e, Power[x, 2]]], FracPart[p]], Power[Times[2, c, Plus[p, 1], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], FracPart[p]]], -1]], Int[Times[Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, p], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], RationalQ[n], Greater[n, 0], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d1, Times[e1, x]], Plus[p, 1]], Power[Plus[d2, Times[e2, x]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[2, e1, e2, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[b, n, Power[Times[-1, d1, d2], IntPart[p]], Power[Plus[d1, Times[e1, x]], FracPart[p]], Power[Plus[d2, Times[e2, x]], FracPart[p]], Power[Times[2, c, Plus[p, 1], Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[Power[Plus[-1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, p], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[n], Greater[n, 0], NonzeroQ[Plus[p, 1]], IntegerQ[Plus[p, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d1, Times[e1, x]], Plus[p, 1]], Power[Plus[d2, Times[e2, x]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[2, e1, e2, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[b, n, Power[Times[-1, d1, d2], IntPart[p]], Power[Plus[d1, Times[e1, x]], FracPart[p]], Power[Plus[d2, Times[e2, x]], FracPart[p]], Power[Times[2, c, Plus[p, 1], Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[Power[Plus[1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, p], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[n], Greater[n, 0], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[d, -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Times[Cosh[x], Sinh[x]], -1]], x], x, ArcSinh[Times[c, x]]], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[d, -1], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Times[Cosh[x], Sinh[x]], -1]], x], x, ArcCosh[Times[c, x]]], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[d, f, Plus[m, 1]], -1]], x], Dist[Times[b, c, n, Power[Times[-1, d], p], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, m, p], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0], ZeroQ[Plus[m, Times[2, p], 3]], NonzeroQ[Plus[m, 1]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Times[d, f, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, c, n, Power[d, IntPart[p]], Power[Plus[d, Times[e, Power[x, 2]]], FracPart[p]], Power[Times[f, Plus[m, 1], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, m, p], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], RationalQ[n], Greater[n, 0], ZeroQ[Plus[m, Times[2, p], 3]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[d1, Times[e1, x]], Plus[p, 1]], Power[Plus[d2, Times[e2, x]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[d1, d2, f, Plus[m, 1]], -1]], x], Dist[Times[b, c, n, Power[Times[-1, d1, d2], IntPart[p]], Power[Plus[d1, Times[e1, x]], FracPart[p]], Power[Plus[d2, Times[e2, x]], FracPart[p]], Power[Times[f, Plus[m, 1], Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[-1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, m, p], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[n], Greater[n, 0], ZeroQ[Plus[m, Times[2, p], 3]], NonzeroQ[Plus[m, 1]], IntegerQ[Plus[p, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[d1, Times[e1, x]], Plus[p, 1]], Power[Plus[d2, Times[e2, x]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[d1, d2, f, Plus[m, 1]], -1]], x], Dist[Times[b, c, n, Power[Times[-1, d1, d2], IntPart[p]], Power[Plus[d1, Times[e1, x]], FracPart[p]], Power[Plus[d2, Times[e2, x]], FracPart[p]], Power[Times[f, Plus[m, 1], Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, m, p], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[n], Greater[n, 0], ZeroQ[Plus[m, Times[2, p], 3]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, Power[x, 2]]], p], Plus[a, Times[b, ArcSinh[Times[c, x]]]], Power[Times[2, p], -1]], x], Plus[Dist[d, Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, -1]], Plus[a, Times[b, ArcSinh[Times[c, x]]]], Power[x, -1]], x], x], Times[-1, Dist[Times[b, c, Power[d, p], Power[Times[2, p], -1]], Int[Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[-1, 1, Power[2, -1]]]], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, Power[x, 2]]], p], Plus[a, Times[b, ArcCosh[Times[c, x]]]], Power[Times[2, p], -1]], x], Plus[Dist[d, Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, -1]], Plus[a, Times[b, ArcCosh[Times[c, x]]]], Power[x, -1]], x], x], Times[-1, Dist[Times[b, c, Power[Times[-1, d], p], Power[Times[2, p], -1]], Int[Times[Power[Plus[1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]]], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[d, Times[e, Power[x, 2]]], p], Plus[a, Times[b, ArcSinh[Times[c, x]]]], Power[Times[f, Plus[m, 1]], -1]], x], Plus[Times[-1, Dist[Times[b, c, Power[d, p], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[-1, 1, Power[2, -1]]]]], x], x]], Times[-1, Dist[Times[2, e, p, Power[Times[Power[f, 2], Plus[m, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, 2]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, -1]], Plus[a, Times[b, ArcSinh[Times[c, x]]]]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], PositiveIntegerQ[p], NegativeIntegerQ[Times[Plus[m, 1], Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[d, Times[e, Power[x, 2]]], p], Plus[a, Times[b, ArcCosh[Times[c, x]]]], Power[Times[f, Plus[m, 1]], -1]], x], Plus[Times[-1, Dist[Times[b, c, Power[Times[-1, d], p], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]]], x], x]], Times[-1, Dist[Times[2, e, p, Power[Times[Power[f, 2], Plus[m, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, 2]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, -1]], Plus[a, Times[b, ArcCosh[Times[c, x]]]]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[p], NegativeIntegerQ[Times[Plus[m, 1], Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, 2]]], p]], x]]], Plus[Dist[Plus[a, Times[b, ArcSinh[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c], Int[SimplifyIntegrand[Times[u, Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, 2]]], p]], x]]], Plus[Dist[Plus[a, Times[b, ArcCosh[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c], Int[SimplifyIntegrand[Times[u, Power[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[x, m], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], p]], x]]], Plus[Dist[Times[Power[d, p], Plus[a, Times[b, ArcSinh[Times[c, x]]]]], u, x], Times[-1, Dist[Times[b, c, Power[d, p]], Int[SimplifyIntegrand[Times[u, Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], IntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]], Or[PositiveIntegerQ[Times[Plus[m, 1], Power[2, -1]]], NegativeIntegerQ[Times[Plus[m, Times[2, p], 3], Power[2, -1]]]], Unequal[p, Times[-1, Power[2, -1]]], PositiveQ[d]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[x, m], Power[Plus[1, Times[c, x]], p], Power[Plus[-1, Times[c, x]], p]], x]]], Plus[Dist[Times[Power[Times[-1, d1, d2], p], Plus[a, Times[b, ArcCosh[Times[c, x]]]]], u, x], Times[-1, Dist[Times[b, c, Power[Times[-1, d1, d2], p]], Int[SimplifyIntegrand[Times[u, Power[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], IntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]], Or[PositiveIntegerQ[Times[Plus[m, 1], Power[2, -1]]], NegativeIntegerQ[Times[Plus[m, Times[2, p], 3], Power[2, -1]]]], Unequal[p, Times[-1, Power[2, -1]]], PositiveQ[d1], NegativeQ[d2]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[x, m], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], p]], x]]], Plus[Dist[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], p]], x], x], Times[-1, Dist[Times[b, c, Power[d, Plus[p, Times[-1, 1, Power[2, -1]]]], Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], Int[SimplifyIntegrand[Times[u, Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], PositiveIntegerQ[Plus[p, Times[1, Power[2, -1]]]], Or[PositiveIntegerQ[Times[Plus[m, 1], Power[2, -1]]], NegativeIntegerQ[Times[Plus[m, Times[2, p], 3], Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[x, m], Power[Plus[1, Times[c, x]], p], Power[Plus[-1, Times[c, x]], p]], x]]], Plus[Dist[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Int[Times[Power[x, m], Power[Plus[d1, Times[e1, x]], p], Power[Plus[d2, Times[e2, x]], p]], x], x], Times[-1, Dist[Times[b, c, Power[Times[-1, d1, d2], Plus[p, Times[-1, 1, Power[2, -1]]]], Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]], Power[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], Int[SimplifyIntegrand[Times[u, Power[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], PositiveIntegerQ[Plus[p, Times[1, Power[2, -1]]]], Or[PositiveIntegerQ[Times[Plus[m, 1], Power[2, -1]]], NegativeIntegerQ[Times[Plus[m, Times[2, p], 3], Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[f, Plus[m, 1]], -1]], x], Plus[Times[-1, Dist[Times[b, c, n, Power[Times[-1, d], p], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]], Times[-1, Dist[Times[2, e, p, Power[Times[Power[f, 2], Plus[m, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, 2]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, -1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[m, n, p], Greater[n, 0], Greater[p, 0], Less[m, -1], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Times[f, Plus[m, 1]], -1]], x], Plus[Times[-1, Dist[Times[b, c, n, Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Times[f, Plus[m, 1], Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, -1]]], x], x]], Times[-1, Dist[Times[Power[c, 2], Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Times[Power[f, 2], Plus[m, 1], Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]]], -1]], Int[Times[Power[Times[f, x], Plus[m, 2]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], RationalQ[m, n], Greater[n, 0], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Rational[1, 2]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[f, Plus[m, 1]], -1]], x], Plus[Times[-1, Dist[Times[b, c, n, Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]], Power[Times[f, Plus[m, 1], Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]], Times[-1, Dist[Times[Power[c, 2], Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]], Power[Times[Power[f, 2], Plus[m, 1], Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], Int[Times[Times[Power[Times[f, x], Plus[m, 2]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], Power[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[m, n], Greater[n, 0], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Times[f, Plus[m, 1]], -1]], x], Plus[Times[-1, Dist[Times[2, e, p, Power[Times[Power[f, 2], Plus[m, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, 2]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, -1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], x]], Times[-1, Dist[Times[b, c, n, Power[d, IntPart[p]], Power[Plus[d, Times[e, Power[x, 2]]], FracPart[p]], Power[Times[f, Plus[m, 1], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], RationalQ[m, n, p], Greater[n, 0], Greater[p, 0], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[d1, Times[e1, x]], p], Power[Plus[d2, Times[e2, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[f, Plus[m, 1]], -1]], x], Plus[Times[-1, Dist[Times[2, e1, e2, p, Power[Times[Power[f, 2], Plus[m, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, 2]], Power[Plus[d1, Times[e1, x]], Plus[p, -1]], Power[Plus[d2, Times[e2, x]], Plus[p, -1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x]], Times[-1, Dist[Times[b, c, n, Power[Times[-1, d1, d2], Plus[p, Times[-1, 1, Power[2, -1]]]], Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]], Power[Times[f, Plus[m, 1], Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[-1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[m, n, p], Greater[n, 0], Greater[p, 0], Less[m, -1], IntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[f, Plus[m, Times[2, p], 1]], -1]], x], Plus[Dist[Times[2, d, p, Power[Plus[m, Times[2, p], 1], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, -1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[b, c, n, Power[Times[-1, d], p], Power[Times[f, Plus[m, Times[2, p], 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n, p], Greater[n, 0], Greater[p, 0], Not[And[RationalQ[m], Less[m, -1]]], IntegerQ[p], Or[RationalQ[m], ZeroQ[Plus[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Times[f, Plus[m, 2]], -1]], x], Plus[Dist[Times[Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Times[Plus[m, 2], Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x], Times[-1, Dist[Times[b, c, n, Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Times[f, Plus[m, 2], Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], RationalQ[n], Greater[n, 0], Not[And[RationalQ[m], Less[m, -1]]], Or[RationalQ[m], ZeroQ[Plus[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Rational[1, 2]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[f, Plus[m, 2]], -1]], x], Plus[Times[-1, Dist[Times[Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]], Power[Times[Plus[m, 2], Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], x], x]], Times[-1, Dist[Times[b, c, n, Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]], Power[Times[f, Plus[m, 2], Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, m], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[n], Greater[n, 0], Not[And[RationalQ[m], Less[m, -1]]], Or[RationalQ[m], ZeroQ[Plus[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Times[f, Plus[m, Times[2, p], 1]], -1]], x], Plus[Dist[Times[2, d, p, Power[Plus[m, Times[2, p], 1], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, -1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[b, c, n, Power[d, IntPart[p]], Power[Plus[d, Times[e, Power[x, 2]]], FracPart[p]], Power[Times[f, Plus[m, Times[2, p], 1], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], RationalQ[n, p], Greater[n, 0], Greater[p, 0], Not[And[RationalQ[m], Less[m, -1]]], Or[RationalQ[m], ZeroQ[Plus[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[d1, Times[e1, x]], p], Power[Plus[d2, Times[e2, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[f, Plus[m, Times[2, p], 1]], -1]], x], Plus[Dist[Times[2, d1, d2, p, Power[Plus[m, Times[2, p], 1], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[d1, Times[e1, x]], Plus[p, -1]], Power[Plus[d2, Times[e2, x]], Plus[p, -1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[b, c, n, Power[Times[-1, d1, d2], Plus[p, Times[-1, 1, Power[2, -1]]]], Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]], Power[Times[f, Plus[m, Times[2, p], 1], Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[-1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, m], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[n, p], Greater[n, 0], Greater[p, 0], Not[And[RationalQ[m], Less[m, -1]]], IntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]], Or[RationalQ[m], ZeroQ[Plus[n, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[d, f, Plus[m, 1]], -1]], x], Plus[Dist[Times[b, c, n, Power[Times[-1, d], p], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x], Dist[Times[Power[c, 2], Plus[m, Times[2, p], 3], Power[Times[Power[f, 2], Plus[m, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, 2]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, p], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[m, n], Greater[n, 0], Less[m, -1], IntegerQ[m], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Times[d, f, Plus[m, 1]], -1]], x], Plus[Times[-1, Dist[Times[Power[c, 2], Plus[m, Times[2, p], 3], Power[Times[Power[f, 2], Plus[m, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, 2]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], x]], Times[-1, Dist[Times[b, c, n, Power[d, IntPart[p]], Power[Plus[d, Times[e, Power[x, 2]]], FracPart[p]], Power[Times[f, Plus[m, 1], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, p], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], RationalQ[m, n], Greater[n, 0], Less[m, -1], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[d1, Times[e1, x]], Plus[p, 1]], Power[Plus[d2, Times[e2, x]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[d1, d2, f, Plus[m, 1]], -1]], x], Plus[Dist[Times[Power[c, 2], Plus[m, Times[2, p], 3], Power[Times[Power[f, 2], Plus[m, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, 2]], Power[Plus[d1, Times[e1, x]], p], Power[Plus[d2, Times[e2, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], Dist[Times[b, c, n, Power[Times[-1, d1, d2], IntPart[p]], Power[Plus[d1, Times[e1, x]], FracPart[p]], Power[Plus[d2, Times[e2, x]], FracPart[p]], Power[Times[f, Plus[m, 1], Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[-1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, p], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[m, n], Greater[n, 0], Less[m, -1], IntegerQ[m], IntegerQ[Plus[p, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[d1, Times[e1, x]], Plus[p, 1]], Power[Plus[d2, Times[e2, x]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[d1, d2, f, Plus[m, 1]], -1]], x], Plus[Dist[Times[Power[c, 2], Plus[m, Times[2, p], 3], Power[Times[Power[f, 2], Plus[m, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, 2]], Power[Plus[d1, Times[e1, x]], p], Power[Plus[d2, Times[e2, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], Dist[Times[b, c, n, Power[Times[-1, d1, d2], IntPart[p]], Power[Plus[d1, Times[e1, x]], FracPart[p]], Power[Plus[d2, Times[e2, x]], FracPart[p]], Power[Times[f, Plus[m, 1], Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, p], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[m, n], Greater[n, 0], Less[m, -1], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[f, Power[Times[f, x], Plus[m, -1]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[2, e, Plus[p, 1]], -1]], x], Plus[Times[-1, Dist[Times[b, f, n, Power[Times[-1, d], p], Power[Times[2, c, Plus[p, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, -1]], Power[Plus[1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]], Times[-1, Dist[Times[Power[f, 2], Plus[m, -1], Power[Times[2, e, Plus[p, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, -2]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[m, n], Greater[n, 0], Less[p, -1], Greater[m, 1], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[f, Power[Times[f, x], Plus[m, -1]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Times[2, e, Plus[p, 1]], -1]], x], Plus[Times[-1, Dist[Times[Power[f, 2], Plus[m, -1], Power[Times[2, e, Plus[p, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, -2]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], x]], Times[-1, Dist[Times[b, f, n, Power[d, IntPart[p]], Power[Plus[d, Times[e, Power[x, 2]]], FracPart[p]], Power[Times[2, c, Plus[p, 1], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, -1]], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], RationalQ[m, n, p], Greater[n, 0], Less[p, -1], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[f, Power[Times[f, x], Plus[m, -1]], Power[Plus[d1, Times[e1, x]], Plus[p, 1]], Power[Plus[d2, Times[e2, x]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[2, e1, e2, Plus[p, 1]], -1]], x], Plus[Times[-1, Dist[Times[Power[f, 2], Plus[m, -1], Power[Times[2, e1, e2, Plus[p, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, -2]], Power[Plus[d1, Times[e1, x]], Plus[p, 1]], Power[Plus[d2, Times[e2, x]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x]], Times[-1, Dist[Times[b, f, n, Power[Times[-1, d1, d2], IntPart[p]], Power[Plus[d1, Times[e1, x]], FracPart[p]], Power[Plus[d2, Times[e2, x]], FracPart[p]], Power[Times[2, c, Plus[p, 1], Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, -1]], Power[Plus[-1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[m, n, p], Greater[n, 0], Less[p, -1], Greater[m, 1], IntegerQ[Plus[p, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[f, Power[Times[f, x], Plus[m, -1]], Power[Plus[d1, Times[e1, x]], Plus[p, 1]], Power[Plus[d2, Times[e2, x]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[2, e1, e2, Plus[p, 1]], -1]], x], Plus[Times[-1, Dist[Times[Power[f, 2], Plus[m, -1], Power[Times[2, e1, e2, Plus[p, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, -2]], Power[Plus[d1, Times[e1, x]], Plus[p, 1]], Power[Plus[d2, Times[e2, x]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x]], Times[-1, Dist[Times[b, f, n, Power[Times[-1, d1, d2], IntPart[p]], Power[Plus[d1, Times[e1, x]], FracPart[p]], Power[Plus[d2, Times[e2, x]], FracPart[p]], Power[Times[2, c, Plus[p, 1], Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, -1]], Power[Plus[1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[m, n, p], Greater[n, 0], Less[p, -1], Not[IntegerQ[p]], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[2, d, f, Plus[p, 1]], -1]], x]], Plus[Dist[Times[Plus[m, Times[2, p], 3], Power[Times[2, d, Plus[p, 1]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[b, c, n, Power[Times[-1, d], p], Power[Times[2, f, Plus[p, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n, p], Greater[n, 0], Less[p, -1], Not[And[RationalQ[m], Greater[m, 1]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Times[2, d, f, Plus[p, 1]], -1]], x]], Plus[Dist[Times[Plus[m, Times[2, p], 3], Power[Times[2, d, Plus[p, 1]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], x], Dist[Times[b, c, n, Power[d, IntPart[p]], Power[Plus[d, Times[e, Power[x, 2]]], FracPart[p]], Power[Times[2, f, Plus[p, 1], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], RationalQ[n, p], Greater[n, 0], Less[p, -1], Not[And[RationalQ[m], Greater[m, 1]]], Or[IntegerQ[m], IntegerQ[p], Equal[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[d1, Times[e1, x]], Plus[p, 1]], Power[Plus[d2, Times[e2, x]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[2, d1, d2, f, Plus[p, 1]], -1]], x]], Plus[Dist[Times[Plus[m, Times[2, p], 3], Power[Times[2, d1, d2, Plus[p, 1]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[d1, Times[e1, x]], Plus[p, 1]], Power[Plus[d2, Times[e2, x]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[b, c, n, Power[Times[-1, d1, d2], IntPart[p]], Power[Plus[d1, Times[e1, x]], FracPart[p]], Power[Plus[d2, Times[e2, x]], FracPart[p]], Power[Times[2, f, Plus[p, 1], Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[-1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, m], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[n, p], Greater[n, 0], Less[p, -1], Not[And[RationalQ[m], Greater[m, 1]]], Or[IntegerQ[m], Equal[n, 1]], IntegerQ[Plus[p, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[d1, Times[e1, x]], Plus[p, 1]], Power[Plus[d2, Times[e2, x]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[2, d1, d2, f, Plus[p, 1]], -1]], x]], Plus[Dist[Times[Plus[m, Times[2, p], 3], Power[Times[2, d1, d2, Plus[p, 1]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[d1, Times[e1, x]], Plus[p, 1]], Power[Plus[d2, Times[e2, x]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[b, c, n, Power[Times[-1, d1, d2], IntPart[p]], Power[Plus[d1, Times[e1, x]], FracPart[p]], Power[Plus[d2, Times[e2, x]], FracPart[p]], Power[Times[2, f, Plus[p, 1], Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, m], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[n, p], Greater[n, 0], Less[p, -1], Not[And[RationalQ[m], Greater[m, 1]]], Or[IntegerQ[m], IntegerQ[p], Equal[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[f, Power[Times[f, x], Plus[m, -1]], Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Times[e, m], -1]], x], Plus[Times[-1, Dist[Times[Power[f, 2], Plus[m, -1], Power[Times[Power[c, 2], m], -1]], Int[Times[Times[Power[Times[f, x], Plus[m, -2]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], x], x]], Times[-1, Dist[Times[b, f, n, Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], Power[Times[c, m, Sqrt[Plus[d, Times[e, Power[x, 2]]]]], -1]], Int[Times[Power[Times[f, x], Plus[m, -1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], RationalQ[m, n], Greater[n, 0], Greater[m, 1], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[f, Power[Times[f, x], Plus[m, -1]], Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[e1, e2, m], -1]], x], Plus[Dist[Times[Power[f, 2], Plus[m, -1], Power[Times[Power[c, 2], m], -1]], Int[Times[Power[Times[f, x], Plus[m, -2]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]]], -1]], x], x], Dist[Times[b, f, n, Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]], Power[Times[c, d1, d2, m, Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], Int[Times[Power[Times[f, x], Plus[m, -1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[m, n], Greater[n, 0], Greater[m, 1], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[c, Plus[m, 1]], Sqrt[d]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Sinh[x], m]], x], x, ArcSinh[Times[c, x]]], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], PositiveQ[d], PositiveIntegerQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[c, Plus[m, 1]], Sqrt[Times[-1, d1, d2]]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Cosh[x], m]], x], x, ArcCosh[Times[c, x]]], x], And[FreeQ[List[a, b, c, d1, e1, d2, e2], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], PositiveIntegerQ[n], PositiveQ[d1], NegativeQ[d2], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Plus[a, Times[b, ArcSinh[Times[c, x]]]], Hypergeometric2F1[Times[1, Power[2, -1]], Times[Plus[1, m], Power[2, -1]], Times[Plus[3, m], Power[2, -1]], Times[-1, Power[c, 2], Power[x, 2]]], Power[Times[Sqrt[d], f, Plus[m, 1]], -1]], x], Times[-1, Simp[Times[b, c, Power[Times[f, x], Plus[m, 2]], HypergeometricPFQ[List[1, Plus[1, Times[m, Power[2, -1]]], Plus[1, Times[m, Power[2, -1]]]], List[Plus[Times[3, Power[2, -1]], Times[m, Power[2, -1]]], Plus[2, Times[m, Power[2, -1]]]], Times[-1, Power[c, 2], Power[x, 2]]], Power[Times[Sqrt[d], Power[f, 2], Plus[m, 1], Plus[m, 2]], -1]], x]]], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], PositiveQ[d], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], Plus[m, 1]], Sqrt[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]]], Plus[a, Times[b, ArcCosh[Times[c, x]]]], Hypergeometric2F1[Times[1, Power[2, -1]], Times[Plus[1, m], Power[2, -1]], Times[Plus[3, m], Power[2, -1]], Times[Power[c, 2], Power[x, 2]]], Power[Times[f, Plus[m, 1], Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]]], -1]], x], Simp[Times[b, c, Power[Times[f, x], Plus[m, 2]], HypergeometricPFQ[List[1, Plus[1, Times[m, Power[2, -1]]], Plus[1, Times[m, Power[2, -1]]]], List[Plus[Times[3, Power[2, -1]], Times[m, Power[2, -1]]], Plus[2, Times[m, Power[2, -1]]]], Times[Power[c, 2], Power[x, 2]]], Power[Times[Sqrt[Times[-1, d1, d2]], Power[f, 2], Plus[m, 1], Plus[m, 2]], -1]], x]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, m], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], PositiveQ[d1], NegativeQ[d2], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], RationalQ[n], Greater[n, 0], Not[PositiveQ[d]], Or[IntegerQ[m], Equal[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]], Power[Times[Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], x], x], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, m], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[n], Greater[n, 0], Not[And[PositiveQ[d1], NegativeQ[d2]]], Or[IntegerQ[m], Equal[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[f, Power[Times[f, x], Plus[m, -1]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[e, Plus[m, Times[2, p], 1]], -1]], x], Plus[Times[-1, Dist[Times[b, f, n, Power[Times[-1, d], p], Power[Times[c, Plus[m, Times[2, p], 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, -1]], Power[Plus[1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]], Dist[Times[Power[f, 2], Plus[m, -1], Power[Times[Power[c, 2], Plus[m, Times[2, p], 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, -2]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, p], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[m, n], Greater[n, 0], Greater[m, 1], NonzeroQ[Plus[m, Times[2, p], 1]], IntegerQ[p], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[f, Power[Times[f, x], Plus[m, -1]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Times[e, Plus[m, Times[2, p], 1]], -1]], x], Plus[Times[-1, Dist[Times[Power[f, 2], Plus[m, -1], Power[Times[Power[c, 2], Plus[m, Times[2, p], 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, -2]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], x]], Times[-1, Dist[Times[b, f, n, Power[d, IntPart[p]], Power[Plus[d, Times[e, Power[x, 2]]], FracPart[p]], Power[Times[c, Plus[m, Times[2, p], 1], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, -1]], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, p], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], RationalQ[m, n], Greater[n, 0], Greater[m, 1], NonzeroQ[Plus[m, Times[2, p], 1]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[f, Power[Times[f, x], Plus[m, -1]], Power[Plus[d1, Times[e1, x]], Plus[p, 1]], Power[Plus[d2, Times[e2, x]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[e1, e2, Plus[m, Times[2, p], 1]], -1]], x], Plus[Dist[Times[Power[f, 2], Plus[m, -1], Power[Times[Power[c, 2], Plus[m, Times[2, p], 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, -2]], Power[Plus[d1, Times[e1, x]], p], Power[Plus[d2, Times[e2, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[b, f, n, Power[Times[-1, d1, d2], IntPart[p]], Power[Plus[d1, Times[e1, x]], FracPart[p]], Power[Plus[d2, Times[e2, x]], FracPart[p]], Power[Times[c, Plus[m, Times[2, p], 1], Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, -1]], Power[Plus[-1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, p], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[m, n], Greater[n, 0], Greater[m, 1], NonzeroQ[Plus[m, Times[2, p], 1]], IntegerQ[m], IntegerQ[Plus[p, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[f, Power[Times[f, x], Plus[m, -1]], Power[Plus[d1, Times[e1, x]], Plus[p, 1]], Power[Plus[d2, Times[e2, x]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[e1, e2, Plus[m, Times[2, p], 1]], -1]], x], Plus[Dist[Times[Power[f, 2], Plus[m, -1], Power[Times[Power[c, 2], Plus[m, Times[2, p], 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, -2]], Power[Plus[d1, Times[e1, x]], p], Power[Plus[d2, Times[e2, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[b, f, n, Power[Times[-1, d1, d2], IntPart[p]], Power[Plus[d1, Times[e1, x]], FracPart[p]], Power[Plus[d2, Times[e2, x]], FracPart[p]], Power[Times[c, Plus[m, Times[2, p], 1], Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, -1]], Power[Plus[1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]]], x], x]]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, p], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[m, n], Greater[n, 0], Greater[m, 1], NonzeroQ[Plus[m, Times[2, p], 1]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], m], Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Plus[n, 1]], -1]], x], Dist[Times[f, m, Power[Times[-1, d], p], Power[Times[b, c, Plus[n, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, -1]], Power[Plus[1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, m, p], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Less[n, -1], ZeroQ[Plus[m, Times[2, p], 1]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], m], Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[f, m, Power[d, IntPart[p]], Power[Plus[d, Times[e, Power[x, 2]]], FracPart[p]], Power[Times[b, c, Plus[n, 1], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, -1]], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, m, p], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], RationalQ[n], Less[n, -1], ZeroQ[Plus[m, Times[2, p], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], m], Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]], Power[Plus[d1, Times[e1, x]], p], Power[Plus[d2, Times[e2, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Plus[n, 1]], -1]], x], Dist[Times[f, m, Power[Times[-1, d1, d2], IntPart[p]], Power[Plus[d1, Times[e1, x]], FracPart[p]], Power[Plus[d2, Times[e2, x]], FracPart[p]], Power[Times[b, c, Plus[n, 1], Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, -1]], Power[Plus[-1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, m, p], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[n], Less[n, -1], ZeroQ[Plus[m, Times[2, p], 1]], IntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], m], Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]], Power[Plus[d1, Times[e1, x]], p], Power[Plus[d2, Times[e2, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Plus[n, 1]], -1]], x], Dist[Times[f, m, Power[Times[-1, d1, d2], IntPart[p]], Power[Plus[d1, Times[e1, x]], FracPart[p]], Power[Plus[d2, Times[e2, x]], FracPart[p]], Power[Times[b, c, Plus[n, 1], Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, -1]], Power[Plus[1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, m, p], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[n], Less[n, -1], ZeroQ[Plus[m, Times[2, p], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], m], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Sqrt[d], Plus[n, 1]], -1]], x], Times[-1, Dist[Times[f, m, Power[Times[b, c, Sqrt[d], Plus[n, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, -1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], RationalQ[n], Less[n, -1], PositiveQ[d]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], m], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Sqrt[Times[-1, d1, d2]], Plus[n, 1]], -1]], x], Times[-1, Dist[Times[Times[f, m], Power[Times[b, c, Sqrt[Times[-1, d1, d2]], Plus[n, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, -1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, m], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[n], Less[n, -1], PositiveQ[d1], NegativeQ[d2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], RationalQ[n], Less[n, -1], Not[PositiveQ[d]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]], Power[Times[Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], x], x], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, m], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[n], Less[n, -1], Not[And[PositiveQ[d1], NegativeQ[d2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], m], Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Plus[n, 1]], -1]], x], Plus[Dist[Times[f, m, Power[Times[-1, d], p], Power[Times[b, c, Plus[n, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, -1]], Power[Plus[1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]]], x], x], Times[-1, Dist[Times[c, Power[Times[-1, d], p], Plus[m, Times[2, p], 1], Power[Times[b, f, Plus[n, 1]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[-1, Times[c, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Less[n, -1], IntegerQ[m], Greater[m, -3], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], m], Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Plus[n, 1]], -1]], x], Plus[Times[-1, Dist[Times[f, m, Power[d, IntPart[p]], Power[Plus[d, Times[e, Power[x, 2]]], FracPart[p]], Power[Times[b, c, Plus[n, 1], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, -1]], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]]], x], x]], Times[-1, Dist[Times[c, Plus[m, Times[2, p], 1], Power[d, IntPart[p]], Power[Plus[d, Times[e, Power[x, 2]]], FracPart[p]], Power[Times[b, f, Plus[n, 1], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], RationalQ[n], Less[n, -1], IntegerQ[m], Greater[m, -3], PositiveIntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[f, x], m], Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]], Power[Plus[d1, Times[e1, x]], p], Power[Plus[d2, Times[e2, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Plus[n, 1]], -1]], x], Plus[Dist[Times[f, m, Power[Times[-1, d1, d2], IntPart[p]], Power[Plus[d1, Times[e1, x]], FracPart[p]], Power[Plus[d2, Times[e2, x]], FracPart[p]], Power[Times[b, c, Plus[n, 1], Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, -1]], Power[Plus[-1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]]], x], x], Times[-1, Dist[Times[c, Plus[m, Times[2, p], 1], Power[Times[-1, d1, d2], IntPart[p]], Power[Plus[d1, Times[e1, x]], FracPart[p]], Power[Plus[d2, Times[e2, x]], FracPart[p]], Power[Times[b, f, Plus[n, 1], Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Power[Plus[-1, Times[Power[c, 2], Power[x, 2]]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]]], x], x]]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], RationalQ[n], Less[n, -1], IntegerQ[m], Greater[m, -3], PositiveIntegerQ[Plus[p, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[d, p], Power[Power[c, Plus[m, 1]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Sinh[x], m], Power[Cosh[x], Plus[Times[2, p], 1]]], x], x, ArcSinh[Times[c, x]]], x], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], IntegerQ[Times[2, p]], Greater[p, -1], PositiveIntegerQ[m], Or[IntegerQ[p], PositiveQ[d]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[-1, d], p], Power[Power[c, Plus[m, 1]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Cosh[x], m], Power[Sinh[x], Plus[Times[2, p], 1]]], x], x, ArcCosh[Times[c, x]]], x], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[p], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[-1, d1, d2], p], Power[Power[c, Plus[m, 1]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Cosh[x], m], Power[Sinh[x], Plus[Times[2, p], 1]]], x], x, ArcCosh[Times[c, x]]], x], And[FreeQ[List[a, b, c, d1, e1, d2, e2, n], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], IntegerQ[Plus[p, Times[1, Power[2, -1]]]], Greater[p, -1], PositiveIntegerQ[m], And[PositiveQ[d1], NegativeQ[d2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[d, IntPart[p]], Power[Plus[d, Times[e, Power[x, 2]]], FracPart[p]], Power[Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], FracPart[p]], -1]], Int[Times[Power[x, m], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], IntegerQ[Times[2, p]], Greater[p, -1], PositiveIntegerQ[m], Not[Or[IntegerQ[p], PositiveQ[d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[-1, d1, d2], IntPart[p]], Power[Plus[d1, Times[e1, x]], FracPart[p]], Power[Plus[d2, Times[e2, x]], FracPart[p]], Power[Times[Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[Power[x, m], Power[Plus[1, Times[c, x]], p], Power[Plus[-1, Times[c, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d1, e1, d2, e2, n], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], IntegerQ[Times[2, p]], Greater[p, -1], PositiveIntegerQ[m], Not[Or[IntegerQ[p], And[PositiveQ[d1], NegativeQ[d2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, Times[1, Power[2, -1]]]]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, n], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], PositiveQ[d], PositiveIntegerQ[Plus[p, Times[1, Power[2, -1]]]], Not[PositiveIntegerQ[Times[Plus[m, 1], Power[2, -1]]]], IntegerQ[m], Less[-3, m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]]], -1]], Times[Power[Times[f, x], m], Power[Plus[d1, Times[e1, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[d2, Times[e2, x]], Plus[p, Times[1, Power[2, -1]]]]], x], x], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, m, n], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], PositiveQ[d1], NegativeQ[d2], PositiveIntegerQ[Plus[p, Times[1, Power[2, -1]]]], Not[PositiveIntegerQ[Times[Plus[m, 1], Power[2, -1]]]], IntegerQ[m], Less[-3, m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[d, Power[Times[f, x], Plus[m, 1]], Plus[a, Times[b, ArcCosh[Times[c, x]]]], Power[Times[f, Plus[m, 1]], -1]], x], Plus[Times[-1, Dist[Times[b, c, Power[Times[f, Plus[m, 1], Plus[m, 3]], -1]], Int[Times[Power[Times[f, x], Plus[m, 1]], Plus[Times[d, Plus[m, 3]], Times[e, Plus[m, 1], Power[x, 2]]], Power[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], x], x]], Simp[Times[e, Power[Times[f, x], Plus[m, 3]], Plus[a, Times[b, ArcCosh[Times[c, x]]]], Power[Times[Power[f, 3], Plus[m, 3]], -1]], x]]], And[FreeQ[List[a, b, c, d, e, f, m], x], NonzeroQ[Plus[Times[Power[c, 2], d], e]], NonzeroQ[Plus[m, 1]], NonzeroQ[Plus[m, 3]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[x, Blank[]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Plus[a, Times[b, ArcSinh[Times[c, x]]]], Power[Times[2, e, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[b, c, Power[Times[2, e, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, p], x], NonzeroQ[Plus[e, Times[-1, Power[c, 2], d]]], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[x, Blank[]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Plus[a, Times[b, ArcCosh[Times[c, x]]]], Power[Times[2, e, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[b, c, Power[Times[2, e, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, p], x], NonzeroQ[Plus[Times[Power[c, 2], d], e]], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, 2]]], p]], x]]], Plus[Dist[Plus[a, Times[b, ArcSinh[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c], Int[SimplifyIntegrand[Times[u, Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, m], x], NonzeroQ[Plus[e, Times[-1, Power[c, 2], d]]], IntegerQ[p], Or[Greater[p, 0], And[PositiveIntegerQ[Times[Plus[m, -1], Power[2, -1]]], LessEqual[Plus[m, p], 0]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, 2]]], p]], x]]], Plus[Dist[Plus[a, Times[b, ArcCosh[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c], Int[SimplifyIntegrand[Times[u, Power[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, m], x], NonzeroQ[Plus[Times[Power[c, 2], d], e]], IntegerQ[p], Or[Greater[p, 0], And[PositiveIntegerQ[Times[Plus[m, -1], Power[2, -1]]], LessEqual[Plus[m, p], 0]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, 2]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[e, Times[-1, Power[c, 2], d]]], PositiveIntegerQ[n], IntegerQ[p], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, 2]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[n], IntegerQ[p], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], FreeQ[List[a, b, c, d, e, f, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[f, x], m], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], And[FreeQ[List[a, b, c, d, e, f, m, n, p], x], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Times[f, x], m], Power[Plus[d1, Times[e1, x]], p], Power[Plus[d2, Times[e2, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], FreeQ[List[a, b, c, d1, e1, d2, e2, f, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[d, Times[e, x]], FracPart[p]], Power[Plus[f, Times[g, x]], FracPart[p]], Power[Power[Plus[Times[d, f], Times[e, g, Power[x, 2]]], FracPart[p]], -1]], Int[Times[Power[Times[h, x], m], Power[Plus[Times[d, f], Times[e, g, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, h, m, n, p], x], ZeroQ[Plus[Times[e, f], Times[d, g]]], ZeroQ[Plus[Times[Power[c, 2], Power[f, 2]], Power[g, 2]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[-1, d], IntPart[p]], Power[Plus[d, Times[e, Power[x, 2]]], FracPart[p]], Power[Times[Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[Power[Times[f, x], m], Power[Plus[1, Times[c, x]], p], Power[Plus[-1, Times[c, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, n, p], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Cosh[x], Power[Plus[Times[c, d], Times[e, Sinh[x]]], -1]], x], x, ArcSinh[Times[c, x]]], And[FreeQ[List[a, b, c, d, e], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Sinh[x], Power[Plus[Times[c, d], Times[e, Cosh[x]]], -1]], x], x, ArcCosh[Times[c, x]]], And[FreeQ[List[a, b, c, d, e], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Times[e, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, c, n, Power[Times[e, Plus[m, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, -1]], Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, m], x], PositiveIntegerQ[n], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[e, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, c, n, Power[Times[e, Plus[m, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]], Power[Times[Sqrt[Plus[-1, Times[c, x]]], Sqrt[Plus[1, Times[c, x]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, m], x], PositiveIntegerQ[n], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e], x], PositiveIntegerQ[m], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e], x], PositiveIntegerQ[m], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[c, Plus[m, 1]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Cosh[x], Power[Plus[Times[c, d], Times[e, Sinh[x]]], m]], x], x, ArcSinh[Times[c, x]]], x], And[FreeQ[List[a, b, c, d, e, n], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[c, Plus[m, 1]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Plus[Times[c, d], Times[e, Cosh[x]]], m], Sinh[x]], x], x, ArcCosh[Times[c, x]]], x], And[FreeQ[List[a, b, c, d, e, n], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[Px, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Px, x]]], Plus[Dist[Plus[a, Times[b, ArcSinh[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c], Int[SimplifyIntegrand[Times[u, Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c], x], PolynomialQ[Px, x]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[Px, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Px, x]]], Plus[Dist[Plus[a, Times[b, ArcCosh[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c, Sqrt[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]]], Power[Times[Sqrt[Plus[-1, Times[c, x]]], Sqrt[Plus[1, Times[c, x]]]], -1]], Int[SimplifyIntegrand[Times[u, Power[Sqrt[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c], x], PolynomialQ[Px, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[Px, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Px, Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, n], x], PolynomialQ[Px, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[Px, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Px, Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, n], x], PolynomialQ[Px, x]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[Px, Blank[]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Px, Power[Plus[d, Times[e, x]], m]], x]]], Plus[Dist[Plus[a, Times[b, ArcSinh[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c], Int[SimplifyIntegrand[Times[u, Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e, m], x], PolynomialQ[Px, x]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[Px, Blank[]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Px, Power[Plus[d, Times[e, x]], m]], x]]], Plus[Dist[Plus[a, Times[b, ArcCosh[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c, Sqrt[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]]], Power[Times[Sqrt[Plus[-1, Times[c, x]]], Sqrt[Plus[1, Times[c, x]]]], -1]], Int[SimplifyIntegrand[Times[u, Power[Sqrt[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e, m], x], PolynomialQ[Px, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[Plus[f, Times[g, x]], p], Power[Plus[d, Times[e, x]], m]], x]]], Plus[Dist[Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], u, x], Times[-1, Dist[Times[b, c, n], Int[SimplifyIntegrand[Times[u, Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, -1]], Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, g], x], PositiveIntegerQ[n, p], NegativeIntegerQ[m], Less[Plus[m, p, 1], 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[Plus[f, Times[g, x]], p], Power[Plus[d, Times[e, x]], m]], x]]], Plus[Dist[Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], u, x], Times[-1, Dist[Times[b, c, n], Int[SimplifyIntegrand[Times[u, Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]], Power[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, g], x], PositiveIntegerQ[n, p], NegativeIntegerQ[m], Less[Plus[m, p, 1], 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -2], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[Plus[f, Times[g, x], Times[h, Power[x, 2]]], p], Power[Power[Plus[d, Times[e, x]], 2], -1]], x]]], Plus[Dist[Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], u, x], Times[-1, Dist[Times[b, c, n], Int[SimplifyIntegrand[Times[u, Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, -1]], Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, g, h], x], PositiveIntegerQ[n, p], ZeroQ[Plus[Times[e, g], Times[-1, 2, d, h]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -2], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[Plus[f, Times[g, x], Times[h, Power[x, 2]]], p], Power[Power[Plus[d, Times[e, x]], 2], -1]], x]]], Plus[Dist[Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], u, x], Times[-1, Dist[Times[b, c, n], Int[SimplifyIntegrand[Times[u, Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, -1]], Power[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, g, h], x], PositiveIntegerQ[n, p], ZeroQ[Plus[Times[e, g], Times[-1, 2, d, h]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[Px, Blank[]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Px, Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e], x], PolynomialQ[Px, x], PositiveIntegerQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[Px, Blank[]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Px, Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e], x], PolynomialQ[Px, x], PositiveIntegerQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[d, Times[e, Power[x, 2]]], p]], x]]], Plus[Dist[Plus[a, Times[b, ArcSinh[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c], Int[Dist[Times[1, Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], u, x], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, g], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], IntegerQ[m], NegativeIntegerQ[Plus[p, Times[1, Power[2, -1]]]], PositiveQ[d], Greater[m, 0], Or[Less[m, Plus[Times[-2, p], -1]], Greater[m, 3]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[d1, Times[e1, x]], p], Power[Plus[d2, Times[e2, x]], p]], x]]], Plus[Dist[Plus[a, Times[b, ArcCosh[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c], Int[Dist[Times[1, Power[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], u, x], x], x]]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, g], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], IntegerQ[m], NegativeIntegerQ[Plus[p, Times[1, Power[2, -1]]]], PositiveQ[d1], NegativeQ[d2], Greater[m, 0], Or[Less[m, Plus[Times[-2, p], -1]], Greater[m, 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], Power[Plus[f, Times[g, x]], m], x], x], And[FreeQ[List[a, b, c, d, e, f, g], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], IntegerQ[m], IntegerQ[Plus[p, Times[1, Power[2, -1]]]], PositiveQ[d], PositiveIntegerQ[n], Greater[m, 0], Or[And[Equal[n, 1], Greater[p, -1]], Greater[p, 0], Equal[m, 1], And[Equal[m, 2], Less[p, -2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d1, Times[e1, x]], p], Power[Plus[d2, Times[e2, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], Power[Plus[f, Times[g, x]], m], x], x], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, g], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], IntegerQ[m], IntegerQ[Plus[p, Times[1, Power[2, -1]]]], PositiveQ[d1], NegativeQ[d2], PositiveIntegerQ[n], Greater[m, 0], Or[And[Equal[n, 1], Greater[p, -1]], Greater[p, 0], Equal[m, 1], And[Equal[m, 2], Less[p, -2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[f, Times[g, x]], m], Plus[d, Times[e, Power[x, 2]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Sqrt[d], Plus[n, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[b, c, Sqrt[d], Plus[n, 1]], -1]], Int[Times[Plus[Times[d, g, m], Times[2, e, f, x], Times[e, g, Plus[m, 2], Power[x, 2]]], Power[Plus[f, Times[g, x]], Plus[m, -1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], IntegerQ[m], PositiveQ[d], PositiveIntegerQ[n], Less[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Rational[1, 2]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Rational[1, 2]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[f, Times[g, x]], m], Plus[Times[d1, d2], Times[e1, e2, Power[x, 2]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Sqrt[Times[-1, d1, d2]], Plus[n, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[b, c, Sqrt[Times[-1, d1, d2]], Plus[n, 1]], -1]], Int[Times[Plus[Times[d1, d2, g, m], Times[2, e1, e2, f, x], Times[e1, e2, g, Plus[m, 2], Power[x, 2]]], Power[Plus[f, Times[g, x]], Plus[m, -1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, g], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], IntegerQ[m], PositiveQ[d1], NegativeQ[d2], PositiveIntegerQ[n], Less[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], Times[Power[Plus[f, Times[g, x]], m], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, Times[-1, 1, Power[2, -1]]]]], x], x], And[FreeQ[List[a, b, c, d, e, f, g], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], IntegerQ[m], PositiveIntegerQ[Plus[p, Times[1, Power[2, -1]]]], PositiveQ[d], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], Times[Power[Plus[f, Times[g, x]], m], Power[Plus[d1, Times[e1, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[d2, Times[e2, x]], Plus[p, Times[-1, 1, Power[2, -1]]]]], x], x], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, g], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], IntegerQ[m], PositiveIntegerQ[Plus[p, Times[1, Power[2, -1]]]], PositiveQ[d1], NegativeQ[d2], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Sqrt[d], Plus[n, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[b, c, Sqrt[d], Plus[n, 1]], -1]], Int[ExpandIntegrand[Times[Power[Plus[f, Times[g, x]], Plus[m, -1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]]], Times[Plus[Times[d, g, m], Times[e, f, Plus[Times[2, p], 1], x], Times[e, g, Plus[m, Times[2, p], 1], Power[x, 2]]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, Times[-1, 1, Power[2, -1]]]]], x], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], IntegerQ[m], PositiveIntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]], PositiveQ[d], PositiveIntegerQ[n], Less[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[d1, Times[e1, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[d2, Times[e2, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Sqrt[Times[-1, d1, d2]], Plus[n, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[b, c, Sqrt[Times[-1, d1, d2]], Plus[n, 1]], -1]], Int[ExpandIntegrand[Times[Power[Plus[f, Times[g, x]], Plus[m, -1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]]], Times[Plus[Times[d1, d2, g, m], Times[e1, e2, f, Plus[Times[2, p], 1], x], Times[e1, e2, g, Plus[m, Times[2, p], 1], Power[x, 2]]], Power[Plus[d1, Times[e1, x]], Plus[p, Times[-1, 1, Power[2, -1]]]], Power[Plus[d2, Times[e2, x]], Plus[p, Times[-1, 1, Power[2, -1]]]]], x], x], x]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, g], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], IntegerQ[m], PositiveIntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]], PositiveQ[d1], NegativeQ[d2], PositiveIntegerQ[n], Less[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Sqrt[d], Plus[n, 1]], -1]], x], Times[-1, Dist[Times[g, m, Power[Times[b, c, Sqrt[d], Plus[n, 1]], -1]], Int[Times[Power[Plus[f, Times[g, x]], Plus[m, -1]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], IntegerQ[m], PositiveQ[d], Greater[m, 0], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Sqrt[Times[-1, d1, d2]], Plus[n, 1]], -1]], x], Times[-1, Dist[Times[g, m, Power[Times[b, c, Sqrt[Times[-1, d1, d2]], Plus[n, 1]], -1]], Int[Times[Power[Plus[f, Times[g, x]], Plus[m, -1]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, g], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], IntegerQ[m], PositiveQ[d1], NegativeQ[d2], Greater[m, 0], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[c, Plus[m, 1]], Sqrt[d]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Plus[Times[c, f], Times[g, Sinh[x]]], m]], x], x, ArcSinh[Times[c, x]]], x], And[FreeQ[List[a, b, c, d, e, f, g, n], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], IntegerQ[m], PositiveQ[d], Or[Greater[m, 0], PositiveIntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[Power[c, Plus[m, 1]], Sqrt[Times[-1, d1, d2]]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Plus[Times[c, f], Times[g, Cosh[x]]], m]], x], x, ArcCosh[Times[c, x]]], x], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, g, n], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], IntegerQ[m], PositiveQ[d1], NegativeQ[d2], Or[Greater[m, 0], PositiveIntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], Times[Power[Plus[f, Times[g, x]], m], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, Times[1, Power[2, -1]]]]], x], x], And[FreeQ[List[a, b, c, d, e, f, g], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], IntegerQ[m], NegativeIntegerQ[Plus[p, Times[1, Power[2, -1]]]], PositiveQ[d], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Power[Times[Sqrt[Plus[d1, Times[e1, x]]], Sqrt[Plus[d2, Times[e2, x]]]], -1]], Times[Power[Plus[f, Times[g, x]], m], Power[Plus[d1, Times[e1, x]], Plus[p, Times[1, Power[2, -1]]]], Power[Plus[d2, Times[e2, x]], Plus[p, Times[1, Power[2, -1]]]]], x], x], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, g], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], IntegerQ[m], NegativeIntegerQ[Plus[p, Times[1, Power[2, -1]]]], PositiveQ[d1], NegativeQ[d2], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[d, IntPart[p]], Power[Plus[d, Times[e, Power[x, 2]]], FracPart[p]], Power[Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], FracPart[p]], -1]], Int[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, n], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], IntegerQ[m], IntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]], Not[PositiveQ[d]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[-1, d], IntPart[p]], Power[Plus[d, Times[e, Power[x, 2]]], FracPart[p]], Power[Times[Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[1, Times[c, x]], p], Power[Plus[-1, Times[c, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, n], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], IntegerQ[m], IntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[-1, d1, d2], IntPart[p]], Power[Plus[d1, Times[e1, x]], FracPart[p]], Power[Plus[d2, Times[e2, x]], FracPart[p]], Power[Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], FracPart[p]], -1]], Int[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[1, Times[c, x]], p], Power[Plus[-1, Times[c, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, g, n], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], IntegerQ[m], IntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]], Not[And[PositiveQ[d1], NegativeQ[d2]]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Times[Optional[Pattern[h, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Log[Times[h, Power[Plus[f, Times[g, x]], m]]], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Sqrt[d], Plus[n, 1]], -1]], x], Times[-1, Dist[Times[g, m, Power[Times[b, c, Sqrt[d], Plus[n, 1]], -1]], Int[Times[Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], Plus[n, 1]], Power[Plus[f, Times[g, x]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, h, m], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], PositiveQ[d], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Log[Times[Optional[Pattern[h, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Log[Times[h, Power[Plus[f, Times[g, x]], m]]], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, Sqrt[Times[-1, d1, d2]], Plus[n, 1]], -1]], x], Times[-1, Dist[Times[g, m, Power[Times[b, c, Sqrt[Times[-1, d1, d2]], Plus[n, 1]], -1]], Int[Times[Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], Plus[n, 1]], Power[Plus[f, Times[g, x]], -1]], x], x]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, g, h, m], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], PositiveQ[d1], NegativeQ[d2], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Log[Times[Optional[Pattern[h, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[d, IntPart[p]], Power[Plus[d, Times[e, Power[x, 2]]], FracPart[p]], Power[Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], FracPart[p]], -1]], Int[Times[Log[Times[h, Power[Plus[f, Times[g, x]], m]]], Power[Plus[1, Times[Power[c, 2], Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, h, m, n], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], IntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]], Not[PositiveQ[d]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Times[Optional[Pattern[h, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[-1, d], IntPart[p]], Power[Plus[d, Times[e, Power[x, 2]]], FracPart[p]], Power[Times[Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[Log[Times[h, Power[Plus[f, Times[g, x]], m]]], Power[Plus[1, Times[c, x]], p], Power[Plus[-1, Times[c, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, h, m, n], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], IntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Times[Optional[Pattern[h, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[-1, d1, d2], IntPart[p]], Power[Plus[d1, Times[e1, x]], FracPart[p]], Power[Plus[d2, Times[e2, x]], FracPart[p]], Power[Times[Power[Plus[1, Times[c, x]], FracPart[p]], Power[Plus[-1, Times[c, x]], FracPart[p]]], -1]], Int[Times[Log[Times[h, Power[Plus[f, Times[g, x]], m]]], Power[Plus[1, Times[c, x]], p], Power[Plus[-1, Times[c, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, g, h, m, n], x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], IntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]], Not[And[PositiveQ[d1], NegativeQ[d2]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], m]], x]]], Plus[Dist[Plus[a, Times[b, ArcSinh[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c], Int[Dist[Times[1, Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], u, x], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, g], x], NegativeIntegerQ[Plus[m, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], m]], x]]], Plus[Dist[Plus[a, Times[b, ArcCosh[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c], Int[Dist[Times[1, Power[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Plus[-1, Times[c, x]]]], -1]], u, x], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, g], x], NegativeIntegerQ[Plus[m, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n], Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], m]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, n], x], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n], Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], m]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, n], x], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[v, IntHide[u, x]]], Condition[Plus[Dist[Plus[a, Times[b, ArcSinh[Times[c, x]]]], v, x], Times[-1, Dist[Times[b, c], Int[SimplifyIntegrand[Times[v, Power[Sqrt[Plus[1, Times[Power[c, 2], Power[x, 2]]]], -1]], x], x], x]]], InverseFunctionFreeQ[v, x]]], FreeQ[List[a, b, c], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[v, IntHide[u, x]]], Condition[Plus[Dist[Plus[a, Times[b, ArcCosh[Times[c, x]]]], v, x], Times[-1, Dist[Times[b, c, Sqrt[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]]], Power[Times[Sqrt[Plus[-1, Times[c, x]]], Sqrt[Plus[1, Times[c, x]]]], -1]], Int[SimplifyIntegrand[Times[v, Power[Sqrt[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]]], -1]], x], x], x]]], InverseFunctionFreeQ[v, x]]], FreeQ[List[a, b, c], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[Px, Blank[]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, ExpandIntegrand[Times[Px, Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x]]], Condition[Int[u, x], SumQ[u]]], And[FreeQ[List[a, b, c, d, e, n], x], PolynomialQ[Px, x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], IntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[Px, Blank[]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, ExpandIntegrand[Times[Px, Power[Plus[d1, Times[e1, x]], p], Power[Plus[d2, Times[e2, x]], p], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x]]], Condition[Int[u, x], SumQ[u]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, n], x], PolynomialQ[Px, x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], IntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[Px, Blank[]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, ExpandIntegrand[Times[Px, Power[Plus[f, Times[g, Power[Plus[d, Times[e, Power[x, 2]]], p]]], m], Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x]]], Condition[Int[u, x], SumQ[u]]], And[FreeQ[List[a, b, c, d, e, f, g], x], PolynomialQ[Px, x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], PositiveIntegerQ[Plus[p, Times[1, Power[2, -1]]]], IntegersQ[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[Px, Blank[]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, ExpandIntegrand[Times[Px, Power[Plus[f, Times[g, Power[Plus[d1, Times[e1, x]], p], Power[Plus[d2, Times[e2, x]], p]]], m], Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x]]], Condition[Int[u, x], SumQ[u]]], And[FreeQ[List[a, b, c, d1, e1, d2, e2, f, g], x], PolynomialQ[Px, x], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], PositiveIntegerQ[Plus[p, Times[1, Power[2, -1]]]], IntegersQ[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Pattern[RFx, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, ExpandIntegrand[Power[ArcSinh[Times[c, x]], n], RFx, x]]], Condition[Int[u, x], SumQ[u]]], And[FreeQ[c, x], RationalFunctionQ[RFx, x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Pattern[RFx, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, ExpandIntegrand[Power[ArcCosh[Times[c, x]], n], RFx, x]]], Condition[Int[u, x], SumQ[u]]], And[FreeQ[c, x], RationalFunctionQ[RFx, x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]], Pattern[RFx, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[RFx, Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c], x], RationalFunctionQ[RFx, x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]], Pattern[RFx, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[RFx, Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c], x], RationalFunctionQ[RFx, x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Pattern[RFx, Blank[]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, ExpandIntegrand[Times[Power[Plus[d, Times[e, Power[x, 2]]], p], Power[ArcSinh[Times[c, x]], n]], RFx, x]]], Condition[Int[u, x], SumQ[u]]], And[FreeQ[List[c, d, e], x], RationalFunctionQ[RFx, x], PositiveIntegerQ[n], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], IntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Pattern[RFx, Blank[]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, ExpandIntegrand[Times[Power[Plus[d1, Times[e1, x]], p], Power[Plus[d2, Times[e2, x]], p], Power[ArcCosh[Times[c, x]], n]], RFx, x]]], Condition[Int[u, x], SumQ[u]]], And[FreeQ[List[c, d1, e1, d2, e2], x], RationalFunctionQ[RFx, x], PositiveIntegerQ[n], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], IntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]], Pattern[RFx, Blank[]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[d, Times[e, Power[x, 2]]], p], Times[RFx, Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e], x], RationalFunctionQ[RFx, x], PositiveIntegerQ[n], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], IntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]], Pattern[RFx, Blank[]], Power[Plus[Pattern[d1, Blank[]], Times[Optional[Pattern[e1, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d2, Blank[]], Times[Optional[Pattern[e2, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d1, Times[e1, x]], p], Power[Plus[d2, Times[e2, x]], p]], Times[RFx, Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d1, e1, d2, e2], x], RationalFunctionQ[RFx, x], PositiveIntegerQ[n], ZeroQ[Plus[e1, Times[-1, c, d1]]], ZeroQ[Plus[e2, Times[c, d2]]], IntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[Plus[a, Times[b, ArcSinh[Times[c, x]]]], n]], x], FreeQ[List[a, b, c, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[Plus[a, Times[b, ArcCosh[Times[c, x]]]], n]], x], FreeQ[List[a, b, c, n], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[d, -1]], Subst[Int[Power[Plus[a, Times[b, ArcSinh[x]]], n], x], x, Plus[c, Times[d, x]]], x], FreeQ[List[a, b, c, d, n], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[d, -1]], Subst[Int[Power[Plus[a, Times[b, ArcCosh[x]]], n], x], x, Plus[c, Times[d, x]]], x], FreeQ[List[a, b, c, d, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[d, -1]], Subst[Int[Times[Power[Plus[Times[Plus[Times[d, e], Times[-1, c, f]], Power[d, -1]], Times[f, x, Power[d, -1]]], m], Power[Plus[a, Times[b, ArcSinh[x]]], n]], x], x, Plus[c, Times[d, x]]], x], FreeQ[List[a, b, c, d, e, f, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[d, -1]], Subst[Int[Times[Power[Plus[Times[Plus[Times[d, e], Times[-1, c, f]], Power[d, -1]], Times[f, x, Power[d, -1]]], m], Power[Plus[a, Times[b, ArcCosh[x]]], n]], x], x, Plus[c, Times[d, x]]], x], FreeQ[List[a, b, c, d, e, f, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[d, -1]], Subst[Int[Times[Power[Plus[Times[C, Power[Power[d, 2], -1]], Times[C, Power[Power[d, 2], -1], Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[x]]], n]], x], x, Plus[c, Times[d, x]]], x], And[FreeQ[List[a, b, c, d, A, B, C, n, p], x], ZeroQ[Plus[Times[B, Plus[1, Power[c, 2]]], Times[-1, 2, A, c, d]]], ZeroQ[Plus[Times[2, c, C], Times[-1, B, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[d, -1]], Subst[Int[Times[Power[Plus[Times[-1, C, Power[Power[d, 2], -1]], Times[C, Power[Power[d, 2], -1], Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCosh[x]]], n]], x], x, Plus[c, Times[d, x]]], x], And[FreeQ[List[a, b, c, d, A, B, C, n, p], x], ZeroQ[Plus[Times[B, Plus[1, Times[-1, Power[c, 2]]]], Times[2, A, c, d]]], ZeroQ[Plus[Times[2, c, C], Times[-1, B, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[d, -1]], Subst[Int[Times[Power[Plus[Times[Plus[Times[d, e], Times[-1, c, f]], Power[d, -1]], Times[f, x, Power[d, -1]]], m], Power[Plus[Times[C, Power[Power[d, 2], -1]], Times[C, Power[Power[d, 2], -1], Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[x]]], n]], x], x, Plus[c, Times[d, x]]], x], And[FreeQ[List[a, b, c, d, e, f, A, B, C, m, n, p], x], ZeroQ[Plus[Times[B, Plus[1, Power[c, 2]]], Times[-1, 2, A, c, d]]], ZeroQ[Plus[Times[2, c, C], Times[-1, B, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[d, -1]], Subst[Int[Times[Power[Plus[Times[Plus[Times[d, e], Times[-1, c, f]], Power[d, -1]], Times[f, x, Power[d, -1]]], m], Power[Plus[Times[-1, C, Power[Power[d, 2], -1]], Times[C, Power[Power[d, 2], -1], Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCosh[x]]], n]], x], x, Plus[c, Times[d, x]]], x], And[FreeQ[List[a, b, c, d, e, f, A, B, C, m, n, p], x], ZeroQ[Plus[Times[B, Plus[1, Times[-1, Power[c, 2]]]], Times[2, A, c, d]]], ZeroQ[Plus[Times[2, c, C], Times[-1, B, d]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[b, Blank[]]]]], Rational[1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Sqrt[Plus[a, Times[b, ArcSinh[Plus[c, Times[d, Power[x, 2]]]]]]]], x], Plus[Times[-1, Simp[Times[Sqrt[Pi], x, Plus[Cosh[Times[a, Power[Times[2, b], -1]]], Times[-1, c, Sinh[Times[a, Power[Times[2, b], -1]]]]], FresnelC[Times[Sqrt[Times[-1, c, Power[Times[Pi, b], -1]]], Sqrt[Plus[a, Times[b, ArcSinh[Plus[c, Times[d, Power[x, 2]]]]]]]]], Power[Times[Sqrt[Times[-1, Times[c, Power[b, -1]]]], Plus[Cosh[Times[ArcSinh[Plus[c, Times[d, Power[x, 2]]]], Power[2, -1]]], Times[c, Sinh[Times[ArcSinh[Plus[c, Times[d, Power[x, 2]]]], Power[2, -1]]]]]], -1]], x]], Simp[Times[Sqrt[Pi], x, Plus[Cosh[Times[a, Power[Times[2, b], -1]]], Times[c, Sinh[Times[a, Power[Times[2, b], -1]]]]], FresnelS[Times[Sqrt[Times[-1, c, Power[Times[Pi, b], -1]]], Sqrt[Plus[a, Times[b, ArcSinh[Plus[c, Times[d, Power[x, 2]]]]]]]]], Power[Times[Sqrt[Times[-1, Times[c, Power[b, -1]]]], Plus[Cosh[Times[ArcSinh[Plus[c, Times[d, Power[x, 2]]]], Power[2, -1]]], Times[c, Sinh[Times[ArcSinh[Plus[c, Times[d, Power[x, 2]]]], Power[2, -1]]]]]], -1]], x]]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[c, 2], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[a, Times[b, ArcSinh[Plus[c, Times[d, Power[x, 2]]]]]], n]], x], Plus[Dist[Times[4, Power[b, 2], n, Plus[n, -1]], Int[Power[Plus[a, Times[b, ArcSinh[Plus[c, Times[d, Power[x, 2]]]]]], Plus[n, -2]], x], x], Times[-1, Simp[Times[2, b, n, Sqrt[Plus[Times[2, c, d, Power[x, 2]], Times[Power[d, 2], Power[x, 4]]]], Power[Plus[a, Times[b, ArcSinh[Plus[c, Times[d, Power[x, 2]]]]]], Plus[n, -1]], Power[Times[d, x], -1]], x]]]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[c, 2], 1]], RationalQ[n], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[b, Blank[]]]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Plus[Times[c, Cosh[Times[a, Power[Times[2, b], -1]]]], Times[-1, Sinh[Times[a, Power[Times[2, b], -1]]]]], CoshIntegral[Times[Plus[a, Times[b, ArcSinh[Plus[c, Times[d, Power[x, 2]]]]]], Power[Times[2, b], -1]]], Power[Times[2, b, Plus[Cosh[Times[ArcSinh[Plus[c, Times[d, Power[x, 2]]]], Power[2, -1]]], Times[c, Sinh[Times[Times[1, Power[2, -1]], ArcSinh[Plus[c, Times[d, Power[x, 2]]]]]]]]], -1]], x], Simp[Times[x, Plus[Cosh[Times[a, Power[Times[2, b], -1]]], Times[-1, c, Sinh[Times[a, Power[Times[2, b], -1]]]]], SinhIntegral[Times[Plus[a, Times[b, ArcSinh[Plus[c, Times[d, Power[x, 2]]]]]], Power[Times[2, b], -1]]], Power[Times[2, b, Plus[Cosh[Times[ArcSinh[Plus[c, Times[d, Power[x, 2]]]], Power[2, -1]]], Times[c, Sinh[Times[Times[1, Power[2, -1]], ArcSinh[Plus[c, Times[d, Power[x, 2]]]]]]]]], -1]], x]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[c, 2], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[b, Blank[]]]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[c, 1], Sqrt[Times[Pi, Power[2, -1]]], x, Plus[Cosh[Times[a, Power[Times[2, b], -1]]], Times[-1, Sinh[Times[a, Power[Times[2, b], -1]]]]], Erfi[Times[Sqrt[Plus[a, Times[b, ArcSinh[Plus[c, Times[d, Power[x, 2]]]]]]], Power[Sqrt[Times[2, b]], -1]]], Power[Times[2, Sqrt[b], Plus[Cosh[Times[ArcSinh[Plus[c, Times[d, Power[x, 2]]]], Power[2, -1]]], Times[c, Sinh[Times[ArcSinh[Plus[c, Times[d, Power[x, 2]]]], Power[2, -1]]]]]], -1]], x], Simp[Times[Plus[c, -1], Sqrt[Times[Pi, Power[2, -1]]], x, Plus[Cosh[Times[a, Power[Times[2, b], -1]]], Sinh[Times[a, Power[Times[2, b], -1]]]], Erf[Times[Sqrt[Plus[a, Times[b, ArcSinh[Plus[c, Times[d, Power[x, 2]]]]]]], Power[Sqrt[Times[2, b]], -1]]], Power[Times[2, Sqrt[b], Plus[Cosh[Times[ArcSinh[Plus[c, Times[d, Power[x, 2]]]], Power[2, -1]]], Times[c, Sinh[Times[ArcSinh[Plus[c, Times[d, Power[x, 2]]]], Power[2, -1]]]]]], -1]], x]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[c, 2], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[b, Blank[]]]]], Rational[-3, 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Sqrt[Plus[Times[2, c, d, Power[x, 2]], Times[Power[d, 2], Power[x, 4]]]], Power[Times[b, d, x, Sqrt[Plus[a, Times[b, ArcSinh[Plus[c, Times[d, Power[x, 2]]]]]]]], -1]], x]], Plus[Times[-1, Simp[Times[Power[Times[-1, c, Power[b, -1]], Times[3, Power[2, -1]]], Sqrt[Pi], x, Plus[Cosh[Times[a, Power[Times[2, b], -1]]], Times[-1, c, Sinh[Times[a, Power[Times[2, b], -1]]]]], FresnelC[Times[Sqrt[Times[-1, c, Power[Times[Pi, b], -1]]], Sqrt[Plus[a, Times[b, ArcSinh[Plus[c, Times[d, Power[x, 2]]]]]]]]], Power[Plus[Cosh[Times[ArcSinh[Plus[c, Times[d, Power[x, 2]]]], Power[2, -1]]], Times[c, Sinh[Times[ArcSinh[Plus[c, Times[d, Power[x, 2]]]], Power[2, -1]]]]], -1]], x]], Simp[Times[Power[Times[-1, c, Power[b, -1]], Times[3, Power[2, -1]]], Sqrt[Pi], x, Plus[Cosh[Times[a, Power[Times[2, b], -1]]], Times[c, Sinh[Times[a, Power[Times[2, b], -1]]]]], FresnelS[Times[Sqrt[Times[-1, c, Power[Times[Pi, b], -1]]], Sqrt[Plus[a, Times[b, ArcSinh[Plus[c, Times[d, Power[x, 2]]]]]]]]], Power[Plus[Cosh[Times[ArcSinh[Plus[c, Times[d, Power[x, 2]]]], Power[2, -1]]], Times[c, Sinh[Times[ArcSinh[Plus[c, Times[d, Power[x, 2]]]], Power[2, -1]]]]], -1]], x]]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[c, 2], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[b, Blank[]]]]], -2], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Sqrt[Plus[Times[2, c, d, Power[x, 2]], Times[Power[d, 2], Power[x, 4]]]], Power[Times[2, b, d, x, Plus[a, Times[b, ArcSinh[Plus[c, Times[d, Power[x, 2]]]]]]], -1]], x]], Plus[Simp[Times[x, Plus[Cosh[Times[a, Power[Times[2, b], -1]]], Times[-1, c, Sinh[Times[a, Power[Times[2, b], -1]]]]], CoshIntegral[Times[Plus[a, Times[b, ArcSinh[Plus[c, Times[d, Power[x, 2]]]]]], Power[Times[2, b], -1]]], Power[Times[4, Power[b, 2], Plus[Cosh[Times[ArcSinh[Plus[c, Times[d, Power[x, 2]]]], Power[2, -1]]], Times[c, Sinh[Times[ArcSinh[Plus[c, Times[d, Power[x, 2]]]], Power[2, -1]]]]]], -1]], x], Simp[Times[x, Plus[Times[c, Cosh[Times[a, Power[Times[2, b], -1]]]], Times[-1, Sinh[Times[a, Power[Times[2, b], -1]]]]], SinhIntegral[Times[Plus[a, Times[b, ArcSinh[Plus[c, Times[d, Power[x, 2]]]]]], Power[Times[2, b], -1]]], Power[Times[4, Power[b, 2], Plus[Cosh[Times[ArcSinh[Plus[c, Times[d, Power[x, 2]]]], Power[2, -1]]], Times[c, Sinh[Times[ArcSinh[Plus[c, Times[d, Power[x, 2]]]], Power[2, -1]]]]]], -1]], x]]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[c, 2], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Power[Plus[a, Times[b, ArcSinh[Plus[c, Times[d, Power[x, 2]]]]]], Plus[n, 2]], Power[Times[4, Power[b, 2], Plus[n, 1], Plus[n, 2]], -1]], x]], Plus[Dist[Times[1, Power[Times[4, Power[b, 2], Plus[n, 1], Plus[n, 2]], -1]], Int[Power[Plus[a, Times[b, ArcSinh[Plus[c, Times[d, Power[x, 2]]]]]], Plus[n, 2]], x], x], Simp[Times[Sqrt[Plus[Times[2, c, d, Power[x, 2]], Times[Power[d, 2], Power[x, 4]]]], Power[Plus[a, Times[b, ArcSinh[Plus[c, Times[d, Power[x, 2]]]]]], Plus[n, 1]], Power[Times[2, b, d, Plus[n, 1], x], -1]], x]]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[c, 2], 1]], RationalQ[n], Less[n, -1], Unequal[n, -2]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Plus[1, Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[b, Blank[]]]]], Rational[1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, Sqrt[Plus[a, Times[b, ArcCosh[Plus[1, Times[d, Power[x, 2]]]]]]], Power[Sinh[Times[Times[1, Power[2, -1]], ArcCosh[Plus[1, Times[d, Power[x, 2]]]]]], 2], Power[Times[d, x], -1]], x], Plus[Simp[Times[Sqrt[b], Sqrt[Times[Pi, Power[2, -1]]], Plus[Cosh[Times[a, Power[Times[2, b], -1]]], Sinh[Times[a, Power[Times[2, b], -1]]]], Sinh[Times[Times[1, Power[2, -1]], ArcCosh[Plus[1, Times[d, Power[x, 2]]]]]], Erf[Times[Times[1, Power[Sqrt[Times[2, b]], -1]], Sqrt[Plus[a, Times[b, ArcCosh[Plus[1, Times[d, Power[x, 2]]]]]]]]], Power[Times[d, x], -1]], x], Times[-1, Simp[Times[Sqrt[b], Sqrt[Times[Pi, Power[2, -1]]], Plus[Cosh[Times[a, Power[Times[2, b], -1]]], Times[-1, Sinh[Times[a, Power[Times[2, b], -1]]]]], Sinh[Times[Times[1, Power[2, -1]], ArcCosh[Plus[1, Times[d, Power[x, 2]]]]]], Erfi[Times[Times[1, Power[Sqrt[Times[2, b]], -1]], Sqrt[Plus[a, Times[b, ArcCosh[Plus[1, Times[d, Power[x, 2]]]]]]]]], Power[Times[d, x], -1]], x]]]], FreeQ[List[a, b, d], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Plus[-1, Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[b, Blank[]]]]], Rational[1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, Sqrt[Plus[a, Times[b, ArcCosh[Plus[-1, Times[d, Power[x, 2]]]]]]], Power[Cosh[Times[Times[1, Power[2, -1]], ArcCosh[Plus[-1, Times[d, Power[x, 2]]]]]], 2], Power[Times[d, x], -1]], x], Plus[Times[-1, Simp[Times[Sqrt[b], Sqrt[Times[Pi, Power[2, -1]]], Plus[Cosh[Times[a, Power[Times[2, b], -1]]], Sinh[Times[a, Power[Times[2, b], -1]]]], Cosh[Times[Times[1, Power[2, -1]], ArcCosh[Plus[-1, Times[d, Power[x, 2]]]]]], Erf[Times[Times[1, Power[Sqrt[Times[2, b]], -1]], Sqrt[Plus[a, Times[b, ArcCosh[Plus[-1, Times[d, Power[x, 2]]]]]]]]], Power[Times[d, x], -1]], x]], Times[-1, Simp[Times[Sqrt[b], Sqrt[Times[Pi, Power[2, -1]]], Plus[Cosh[Times[a, Power[Times[2, b], -1]]], Times[-1, Sinh[Times[a, Power[Times[2, b], -1]]]]], Cosh[Times[Times[1, Power[2, -1]], ArcCosh[Plus[-1, Times[d, Power[x, 2]]]]]], Erfi[Times[Times[1, Power[Sqrt[Times[2, b]], -1]], Sqrt[Plus[a, Times[b, ArcCosh[Plus[-1, Times[d, Power[x, 2]]]]]]]]], Power[Times[d, x], -1]], x]]]], FreeQ[List[a, b, d], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[a, Times[b, ArcCosh[Plus[c, Times[d, Power[x, 2]]]]]], n]], x], Plus[Dist[Times[4, Power[b, 2], n, Plus[n, -1]], Int[Power[Plus[a, Times[b, ArcCosh[Plus[c, Times[d, Power[x, 2]]]]]], Plus[n, -2]], x], x], Times[-1, Simp[Times[2, b, n, Plus[Times[2, c, d, Power[x, 2]], Times[Power[d, 2], Power[x, 4]]], Power[Plus[a, Times[b, ArcCosh[Plus[c, Times[d, Power[x, 2]]]]]], Plus[n, -1]], Power[Times[d, x, Sqrt[Plus[-1, c, Times[d, Power[x, 2]]]], Sqrt[Plus[1, c, Times[d, Power[x, 2]]]]], -1]], x]]]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[c, 2], -1]], RationalQ[n], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Plus[1, Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[b, Blank[]]]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Cosh[Times[a, Power[Times[2, b], -1]]], CoshIntegral[Times[Plus[a, Times[b, ArcCosh[Plus[1, Times[d, Power[x, 2]]]]]], Power[Times[2, b], -1]]], Power[Times[Sqrt[2], b, Sqrt[Times[d, Power[x, 2]]]], -1]], x], Times[-1, Simp[Times[x, Sinh[Times[a, Power[Times[2, b], -1]]], SinhIntegral[Times[Plus[a, Times[b, ArcCosh[Plus[1, Times[d, Power[x, 2]]]]]], Power[Times[2, b], -1]]], Power[Times[Sqrt[2], b, Sqrt[Times[d, Power[x, 2]]]], -1]], x]]], FreeQ[List[a, b, d], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Plus[-1, Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[b, Blank[]]]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Sinh[Times[a, Power[Times[2, b], -1]]], CoshIntegral[Times[Plus[a, Times[b, ArcCosh[Plus[-1, Times[d, Power[x, 2]]]]]], Power[Times[2, b], -1]]], Power[Times[Sqrt[2], b, Sqrt[Times[d, Power[x, 2]]]], -1]], x]], Simp[Times[x, Cosh[Times[a, Power[Times[2, b], -1]]], SinhIntegral[Times[Plus[a, Times[b, ArcCosh[Plus[-1, Times[d, Power[x, 2]]]]]], Power[Times[2, b], -1]]], Power[Times[Sqrt[2], b, Sqrt[Times[d, Power[x, 2]]]], -1]], x]], FreeQ[List[a, b, d], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Plus[1, Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[b, Blank[]]]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Sqrt[Times[Pi, Power[2, -1]]], Plus[Cosh[Times[a, Power[Times[2, b], -1]]], Times[-1, Sinh[Times[a, Power[Times[2, b], -1]]]]], Sinh[Times[ArcCosh[Plus[1, Times[d, Power[x, 2]]]], Power[2, -1]]], Erfi[Times[Sqrt[Plus[a, Times[b, ArcCosh[Plus[1, Times[d, Power[x, 2]]]]]]], Power[Sqrt[Times[2, b]], -1]]], Power[Times[Sqrt[b], d, x], -1]], x], Simp[Times[Sqrt[Times[Pi, Power[2, -1]]], Plus[Cosh[Times[a, Power[Times[2, b], -1]]], Sinh[Times[a, Power[Times[2, b], -1]]]], Sinh[Times[ArcCosh[Plus[1, Times[d, Power[x, 2]]]], Power[2, -1]]], Erf[Times[Sqrt[Plus[a, Times[b, ArcCosh[Plus[1, Times[d, Power[x, 2]]]]]]], Power[Sqrt[Times[2, b]], -1]]], Power[Times[Sqrt[b], d, x], -1]], x]], FreeQ[List[a, b, d], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Plus[-1, Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[b, Blank[]]]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Sqrt[Times[Pi, Power[2, -1]]], Plus[Cosh[Times[a, Power[Times[2, b], -1]]], Times[-1, Sinh[Times[a, Power[Times[2, b], -1]]]]], Cosh[Times[ArcCosh[Plus[-1, Times[d, Power[x, 2]]]], Power[2, -1]]], Erfi[Times[Sqrt[Plus[a, Times[b, ArcCosh[Plus[-1, Times[d, Power[x, 2]]]]]]], Power[Sqrt[Times[2, b]], -1]]], Power[Times[Sqrt[b], d, x], -1]], x], Times[-1, Simp[Times[Sqrt[Times[Pi, Power[2, -1]]], Plus[Cosh[Times[a, Power[Times[2, b], -1]]], Sinh[Times[a, Power[Times[2, b], -1]]]], Cosh[Times[ArcCosh[Plus[-1, Times[d, Power[x, 2]]]], Power[2, -1]]], Erf[Times[Sqrt[Plus[a, Times[b, ArcCosh[Plus[-1, Times[d, Power[x, 2]]]]]]], Power[Sqrt[Times[2, b]], -1]]], Power[Times[Sqrt[b], d, x], -1]], x]]], FreeQ[List[a, b, d], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Plus[1, Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[b, Blank[]]]]], Rational[-3, 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Sqrt[Times[d, Power[x, 2]]], Sqrt[Plus[2, Times[d, Power[x, 2]]]], Power[Times[b, d, x, Sqrt[Plus[a, Times[b, ArcCosh[Plus[1, Times[d, Power[x, 2]]]]]]]], -1]], x]], Plus[Times[-1, Simp[Times[Sqrt[Times[Pi, Power[2, -1]]], Plus[Cosh[Times[a, Power[Times[2, b], -1]]], Sinh[Times[a, Power[Times[2, b], -1]]]], Sinh[Times[ArcCosh[Plus[1, Times[d, Power[x, 2]]]], Power[2, -1]]], Erf[Times[Sqrt[Plus[a, Times[b, ArcCosh[Plus[1, Times[d, Power[x, 2]]]]]]], Power[Sqrt[Times[2, b]], -1]]], Power[Times[Power[b, Times[3, Power[2, -1]]], d, x], -1]], x]], Simp[Times[Sqrt[Times[Pi, Power[2, -1]]], Plus[Cosh[Times[a, Power[Times[2, b], -1]]], Times[-1, Sinh[Times[a, Power[Times[2, b], -1]]]]], Sinh[Times[ArcCosh[Plus[1, Times[d, Power[x, 2]]]], Power[2, -1]]], Erfi[Times[Sqrt[Plus[a, Times[b, ArcCosh[Plus[1, Times[d, Power[x, 2]]]]]]], Power[Sqrt[Times[2, b]], -1]]], Power[Times[Power[b, Times[3, Power[2, -1]]], d, x], -1]], x]]], FreeQ[List[a, b, d], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Plus[-1, Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[b, Blank[]]]]], Rational[-3, 2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Sqrt[Times[d, Power[x, 2]]], Sqrt[Plus[-2, Times[d, Power[x, 2]]]], Power[Times[b, d, x, Sqrt[Plus[a, Times[b, ArcCosh[Plus[-1, Times[d, Power[x, 2]]]]]]]], -1]], x]], Plus[Simp[Times[Sqrt[Times[Pi, Power[2, -1]]], Plus[Cosh[Times[a, Power[Times[2, b], -1]]], Sinh[Times[a, Power[Times[2, b], -1]]]], Cosh[Times[ArcCosh[Plus[-1, Times[d, Power[x, 2]]]], Power[2, -1]]], Erf[Times[Sqrt[Plus[a, Times[b, ArcCosh[Plus[-1, Times[d, Power[x, 2]]]]]]], Power[Sqrt[Times[2, b]], -1]]], Power[Times[Power[b, Times[3, Power[2, -1]]], d, x], -1]], x], Simp[Times[Sqrt[Times[Pi, Power[2, -1]]], Plus[Cosh[Times[a, Power[Times[2, b], -1]]], Times[-1, Sinh[Times[a, Power[Times[2, b], -1]]]]], Cosh[Times[ArcCosh[Plus[-1, Times[d, Power[x, 2]]]], Power[2, -1]]], Erfi[Times[Sqrt[Plus[a, Times[b, ArcCosh[Plus[-1, Times[d, Power[x, 2]]]]]]], Power[Sqrt[Times[2, b]], -1]]], Power[Times[Power[b, Times[3, Power[2, -1]]], d, x], -1]], x]]], FreeQ[List[a, b, d], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Plus[1, Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[b, Blank[]]]]], -2], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Sqrt[Times[d, Power[x, 2]]], Sqrt[Plus[2, Times[d, Power[x, 2]]]], Power[Times[2, b, d, x, Plus[a, Times[b, ArcCosh[Plus[1, Times[d, Power[x, 2]]]]]]], -1]], x]], Plus[Times[-1, Simp[Times[x, Sinh[Times[a, Power[Times[2, b], -1]]], CoshIntegral[Times[Plus[a, Times[b, ArcCosh[Plus[1, Times[d, Power[x, 2]]]]]], Power[Times[2, b], -1]]], Power[Times[2, Sqrt[2], Power[b, 2], Sqrt[Times[d, Power[x, 2]]]], -1]], x]], Simp[Times[x, Cosh[Times[a, Power[Times[2, b], -1]]], SinhIntegral[Times[Plus[a, Times[b, ArcCosh[Plus[1, Times[d, Power[x, 2]]]]]], Power[Times[2, b], -1]]], Power[Times[2, Sqrt[2], Power[b, 2], Sqrt[Times[d, Power[x, 2]]]], -1]], x]]], FreeQ[List[a, b, d], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Plus[-1, Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[b, Blank[]]]]], -2], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Sqrt[Times[d, Power[x, 2]]], Sqrt[Plus[-2, Times[d, Power[x, 2]]]], Power[Times[2, b, d, x, Plus[a, Times[b, ArcCosh[Plus[-1, Times[d, Power[x, 2]]]]]]], -1]], x]], Plus[Simp[Times[x, Cosh[Times[a, Power[Times[2, b], -1]]], CoshIntegral[Times[Plus[a, Times[b, ArcCosh[Plus[-1, Times[d, Power[x, 2]]]]]], Power[Times[2, b], -1]]], Power[Times[2, Sqrt[2], Power[b, 2], Sqrt[Times[d, Power[x, 2]]]], -1]], x], Times[-1, Simp[Times[x, Sinh[Times[a, Power[Times[2, b], -1]]], SinhIntegral[Times[Plus[a, Times[b, ArcCosh[Plus[-1, Times[d, Power[x, 2]]]]]], Power[Times[2, b], -1]]], Power[Times[2, Sqrt[2], Power[b, 2], Sqrt[Times[d, Power[x, 2]]]], -1]], x]]]], FreeQ[List[a, b, d], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Power[Plus[a, Times[b, ArcCosh[Plus[c, Times[d, Power[x, 2]]]]]], Plus[n, 2]], Power[Times[4, Power[b, 2], Plus[n, 1], Plus[n, 2]], -1]], x]], Plus[Dist[Times[1, Power[Times[4, Power[b, 2], Plus[n, 1], Plus[n, 2]], -1]], Int[Power[Plus[a, Times[b, ArcCosh[Plus[c, Times[d, Power[x, 2]]]]]], Plus[n, 2]], x], x], Simp[Times[Plus[Times[2, c, Power[x, 2]], Times[d, Power[x, 4]]], Power[Plus[a, Times[b, ArcCosh[Plus[c, Times[d, Power[x, 2]]]]]], Plus[n, 1]], Power[Times[2, b, Plus[n, 1], x, Sqrt[Plus[-1, c, Times[d, Power[x, 2]]]], Sqrt[Plus[1, c, Times[d, Power[x, 2]]]]], -1]], x]]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[c, 2], -1]], RationalQ[n], Less[n, -1], Unequal[n, -2]]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcSinh[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Pattern[p, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[p, -1]], Subst[Int[Times[Power[x, n], Coth[x]], x], x, ArcSinh[Times[a, Power[x, p]]]], x], And[FreeQ[List[a, p], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcCosh[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Pattern[p, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[p, -1]], Subst[Int[Times[Power[x, n], Tanh[x]], x], x, ArcCosh[Times[a, Power[x, p]]]], x], And[FreeQ[List[a, p], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcSinh[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], -1]]], Optional[Pattern[m, Blank[]]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[ArcCsch[Plus[Times[a, Power[c, -1]], Times[b, Power[x, n], Power[c, -1]]]], m]], x], FreeQ[List[a, b, c, n, m], x]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcCosh[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], -1]]], Optional[Pattern[m, Blank[]]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[ArcSech[Plus[Times[a, Power[c, -1]], Times[b, Power[x, n], Power[c, -1]]]], m]], x], FreeQ[List[a, b, c, n, m], x]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcSinh[Power[Plus[-1, Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]], Optional[Pattern[n, Blank[]]]], Power[Plus[-1, Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Times[b, Power[x, 2]]], Power[Times[b, x], -1]], Subst[Int[Times[Power[ArcSinh[x], n], Power[Sqrt[Plus[1, Power[x, 2]]], -1]], x], x, Sqrt[Plus[-1, Times[b, Power[x, 2]]]]], x], FreeQ[List[b, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcCosh[Power[Plus[1, Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]], Optional[Pattern[n, Blank[]]]], Power[Plus[1, Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[-1, Sqrt[Plus[1, Times[b, Power[x, 2]]]]]], Sqrt[Plus[1, Sqrt[Plus[1, Times[b, Power[x, 2]]]]]], Power[Times[b, x], -1]], Subst[Int[Times[Power[ArcCosh[x], n], Power[Times[Sqrt[Plus[-1, x]], Sqrt[Plus[1, x]]], -1]], x], x, Sqrt[Plus[1, Times[b, Power[x, 2]]]]], x], FreeQ[List[b, n], x]]], RuleDelayed[HoldPattern[Int[Power[Pattern[f, Blank[]], Times[Power[ArcSinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[c, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[b, -1]], Subst[Int[Times[Power[f, Times[c, Power[x, n]]], Cosh[x]], x], x, ArcSinh[Plus[a, Times[b, x]]]], x], And[FreeQ[List[a, b, c, f], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Power[Pattern[f, Blank[]], Times[Power[ArcCosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[c, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[b, -1]], Subst[Int[Times[Power[f, Times[c, Power[x, n]]], Sinh[x]], x], x, ArcCosh[Plus[a, Times[b, x]]]], x], And[FreeQ[List[a, b, c, f], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[f, Blank[]], Times[Power[ArcSinh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[c, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[b, -1]], Subst[Int[Times[Power[Plus[Times[-1, a, Power[b, -1]], Times[Sinh[x], Power[b, -1]]], m], Power[f, Times[c, Power[x, n]]], Cosh[x]], x], x, ArcSinh[Plus[a, Times[b, x]]]], x], And[FreeQ[List[a, b, c, f], x], PositiveIntegerQ[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[f, Blank[]], Times[Power[ArcCosh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[c, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[b, -1]], Subst[Int[Times[Power[Plus[Times[-1, a, Power[b, -1]], Times[Cosh[x], Power[b, -1]]], m], Power[f, Times[c, Power[x, n]]], Sinh[x]], x], x, ArcCosh[Plus[a, Times[b, x]]]], x], And[FreeQ[List[a, b, c, f], x], PositiveIntegerQ[m, n]]]], RuleDelayed[HoldPattern[Int[ArcSinh[Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcSinh[u]], x], Times[-1, Int[SimplifyIntegrand[Times[x, D[u, x], Power[Sqrt[Plus[1, Power[u, 2]]], -1]], x], x]]], And[InverseFunctionFreeQ[u, x], Not[FunctionOfExponentialQ[u, x]]]]], RuleDelayed[HoldPattern[Int[ArcCosh[Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcCosh[u]], x], Times[-1, Int[SimplifyIntegrand[Times[x, D[u, x], Power[Times[Sqrt[Plus[-1, u]], Sqrt[Plus[1, u]]], -1]], x], x]]], And[InverseFunctionFreeQ[u, x], Not[FunctionOfExponentialQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Pattern[u, Blank[]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Plus[a, Times[b, ArcSinh[u]]], Power[Times[d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, Power[Times[d, Plus[m, 1]], -1]], Int[SimplifyIntegrand[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], D[u, x], Power[Sqrt[Plus[1, Power[u, 2]]], -1]], x], x], x]]], And[FreeQ[List[a, b, c, d, m], x], NonzeroQ[Plus[m, 1]], InverseFunctionFreeQ[u, x], Not[FunctionOfQ[Power[Plus[c, Times[d, x]], Plus[m, 1]], u, x]], Not[FunctionOfExponentialQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Pattern[u, Blank[]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Plus[a, Times[b, ArcCosh[u]]], Power[Times[d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, Power[Times[d, Plus[m, 1]], -1]], Int[SimplifyIntegrand[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], D[u, x], Power[Times[Sqrt[Plus[-1, u]], Sqrt[Plus[1, u]]], -1]], x], x], x]]], And[FreeQ[List[a, b, c, d, m], x], NonzeroQ[Plus[m, 1]], InverseFunctionFreeQ[u, x], Not[FunctionOfQ[Power[Plus[c, Times[d, x]], Plus[m, 1]], u, x]], Not[FunctionOfExponentialQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSinh[Pattern[u, Blank[]]], Optional[Pattern[b, Blank[]]]]], Pattern[v, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[w, IntHide[v, x]]], Condition[Plus[Dist[Plus[a, Times[b, ArcSinh[u]]], w, x], Times[-1, Dist[b, Int[SimplifyIntegrand[Times[w, D[u, x], Power[Sqrt[Plus[1, Power[u, 2]]], -1]], x], x], x]]], InverseFunctionFreeQ[w, x]]], And[FreeQ[List[a, b], x], InverseFunctionFreeQ[u, x], Not[MatchQ[v, Condition[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], x]], Optional[Pattern[m, Blank[]]]], FreeQ[List[c, d, m], x]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCosh[Pattern[u, Blank[]]], Optional[Pattern[b, Blank[]]]]], Pattern[v, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[w, IntHide[v, x]]], Condition[Plus[Dist[Plus[a, Times[b, ArcCosh[u]]], w, x], Times[-1, Dist[b, Int[SimplifyIntegrand[Times[w, D[u, x], Power[Times[Sqrt[Plus[-1, u]], Sqrt[Plus[1, u]]], -1]], x], x], x]]], InverseFunctionFreeQ[w, x]]], And[FreeQ[List[a, b], x], InverseFunctionFreeQ[u, x], Not[MatchQ[v, Condition[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], x]], Optional[Pattern[m, Blank[]]]], FreeQ[List[c, d, m], x]]]]]]], RuleDelayed[HoldPattern[Int[Power[E, Times[ArcSinh[Pattern[u, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[u, Sqrt[Plus[1, Power[u, 2]]]], n], x], And[IntegerQ[n], PolynomialQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcSinh[Pattern[u, Blank[]]], Optional[Pattern[n, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[Plus[u, Sqrt[Plus[1, Power[u, 2]]]], n]], x], And[RationalQ[m], IntegerQ[n], PolynomialQ[u, x]]]], RuleDelayed[HoldPattern[Int[Power[E, Times[ArcCosh[Pattern[u, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[u, Times[Sqrt[Plus[-1, u]], Sqrt[Plus[1, u]]]], n], x], And[IntegerQ[n], PolynomialQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCosh[Pattern[u, Blank[]]], Optional[Pattern[n, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[Plus[u, Times[Sqrt[Plus[-1, u]], Sqrt[Plus[1, u]]]], n]], x], And[RationalQ[m], IntegerQ[n], PolynomialQ[u, x]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], Times[-1, Dist[Times[b, c, n], Int[Times[x, Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -1]], Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], Times[-1, Dist[Times[b, c, n], Int[Times[x, Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -1]], Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], x], And[FreeQ[List[a, b, c, n], x], Not[PositiveIntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], x], And[FreeQ[List[a, b, c, n], x], Not[PositiveIntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Log[Times[2, d, Power[Plus[d, Times[e, x]], -1]]], Power[e, -1]], x]], Dist[Times[b, c, n, Power[e, -1]], Int[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -1]], Log[Times[2, d, Power[Plus[d, Times[e, x]], -1]]], Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], Power[d, 2]], Times[-1, Power[e, 2]]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Log[Times[2, d, Power[Plus[d, Times[e, x]], -1]]], Power[e, -1]], x]], Dist[Times[b, c, n, Power[e, -1]], Int[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -1]], Log[Times[2, d, Power[Plus[d, Times[e, x]], -1]]], Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], Power[d, 2]], Times[-1, Power[e, 2]]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[ArcTanh[Times[c, d, Power[e, -1]]], Log[Plus[d, Times[e, x]]], Power[e, -1]], x]], Plus[Times[-1, Simp[Times[PolyLog[2, Simp[Times[c, Plus[d, Times[e, x]], Power[Plus[Times[c, d], Times[-1, e]], -1]], x]], Power[Times[2, e], -1]], x]], Simp[Times[PolyLog[2, Simp[Times[c, Plus[d, Times[e, x]], Power[Plus[Times[c, d], e], -1]], x]], Power[Times[2, e], -1]], x]]], And[FreeQ[List[c, d, e], x], PositiveQ[Plus[Times[c, d, Power[e, -1]], 1]], NegativeQ[Plus[Times[c, d, Power[e, -1]], -1]]]]], RuleDelayed[HoldPattern[Int[Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Log[Plus[1, Times[c, x]]], Power[Plus[d, Times[e, x]], -1]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Times[Log[Plus[1, Times[-1, c, x]]], Power[Plus[d, Times[e, x]], -1]], x], x]]], FreeQ[List[c, d, e], x]]], RuleDelayed[HoldPattern[Int[Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Log[Plus[1, Times[1, Power[Times[c, x], -1]]]], Power[Plus[d, Times[e, x]], -1]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Times[Log[Plus[1, Times[-1, 1, Power[Times[c, x], -1]]]], Power[Plus[d, Times[e, x]], -1]], x], x]]], FreeQ[List[c, d, e], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[a, Power[e, -1], Log[RemoveContent[Plus[d, Times[e, x]], x]]], x], Dist[b, Int[Times[ArcTanh[Times[c, x]], Power[Plus[d, Times[e, x]], -1]], x], x]], FreeQ[List[a, b, c, d, e], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[a, Power[e, -1], Log[RemoveContent[Plus[d, Times[e, x]], x]]], x], Dist[b, Int[Times[ArcCoth[Times[c, x]], Power[Plus[d, Times[e, x]], -1]], x], x]], FreeQ[List[a, b, c, d, e], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[p, 1]], Plus[a, Times[b, ArcTanh[Times[c, x]]]], Power[Times[e, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[b, c, Power[Times[e, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[p, 1]], Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, p], x], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[p, 1]], Plus[a, Times[b, ArcCoth[Times[c, x]]]], Power[Times[e, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[b, c, Power[Times[e, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[p, 1]], Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, p], x], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], ArcTanh[Plus[1, Times[-1, 2, Power[Plus[1, Times[-1, c, x]], -1]]]]], x], Times[-1, Dist[Times[2, b, c, n], Int[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -1]], ArcTanh[Plus[1, Times[-1, 2, Power[Plus[1, Times[-1, c, x]], -1]]]], Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c], x], IntegerQ[n], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], ArcCoth[Plus[1, Times[-1, 2, Power[Plus[1, Times[-1, c, x]], -1]]]]], x], Times[-1, Dist[Times[2, b, c, n], Int[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -1]], ArcCoth[Plus[1, Times[-1, 2, Power[Plus[1, Times[-1, c, x]], -1]]]], Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c], x], IntegerQ[n], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Plus[m, 1], -1]], x], Times[-1, Dist[Times[b, c, n, Power[Plus[m, 1], -1]], Int[Times[Power[x, Plus[m, 1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -1]], Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, m], x], IntegerQ[n], Greater[n, 1], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Plus[m, 1], -1]], x], Times[-1, Dist[Times[b, c, n, Power[Plus[m, 1], -1]], Int[Times[Power[x, Plus[m, 1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -1]], Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, m], x], IntegerQ[n], Greater[n, 1], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, x]], p], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e], x], PositiveIntegerQ[n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, x]], p], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e], x], PositiveIntegerQ[n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, x]], p], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], And[FreeQ[List[a, b, c, d, e, n, p], x], Not[PositiveIntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, x]], p], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], And[FreeQ[List[a, b, c, d, e, n, p], x], Not[PositiveIntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[e, -1]], Int[Times[Power[x, Plus[m, -1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[d, Power[e, -1]], Int[Times[Power[x, Plus[m, -1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Plus[d, Times[e, x]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], Power[d, 2]], Times[-1, Power[e, 2]]]], PositiveIntegerQ[n], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[e, -1]], Int[Times[Power[x, Plus[m, -1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[d, Power[e, -1]], Int[Times[Power[x, Plus[m, -1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Plus[d, Times[e, x]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], Power[d, 2]], Times[-1, Power[e, 2]]]], PositiveIntegerQ[n], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Log[Times[2, e, x, Power[Plus[d, Times[e, x]], -1]]], Power[d, -1]], x], Times[-1, Dist[Times[b, c, n, Power[d, -1]], Int[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -1]], Log[Times[2, e, x, Power[Plus[d, Times[e, x]], -1]]], Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], Power[d, 2]], Times[-1, Power[e, 2]]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Log[Times[2, e, x, Power[Plus[d, Times[e, x]], -1]]], Power[d, -1]], x], Times[-1, Dist[Times[b, c, n, Power[d, -1]], Int[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -1]], Log[Times[2, e, x, Power[Plus[d, Times[e, x]], -1]]], Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], Power[d, 2]], Times[-1, Power[e, 2]]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[d, -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[e, Power[d, -1]], Int[Times[Power[x, Plus[m, 1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Plus[d, Times[e, x]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], Power[d, 2]], Times[-1, Power[e, 2]]]], PositiveIntegerQ[n], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[d, -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[e, Power[d, -1]], Int[Times[Power[x, Plus[m, 1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Plus[d, Times[e, x]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], Power[d, 2]], Times[-1, Power[e, 2]]]], PositiveIntegerQ[n], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[x, m], Power[Plus[d, Times[e, x]], p], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, m], x], IntegerQ[p], PositiveIntegerQ[n], Or[Greater[p, 0], NonzeroQ[a], IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[x, m], Power[Plus[d, Times[e, x]], p], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, m], x], IntegerQ[p], PositiveIntegerQ[n], Or[Greater[p, 0], NonzeroQ[a], IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[Plus[d, Times[e, x]], p], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], FreeQ[List[a, b, c, d, e, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[Plus[d, Times[e, x]], p], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], FreeQ[List[a, b, c, d, e, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Times[2, c, p, Plus[Times[2, p], 1]], -1]], x], Plus[Dist[Times[2, d, p, Power[Plus[Times[2, p], 1], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, -1]], Plus[a, Times[b, ArcTanh[Times[c, x]]]]], x], x], Simp[Times[x, Power[Plus[d, Times[e, Power[x, 2]]], p], Plus[a, Times[b, ArcTanh[Times[c, x]]]], Power[Plus[Times[2, p], 1], -1]], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Times[2, c, p, Plus[Times[2, p], 1]], -1]], x], Plus[Dist[Times[2, d, p, Power[Plus[Times[2, p], 1], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, -1]], Plus[a, Times[b, ArcCoth[Times[c, x]]]]], x], x], Simp[Times[x, Power[Plus[d, Times[e, Power[x, 2]]], p], Plus[a, Times[b, ArcCoth[Times[c, x]]]], Power[Plus[Times[2, p], 1], -1]], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, n, Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -1]], Power[Times[2, c, p, Plus[Times[2, p], 1]], -1]], x], Plus[Dist[Times[2, d, p, Power[Plus[Times[2, p], 1], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, -1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[Power[b, 2], d, n, Plus[n, -1], Power[Times[2, p, Plus[Times[2, p], 1]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, -1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -2]]], x], x]], Simp[Times[x, Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Plus[Times[2, p], 1], -1]], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n, p], Greater[p, 0], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, n, Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -1]], Power[Times[2, c, p, Plus[Times[2, p], 1]], -1]], x], Plus[Dist[Times[2, d, p, Power[Plus[Times[2, p], 1], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, -1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[Power[b, 2], d, n, Plus[n, -1], Power[Times[2, p, Plus[Times[2, p], 1]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, -1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -2]]], x], x]], Simp[Times[x, Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Plus[Times[2, p], 1], -1]], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n, p], Greater[p, 0], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Log[RemoveContent[Plus[a, Times[b, ArcTanh[Times[c, x]]]], x]], Power[Times[b, c, d], -1]], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Log[RemoveContent[Plus[a, Times[b, ArcCoth[Times[c, x]]]], x]], Power[Times[b, c, d], -1]], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, d, Plus[n, 1]], -1]], x], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, d, Plus[n, 1]], -1]], x], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, Plus[a, Times[b, ArcTanh[Times[c, x]]]], ArcTan[Times[Sqrt[Plus[1, Times[-1, c, x]]], Power[Sqrt[Plus[1, Times[c, x]]], -1]]], Power[Times[c, Sqrt[d]], -1]], x], Plus[Times[-1, Simp[Times[I, b, PolyLog[2, Times[-1, I, Sqrt[Plus[1, Times[-1, c, x]]], Power[Sqrt[Plus[1, Times[c, x]]], -1]]], Power[Times[c, Sqrt[d]], -1]], x]], Simp[Times[I, b, PolyLog[2, Times[I, Sqrt[Plus[1, Times[-1, c, x]]], Power[Sqrt[Plus[1, Times[c, x]]], -1]]], Power[Times[c, Sqrt[d]], -1]], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveQ[d]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, Plus[a, Times[b, ArcCoth[Times[c, x]]]], ArcTan[Times[Sqrt[Plus[1, Times[-1, c, x]]], Power[Sqrt[Plus[1, Times[c, x]]], -1]]], Power[Times[c, Sqrt[d]], -1]], x], Plus[Times[-1, Simp[Times[I, b, PolyLog[2, Times[-1, I, Sqrt[Plus[1, Times[-1, c, x]]], Power[Sqrt[Plus[1, Times[c, x]]], -1]]], Power[Times[c, Sqrt[d]], -1]], x]], Simp[Times[I, b, PolyLog[2, Times[I, Sqrt[Plus[1, Times[-1, c, x]]], Power[Sqrt[Plus[1, Times[c, x]]], -1]]], Power[Times[c, Sqrt[d]], -1]], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveQ[d]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[c, Sqrt[d]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Sech[x]], x], x, ArcTanh[Times[c, x]]], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[n], PositiveQ[d]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[x, Sqrt[Plus[1, Times[-1, 1, Power[Times[Power[c, 2], Power[x, 2]], -1]]]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Csch[x]], x], x, ArcCoth[Times[c, x]]], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[n], PositiveQ[d]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Sqrt[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[n], Not[PositiveQ[d]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Sqrt[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[n], Not[PositiveQ[d]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Times[2, d, Plus[d, Times[e, Power[x, 2]]]], -1]], x], Plus[Times[-1, Dist[Times[b, c, n, Power[2, -1]], Int[Times[x, Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -1]], Power[Power[Plus[d, Times[e, Power[x, 2]]], 2], -1]], x], x]], Simp[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, 1]], Power[Times[2, b, c, Power[d, 2], Plus[n, 1]], -1]], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Times[2, d, Plus[d, Times[e, Power[x, 2]]]], -1]], x], Plus[Times[-1, Dist[Times[b, c, n, Power[2, -1]], Int[Times[x, Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -1]], Power[Power[Plus[d, Times[e, Power[x, 2]]], 2], -1]], x], x]], Simp[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, 1]], Power[Times[2, b, c, Power[d, 2], Plus[n, 1]], -1]], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, Power[Times[c, d, Sqrt[Plus[d, Times[e, Power[x, 2]]]]], -1]], x]], Simp[Times[x, Plus[a, Times[b, ArcTanh[Times[c, x]]]], Power[Times[d, Sqrt[Plus[d, Times[e, Power[x, 2]]]]], -1]], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, Power[Times[c, d, Sqrt[Plus[d, Times[e, Power[x, 2]]]]], -1]], x]], Simp[Times[x, Plus[a, Times[b, ArcCoth[Times[c, x]]]], Power[Times[d, Sqrt[Plus[d, Times[e, Power[x, 2]]]]], -1]], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Times[4, c, d, Power[Plus[p, 1], 2]], -1]], x]], Plus[Dist[Times[Plus[Times[2, p], 3], Power[Times[2, d, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Plus[a, Times[b, ArcTanh[Times[c, x]]]]], x], x], Times[-1, Simp[Times[x, Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Plus[a, Times[b, ArcTanh[Times[c, x]]]], Power[Times[2, d, Plus[p, 1]], -1]], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[p], Less[p, -1], Unequal[p, Times[-3, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Times[4, c, d, Power[Plus[p, 1], 2]], -1]], x]], Plus[Dist[Times[Plus[Times[2, p], 3], Power[Times[2, d, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Plus[a, Times[b, ArcCoth[Times[c, x]]]]], x], x], Times[-1, Simp[Times[x, Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Plus[a, Times[b, ArcCoth[Times[c, x]]]], Power[Times[2, d, Plus[p, 1]], -1]], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[p], Less[p, -1], Unequal[p, Times[-3, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, n, Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -1]], Power[Times[c, d, Sqrt[Plus[d, Times[e, Power[x, 2]]]]], -1]], x]], Plus[Dist[Times[Power[b, 2], n, Plus[n, -1]], Int[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -2]], Power[Power[Plus[d, Times[e, Power[x, 2]]], Times[3, Power[2, -1]]], -1]], x], x], Simp[Times[x, Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Times[d, Sqrt[Plus[d, Times[e, Power[x, 2]]]]], -1]], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, n, Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -1]], Power[Times[c, d, Sqrt[Plus[d, Times[e, Power[x, 2]]]]], -1]], x]], Plus[Dist[Times[Power[b, 2], n, Plus[n, -1]], Int[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -2]], Power[Power[Plus[d, Times[e, Power[x, 2]]], Times[3, Power[2, -1]]], -1]], x], x], Simp[Times[x, Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Times[d, Sqrt[Plus[d, Times[e, Power[x, 2]]]]], -1]], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, n, Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -1]], Power[Times[4, c, d, Power[Plus[p, 1], 2]], -1]], x]], Plus[Dist[Times[Plus[Times[2, p], 3], Power[Times[2, d, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], x], Dist[Times[Power[b, 2], n, Plus[n, -1], Power[Times[4, Power[Plus[p, 1], 2]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -2]]], x], x], Times[-1, Simp[Times[x, Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Times[2, d, Plus[p, 1]], -1]], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n, p], Less[p, -1], Greater[n, 1], Unequal[p, Times[-3, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, n, Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -1]], Power[Times[4, c, d, Power[Plus[p, 1], 2]], -1]], x]], Plus[Dist[Times[Plus[Times[2, p], 3], Power[Times[2, d, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], x], Dist[Times[Power[b, 2], n, Plus[n, -1], Power[Times[4, Power[Plus[p, 1], 2]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -2]]], x], x], Times[-1, Simp[Times[x, Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Times[2, d, Plus[p, 1]], -1]], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n, p], Less[p, -1], Greater[n, 1], Unequal[p, Times[-3, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, d, Plus[n, 1]], -1]], x], Dist[Times[2, c, Plus[p, 1], Power[Times[b, Plus[n, 1]], -1]], Int[Times[x, Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n, p], Less[p, -1], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, d, Plus[n, 1]], -1]], x], Dist[Times[2, c, Plus[p, 1], Power[Times[b, Plus[n, 1]], -1]], Int[Times[x, Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n, p], Less[p, -1], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[d, p], Power[c, -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Power[Cosh[x], Times[2, Plus[p, 1]]], -1]], x], x, ArcTanh[Times[c, x]]], x], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], NegativeIntegerQ[Times[2, Plus[p, 1]]], Or[IntegerQ[p], PositiveQ[d]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[d, Plus[p, Times[1, Power[2, -1]]]], Sqrt[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], Int[Times[Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], p], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], NegativeIntegerQ[Times[2, Plus[p, 1]]], Not[Or[IntegerQ[p], PositiveQ[d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[Times[-1, d], p], Power[c, -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Power[Sinh[x], Times[2, Plus[p, 1]]], -1]], x], x, ArcCoth[Times[c, x]]], x]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], NegativeIntegerQ[Times[2, Plus[p, 1]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[Times[-1, d], Plus[p, Times[1, Power[2, -1]]]], x, Sqrt[Times[Plus[Times[Power[c, 2], Power[x, 2]], -1], Power[Times[Power[c, 2], Power[x, 2]], -1]]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Power[Sinh[x], Times[2, Plus[p, 1]]], -1]], x], x, ArcCoth[Times[c, x]]], x]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], NegativeIntegerQ[Times[2, Plus[p, 1]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Log[Plus[1, Times[c, x]]], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Times[Log[Plus[1, Times[-1, c, x]]], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], FreeQ[List[c, d, e], x]]], RuleDelayed[HoldPattern[Int[Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Log[Plus[1, Times[1, Power[Times[c, x], -1]]]], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Times[Log[Plus[1, Times[-1, 1, Power[Times[c, x], -1]]]], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], FreeQ[List[c, d, e], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[a, Int[Times[1, Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x], Dist[b, Int[Times[ArcTanh[Times[c, x]], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]], FreeQ[List[a, b, c, d, e], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[a, Int[Times[1, Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x], Dist[b, Int[Times[ArcCoth[Times[c, x]], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]], FreeQ[List[a, b, c, d, e], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Power[Plus[d, Times[e, Power[x, 2]]], p], x]]], Plus[Dist[Plus[a, Times[b, ArcTanh[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c], Int[ExpandIntegrand[Times[u, Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], Or[IntegerQ[p], NegativeIntegerQ[Plus[p, Times[1, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Power[Plus[d, Times[e, Power[x, 2]]], p], x]]], Plus[Dist[Plus[a, Times[b, ArcCoth[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c], Int[ExpandIntegrand[Times[u, Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], Or[IntegerQ[p], NegativeIntegerQ[Plus[p, Times[1, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e], x], IntegerQ[p], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e], x], IntegerQ[p], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], FreeQ[List[a, b, c, d, e, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], FreeQ[List[a, b, c, d, e, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[e, -1]], Int[Times[Power[x, Plus[m, -2]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[d, Power[e, -1]], Int[Times[Power[x, Plus[m, -2]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], RationalQ[m, n], Greater[n, 0], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[e, -1]], Int[Times[Power[x, Plus[m, -2]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[d, Power[e, -1]], Int[Times[Power[x, Plus[m, -2]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], RationalQ[m, n], Greater[n, 0], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[d, -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[e, Power[d, -1]], Int[Times[Power[x, Plus[m, 2]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], RationalQ[m, n], Greater[n, 0], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[d, -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[e, Power[d, -1]], Int[Times[Power[x, Plus[m, 2]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], RationalQ[m, n], Greater[n, 0], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, e, Plus[n, 1]], -1]], x], Dist[Times[1, Power[Times[c, d], -1]], Int[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Plus[1, Times[-1, c, x]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, 1]], Power[Times[b, e, Plus[n, 1]], -1]], x], Dist[Times[1, Power[Times[c, d], -1]], Int[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Plus[1, Times[-1, c, x]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, d, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[b, c, d, Plus[n, 1]], -1]], Int[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, 1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], Not[PositiveIntegerQ[n]], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, d, Plus[n, 1]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[b, c, d, Plus[n, 1]], -1]], Int[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, 1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], Not[PositiveIntegerQ[n]], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[e, -1]], Int[Times[Power[x, Plus[m, -2]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[d, Power[e, -1]], Int[Times[Power[x, Plus[m, -2]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[m, n], Greater[n, 0], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[e, -1]], Int[Times[Power[x, Plus[m, -2]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[d, Power[e, -1]], Int[Times[Power[x, Plus[m, -2]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[m, n], Greater[n, 0], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, d, Plus[n, 1]], -1]], x], Dist[Times[1, Power[d, -1]], Int[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Times[x, Plus[1, Times[c, x]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, 1]], Power[Times[b, d, Plus[n, 1]], -1]], x], Dist[Times[1, Power[d, -1]], Int[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Times[x, Plus[1, Times[c, x]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[d, -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[e, Power[d, -1]], Int[Times[Power[x, Plus[m, 2]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[m, n], Greater[n, 0], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[d, -1]], Int[Times[Power[x, m], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[e, Power[d, -1]], Int[Times[Power[x, Plus[m, 2]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[m, n], Greater[n, 0], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, m], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, d, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[m, Power[Times[b, c, d, Plus[n, 1]], -1]], Int[Times[Power[x, Plus[m, -1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, m], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, m], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, d, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[m, Power[Times[b, c, d, Plus[n, 1]], -1]], Int[Times[Power[x, Plus[m, -1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, m], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e], x], IntegerQ[m], Not[And[Equal[m, 1], NonzeroQ[a]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e], x], IntegerQ[m], Not[And[Equal[m, 1], NonzeroQ[a]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Times[2, e, Plus[p, 1]], -1]], x], Dist[Times[b, n, Power[Times[2, c, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -1]]], x], x]], And[FreeQ[List[a, b, c, d, e, p], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Times[2, e, Plus[p, 1]], -1]], x], Dist[Times[b, n, Power[Times[2, c, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -1]]], x], x]], And[FreeQ[List[a, b, c, d, e, p], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, d, Plus[n, 1], Plus[d, Times[e, Power[x, 2]]]], -1]], x], Plus[Dist[Times[4, Power[Times[Power[b, 2], Plus[n, 1], Plus[n, 2]], -1]], Int[Times[x, Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, 2]], Power[Power[Plus[d, Times[e, Power[x, 2]]], 2], -1]], x], x], Simp[Times[Plus[1, Times[Power[c, 2], Power[x, 2]]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, 2]], Power[Times[Power[b, 2], e, Plus[n, 1], Plus[n, 2], Plus[d, Times[e, Power[x, 2]]]], -1]], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Less[n, -1], Unequal[n, -2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, d, Plus[n, 1], Plus[d, Times[e, Power[x, 2]]]], -1]], x], Plus[Dist[Times[4, Power[Times[Power[b, 2], Plus[n, 1], Plus[n, 2]], -1]], Int[Times[x, Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, 2]], Power[Power[Plus[d, Times[e, Power[x, 2]]], 2], -1]], x], x], Simp[Times[Plus[1, Times[Power[c, 2], Power[x, 2]]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, 2]], Power[Times[Power[b, 2], e, Plus[n, 1], Plus[n, 2], Plus[d, Times[e, Power[x, 2]]]], -1]], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Less[n, -1], Unequal[n, -2]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Times[4, Power[c, 3], d, Power[Plus[p, 1], 2]], -1]], x]], Plus[Dist[Times[1, Power[Times[2, Power[c, 2], d, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Plus[a, Times[b, ArcTanh[Times[c, x]]]]], x], x], Times[-1, Simp[Times[x, Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Plus[a, Times[b, ArcTanh[Times[c, x]]]], Power[Times[2, Power[c, 2], d, Plus[p, 1]], -1]], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[p], Less[p, -1], Unequal[p, Times[-5, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Times[4, Power[c, 3], d, Power[Plus[p, 1], 2]], -1]], x]], Plus[Dist[Times[1, Power[Times[2, Power[c, 2], d, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Plus[a, Times[b, ArcCoth[Times[c, x]]]]], x], x], Times[-1, Simp[Times[x, Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Plus[a, Times[b, ArcCoth[Times[c, x]]]], Power[Times[2, Power[c, 2], d, Plus[p, 1]], -1]], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[p], Less[p, -1], Unequal[p, Times[-5, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, 1]], Power[Times[2, b, Power[c, 3], Power[d, 2], Plus[n, 1]], -1]], x]], Plus[Times[-1, Dist[Times[b, n, Power[Times[2, c], -1]], Int[Times[x, Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -1]], Power[Power[Plus[d, Times[e, Power[x, 2]]], 2], -1]], x], x]], Simp[Times[x, Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Times[2, Power[c, 2], d, Plus[d, Times[e, Power[x, 2]]]], -1]], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -2]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, 1]], Power[Times[2, b, Power[c, 3], Power[d, 2], Plus[n, 1]], -1]], x]], Plus[Times[-1, Dist[Times[b, n, Power[Times[2, c], -1]], Int[Times[x, Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -1]], Power[Power[Plus[d, Times[e, Power[x, 2]]], 2], -1]], x], x]], Simp[Times[x, Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Times[2, Power[c, 2], d, Plus[d, Times[e, Power[x, 2]]]], -1]], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Times[c, d, Power[m, 2]], -1]], x]], Plus[Times[-1, Dist[Times[Plus[m, -1], Power[Times[Power[c, 2], d, m], -1]], Int[Times[Power[x, Plus[m, -2]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Plus[a, Times[b, ArcTanh[Times[c, x]]]]], x], x]], Simp[Times[Power[x, Plus[m, -1]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Plus[a, Times[b, ArcTanh[Times[c, x]]]], Power[Times[Power[c, 2], d, m], -1]], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], ZeroQ[Plus[m, Times[2, p], 2]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Times[c, d, Power[m, 2]], -1]], x]], Plus[Times[-1, Dist[Times[Plus[m, -1], Power[Times[Power[c, 2], d, m], -1]], Int[Times[Power[x, Plus[m, -2]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Plus[a, Times[b, ArcCoth[Times[c, x]]]]], x], x]], Simp[Times[Power[x, Plus[m, -1]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Plus[a, Times[b, ArcCoth[Times[c, x]]]], Power[Times[Power[c, 2], d, m], -1]], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], ZeroQ[Plus[m, Times[2, p], 2]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, n, Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -1]], Power[Times[c, d, Power[m, 2]], -1]], x]], Plus[Times[-1, Dist[Times[Plus[m, -1], Power[Times[Power[c, 2], d, m], -1]], Int[Times[Power[x, Plus[m, -2]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], x]], Dist[Times[Power[b, 2], n, Plus[n, -1], Power[Power[m, 2], -1]], Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -2]]], x], x], Simp[Times[Power[x, Plus[m, -1]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Times[Power[c, 2], d, m], -1]], x]]], And[FreeQ[List[a, b, c, d, e, m], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], ZeroQ[Plus[m, Times[2, p], 2]], RationalQ[n, p], Less[p, -1], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, n, Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -1]], Power[Times[c, d, Power[m, 2]], -1]], x]], Plus[Times[-1, Dist[Times[Plus[m, -1], Power[Times[Power[c, 2], d, m], -1]], Int[Times[Power[x, Plus[m, -2]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], x]], Dist[Times[Power[b, 2], n, Plus[n, -1], Power[Power[m, 2], -1]], Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -2]]], x], x], Simp[Times[Power[x, Plus[m, -1]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Times[Power[c, 2], d, m], -1]], x]]], And[FreeQ[List[a, b, c, d, e, m], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], ZeroQ[Plus[m, Times[2, p], 2]], RationalQ[n, p], Less[p, -1], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, d, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[m, Power[Times[b, c, Plus[n, 1]], -1]], Int[Times[Power[x, Plus[m, -1]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, m, p], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], ZeroQ[Plus[m, Times[2, p], 2]], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, d, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[m, Power[Times[b, c, Plus[n, 1]], -1]], Int[Times[Power[x, Plus[m, -1]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, m, p], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], ZeroQ[Plus[m, Times[2, p], 2]], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Times[d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, c, n, Power[Plus[m, 1], -1]], Int[Times[Power[x, Plus[m, 1]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, m, p], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], ZeroQ[Plus[m, Times[2, p], 3]], RationalQ[n], Greater[n, 0], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Times[d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, c, n, Power[Plus[m, 1], -1]], Int[Times[Power[x, Plus[m, 1]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, m, p], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], ZeroQ[Plus[m, Times[2, p], 3]], RationalQ[n], Greater[n, 0], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Sqrt[Plus[d, Times[e, Power[x, 2]]]], Plus[a, Times[b, ArcTanh[Times[c, x]]]], Power[Plus[m, 2], -1]], x], Plus[Dist[Times[d, Power[Plus[m, 2], -1]], Int[Times[Power[x, m], Plus[a, Times[b, ArcTanh[Times[c, x]]]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], x], x], Times[-1, Dist[Times[b, c, d, Power[Plus[m, 2], -1]], Int[Times[Power[x, Plus[m, 1]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, m], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], NonzeroQ[Plus[m, 2]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Sqrt[Plus[d, Times[e, Power[x, 2]]]], Plus[a, Times[b, ArcCoth[Times[c, x]]]], Power[Plus[m, 2], -1]], x], Plus[Dist[Times[d, Power[Plus[m, 2], -1]], Int[Times[Power[x, m], Plus[a, Times[b, ArcCoth[Times[c, x]]]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], x], x], Times[-1, Dist[Times[b, c, d, Power[Plus[m, 2], -1]], Int[Times[Power[x, Plus[m, 1]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, m], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], NonzeroQ[Plus[m, 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, m], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[n], IntegerQ[p], Greater[p, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, m], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[n], IntegerQ[p], Greater[p, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[d, Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, -1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[Power[c, 2], d], Int[Times[Power[x, Plus[m, 2]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, -1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], x]]], And[FreeQ[List[a, b, c, d, e, m], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[p], Greater[p, 0], PositiveIntegerQ[n], Or[RationalQ[m], And[EqQ[n, 1], IntegerQ[p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[d, Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, -1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[Power[c, 2], d], Int[Times[Power[x, Plus[m, 2]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, -1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], x]]], And[FreeQ[List[a, b, c, d, e, m], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[p], Greater[p, 0], PositiveIntegerQ[n], Or[RationalQ[m], And[EqQ[n, 1], IntegerQ[p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[m, -1]], Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Times[Power[c, 2], d, m], -1]], x]], Plus[Dist[Times[b, n, Power[Times[c, m], -1]], Int[Times[Power[x, Plus[m, -1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -1]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], x], x], Dist[Times[Plus[m, -1], Power[Times[Power[c, 2], m], -1]], Int[Times[Power[x, Plus[m, -2]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[m, n], Greater[n, 0], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[m, -1]], Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Times[Power[c, 2], d, m], -1]], x]], Plus[Dist[Times[b, n, Power[Times[c, m], -1]], Int[Times[Power[x, Plus[m, -1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -1]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], x], x], Dist[Times[Plus[m, -1], Power[Times[Power[c, 2], m], -1]], Int[Times[Power[x, Plus[m, -2]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[m, n], Greater[n, 0], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, Power[Sqrt[d], -1], Plus[a, Times[b, ArcTanh[Times[c, x]]]], ArcTanh[Times[Sqrt[Plus[1, Times[-1, c, x]]], Power[Sqrt[Plus[1, Times[c, x]]], -1]]]], x], Plus[Simp[Times[b, Power[Sqrt[d], -1], PolyLog[2, Times[-1, Sqrt[Plus[1, Times[-1, c, x]]], Power[Sqrt[Plus[1, Times[c, x]]], -1]]]], x], Times[-1, Simp[Times[b, Power[Sqrt[d], -1], PolyLog[2, Times[Sqrt[Plus[1, Times[-1, c, x]]], Power[Sqrt[Plus[1, Times[c, x]]], -1]]]], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveQ[d]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, Power[Sqrt[d], -1], Plus[a, Times[b, ArcCoth[Times[c, x]]]], ArcTanh[Times[Sqrt[Plus[1, Times[-1, c, x]]], Power[Sqrt[Plus[1, Times[c, x]]], -1]]]], x], Plus[Simp[Times[b, Power[Sqrt[d], -1], PolyLog[2, Times[-1, Sqrt[Plus[1, Times[-1, c, x]]], Power[Sqrt[Plus[1, Times[c, x]]], -1]]]], x], Times[-1, Simp[Times[b, Power[Sqrt[d], -1], PolyLog[2, Times[Sqrt[Plus[1, Times[-1, c, x]]], Power[Sqrt[Plus[1, Times[c, x]]], -1]]]], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveQ[d]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Sqrt[d], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Csch[x]], x], x, ArcTanh[Times[c, x]]], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[n], PositiveQ[d]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[c, x, Sqrt[Plus[1, Times[-1, 1, Power[Times[Power[c, 2], Power[x, 2]], -1]]]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Sech[x]], x], x, ArcCoth[Times[c, x]]], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[n], PositiveQ[d]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Times[x, Sqrt[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[n], Not[PositiveQ[d]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], Int[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Times[x, Sqrt[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[n], Not[PositiveQ[d]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], -2], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Times[d, x], -1]], x]], Dist[Times[b, c, n], Int[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -1]], Power[Times[x, Sqrt[Plus[d, Times[e, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], -2], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Times[d, x], -1]], x]], Dist[Times[b, c, n], Int[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -1]], Power[Times[x, Sqrt[Plus[d, Times[e, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Times[d, Plus[m, 1]], -1]], x], Plus[Dist[Times[Power[c, 2], Plus[m, 2], Power[Plus[m, 1], -1]], Int[Times[Power[x, Plus[m, 2]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], x], x], Times[-1, Dist[Times[b, c, n, Power[Plus[m, 1], -1]], Int[Times[Power[x, Plus[m, 1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -1]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[m, n], Greater[n, 0], Less[m, -1], Unequal[m, -2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Times[d, Plus[m, 1]], -1]], x], Plus[Dist[Times[Power[c, 2], Plus[m, 2], Power[Plus[m, 1], -1]], Int[Times[Power[x, Plus[m, 2]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], x], x], Times[-1, Dist[Times[b, c, n, Power[Plus[m, 1], -1]], Int[Times[Power[x, Plus[m, 1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -1]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[m, n], Greater[n, 0], Less[m, -1], Unequal[m, -2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[e, -1]], Int[Times[Power[x, Plus[m, -2]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[d, Power[e, -1]], Int[Times[Power[x, Plus[m, -2]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], IntegersQ[m, n, Times[2, p]], Less[p, -1], Greater[m, 1], Unequal[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[e, -1]], Int[Times[Power[x, Plus[m, -2]], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[d, Power[e, -1]], Int[Times[Power[x, Plus[m, -2]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], IntegersQ[m, n, Times[2, p]], Less[p, -1], Greater[m, 1], Unequal[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[d, -1]], Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[e, Power[d, -1]], Int[Times[Power[x, Plus[m, 2]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], IntegersQ[m, n, Times[2, p]], Less[p, -1], Less[m, 0], Unequal[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[d, -1]], Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], x], Times[-1, Dist[Times[e, Power[d, -1]], Int[Times[Power[x, Plus[m, 2]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], IntegersQ[m, n, Times[2, p]], Less[p, -1], Less[m, 0], Unequal[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, d, Plus[n, 1]], -1]], x], Plus[Dist[Times[c, Plus[m, Times[2, p], 2], Power[Times[b, Plus[n, 1]], -1]], Int[Times[Power[x, Plus[m, 1]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, 1]]], x], x], Times[-1, Dist[Times[m, Power[Times[b, c, Plus[n, 1]], -1]], Int[Times[Power[x, Plus[m, -1]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, 1]]], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[m, n, p], Less[p, -1], Less[n, -1], NonzeroQ[Plus[m, Times[2, p], 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, 1]], Power[Times[b, c, d, Plus[n, 1]], -1]], x], Plus[Dist[Times[c, Plus[m, Times[2, p], 2], Power[Times[b, Plus[n, 1]], -1]], Int[Times[Power[x, Plus[m, 1]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, 1]]], x], x], Times[-1, Dist[Times[m, Power[Times[b, c, Plus[n, 1]], -1]], Int[Times[Power[x, Plus[m, -1]], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, 1]]], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[m, n, p], Less[p, -1], Less[n, -1], NonzeroQ[Plus[m, Times[2, p], 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[d, p], Power[Power[c, Plus[m, 1]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Sinh[x], m], Power[Power[Cosh[x], Plus[m, Times[2, Plus[p, 1]]]], -1]], x], x, ArcTanh[Times[c, x]]], x], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[m], NegativeIntegerQ[Plus[m, Times[2, p], 1]], Or[IntegerQ[p], PositiveQ[d]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[d, Plus[p, Times[1, Power[2, -1]]]], Sqrt[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], Int[Times[Power[x, m], Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], p], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], x], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[m], NegativeIntegerQ[Plus[m, Times[2, p], 1]], Not[Or[IntegerQ[p], PositiveQ[d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[Times[-1, d], p], Power[Power[c, Plus[m, 1]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Cosh[x], m], Power[Power[Sinh[x], Plus[m, Times[2, Plus[p, 1]]]], -1]], x], x, ArcCoth[Times[c, x]]], x]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[m], NegativeIntegerQ[Plus[m, Times[2, p], 1]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[Times[-1, d], Plus[p, Times[1, Power[2, -1]]]], x, Sqrt[Times[Plus[Times[Power[c, 2], Power[x, 2]], -1], Power[Times[Power[c, 2], Power[x, 2]], -1]]], Power[Times[Power[c, m], Sqrt[Plus[d, Times[e, Power[x, 2]]]]], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Cosh[x], m], Power[Power[Sinh[x], Plus[m, Times[2, Plus[p, 1]]]], -1]], x], x, ArcCoth[Times[c, x]]], x]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], PositiveIntegerQ[m], NegativeIntegerQ[Plus[m, Times[2, p], 1]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[x, Blank[]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Plus[a, Times[b, ArcTanh[Times[c, x]]]], Power[Times[2, e, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[b, c, Power[Times[2, e, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, p], x], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[x, Blank[]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Plus[a, Times[b, ArcCoth[Times[c, x]]]], Power[Times[2, e, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[b, c, Power[Times[2, e, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, p], x], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], p]], x]]], Plus[Dist[Plus[a, Times[b, ArcTanh[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c], Int[SimplifyIntegrand[Times[u, Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e, m, p], x], Or[And[PositiveIntegerQ[p], Not[And[NegativeIntegerQ[Times[Plus[m, -1], Power[2, -1]]], Greater[Plus[m, Times[2, p], 3], 0]]]], And[PositiveIntegerQ[Times[Plus[m, 1], Power[2, -1]]], Not[And[NegativeIntegerQ[p], Greater[Plus[m, Times[2, p], 3], 0]]]], And[NegativeIntegerQ[Times[Plus[m, Times[2, p], 1], Power[2, -1]]], Not[NegativeIntegerQ[Times[Plus[m, -1], Power[2, -1]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], p]], x]]], Plus[Dist[Plus[a, Times[b, ArcCoth[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c], Int[SimplifyIntegrand[Times[u, Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e, m, p], x], Or[And[PositiveIntegerQ[p], Not[And[NegativeIntegerQ[Times[Plus[m, -1], Power[2, -1]]], Greater[Plus[m, Times[2, p], 3], 0]]]], And[PositiveIntegerQ[Times[Plus[m, 1], Power[2, -1]]], Not[And[NegativeIntegerQ[p], Greater[Plus[m, Times[2, p], 3], 0]]]], And[NegativeIntegerQ[Times[Plus[m, Times[2, p], 1], Power[2, -1]]], Not[NegativeIntegerQ[Times[Plus[m, -1], Power[2, -1]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, m], x], IntegerQ[p], PositiveIntegerQ[n], Or[Greater[p, 0], And[Less[p, -1], IntegerQ[m], Unequal[m, 1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, m], x], IntegerQ[p], PositiveIntegerQ[n], Or[Greater[p, 0], And[Less[p, -1], IntegerQ[m], Unequal[m, 1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[a, Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], p]], x], x], Dist[b, Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], p], ArcTanh[Times[c, x]]], x], x]], FreeQ[List[a, b, c, d, e, m, p], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[a, Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], p]], x], x], Dist[b, Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], p], ArcCoth[Times[c, x]]], x], x]], FreeQ[List[a, b, c, d, e, m, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n]], x], FreeQ[List[a, b, c, d, e, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n]], x], FreeQ[List[a, b, c, d, e, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[ArcTanh[Pattern[u, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Log[Plus[1, u]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Times[Log[Plus[1, Times[-1, u]]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0], ZeroQ[Plus[Power[u, 2], Times[-1, Power[Plus[1, Times[-1, 2, Power[Plus[1, Times[c, x]], -1]]], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[ArcCoth[Pattern[u, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Log[SimplifyIntegrand[Plus[1, Times[1, Power[u, -1]]], x]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Times[Log[SimplifyIntegrand[Plus[1, Times[-1, 1, Power[u, -1]]], x]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0], ZeroQ[Plus[Power[u, 2], Times[-1, Power[Plus[1, Times[-1, 2, Power[Plus[1, Times[c, x]], -1]]], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[ArcTanh[Pattern[u, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Log[Plus[1, u]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Times[Log[Plus[1, Times[-1, u]]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0], ZeroQ[Plus[Power[u, 2], Times[-1, Power[Plus[1, Times[-1, 2, Power[Plus[1, Times[-1, c, x]], -1]]], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[ArcCoth[Pattern[u, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Log[SimplifyIntegrand[Plus[1, Times[1, Power[u, -1]]], x]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Times[Log[SimplifyIntegrand[Plus[1, Times[-1, 1, Power[u, -1]]], x]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0], ZeroQ[Plus[Power[u, 2], Times[-1, Power[Plus[1, Times[-1, 2, Power[Plus[1, Times[-1, c, x]], -1]]], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Pattern[u, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], PolyLog[2, Together[Plus[1, Times[-1, u]]]], Power[Times[2, c, d], -1]], x], Times[-1, Dist[Times[b, n, Power[2, -1]], Int[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -1]], PolyLog[2, Together[Plus[1, Times[-1, u]]]], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0], ZeroQ[Plus[Power[Plus[1, Times[-1, u]], 2], Times[-1, Power[Plus[1, Times[-1, 2, Power[Plus[1, Times[c, x]], -1]]], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Pattern[u, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], PolyLog[2, Together[Plus[1, Times[-1, u]]]], Power[Times[2, c, d], -1]], x], Times[-1, Dist[Times[b, n, Power[2, -1]], Int[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -1]], PolyLog[2, Together[Plus[1, Times[-1, u]]]], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0], ZeroQ[Plus[Power[Plus[1, Times[-1, u]], 2], Times[-1, Power[Plus[1, Times[-1, 2, Power[Plus[1, Times[c, x]], -1]]], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Pattern[u, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], PolyLog[2, Together[Plus[1, Times[-1, u]]]], Power[Times[2, c, d], -1]], x]], Dist[Times[b, n, Power[2, -1]], Int[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -1]], PolyLog[2, Together[Plus[1, Times[-1, u]]]], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0], ZeroQ[Plus[Power[Plus[1, Times[-1, u]], 2], Times[-1, Power[Plus[1, Times[-1, 2, Power[Plus[1, Times[-1, c, x]], -1]]], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Log[Pattern[u, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], PolyLog[2, Together[Plus[1, Times[-1, u]]]], Power[Times[2, c, d], -1]], x]], Dist[Times[b, n, Power[2, -1]], Int[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -1]], PolyLog[2, Together[Plus[1, Times[-1, u]]]], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0], ZeroQ[Plus[Power[Plus[1, Times[-1, u]], 2], Times[-1, Power[Plus[1, Times[-1, 2, Power[Plus[1, Times[-1, c, x]], -1]]], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], PolyLog[Pattern[p, Blank[]], Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], PolyLog[Plus[p, 1], u], Power[Times[2, c, d], -1]], x]], Dist[Times[b, n, Power[2, -1]], Int[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -1]], PolyLog[Plus[p, 1], u], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, p], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0], ZeroQ[Plus[Power[u, 2], Times[-1, Power[Plus[1, Times[-1, 2, Power[Plus[1, Times[c, x]], -1]]], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], PolyLog[Pattern[p, Blank[]], Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], PolyLog[Plus[p, 1], u], Power[Times[2, c, d], -1]], x]], Dist[Times[b, n, Power[2, -1]], Int[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -1]], PolyLog[Plus[p, 1], u], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, p], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0], ZeroQ[Plus[Power[u, 2], Times[-1, Power[Plus[1, Times[-1, 2, Power[Plus[1, Times[c, x]], -1]]], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], PolyLog[Pattern[p, Blank[]], Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], PolyLog[Plus[p, 1], u], Power[Times[2, c, d], -1]], x], Times[-1, Dist[Times[b, n, Power[2, -1]], Int[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -1]], PolyLog[Plus[p, 1], u], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, p], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0], ZeroQ[Plus[Power[u, 2], Times[-1, Power[Plus[1, Times[-1, 2, Power[Plus[1, Times[-1, c, x]], -1]]], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], PolyLog[Pattern[p, Blank[]], Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], PolyLog[Plus[p, 1], u], Power[Times[2, c, d], -1]], x], Times[-1, Dist[Times[b, n, Power[2, -1]], Int[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -1]], PolyLog[Plus[p, 1], u], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, p], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], RationalQ[n], Greater[n, 0], ZeroQ[Plus[Power[u, 2], Times[-1, Power[Plus[1, Times[-1, 2, Power[Plus[1, Times[-1, c, x]], -1]]], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], -1], Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Plus[Times[-1, Log[Plus[a, Times[b, ArcCoth[Times[c, x]]]]]], Log[Plus[a, Times[b, ArcTanh[Times[c, x]]]]]], Power[Times[Power[b, 2], c, d, Plus[ArcCoth[Times[c, x]], Times[-1, ArcTanh[Times[c, x]]]]], -1]], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[m, 1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], n], Power[Times[b, c, d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[n, Power[Plus[m, 1], -1]], Int[Times[Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[m, 1]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[n, -1]], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], IntegersQ[m, n], Inequality[0, Less, n, LessEqual, m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[m, 1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], n], Power[Times[b, c, d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[n, Power[Plus[m, 1], -1]], Int[Times[Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], Plus[m, 1]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], Plus[n, -1]], Power[Plus[d, Times[e, Power[x, 2]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], IntegersQ[m, n], Less[0, n, m]]]], RuleDelayed[HoldPattern[Int[Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Log[Plus[1, Times[a, x]]], Power[Plus[c, Times[d, Power[x, n]]], -1]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Times[Log[Plus[1, Times[-1, a, x]]], Power[Plus[c, Times[d, Power[x, n]]], -1]], x], x]]], And[FreeQ[List[a, c, d], x], IntegerQ[n], Not[And[Equal[n, 2], ZeroQ[Plus[Times[Power[a, 2], c], d]]]]]]], RuleDelayed[HoldPattern[Int[Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Log[Plus[1, Times[1, Power[Times[a, x], -1]]]], Power[Plus[c, Times[d, Power[x, n]]], -1]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Times[Log[Plus[1, Times[-1, 1, Power[Times[a, x], -1]]]], Power[Plus[c, Times[d, Power[x, n]]], -1]], x], x]]], And[FreeQ[List[a, c, d], x], IntegerQ[n], Not[And[Equal[n, 2], ZeroQ[Plus[Times[Power[a, 2], c], d]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Log[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[e, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Plus[d, Times[e, Log[Plus[f, Times[g, Power[x, 2]]]]]], Plus[a, Times[b, ArcTanh[Times[c, x]]]]], x], Plus[Times[-1, Dist[Times[b, c], Int[Times[x, Plus[d, Times[e, Log[Plus[f, Times[g, Power[x, 2]]]]]], Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x]], Times[-1, Dist[Times[2, e, g], Int[Times[Power[x, 2], Plus[a, Times[b, ArcTanh[Times[c, x]]]], Power[Plus[f, Times[g, Power[x, 2]]], -1]], x], x]]]], FreeQ[List[a, b, c, d, e, f, g], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Log[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[e, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Plus[d, Times[e, Log[Plus[f, Times[g, Power[x, 2]]]]]], Plus[a, Times[b, ArcCoth[Times[c, x]]]]], x], Plus[Times[-1, Dist[Times[b, c], Int[Times[x, Plus[d, Times[e, Log[Plus[f, Times[g, Power[x, 2]]]]]], Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x]], Times[-1, Dist[Times[2, e, g], Int[Times[Power[x, 2], Plus[a, Times[b, ArcCoth[Times[c, x]]]], Power[Plus[f, Times[g, Power[x, 2]]], -1]], x], x]]]], FreeQ[List[a, b, c, d, e, f, g], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Log[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[e, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Plus[d, Times[e, Log[Plus[f, Times[g, Power[x, 2]]]]]], Plus[a, Times[b, ArcTanh[Times[c, x]]]], Power[Plus[m, 1], -1]], x], Plus[Times[-1, Dist[Times[b, c, Power[Plus[m, 1], -1]], Int[Times[Power[x, Plus[m, 1]], Plus[d, Times[e, Log[Plus[f, Times[g, Power[x, 2]]]]]], Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x]], Times[-1, Dist[Times[2, e, g, Power[Plus[m, 1], -1]], Int[Times[Power[x, Plus[m, 2]], Plus[a, Times[b, ArcTanh[Times[c, x]]]], Power[Plus[f, Times[g, Power[x, 2]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, g], x], NegativeIntegerQ[Times[m, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Log[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[e, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Plus[d, Times[e, Log[Plus[f, Times[g, Power[x, 2]]]]]], Plus[a, Times[b, ArcCoth[Times[c, x]]]], Power[Plus[m, 1], -1]], x], Plus[Times[-1, Dist[Times[b, c, Power[Plus[m, 1], -1]], Int[Times[Power[x, Plus[m, 1]], Plus[d, Times[e, Log[Plus[f, Times[g, Power[x, 2]]]]]], Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x]], Times[-1, Dist[Times[2, e, g, Power[Plus[m, 1], -1]], Int[Times[Power[x, Plus[m, 2]], Plus[a, Times[b, ArcCoth[Times[c, x]]]], Power[Plus[f, Times[g, Power[x, 2]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, g], x], NegativeIntegerQ[Times[m, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Log[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[e, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[x, m], Plus[d, Times[e, Log[Plus[f, Times[g, Power[x, 2]]]]]]], x]]], Plus[Dist[Plus[a, Times[b, ArcTanh[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c], Int[ExpandIntegrand[Times[u, Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, g], x], PositiveIntegerQ[Times[Plus[m, 1], Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Log[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[e, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[x, m], Plus[d, Times[e, Log[Plus[f, Times[g, Power[x, 2]]]]]]], x]]], Plus[Dist[Plus[a, Times[b, ArcCoth[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c], Int[ExpandIntegrand[Times[u, Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, g], x], PositiveIntegerQ[Times[Plus[m, 1], Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Log[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[e, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[x, m], Plus[a, Times[b, ArcTanh[Times[c, x]]]]], x]]], Plus[Dist[Plus[d, Times[e, Log[Plus[f, Times[g, Power[x, 2]]]]]], u, x], Times[-1, Dist[Times[2, e, g], Int[ExpandIntegrand[Times[x, u, Power[Plus[f, Times[g, Power[x, 2]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, g], x], IntegerQ[m], Unequal[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Log[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[e, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[x, m], Plus[a, Times[b, ArcCoth[Times[c, x]]]]], x]]], Plus[Dist[Plus[d, Times[e, Log[Plus[f, Times[g, Power[x, 2]]]]]], u, x], Times[-1, Dist[Times[2, e, g], Int[ExpandIntegrand[Times[x, u, Power[Plus[f, Times[g, Power[x, 2]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, g], x], IntegerQ[m], Unequal[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], 2], Plus[Optional[Pattern[d, Blank[]]], Times[Log[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[e, Blank[]]]]], Pattern[x, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[f, Times[g, Power[x, 2]]], Plus[d, Times[e, Log[Plus[f, Times[g, Power[x, 2]]]]]], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], 2], Power[Times[2, g], -1]], x], Plus[Dist[Times[b, Power[c, -1]], Int[Times[Plus[d, Times[e, Log[Plus[f, Times[g, Power[x, 2]]]]]], Plus[a, Times[b, ArcTanh[Times[c, x]]]]], x], x], Dist[Times[b, c, e], Int[Times[Power[x, 2], Plus[a, Times[b, ArcTanh[Times[c, x]]]], Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x], Times[-1, Simp[Times[e, Power[x, 2], Power[Plus[a, Times[b, ArcTanh[Times[c, x]]]], 2], Power[2, -1]], x]]]], And[FreeQ[List[a, b, c, d, e, f, g], x], ZeroQ[Plus[Times[Power[c, 2], f], g]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], 2], Plus[Optional[Pattern[d, Blank[]]], Times[Log[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Optional[Pattern[e, Blank[]]]]], Pattern[x, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[f, Times[g, Power[x, 2]]], Plus[d, Times[e, Log[Plus[f, Times[g, Power[x, 2]]]]]], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], 2], Power[Times[2, g], -1]], x], Plus[Dist[Times[b, Power[c, -1]], Int[Times[Plus[d, Times[e, Log[Plus[f, Times[g, Power[x, 2]]]]]], Plus[a, Times[b, ArcCoth[Times[c, x]]]]], x], x], Dist[Times[b, c, e], Int[Times[Power[x, 2], Plus[a, Times[b, ArcCoth[Times[c, x]]]], Power[Plus[1, Times[-1, Power[c, 2], Power[x, 2]]], -1]], x], x], Times[-1, Simp[Times[e, Power[x, 2], Power[Plus[a, Times[b, ArcCoth[Times[c, x]]]], 2], Power[2, -1]], x]]]], And[FreeQ[List[a, b, c, d, e, f, g], x], ZeroQ[Plus[Times[Power[c, 2], f], g]]]]], RuleDelayed[HoldPattern[Int[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[1, Times[a, x]], Times[Plus[n, 1], Power[2, -1]]], Power[Times[Power[Plus[1, Times[-1, a, x]], Times[Plus[n, -1], Power[2, -1]]], Sqrt[Plus[1, Times[-1, Power[a, 2], Power[x, 2]]]]], -1]], x], And[FreeQ[a, x], OddQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Times[Power[Plus[1, Times[a, x]], Times[Plus[n, 1], Power[2, -1]]], Power[Times[Power[Plus[1, Times[-1, a, x]], Times[Plus[n, -1], Power[2, -1]]], Sqrt[Plus[1, Times[-1, Power[a, 2], Power[x, 2]]]]], -1]]], x], And[FreeQ[List[a, m], x], OddQ[n]]]], RuleDelayed[HoldPattern[Int[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[1, Times[a, x]], Times[n, Power[2, -1]]], Power[Power[Plus[1, Times[-1, a, x]], Times[n, Power[2, -1]]], -1]], x], And[FreeQ[List[a, n], x], Not[OddQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[Plus[1, Times[a, x]], Times[n, Power[2, -1]]], Power[Power[Plus[1, Times[-1, a, x]], Times[n, Power[2, -1]]], -1]], x], And[FreeQ[List[a, m, n], x], Not[OddQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, n], Int[Times[Power[Plus[c, Times[d, x]], Plus[p, Times[-1, n]]], Power[Plus[1, Times[-1, Power[a, 2], Power[x, 2]]], Times[n, Power[2, -1]]]], x], x], And[FreeQ[List[a, c, d, p], x], ZeroQ[Plus[Times[a, c], d]], IntegerQ[Times[Plus[n, -1], Power[2, -1]]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, n], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[c, Times[d, x]], Plus[p, Times[-1, n]]], Power[Plus[1, Times[-1, Power[a, 2], Power[x, 2]]], Times[n, Power[2, -1]]]], x], x], And[FreeQ[List[a, c, d, e, f, m, p], x], ZeroQ[Plus[Times[a, c], d]], IntegerQ[Times[Plus[n, -1], Power[2, -1]]], Or[IntegerQ[p], ZeroQ[Plus[p, Times[-1, n, Power[2, -1]]]], ZeroQ[Plus[p, Times[-1, n, Power[2, -1]], -1]]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, p], Int[Times[u, Power[Plus[1, Times[d, x, Power[c, -1]]], p], Power[Plus[1, Times[a, x]], Times[n, Power[2, -1]]], Power[Power[Plus[1, Times[-1, a, x]], Times[n, Power[2, -1]]], -1]], x], x], And[FreeQ[List[a, c, d, n, p], x], ZeroQ[Plus[Times[Power[a, 2], Power[c, 2]], Times[-1, Power[d, 2]]]], Or[IntegerQ[p], PositiveQ[c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[Plus[c, Times[d, x]], p], Power[Plus[1, Times[a, x]], Times[n, Power[2, -1]]], Power[Power[Plus[1, Times[-1, a, x]], Times[n, Power[2, -1]]], -1]], x], And[FreeQ[List[a, c, d, n, p], x], ZeroQ[Plus[Times[Power[a, 2], Power[c, 2]], Times[-1, Power[d, 2]]]], Not[Or[IntegerQ[p], PositiveQ[c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -1]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[d, p], Int[Times[u, Power[Plus[1, Times[c, x, Power[d, -1]]], p], Power[E, Times[n, ArcTanh[Times[a, x]]]], Power[Power[x, p], -1]], x], x], And[FreeQ[List[a, c, d, n], x], ZeroQ[Plus[Power[c, 2], Times[-1, Power[a, 2], Power[d, 2]]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -1]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[-1, Times[n, Power[2, -1]]], Power[c, p]], Int[Times[u, Power[Plus[1, Times[d, Power[Times[c, x], -1]]], p], Power[Plus[1, Times[1, Power[Times[a, x], -1]]], Times[n, Power[2, -1]]], Power[Power[Plus[1, Times[-1, 1, Power[Times[a, x], -1]]], Times[n, Power[2, -1]]], -1]], x], x], And[FreeQ[List[a, c, d, p], x], ZeroQ[Plus[Power[c, 2], Times[-1, Power[a, 2], Power[d, 2]]]], Not[IntegerQ[p]], IntegerQ[Times[n, Power[2, -1]]], PositiveQ[c]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -1]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[Plus[c, Times[d, Power[x, -1]]], p], Power[Plus[1, Times[a, x]], Times[n, Power[2, -1]]], Power[Power[Plus[1, Times[-1, a, x]], Times[n, Power[2, -1]]], -1]], x], And[FreeQ[List[a, c, d, p], x], ZeroQ[Plus[Power[c, 2], Times[-1, Power[a, 2], Power[d, 2]]]], Not[IntegerQ[p]], IntegerQ[Times[n, Power[2, -1]]], Not[PositiveQ[c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -1]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[x, p], Power[Plus[c, Times[d, Power[x, -1]]], p], Power[Power[Plus[1, Times[c, x, Power[d, -1]]], p], -1]], Int[Times[u, Power[Plus[1, Times[c, x, Power[d, -1]]], p], Power[E, Times[n, ArcTanh[Times[a, x]]]], Power[Power[x, p], -1]], x], x], And[FreeQ[List[a, c, d, n, p], x], ZeroQ[Plus[Power[c, 2], Times[-1, Power[a, 2], Power[d, 2]]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Plus[n, Times[-1, a, x]], Power[E, Times[n, ArcTanh[Times[a, x]]]], Power[Times[a, c, Plus[Power[n, 2], -1], Sqrt[Plus[c, Times[d, Power[x, 2]]]]], -1]], x], And[FreeQ[List[a, c, d, n], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[n, Times[2, a, Plus[p, 1], x]], Power[Plus[c, Times[d, Power[x, 2]]], Plus[p, 1]], Power[E, Times[n, ArcTanh[Times[a, x]]]], Power[Times[a, c, Plus[Power[n, 2], Times[-1, 4, Power[Plus[p, 1], 2]]]], -1]], x], Times[-1, Dist[Times[2, Plus[p, 1], Plus[Times[2, p], 3], Power[Times[c, Plus[Power[n, 2], Times[-1, 4, Power[Plus[p, 1], 2]]]], -1]], Int[Times[Power[Plus[c, Times[d, Power[x, 2]]], Plus[p, 1]], Power[E, Times[n, ArcTanh[Times[a, x]]]]], x], x]]], And[FreeQ[List[a, c, d, n], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], RationalQ[p], Less[p, -1], Not[IntegerQ[n]], NonzeroQ[Plus[Power[n, 2], Times[-1, 4, Power[Plus[p, 1], 2]]]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[E, Times[n, ArcTanh[Times[a, x]]]], Power[Times[a, c, n], -1]], x], And[FreeQ[List[a, c, d, n], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Not[IntegerQ[Times[n, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, p], Int[Times[Power[Plus[1, Times[-1, Power[a, 2], Power[x, 2]]], Plus[p, Times[-1, n, Power[2, -1]]]], Power[Plus[1, Times[a, x]], n]], x], x], And[FreeQ[List[a, c, d, p], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], IntegerQ[p], PositiveIntegerQ[Times[Plus[n, 1], Power[2, -1]]], Not[IntegerQ[Plus[p, Times[-1, n, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, p], Int[Times[Power[Plus[1, Times[-1, Power[a, 2], Power[x, 2]]], Plus[p, Times[n, Power[2, -1]]]], Power[Power[Plus[1, Times[-1, a, x]], n], -1]], x], x], And[FreeQ[List[a, c, d, p], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], IntegerQ[p], NegativeIntegerQ[Times[Plus[n, -1], Power[2, -1]]], Not[IntegerQ[Plus[p, Times[-1, n, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, p], Int[Times[Power[Plus[1, Times[-1, a, x]], Plus[p, Times[-1, n, Power[2, -1]]]], Power[Plus[1, Times[a, x]], Plus[p, Times[n, Power[2, -1]]]]], x], x], And[FreeQ[List[a, c, d, n, p], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Or[IntegerQ[p], PositiveQ[c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, Times[n, Power[2, -1]]], Int[Times[Power[Plus[c, Times[d, Power[x, 2]]], Plus[p, Times[-1, n, Power[2, -1]]]], Power[Plus[1, Times[a, x]], n]], x], x], And[FreeQ[List[a, c, d, p], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Not[Or[IntegerQ[p], PositiveQ[c]]], PositiveIntegerQ[Times[n, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[c, Times[n, Power[2, -1]]], -1]], Int[Times[Power[Plus[c, Times[d, Power[x, 2]]], Plus[p, Times[n, Power[2, -1]]]], Power[Power[Plus[1, Times[-1, a, x]], n], -1]], x], x], And[FreeQ[List[a, c, d, p], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Not[Or[IntegerQ[p], PositiveQ[c]]], NegativeIntegerQ[Times[n, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[p]], Power[Plus[c, Times[d, Power[x, 2]]], FracPart[p]], Power[Power[Plus[1, Times[-1, Power[a, 2], Power[x, 2]]], FracPart[p]], -1]], Int[Times[Power[Plus[1, Times[-1, Power[a, 2], Power[x, 2]]], p], Power[E, Times[n, ArcTanh[Times[a, x]]]]], x], x], And[FreeQ[List[a, c, d, n, p], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Not[Or[IntegerQ[p], PositiveQ[c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Plus[1, Times[-1, a, n, x]], Power[E, Times[n, ArcTanh[Times[a, x]]]], Power[Times[d, Plus[Power[n, 2], -1], Sqrt[Plus[c, Times[d, Power[x, 2]]]]], -1]], x], And[FreeQ[List[a, c, d, n], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, Power[x, 2]]], Plus[p, 1]], Power[E, Times[n, ArcTanh[Times[a, x]]]], Power[Times[2, d, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[a, c, n, Power[Times[2, d, Plus[p, 1]], -1]], Int[Times[Power[Plus[c, Times[d, Power[x, 2]]], p], Power[E, Times[n, ArcTanh[Times[a, x]]]]], x], x]]], And[FreeQ[List[a, c, d, n], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], RationalQ[p], Less[p, -1], Not[IntegerQ[n]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Plus[1, Times[-1, a, n, x]], Power[Plus[c, Times[d, Power[x, 2]]], Plus[p, 1]], Power[E, Times[n, ArcTanh[Times[a, x]]]], Power[Times[a, d, n, Plus[Power[n, 2], -1]], -1]], x], And[FreeQ[List[a, c, d, n], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], ZeroQ[Plus[Power[n, 2], Times[2, Plus[p, 1]]]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[n, Times[2, Plus[p, 1], a, x]], Power[Plus[c, Times[d, Power[x, 2]]], Plus[p, 1]], Power[E, Times[n, ArcTanh[Times[a, x]]]], Power[Times[a, d, Plus[Power[n, 2], Times[-1, 4, Power[Plus[p, 1], 2]]]], -1]], x]], Dist[Times[Plus[Power[n, 2], Times[2, Plus[p, 1]]], Power[Times[d, Plus[Power[n, 2], Times[-1, 4, Power[Plus[p, 1], 2]]]], -1]], Int[Times[Power[Plus[c, Times[d, Power[x, 2]]], Plus[p, 1]], Power[E, Times[n, ArcTanh[Times[a, x]]]]], x], x]], And[FreeQ[List[a, c, d, n], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], RationalQ[p], Less[p, -1], Not[IntegerQ[n]], NonzeroQ[Plus[Power[n, 2], Times[-1, 4, Power[Plus[p, 1], 2]]]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, p], Int[Times[Power[x, m], Power[Plus[1, Times[-1, Power[a, 2], Power[x, 2]]], Plus[p, Times[-1, n, Power[2, -1]]]], Power[Plus[1, Times[a, x]], n]], x], x], And[FreeQ[List[a, c, d, m, p], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Or[IntegerQ[p], PositiveQ[c]], PositiveIntegerQ[Times[Plus[n, 1], Power[2, -1]]], Not[IntegerQ[Plus[p, Times[-1, n, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, p], Int[Times[Power[x, m], Power[Plus[1, Times[-1, Power[a, 2], Power[x, 2]]], Plus[p, Times[n, Power[2, -1]]]], Power[Power[Plus[1, Times[-1, a, x]], n], -1]], x], x], And[FreeQ[List[a, c, d, m, p], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Or[IntegerQ[p], PositiveQ[c]], NegativeIntegerQ[Times[Plus[n, -1], Power[2, -1]]], Not[IntegerQ[Plus[p, Times[-1, n, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, p], Int[Times[Power[x, m], Power[Plus[1, Times[-1, a, x]], Plus[p, Times[-1, n, Power[2, -1]]]], Power[Plus[1, Times[a, x]], Plus[p, Times[n, Power[2, -1]]]]], x], x], And[FreeQ[List[a, c, d, m, n, p], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Or[IntegerQ[p], PositiveQ[c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, Times[n, Power[2, -1]]], Int[Times[Power[x, m], Power[Plus[c, Times[d, Power[x, 2]]], Plus[p, Times[-1, n, Power[2, -1]]]], Power[Plus[1, Times[a, x]], n]], x], x], And[FreeQ[List[a, c, d, m, p], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Not[Or[IntegerQ[p], PositiveQ[c]]], PositiveIntegerQ[Times[n, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[c, Times[n, Power[2, -1]]], -1]], Int[Times[Power[x, m], Power[Plus[c, Times[d, Power[x, 2]]], Plus[p, Times[n, Power[2, -1]]]], Power[Power[Plus[1, Times[-1, a, x]], n], -1]], x], x], And[FreeQ[List[a, c, d, m, p], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Not[Or[IntegerQ[p], PositiveQ[c]]], NegativeIntegerQ[Times[n, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[p]], Power[Plus[c, Times[d, Power[x, 2]]], FracPart[p]], Power[Power[Plus[1, Times[-1, Power[a, 2], Power[x, 2]]], FracPart[p]], -1]], Int[Times[Power[x, m], Power[Plus[1, Times[-1, Power[a, 2], Power[x, 2]]], p], Power[E, Times[n, ArcTanh[Times[a, x]]]]], x], x], And[FreeQ[List[a, c, d, m, n, p], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Not[Or[IntegerQ[p], PositiveQ[c]]], Not[IntegerQ[Times[n, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Pattern[u, Blank[]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, p], Int[Times[u, Power[Plus[1, Times[-1, a, x]], Plus[p, Times[-1, n, Power[2, -1]]]], Power[Plus[1, Times[a, x]], Plus[p, Times[n, Power[2, -1]]]]], x], x], And[FreeQ[List[a, c, d, n, p], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Or[IntegerQ[p], PositiveQ[c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Pattern[u, Blank[]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[p]], Power[Plus[c, Times[d, Power[x, 2]]], FracPart[p]], Power[Times[Power[Plus[1, Times[-1, a, x]], FracPart[p]], Power[Plus[1, Times[a, x]], FracPart[p]]], -1]], Int[Times[u, Power[Plus[1, Times[-1, a, x]], Plus[p, Times[-1, n, Power[2, -1]]]], Power[Plus[1, Times[a, x]], Plus[p, Times[n, Power[2, -1]]]]], x], x], And[FreeQ[List[a, c, d, n, p], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Not[Or[IntegerQ[p], PositiveQ[c]]], IntegerQ[Times[n, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Pattern[u, Blank[]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[p]], Power[Plus[c, Times[d, Power[x, 2]]], FracPart[p]], Power[Power[Plus[1, Times[-1, Power[a, 2], Power[x, 2]]], FracPart[p]], -1]], Int[Times[u, Power[Plus[1, Times[-1, Power[a, 2], Power[x, 2]]], p], Power[E, Times[n, ArcTanh[Times[a, x]]]]], x], x], And[FreeQ[List[a, c, d, n, p], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Not[Or[IntegerQ[p], PositiveQ[c]]], Not[IntegerQ[Times[n, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[d, p], Int[Times[u, Power[Power[x, Times[2, p]], -1], Power[Plus[1, Times[-1, Power[a, 2], Power[x, 2]]], p], Power[E, Times[n, ArcTanh[Times[a, x]]]]], x], x], And[FreeQ[List[a, c, d, n], x], ZeroQ[Plus[c, Times[Power[a, 2], d]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, p], Int[Times[u, Power[Plus[1, Times[-1, 1, Power[Times[a, x], -1]]], p], Power[Plus[1, Times[1, Power[Times[a, x], -1]]], p], Power[E, Times[n, ArcTanh[Times[a, x]]]]], x], x], And[FreeQ[List[a, c, d, p], x], ZeroQ[Plus[c, Times[Power[a, 2], d]]], Not[IntegerQ[p]], IntegerQ[Times[n, Power[2, -1]]], PositiveQ[c]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[x, Times[2, p]], Power[Plus[c, Times[d, Power[Power[x, 2], -1]]], p], Power[Times[Power[Plus[1, Times[-1, a, x]], p], Power[Plus[1, Times[a, x]], p]], -1]], Int[Times[u, Power[Power[x, Times[2, p]], -1], Power[Plus[1, Times[-1, a, x]], p], Power[Plus[1, Times[a, x]], p], Power[E, Times[n, ArcTanh[Times[a, x]]]]], x], x], And[FreeQ[List[a, c, d, n, p], x], ZeroQ[Plus[c, Times[Power[a, 2], d]]], Not[IntegerQ[p]], IntegerQ[Times[n, Power[2, -1]]], Not[PositiveQ[c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[x, Times[2, p]], Power[Plus[c, Times[d, Power[Power[x, 2], -1]]], p], Power[Power[Plus[1, Times[c, Power[x, 2], Power[d, -1]]], p], -1]], Int[Times[u, Power[Power[x, Times[2, p]], -1], Power[Plus[1, Times[c, Power[x, 2], Power[d, -1]]], p], Power[E, Times[n, ArcTanh[Times[a, x]]]]], x], x], And[FreeQ[List[a, c, d, n, p], x], ZeroQ[Plus[c, Times[Power[a, 2], d]]], Not[IntegerQ[p]], Not[IntegerQ[Times[n, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Power[E, Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[1, Times[a, c], Times[b, c, x]], Times[n, Power[2, -1]]], Power[Power[Plus[1, Times[-1, a, c], Times[-1, b, c, x]], Times[n, Power[2, -1]]], -1]], x], FreeQ[List[a, b, c, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[4, Power[Times[n, Power[b, Plus[m, 1]], Power[c, Plus[m, 1]]], -1]], Subst[Int[Times[Power[x, Times[2, Power[n, -1]]], Power[Plus[-1, Times[-1, a, c], Times[Plus[1, Times[-1, a, c]], Power[x, Times[2, Power[n, -1]]]]], m], Power[Power[Plus[1, Power[x, Times[2, Power[n, -1]]]], Plus[m, 2]], -1]], x], x, Times[Power[Plus[1, Times[c, Plus[a, Times[b, x]]]], Times[n, Power[2, -1]]], Power[Power[Plus[1, Times[-1, c, Plus[a, Times[b, x]]]], Times[n, Power[2, -1]]], -1]]], x], And[FreeQ[List[a, b, c], x], NegativeIntegerQ[m], RationalQ[n], Less[-1, n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[1, Times[a, c], Times[b, c, x]], Times[n, Power[2, -1]]], Power[Power[Plus[1, Times[-1, a, c], Times[-1, b, c, x]], Times[n, Power[2, -1]]], -1]], x], FreeQ[List[a, b, c, d, e, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Times[c, Power[Plus[1, Times[-1, Power[a, 2]]], -1]], p], Int[Times[u, Power[Plus[1, Times[-1, a], Times[-1, b, x]], Plus[p, Times[-1, n, Power[2, -1]]]], Power[Plus[1, a, Times[b, x]], Plus[p, Times[n, Power[2, -1]]]]], x], x], And[FreeQ[List[a, b, c, d, e, n, p], x], ZeroQ[Plus[Times[b, d], Times[-1, 2, a, e]]], ZeroQ[Plus[Times[Power[b, 2], c], Times[e, Plus[1, Times[-1, Power[a, 2]]]]]], Or[IntegerQ[p], PositiveQ[Times[c, Power[Plus[1, Times[-1, Power[a, 2]]], -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[c, Times[d, x], Times[e, Power[x, 2]]], p], Power[Power[Plus[1, Times[-1, Power[a, 2]], Times[-1, 2, a, b, x], Times[-1, Power[b, 2], Power[x, 2]]], p], -1]], Int[Times[u, Power[Plus[1, Times[-1, Power[a, 2]], Times[-1, 2, a, b, x], Times[-1, Power[b, 2], Power[x, 2]]], p], Power[E, Times[n, ArcTanh[Times[a, x]]]]], x], x], And[FreeQ[List[a, b, c, d, e, n, p], x], ZeroQ[Plus[Times[b, d], Times[-1, 2, a, e]]], ZeroQ[Plus[Times[Power[b, 2], c], Times[e, Plus[1, Times[-1, Power[a, 2]]]]]], Not[Or[IntegerQ[p], PositiveQ[Times[c, Power[Plus[1, Times[-1, Power[a, 2]]], -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], -1]]], Optional[Pattern[n, Blank[]]]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[E, Times[n, ArcCoth[Plus[Times[a, Power[c, -1]], Times[b, x, Power[c, -1]]]]]]], x], FreeQ[List[a, b, c, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[-1, Times[n, Power[2, -1]]], Int[Times[u, Power[E, Times[n, ArcTanh[Times[a, x]]]]], x], x], And[FreeQ[a, x], IntegerQ[Times[n, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[1, Times[x, Power[a, -1]]], Times[Plus[n, 1], Power[2, -1]]], Power[Times[Power[x, 2], Power[Plus[1, Times[-1, x, Power[a, -1]]], Times[Plus[n, -1], Power[2, -1]]], Sqrt[Plus[1, Times[-1, Power[x, 2], Power[Power[a, 2], -1]]]]], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[a, x], OddQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[1, Times[x, Power[a, -1]]], Times[Plus[n, 1], Power[2, -1]]], Power[Times[Power[x, Plus[m, 2]], Power[Plus[1, Times[-1, x, Power[a, -1]]], Times[Plus[n, -1], Power[2, -1]]], Sqrt[Plus[1, Times[-1, Power[x, 2], Power[Power[a, 2], -1]]]]], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[a, x], OddQ[n], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[1, Times[x, Power[a, -1]]], Times[n, Power[2, -1]]], Power[Times[Power[x, 2], Power[Plus[1, Times[-1, x, Power[a, -1]]], Times[n, Power[2, -1]]]], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, n], x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[1, Times[x, Power[a, -1]]], Times[n, Power[2, -1]]], Power[Times[Power[x, Plus[m, 2]], Power[Plus[1, Times[-1, x, Power[a, -1]]], Times[n, Power[2, -1]]]], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, n], x], Not[IntegerQ[n]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[x, m], Power[Times[1, Power[x, -1]], m]], Subst[Int[Times[Power[Plus[1, Times[x, Power[a, -1]]], Times[Plus[n, 1], Power[2, -1]]], Power[Times[Power[x, Plus[m, 2]], Power[Plus[1, Times[-1, x, Power[a, -1]]], Times[Plus[n, -1], Power[2, -1]]], Sqrt[Plus[1, Times[-1, Power[x, 2], Power[Power[a, 2], -1]]]]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, m], x], OddQ[n], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[x, m], Power[Times[1, Power[x, -1]], m]], Subst[Int[Times[Power[Plus[1, Times[x, Power[a, -1]]], Times[n, Power[2, -1]]], Power[Times[Power[x, Plus[m, 2]], Power[Plus[1, Times[-1, x, Power[a, -1]]], Times[n, Power[2, -1]]]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, m, n], x], Not[IntegerQ[n]], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Plus[1, Times[a, x]], Power[Plus[c, Times[d, x]], p], Power[E, Times[n, ArcCoth[Times[a, x]]]], Power[Times[a, Plus[p, 1]], -1]], x], And[FreeQ[List[a, c, d, n, p], x], ZeroQ[Plus[Times[a, c], d]], ZeroQ[Plus[p, Times[-1, n, Power[2, -1]]]], Not[IntegerQ[Times[n, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[d, p], Int[Times[u, Power[x, p], Power[Plus[1, Times[c, Power[Times[d, x], -1]]], p], Power[E, Times[n, ArcCoth[Times[a, x]]]]], x], x], And[FreeQ[List[a, c, d, n], x], ZeroQ[Plus[Times[Power[a, 2], Power[c, 2]], Times[-1, Power[d, 2]]]], Not[IntegerQ[Times[n, Power[2, -1]]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[c, Times[d, x]], p], Power[Times[Power[x, p], Power[Plus[1, Times[c, Power[Times[d, x], -1]]], p]], -1]], Int[Times[u, Power[x, p], Power[Plus[1, Times[c, Power[Times[d, x], -1]]], p], Power[E, Times[n, ArcCoth[Times[a, x]]]]], x], x], And[FreeQ[List[a, c, d, n, p], x], ZeroQ[Plus[Times[Power[a, 2], Power[c, 2]], Times[-1, Power[d, 2]]]], Not[IntegerQ[Times[n, Power[2, -1]]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -1]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[c, n], Subst[Int[Times[Power[Plus[c, Times[d, x]], Plus[p, Times[-1, n]]], Power[Plus[1, Times[-1, Power[x, 2], Power[Power[a, 2], -1]]], Times[n, Power[2, -1]]], Power[Power[x, 2], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, c, d, p], x], ZeroQ[Plus[c, Times[a, d]]], IntegerQ[Times[Plus[n, -1], Power[2, -1]]], Or[IntegerQ[p], ZeroQ[Plus[p, Times[-1, n, Power[2, -1]]]], ZeroQ[Plus[p, Times[-1, n, Power[2, -1]], -1]]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -1]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[c, n], Subst[Int[Times[Power[Plus[c, Times[d, x]], Plus[p, Times[-1, n]]], Power[Plus[1, Times[-1, Power[x, 2], Power[Power[a, 2], -1]]], Times[n, Power[2, -1]]], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, c, d, p], x], ZeroQ[Plus[c, Times[a, d]]], IntegerQ[Times[Plus[n, -1], Power[2, -1]]], IntegerQ[m], Or[IntegerQ[p], ZeroQ[Plus[p, Times[-1, n, Power[2, -1]]]], ZeroQ[Plus[p, Times[-1, n, Power[2, -1]], -1]], Less[-5, m, -1]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -1]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[c, p], Subst[Int[Times[Power[Plus[1, Times[d, x, Power[c, -1]]], p], Power[Plus[1, Times[x, Power[a, -1]]], Times[n, Power[2, -1]]], Power[Times[Power[x, 2], Power[Plus[1, Times[-1, x, Power[a, -1]]], Times[n, Power[2, -1]]]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, c, d, n, p], x], ZeroQ[Plus[Power[c, 2], Times[-1, Power[a, 2], Power[d, 2]]]], Not[IntegerQ[Times[n, Power[2, -1]]]], Or[IntegerQ[p], PositiveQ[c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -1]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[c, p], Subst[Int[Times[Power[Plus[1, Times[d, x, Power[c, -1]]], p], Power[Plus[1, Times[x, Power[a, -1]]], Times[n, Power[2, -1]]], Power[Times[Power[x, Plus[m, 2]], Power[Plus[1, Times[-1, x, Power[a, -1]]], Times[n, Power[2, -1]]]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, c, d, n, p], x], ZeroQ[Plus[Power[c, 2], Times[-1, Power[a, 2], Power[d, 2]]]], Not[IntegerQ[Times[n, Power[2, -1]]]], Or[IntegerQ[p], PositiveQ[c]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -1]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[c, p], Power[x, m], Power[Times[1, Power[x, -1]], m]], Subst[Int[Times[Power[Plus[1, Times[d, x, Power[c, -1]]], p], Power[Plus[1, Times[x, Power[a, -1]]], Times[n, Power[2, -1]]], Power[Times[Power[x, Plus[m, 2]], Power[Plus[1, Times[-1, x, Power[a, -1]]], Times[n, Power[2, -1]]]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, c, d, m, n, p], x], ZeroQ[Plus[Power[c, 2], Times[-1, Power[a, 2], Power[d, 2]]]], Not[IntegerQ[Times[n, Power[2, -1]]]], Or[IntegerQ[p], PositiveQ[c]], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -1]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[c, Times[d, Power[x, -1]]], p], Power[Power[Plus[1, Times[d, Power[Times[c, x], -1]]], p], -1]], Int[Times[u, Power[Plus[1, Times[d, Power[Times[c, x], -1]]], p], Power[E, Times[n, ArcCoth[Times[a, x]]]]], x], x], And[FreeQ[List[a, c, d, n, p], x], ZeroQ[Plus[Power[c, 2], Times[-1, Power[a, 2], Power[d, 2]]]], Not[IntegerQ[Times[n, Power[2, -1]]]], Not[Or[IntegerQ[p], PositiveQ[c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[E, Times[n, ArcCoth[Times[a, x]]]], Power[Times[a, c, n], -1]], x], And[FreeQ[List[a, c, d, n], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Not[IntegerQ[Times[n, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Plus[n, Times[-1, a, x]], Power[E, Times[n, ArcCoth[Times[a, x]]]], Power[Times[a, c, Plus[Power[n, 2], -1], Sqrt[Plus[c, Times[d, Power[x, 2]]]]], -1]], x], And[FreeQ[List[a, c, d, n], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[n, Times[2, a, Plus[p, 1], x]], Power[Plus[c, Times[d, Power[x, 2]]], Plus[p, 1]], Power[E, Times[n, ArcCoth[Times[a, x]]]], Power[Times[a, c, Plus[Power[n, 2], Times[-1, 4, Power[Plus[p, 1], 2]]]], -1]], x], Times[-1, Dist[Times[2, Plus[p, 1], Plus[Times[2, p], 3], Power[Times[c, Plus[Power[n, 2], Times[-1, 4, Power[Plus[p, 1], 2]]]], -1]], Int[Times[Power[Plus[c, Times[d, Power[x, 2]]], Plus[p, 1]], Power[E, Times[n, ArcCoth[Times[a, x]]]]], x], x]]], And[FreeQ[List[a, c, d, n], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Not[IntegerQ[Times[n, Power[2, -1]]]], RationalQ[p], Less[p, -1], Unequal[p, Times[-3, Power[2, -1]]], NonzeroQ[Plus[Power[n, 2], Times[-1, 4, Power[Plus[p, 1], 2]]]], Or[IntegerQ[p], Not[IntegerQ[n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Plus[1, Times[-1, a, n, x]], Power[E, Times[n, ArcCoth[Times[a, x]]]], Power[Times[Power[a, 2], c, Plus[Power[n, 2], -1], Sqrt[Plus[c, Times[d, Power[x, 2]]]]], -1]], x]], And[FreeQ[List[a, c, d, n], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[2, Plus[p, 1]], Times[a, n, x]], Power[Plus[c, Times[d, Power[x, 2]]], Plus[p, 1]], Power[E, Times[n, ArcCoth[Times[a, x]]]], Power[Times[Power[a, 2], c, Plus[Power[n, 2], Times[-1, 4, Power[Plus[p, 1], 2]]]], -1]], x], Times[-1, Dist[Times[n, Plus[Times[2, p], 3], Power[Times[a, c, Plus[Power[n, 2], Times[-1, 4, Power[Plus[p, 1], 2]]]], -1]], Int[Times[Power[Plus[c, Times[d, Power[x, 2]]], Plus[p, 1]], Power[E, Times[n, ArcCoth[Times[a, x]]]]], x], x]]], And[FreeQ[List[a, c, d, n], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Not[IntegerQ[Times[n, Power[2, -1]]]], RationalQ[p], LessEqual[p, -1], Unequal[p, Times[-3, Power[2, -1]]], NonzeroQ[Plus[Power[n, 2], Times[-1, 4, Power[Plus[p, 1], 2]]]], Or[IntegerQ[p], Not[IntegerQ[n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Plus[n, Times[2, Plus[p, 1], a, x]], Power[Plus[c, Times[d, Power[x, 2]]], Plus[p, 1]], Power[E, Times[n, ArcCoth[Times[a, x]]]], Power[Times[Power[a, 3], c, Power[n, 2], Plus[Power[n, 2], -1]], -1]], x]], And[FreeQ[List[a, c, d, n], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Not[IntegerQ[Times[n, Power[2, -1]]]], ZeroQ[Plus[Power[n, 2], Times[2, Plus[p, 1]]]], NonzeroQ[Plus[Power[n, 2], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[n, Times[2, Plus[p, 1], a, x]], Power[Plus[c, Times[d, Power[x, 2]]], Plus[p, 1]], Power[E, Times[n, ArcCoth[Times[a, x]]]], Power[Times[Power[a, 3], c, Plus[Power[n, 2], Times[-1, 4, Power[Plus[p, 1], 2]]]], -1]], x], Times[-1, Dist[Times[Plus[Power[n, 2], Times[2, Plus[p, 1]]], Power[Times[Power[a, 2], c, Plus[Power[n, 2], Times[-1, 4, Power[Plus[p, 1], 2]]]], -1]], Int[Times[Power[Plus[c, Times[d, Power[x, 2]]], Plus[p, 1]], Power[E, Times[n, ArcCoth[Times[a, x]]]]], x], x]]], And[FreeQ[List[a, c, d, n], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Not[IntegerQ[Times[n, Power[2, -1]]]], RationalQ[p], LessEqual[p, -1], NonzeroQ[Plus[Power[n, 2], Times[2, Plus[p, 1]]]], NonzeroQ[Plus[Power[n, 2], Times[-1, 4, Power[Plus[p, 1], 2]]]], Or[IntegerQ[p], Not[IntegerQ[n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[Times[-1, c], p], Power[Power[a, Plus[m, 1]], -1]], Subst[Int[Times[Power[E, Times[n, x]], Power[Coth[x], Plus[m, Times[2, Plus[p, 1]]]], Power[Power[Cosh[x], Times[2, Plus[p, 1]]], -1]], x], x, ArcCoth[Times[a, x]]], x]], And[FreeQ[List[a, c, d, n], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Not[IntegerQ[Times[n, Power[2, -1]]]], IntegerQ[m], RationalQ[p], LessEqual[3, m, Times[-2, Plus[p, 1]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[d, p], Int[Times[u, Power[x, Times[2, p]], Power[Plus[1, Times[-1, 1, Power[Times[Power[a, 2], Power[x, 2]], -1]]], p], Power[E, Times[n, ArcCoth[Times[a, x]]]]], x], x], And[FreeQ[List[a, c, d, n], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Not[IntegerQ[Times[n, Power[2, -1]]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[c, Times[d, Power[x, 2]]], p], Power[Times[Power[x, Times[2, p]], Power[Plus[1, Times[-1, 1, Power[Times[Power[a, 2], Power[x, 2]], -1]]], p]], -1]], Int[Times[u, Power[x, Times[2, p]], Power[Plus[1, Times[-1, 1, Power[Times[Power[a, 2], Power[x, 2]], -1]]], p], Power[E, Times[n, ArcCoth[Times[a, x]]]]], x], x], And[FreeQ[List[a, c, d, n, p], x], ZeroQ[Plus[Times[Power[a, 2], c], d]], Not[IntegerQ[Times[n, Power[2, -1]]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, p], Power[Power[a, Times[2, p]], -1]], Int[Times[u, Power[Power[x, Times[2, p]], -1], Power[Plus[-1, Times[a, x]], Plus[p, Times[-1, n, Power[2, -1]]]], Power[Plus[1, Times[a, x]], Plus[p, Times[n, Power[2, -1]]]]], x], x], And[FreeQ[List[a, c, d, n, p], x], ZeroQ[Plus[c, Times[Power[a, 2], d]]], Not[IntegerQ[Times[n, Power[2, -1]]]], Or[IntegerQ[p], PositiveQ[c]], IntegersQ[Times[2, p], Plus[p, Times[n, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[c, p], Subst[Int[Times[Power[Plus[1, Times[-1, x, Power[a, -1]]], Plus[p, Times[-1, n, Power[2, -1]]]], Power[Plus[1, Times[x, Power[a, -1]]], Plus[p, Times[n, Power[2, -1]]]], Power[Power[x, 2], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, c, d, n, p], x], ZeroQ[Plus[c, Times[Power[a, 2], d]]], Not[IntegerQ[Times[n, Power[2, -1]]]], Or[IntegerQ[p], PositiveQ[c]], Not[IntegersQ[Times[2, p], Plus[p, Times[n, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -2]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[c, p], Subst[Int[Times[Power[Plus[1, Times[-1, x, Power[a, -1]]], Plus[p, Times[-1, n, Power[2, -1]]]], Power[Plus[1, Times[x, Power[a, -1]]], Plus[p, Times[n, Power[2, -1]]]], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, c, d, n, p], x], ZeroQ[Plus[c, Times[Power[a, 2], d]]], Not[IntegerQ[Times[n, Power[2, -1]]]], Or[IntegerQ[p], PositiveQ[c]], Not[IntegersQ[Times[2, p], Plus[p, Times[n, Power[2, -1]]]]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -2]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Power[c, p], Power[x, m], Power[Times[1, Power[x, -1]], m]], Subst[Int[Times[Power[Plus[1, Times[-1, x, Power[a, -1]]], Plus[p, Times[-1, n, Power[2, -1]]]], Power[Plus[1, Times[x, Power[a, -1]]], Plus[p, Times[n, Power[2, -1]]]], Power[Power[x, Plus[m, 2]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, c, d, m, n, p], x], ZeroQ[Plus[c, Times[Power[a, 2], d]]], Not[IntegerQ[Times[n, Power[2, -1]]]], Or[IntegerQ[p], PositiveQ[c]], Not[IntegersQ[Times[2, p], Plus[p, Times[n, Power[2, -1]]]]], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], -2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[c, IntPart[p]], Power[Plus[c, Times[d, Power[Power[x, 2], -1]]], FracPart[p]], Power[Power[Plus[1, Times[-1, 1, Power[Times[Power[a, 2], Power[x, 2]], -1]]], FracPart[p]], -1]], Int[Times[u, Power[Plus[1, Times[-1, 1, Power[Times[Power[a, 2], Power[x, 2]], -1]]], p], Power[E, Times[n, ArcCoth[Times[a, x]]]]], x], x], And[FreeQ[List[a, c, d, n, p], x], ZeroQ[Plus[c, Times[Power[a, 2], d]]], Not[IntegerQ[Times[n, Power[2, -1]]]], Not[Or[IntegerQ[p], PositiveQ[c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[-1, Times[n, Power[2, -1]]], Int[Times[u, Power[E, Times[n, ArcTanh[Times[c, Plus[a, Times[b, x]]]]]]], x], x], And[FreeQ[List[a, b, c], x], IntegerQ[Times[n, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Power[E, Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Plus[a, Times[b, x]]], Times[n, Power[2, -1]]], Power[Plus[1, Times[1, Power[Times[c, Plus[a, Times[b, x]]], -1]]], Times[n, Power[2, -1]]], Power[Power[Plus[1, Times[a, c], Times[b, c, x]], Times[n, Power[2, -1]]], -1]], Int[Times[Power[Plus[1, Times[a, c], Times[b, c, x]], Times[n, Power[2, -1]]], Power[Power[Plus[-1, Times[a, c], Times[b, c, x]], Times[n, Power[2, -1]]], -1]], x], x], And[FreeQ[List[a, b, c, n], x], Not[IntegerQ[Times[n, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-4, Power[Times[n, Power[b, Plus[m, 1]], Power[c, Plus[m, 1]]], -1]], Subst[Int[Times[Power[x, Times[2, Power[n, -1]]], Power[Plus[1, Times[a, c], Times[Plus[1, Times[-1, a, c]], Power[x, Times[2, Power[n, -1]]]]], m], Power[Power[Plus[-1, Power[x, Times[2, Power[n, -1]]]], Plus[m, 2]], -1]], x], x, Times[Power[Plus[1, Times[1, Power[Times[c, Plus[a, Times[b, x]]], -1]]], Times[n, Power[2, -1]]], Power[Power[Plus[1, Times[-1, 1, Power[Times[c, Plus[a, Times[b, x]]], -1]]], Times[n, Power[2, -1]]], -1]]], x], And[FreeQ[List[a, b, c], x], NegativeIntegerQ[m], RationalQ[n], Less[-1, n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Plus[a, Times[b, x]]], Times[n, Power[2, -1]]], Power[Plus[1, Times[1, Power[Times[c, Plus[a, Times[b, x]]], -1]]], Times[n, Power[2, -1]]], Power[Power[Plus[1, Times[a, c], Times[b, c, x]], Times[n, Power[2, -1]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[1, Times[a, c], Times[b, c, x]], Times[n, Power[2, -1]]], Power[Power[Plus[-1, Times[a, c], Times[b, c, x]], Times[n, Power[2, -1]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, m, n], x], Not[IntegerQ[Times[n, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Power[Plus[1, Times[-1, Power[a, 2]]], -1]], p], Power[Times[Plus[a, Times[b, x]], Power[Plus[1, a, Times[b, x]], -1]], Times[n, Power[2, -1]]], Power[Times[Plus[1, a, Times[b, x]], Power[Plus[a, Times[b, x]], -1]], Times[n, Power[2, -1]]], Times[Power[Plus[1, Times[-1, a], Times[-1, b, x]], Times[n, Power[2, -1]]], Power[Power[Plus[-1, a, Times[b, x]], Times[n, Power[2, -1]]], -1]]], Int[Times[u, Power[Plus[1, Times[-1, a], Times[-1, b, x]], Plus[p, Times[-1, n, Power[2, -1]]]], Power[Plus[1, a, Times[b, x]], Plus[p, Times[n, Power[2, -1]]]]], x], x], And[FreeQ[List[a, b, c, d, e, n, p], x], Not[IntegerQ[Times[n, Power[2, -1]]]], ZeroQ[Plus[Times[b, d], Times[-1, 2, a, e]]], ZeroQ[Plus[Times[Power[b, 2], c], Times[e, Plus[1, Times[-1, Power[a, 2]]]]]], Or[IntegerQ[p], PositiveQ[Times[c, Power[Plus[1, Times[-1, Power[a, 2]]], -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Optional[Pattern[u, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[c, Times[d, x], Times[e, Power[x, 2]]], p], Power[Power[Plus[1, Times[-1, Power[a, 2]], Times[-1, 2, a, b, x], Times[-1, Power[b, 2], Power[x, 2]]], p], -1]], Int[Times[u, Power[Plus[1, Times[-1, Power[a, 2]], Times[-1, 2, a, b, x], Times[-1, Power[b, 2], Power[x, 2]]], p], Power[E, Times[n, ArcCoth[Times[a, x]]]]], x], x], And[FreeQ[List[a, b, c, d, e, n, p], x], Not[IntegerQ[Times[n, Power[2, -1]]]], ZeroQ[Plus[Times[b, d], Times[-1, 2, a, e]]], ZeroQ[Plus[Times[Power[b, 2], c], Times[e, Plus[1, Times[-1, Power[a, 2]]]]]], Not[Or[IntegerQ[p], PositiveQ[Times[c, Power[Plus[1, Times[-1, Power[a, 2]]], -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], -1]]], Optional[Pattern[n, Blank[]]]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[E, Times[n, ArcTanh[Plus[Times[a, Power[c, -1]], Times[b, x, Power[c, -1]]]]]]], x], FreeQ[List[a, b, c, n], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[d, -1]], Subst[Int[Power[Plus[a, Times[b, ArcTanh[x]]], n], x], x, Plus[c, Times[d, x]]], x], And[FreeQ[List[a, b, c, d], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[d, -1]], Subst[Int[Power[Plus[a, Times[b, ArcCoth[x]]], n], x], x, Plus[c, Times[d, x]]], x], And[FreeQ[List[a, b, c, d], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[a, Times[b, ArcTanh[Plus[c, Times[d, x]]]]], n], x], And[FreeQ[List[a, b, c, d, n], x], Not[PositiveIntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[a, Times[b, ArcCoth[Plus[c, Times[d, x]]]]], n], x], And[FreeQ[List[a, b, c, d, n], x], Not[PositiveIntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[d, -1]], Subst[Int[Times[Power[Plus[Times[Plus[Times[d, e], Times[-1, c, f]], Power[d, -1]], Times[f, x, Power[d, -1]]], m], Power[Plus[a, Times[b, ArcTanh[x]]], n]], x], x, Plus[c, Times[d, x]]], x], And[FreeQ[List[a, b, c, d, e, f, m, n], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[d, -1]], Subst[Int[Times[Power[Plus[Times[Plus[Times[d, e], Times[-1, c, f]], Power[d, -1]], Times[f, x, Power[d, -1]]], m], Power[Plus[a, Times[b, ArcCoth[x]]], n]], x], x, Plus[c, Times[d, x]]], x], And[FreeQ[List[a, b, c, d, e, f, m, n], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[a, Times[b, ArcTanh[Plus[c, Times[d, x]]]]], n]], x], And[FreeQ[List[a, b, c, d, e, f, m, n], x], Not[PositiveIntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[a, Times[b, ArcCoth[Plus[c, Times[d, x]]]]], n]], x], And[FreeQ[List[a, b, c, d, e, f, m, n], x], Not[PositiveIntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[d, -1]], Subst[Int[Times[Power[Plus[Times[-1, C, Power[Power[d, 2], -1]], Times[C, Power[Power[d, 2], -1], Power[x, 2]]], p], Power[Plus[a, Times[b, ArcTanh[x]]], n]], x], x, Plus[c, Times[d, x]]], x], And[FreeQ[List[a, b, c, d, A, B, C, n, p], x], ZeroQ[Plus[Times[B, Plus[1, Times[-1, Power[c, 2]]]], Times[2, A, c, d]]], ZeroQ[Plus[Times[2, c, C], Times[-1, B, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[d, -1]], Subst[Int[Times[Power[Plus[Times[C, Power[Power[d, 2], -1]], Times[C, Power[Power[d, 2], -1], Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCoth[x]]], n]], x], x, Plus[c, Times[d, x]]], x], And[FreeQ[List[a, b, c, d, A, B, C, n, p], x], ZeroQ[Plus[Times[B, Plus[1, Times[-1, Power[c, 2]]]], Times[2, A, c, d]]], ZeroQ[Plus[Times[2, c, C], Times[-1, B, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[d, -1]], Subst[Int[Times[Power[Plus[Times[Plus[Times[d, e], Times[-1, c, f]], Power[d, -1]], Times[f, x, Power[d, -1]]], m], Power[Plus[Times[-1, C, Power[Power[d, 2], -1]], Times[C, Power[Power[d, 2], -1], Power[x, 2]]], p], Power[Plus[a, Times[b, ArcTanh[x]]], n]], x], x, Plus[c, Times[d, x]]], x], And[FreeQ[List[a, b, c, d, e, f, A, B, C, m, n, p], x], ZeroQ[Plus[Times[B, Plus[1, Times[-1, Power[c, 2]]]], Times[2, A, c, d]]], ZeroQ[Plus[Times[2, c, C], Times[-1, B, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[d, -1]], Subst[Int[Times[Power[Plus[Times[Plus[Times[d, e], Times[-1, c, f]], Power[d, -1]], Times[f, x, Power[d, -1]]], m], Power[Plus[Times[-1, C, Power[Power[d, 2], -1]], Times[C, Power[Power[d, 2], -1], Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCoth[x]]], n]], x], x, Plus[c, Times[d, x]]], x], And[FreeQ[List[a, b, c, d, e, f, A, B, C, m, n, p], x], ZeroQ[Plus[Times[B, Plus[1, Times[-1, Power[c, 2]]]], Times[2, A, c, d]]], ZeroQ[Plus[Times[2, c, C], Times[-1, B, d]]]]]], RuleDelayed[HoldPattern[Int[Times[ArcTanh[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Log[Plus[1, a, Times[b, x]]], Power[Plus[c, Times[d, Power[x, n]]], -1]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Times[Log[Plus[1, Times[-1, a], Times[-1, b, x]]], Power[Plus[c, Times[d, Power[x, n]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], RationalQ[n]]]], RuleDelayed[HoldPattern[Int[Times[ArcCoth[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Log[Times[Plus[1, a, Times[b, x]], Power[Plus[a, Times[b, x]], -1]]], Power[Plus[c, Times[d, Power[x, n]]], -1]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Times[Log[Times[Plus[-1, a, Times[b, x]], Power[Plus[a, Times[b, x]], -1]]], Power[Plus[c, Times[d, Power[x, n]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], RationalQ[n]]]], RuleDelayed[HoldPattern[Int[Times[ArcTanh[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ArcTanh[Plus[a, Times[b, x]]], Power[Plus[c, Times[d, Power[x, n]]], -1]], x], And[FreeQ[List[a, b, c, d, n], x], Not[RationalQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[ArcCoth[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ArcCoth[Plus[a, Times[b, x]]], Power[Plus[c, Times[d, Power[x, n]]], -1]], x], And[FreeQ[List[a, b, c, d, n], x], Not[RationalQ[n]]]]], RuleDelayed[HoldPattern[Int[ArcTanh[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcTanh[Plus[a, Times[b, Power[x, n]]]]], x], Times[-1, Dist[Times[b, n], Int[Times[Power[x, n], Power[Plus[1, Times[-1, Power[a, 2]], Times[-1, 2, a, b, Power[x, n]], Times[-1, Power[b, 2], Power[x, Times[2, n]]]], -1]], x], x]]], FreeQ[List[a, b, n], x]]], RuleDelayed[HoldPattern[Int[ArcCoth[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcCoth[Plus[a, Times[b, Power[x, n]]]]], x], Times[-1, Dist[Times[b, n], Int[Times[Power[x, n], Power[Plus[1, Times[-1, Power[a, 2]], Times[-1, 2, a, b, Power[x, n]], Times[-1, Power[b, 2], Power[x, Times[2, n]]]], -1]], x], x]]], FreeQ[List[a, b, n], x]]], RuleDelayed[HoldPattern[Int[Times[ArcTanh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Power[Pattern[x, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Log[Plus[1, a, Times[b, Power[x, n]]]], Power[x, -1]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Times[Log[Plus[1, Times[-1, a], Times[-1, b, Power[x, n]]]], Power[x, -1]], x], x]]], FreeQ[List[a, b, n], x]]], RuleDelayed[HoldPattern[Int[Times[ArcCoth[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Power[Pattern[x, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Log[Plus[1, Times[1, Power[Plus[a, Times[b, Power[x, n]]], -1]]]], Power[x, -1]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Times[Log[Plus[1, Times[-1, 1, Power[Plus[a, Times[b, Power[x, n]]], -1]]]], Power[x, -1]], x], x]]], FreeQ[List[a, b, n], x]]], RuleDelayed[HoldPattern[Int[Times[ArcTanh[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], ArcTanh[Plus[a, Times[b, Power[x, n]]]], Power[Plus[m, 1], -1]], x], Times[-1, Dist[Times[b, n, Power[Plus[m, 1], -1]], Int[Times[Power[x, Plus[m, n]], Power[Plus[1, Times[-1, Power[a, 2]], Times[-1, 2, a, b, Power[x, n]], Times[-1, Power[b, 2], Power[x, Times[2, n]]]], -1]], x], x]]], And[FreeQ[List[a, b], x], RationalQ[m, n], Unequal[Plus[m, 1], 0], Unequal[Plus[m, 1], n]]]], RuleDelayed[HoldPattern[Int[Times[ArcCoth[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], ArcCoth[Plus[a, Times[b, Power[x, n]]]], Power[Plus[m, 1], -1]], x], Times[-1, Dist[Times[b, n, Power[Plus[m, 1], -1]], Int[Times[Power[x, Plus[m, n]], Power[Plus[1, Times[-1, Power[a, 2]], Times[-1, 2, a, b, Power[x, n]], Times[-1, Power[b, 2], Power[x, Times[2, n]]]], -1]], x], x]]], And[FreeQ[List[a, b], x], RationalQ[m, n], Unequal[Plus[m, 1], 0], Unequal[Plus[m, 1], n]]]], RuleDelayed[HoldPattern[Int[ArcTanh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[f, Blank[]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Log[Plus[1, a, Times[b, Power[f, Plus[c, Times[d, x]]]]]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Log[Plus[1, Times[-1, a], Times[-1, b, Power[f, Plus[c, Times[d, x]]]]]], x], x]]], FreeQ[List[a, b, c, d, f], x]]], RuleDelayed[HoldPattern[Int[ArcCoth[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[f, Blank[]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Log[Plus[1, Times[1, Power[Plus[a, Times[b, Power[f, Plus[c, Times[d, x]]]]], -1]]]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Log[Plus[1, Times[-1, 1, Power[Plus[a, Times[b, Power[f, Plus[c, Times[d, x]]]]], -1]]]], x], x]]], FreeQ[List[a, b, c, d, f], x]]], RuleDelayed[HoldPattern[Int[Times[ArcTanh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[f, Blank[]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Power[x, m], Log[Plus[1, a, Times[b, Power[f, Plus[c, Times[d, x]]]]]]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Times[Power[x, m], Log[Plus[1, Times[-1, a], Times[-1, b, Power[f, Plus[c, Times[d, x]]]]]]], x], x]]], And[FreeQ[List[a, b, c, d, f], x], IntegerQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[ArcCoth[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[f, Blank[]], Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[Power[x, m], Log[Plus[1, Times[1, Power[Plus[a, Times[b, Power[f, Plus[c, Times[d, x]]]]], -1]]]]], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Times[Power[x, m], Log[Plus[1, Times[-1, 1, Power[Plus[a, Times[b, Power[f, Plus[c, Times[d, x]]]]], -1]]]]], x], x]]], And[FreeQ[List[a, b, c, d, f], x], IntegerQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], -1]]], Optional[Pattern[m, Blank[]]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[ArcCoth[Plus[Times[a, Power[c, -1]], Times[b, Power[x, n], Power[c, -1]]]], m]], x], FreeQ[List[a, b, c, n, m], x]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], -1]]], Optional[Pattern[m, Blank[]]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[ArcTanh[Plus[Times[a, Power[c, -1]], Times[b, Power[x, n], Power[c, -1]]]], m]], x], FreeQ[List[a, b, c, n, m], x]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]]], -1], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[1, Power[c, -1], Log[ArcTanh[Times[c, x, Power[Sqrt[Plus[a, Times[b, Power[x, 2]]]], -1]]]]], x], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[b, Times[-1, Power[c, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]]], -1], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Power[c, -1], Log[ArcCoth[Times[c, x, Power[Sqrt[Plus[a, Times[b, Power[x, 2]]]], -1]]]]], x]], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[b, Times[-1, Power[c, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[ArcTanh[Times[c, x, Power[Sqrt[Plus[a, Times[b, Power[x, 2]]]], -1]]], Plus[m, 1]], Power[Times[c, Plus[m, 1]], -1]], x], And[FreeQ[List[a, b, c, m], x], ZeroQ[Plus[b, Times[-1, Power[c, 2]]]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Power[ArcCoth[Times[c, x, Power[Sqrt[Plus[a, Times[b, Power[x, 2]]]], -1]]], Plus[m, 1]], Power[Times[c, Plus[m, 1]], -1]], x]], And[FreeQ[List[a, b, c, m], x], ZeroQ[Plus[b, Times[-1, Power[c, 2]]]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcTanh[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[a, Times[b, Power[x, 2]]]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], Int[Times[Power[ArcTanh[Times[c, x, Power[Sqrt[Plus[a, Times[b, Power[x, 2]]]], -1]]], m], Power[Sqrt[Plus[a, Times[b, Power[x, 2]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, m], x], ZeroQ[Plus[b, Times[-1, Power[c, 2]]]], ZeroQ[Plus[Times[b, d], Times[-1, a, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcCoth[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[a, Times[b, Power[x, 2]]]], Power[Sqrt[Plus[d, Times[e, Power[x, 2]]]], -1]], Int[Times[Power[ArcCoth[Times[c, x, Power[Sqrt[Plus[a, Times[b, Power[x, 2]]]], -1]]], m], Power[Sqrt[Plus[a, Times[b, Power[x, 2]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, m], x], ZeroQ[Plus[b, Times[-1, Power[c, 2]]]], ZeroQ[Plus[Times[b, d], Times[-1, a, e]]]]]], RuleDelayed[HoldPattern[Int[Times[ArcTanh[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Power[Plus[c, Times[d, Power[x, 2]]], n], x]]], Plus[Dist[ArcTanh[Times[a, x]], u, x], Times[-1, Dist[a, Int[Dist[Times[1, Power[Plus[1, Times[-1, Power[a, 2], Power[x, 2]]], -1]], u, x], x], x]]]], And[FreeQ[List[a, c, d], x], IntegerQ[Times[2, n]], LessEqual[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[ArcCoth[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Power[Plus[c, Times[d, Power[x, 2]]], n], x]]], Plus[Dist[ArcCoth[Times[a, x]], u, x], Times[-1, Dist[a, Int[Dist[Times[1, Power[Plus[1, Times[-1, Power[a, 2], Power[x, 2]]], -1]], u, x], x], x]]]], And[FreeQ[List[a, c, d], x], IntegerQ[Times[2, n]], LessEqual[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Pattern[v, Blank[]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[tmp, InverseFunctionOfLinear[u, x]]], Condition[Dist[Times[Power[Times[-1, Discriminant[v, x], Power[Times[4, Coefficient[v, x, 2]], -1]], n], Power[Coefficient[Part[tmp, 1], x, 1], -1]], Subst[Int[SimplifyIntegrand[Times[SubstForInverseFunction[u, tmp, x], Power[Sech[x], Times[2, Plus[n, 1]]]], x], x], x, tmp], x], And[Not[FalseQ[tmp]], SameQ[Head[tmp], ArcTanh], ZeroQ[Plus[Times[Discriminant[v, x], Power[Part[tmp, 1], 2]], Times[-1, Power[D[v, x], 2]]]]]]], And[QuadraticQ[v, x], IntegerQ[n], Less[n, 0], PosQ[Discriminant[v, x]], MatchQ[u, Condition[Times[Optional[Pattern[r, Blank[]]], Power[Pattern[f, Blank[]], Pattern[w, Blank[]]]], FreeQ[f, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Pattern[v, Blank[]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[tmp, InverseFunctionOfLinear[u, x]]], Condition[Dist[Times[Power[Times[-1, Discriminant[v, x], Power[Times[4, Coefficient[v, x, 2]], -1]], n], Power[Coefficient[Part[tmp, 1], x, 1], -1]], Subst[Int[SimplifyIntegrand[Times[SubstForInverseFunction[u, tmp, x], Power[Times[-1, Power[Csch[x], 2]], Plus[n, 1]]], x], x], x, tmp], x], And[Not[FalseQ[tmp]], SameQ[Head[tmp], ArcCoth], ZeroQ[Plus[Times[Discriminant[v, x], Power[Part[tmp, 1], 2]], Times[-1, Power[D[v, x], 2]]]]]]], And[QuadraticQ[v, x], IntegerQ[n], Less[n, 0], PosQ[Discriminant[v, x]], MatchQ[u, Condition[Times[Optional[Pattern[r, Blank[]]], Power[Pattern[f, Blank[]], Pattern[w, Blank[]]]], FreeQ[f, x]]]]]], RuleDelayed[HoldPattern[Int[ArcTanh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Tanh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcTanh[Plus[c, Times[d, Tanh[Plus[a, Times[b, x]]]]]]], x], Dist[b, Int[Times[x, Power[Plus[c, Times[-1, d], Times[c, Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[Plus[c, Times[-1, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[ArcCoth[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Tanh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcCoth[Plus[c, Times[d, Tanh[Plus[a, Times[b, x]]]]]]], x], Dist[b, Int[Times[x, Power[Plus[c, Times[-1, d], Times[c, Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[Plus[c, Times[-1, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[ArcTanh[Plus[Optional[Pattern[c, Blank[]]], Times[Coth[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcTanh[Plus[c, Times[d, Coth[Plus[a, Times[b, x]]]]]]], x], Dist[b, Int[Times[x, Power[Plus[c, Times[-1, d], Times[-1, c, Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[Plus[c, Times[-1, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[ArcCoth[Plus[Optional[Pattern[c, Blank[]]], Times[Coth[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcCoth[Plus[c, Times[d, Coth[Plus[a, Times[b, x]]]]]]], x], Dist[b, Int[Times[x, Power[Plus[c, Times[-1, d], Times[-1, c, Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[Plus[c, Times[-1, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[ArcTanh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Tanh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcTanh[Plus[c, Times[d, Tanh[Plus[a, Times[b, x]]]]]]], x], Plus[Dist[Times[b, Plus[1, Times[-1, c], Times[-1, d]]], Int[Times[x, Power[E, Plus[Times[2, a], Times[2, b, x]]], Power[Plus[1, Times[-1, c], d, Times[Plus[1, Times[-1, c], Times[-1, d]], Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x], Times[-1, Dist[Times[b, Plus[1, c, d]], Int[Times[x, Power[E, Plus[Times[2, a], Times[2, b, x]]], Power[Plus[1, c, Times[-1, d], Times[Plus[1, c, d], Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[Plus[c, Times[-1, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[ArcCoth[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Tanh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcCoth[Plus[c, Times[d, Tanh[Plus[a, Times[b, x]]]]]]], x], Plus[Dist[Times[b, Plus[1, Times[-1, c], Times[-1, d]]], Int[Times[x, Power[E, Plus[Times[2, a], Times[2, b, x]]], Power[Plus[1, Times[-1, c], d, Times[Plus[1, Times[-1, c], Times[-1, d]], Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x], Times[-1, Dist[Times[b, Plus[1, c, d]], Int[Times[x, Power[E, Plus[Times[2, a], Times[2, b, x]]], Power[Plus[1, c, Times[-1, d], Times[Plus[1, c, d], Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[Plus[c, Times[-1, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[ArcTanh[Plus[Optional[Pattern[c, Blank[]]], Times[Coth[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcTanh[Plus[c, Times[d, Coth[Plus[a, Times[b, x]]]]]]], x], Plus[Times[-1, Dist[Times[b, Plus[1, Times[-1, c], Times[-1, d]]], Int[Times[x, Power[E, Plus[Times[2, a], Times[2, b, x]]], Power[Plus[1, Times[-1, c], d, Times[-1, Plus[1, Times[-1, c], Times[-1, d]], Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x]], Dist[Times[b, Plus[1, c, d]], Int[Times[x, Power[E, Plus[Times[2, a], Times[2, b, x]]], Power[Plus[1, c, Times[-1, d], Times[-1, Plus[1, c, d], Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[Plus[c, Times[-1, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[ArcCoth[Plus[Optional[Pattern[c, Blank[]]], Times[Coth[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcCoth[Plus[c, Times[d, Coth[Plus[a, Times[b, x]]]]]]], x], Plus[Times[-1, Dist[Times[b, Plus[1, Times[-1, c], Times[-1, d]]], Int[Times[x, Power[E, Plus[Times[2, a], Times[2, b, x]]], Power[Plus[1, Times[-1, c], d, Times[-1, Plus[1, Times[-1, c], Times[-1, d]], Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x]], Dist[Times[b, Plus[1, c, d]], Int[Times[x, Power[E, Plus[Times[2, a], Times[2, b, x]]], Power[Plus[1, c, Times[-1, d], Times[-1, Plus[1, c, d], Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[Plus[c, Times[-1, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[Times[ArcTanh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Tanh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], ArcTanh[Plus[c, Times[d, Tanh[Plus[a, Times[b, x]]]]]], Power[Times[f, Plus[m, 1]], -1]], x], Dist[Times[b, Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[Plus[c, Times[-1, d], Times[c, Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], ZeroQ[Plus[Power[Plus[c, Times[-1, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[Times[ArcCoth[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Tanh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], ArcCoth[Plus[c, Times[d, Tanh[Plus[a, Times[b, x]]]]]], Power[Times[f, Plus[m, 1]], -1]], x], Dist[Times[b, Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[Plus[c, Times[-1, d], Times[c, Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], ZeroQ[Plus[Power[Plus[c, Times[-1, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[Times[ArcTanh[Plus[Optional[Pattern[c, Blank[]]], Times[Coth[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], ArcTanh[Plus[c, Times[d, Coth[Plus[a, Times[b, x]]]]]], Power[Times[f, Plus[m, 1]], -1]], x], Dist[Times[b, Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[Plus[c, Times[-1, d], Times[-1, c, Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], ZeroQ[Plus[Power[Plus[c, Times[-1, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[Times[ArcCoth[Plus[Optional[Pattern[c, Blank[]]], Times[Coth[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], ArcCoth[Plus[c, Times[d, Coth[Plus[a, Times[b, x]]]]]], Power[Times[f, Plus[m, 1]], -1]], x], Dist[Times[b, Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[Plus[c, Times[-1, d], Times[-1, c, Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], ZeroQ[Plus[Power[Plus[c, Times[-1, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[Times[ArcTanh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Tanh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], ArcTanh[Plus[c, Times[d, Tanh[Plus[a, Times[b, x]]]]]], Power[Times[f, Plus[m, 1]], -1]], x], Plus[Dist[Times[b, Plus[1, Times[-1, c], Times[-1, d]], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[E, Plus[Times[2, a], Times[2, b, x]]], Power[Plus[1, Times[-1, c], d, Times[Plus[1, Times[-1, c], Times[-1, d]], Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x], Times[-1, Dist[Times[b, Plus[1, c, d], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[E, Plus[Times[2, a], Times[2, b, x]]], Power[Plus[1, c, Times[-1, d], Times[Plus[1, c, d], Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], NonzeroQ[Plus[Power[Plus[c, Times[-1, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[Times[ArcCoth[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Tanh[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], ArcCoth[Plus[c, Times[d, Tanh[Plus[a, Times[b, x]]]]]], Power[Times[f, Plus[m, 1]], -1]], x], Plus[Dist[Times[b, Plus[1, Times[-1, c], Times[-1, d]], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[E, Plus[Times[2, a], Times[2, b, x]]], Power[Plus[1, Times[-1, c], d, Times[Plus[1, Times[-1, c], Times[-1, d]], Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x], Times[-1, Dist[Times[b, Plus[1, c, d], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[E, Plus[Times[2, a], Times[2, b, x]]], Power[Plus[1, c, Times[-1, d], Times[Plus[1, c, d], Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], NonzeroQ[Plus[Power[Plus[c, Times[-1, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[Times[ArcTanh[Plus[Optional[Pattern[c, Blank[]]], Times[Coth[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], ArcTanh[Plus[c, Times[d, Coth[Plus[a, Times[b, x]]]]]], Power[Times[f, Plus[m, 1]], -1]], x], Plus[Times[-1, Dist[Times[b, Plus[1, Times[-1, c], Times[-1, d]], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[E, Plus[Times[2, a], Times[2, b, x]]], Power[Plus[1, Times[-1, c], d, Times[-1, Plus[1, Times[-1, c], Times[-1, d]], Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x]], Dist[Times[b, Plus[1, c, d], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[E, Plus[Times[2, a], Times[2, b, x]]], Power[Plus[1, c, Times[-1, d], Times[-1, Plus[1, c, d], Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], NonzeroQ[Plus[Power[Plus[c, Times[-1, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[Times[ArcCoth[Plus[Optional[Pattern[c, Blank[]]], Times[Coth[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], ArcCoth[Plus[c, Times[d, Coth[Plus[a, Times[b, x]]]]]], Power[Times[f, Plus[m, 1]], -1]], x], Plus[Times[-1, Dist[Times[b, Plus[1, Times[-1, c], Times[-1, d]], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[E, Plus[Times[2, a], Times[2, b, x]]], Power[Plus[1, Times[-1, c], d, Times[-1, Plus[1, Times[-1, c], Times[-1, d]], Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x]], Dist[Times[b, Plus[1, c, d], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[E, Plus[Times[2, a], Times[2, b, x]]], Power[Plus[1, c, Times[-1, d], Times[-1, Plus[1, c, d], Power[E, Plus[Times[2, a], Times[2, b, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], NonzeroQ[Plus[Power[Plus[c, Times[-1, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[ArcTanh[Tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcTanh[Tan[Plus[a, Times[b, x]]]]], x], Times[-1, Dist[b, Int[Times[x, Sec[Plus[Times[2, a], Times[2, b, x]]]], x], x]]], FreeQ[List[a, b], x]]], RuleDelayed[HoldPattern[Int[ArcCoth[Tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcCoth[Tan[Plus[a, Times[b, x]]]]], x], Times[-1, Dist[b, Int[Times[x, Sec[Plus[Times[2, a], Times[2, b, x]]]], x], x]]], FreeQ[List[a, b], x]]], RuleDelayed[HoldPattern[Int[ArcTanh[Cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcTanh[Cot[Plus[a, Times[b, x]]]]], x], Times[-1, Dist[b, Int[Times[x, Sec[Plus[Times[2, a], Times[2, b, x]]]], x], x]]], FreeQ[List[a, b], x]]], RuleDelayed[HoldPattern[Int[ArcCoth[Cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcCoth[Cot[Plus[a, Times[b, x]]]]], x], Times[-1, Dist[b, Int[Times[x, Sec[Plus[Times[2, a], Times[2, b, x]]]], x], x]]], FreeQ[List[a, b], x]]], RuleDelayed[HoldPattern[Int[Times[ArcTanh[Tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], ArcTanh[Tan[Plus[a, Times[b, x]]]], Power[Times[f, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Sec[Plus[Times[2, a], Times[2, b, x]]]], x], x]]], And[FreeQ[List[a, b, e, f], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[ArcCoth[Tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], ArcCoth[Tan[Plus[a, Times[b, x]]]], Power[Times[f, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Sec[Plus[Times[2, a], Times[2, b, x]]]], x], x]]], And[FreeQ[List[a, b, e, f], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[ArcTanh[Cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], ArcTanh[Cot[Plus[a, Times[b, x]]]], Power[Times[f, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Sec[Plus[Times[2, a], Times[2, b, x]]]], x], x]]], And[FreeQ[List[a, b, e, f], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[ArcCoth[Cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], ArcCoth[Cot[Plus[a, Times[b, x]]]], Power[Times[f, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Sec[Plus[Times[2, a], Times[2, b, x]]]], x], x]]], And[FreeQ[List[a, b, e, f], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[ArcTanh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcTanh[Plus[c, Times[d, Tan[Plus[a, Times[b, x]]]]]]], x], Dist[Times[I, b], Int[Times[x, Power[Plus[c, Times[I, d], Times[c, Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[Plus[c, Times[I, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[ArcCoth[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcCoth[Plus[c, Times[d, Tan[Plus[a, Times[b, x]]]]]]], x], Dist[Times[I, b], Int[Times[x, Power[Plus[c, Times[I, d], Times[c, Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[Plus[c, Times[I, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[ArcTanh[Plus[Optional[Pattern[c, Blank[]]], Times[Cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcTanh[Plus[c, Times[d, Cot[Plus[a, Times[b, x]]]]]]], x], Dist[Times[I, b], Int[Times[x, Power[Plus[c, Times[-1, I, d], Times[-1, c, Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[Plus[c, Times[-1, I, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[ArcCoth[Plus[Optional[Pattern[c, Blank[]]], Times[Cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcCoth[Plus[c, Times[d, Cot[Plus[a, Times[b, x]]]]]]], x], Dist[Times[I, b], Int[Times[x, Power[Plus[c, Times[-1, I, d], Times[-1, c, Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[Plus[c, Times[-1, I, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[ArcTanh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcTanh[Plus[c, Times[d, Tan[Plus[a, Times[b, x]]]]]]], x], Plus[Times[-1, Dist[Times[I, b, Plus[1, c, Times[-1, I, d]]], Int[Times[x, Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]], Power[Plus[1, c, Times[I, d], Times[Plus[1, c, Times[-1, I, d]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]], Dist[Times[I, b, Plus[1, Times[-1, c], Times[I, d]]], Int[Times[x, Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]], Power[Plus[1, Times[-1, c], Times[-1, I, d], Times[Plus[1, Times[-1, c], Times[I, d]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[Plus[c, Times[I, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[ArcCoth[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcCoth[Plus[c, Times[d, Tan[Plus[a, Times[b, x]]]]]]], x], Plus[Times[-1, Dist[Times[I, b, Plus[1, c, Times[-1, I, d]]], Int[Times[x, Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]], Power[Plus[1, c, Times[I, d], Times[Plus[1, c, Times[-1, I, d]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]], Dist[Times[I, b, Plus[1, Times[-1, c], Times[I, d]]], Int[Times[x, Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]], Power[Plus[1, Times[-1, c], Times[-1, I, d], Times[Plus[1, Times[-1, c], Times[I, d]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[Plus[c, Times[I, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[ArcTanh[Plus[Optional[Pattern[c, Blank[]]], Times[Cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcTanh[Plus[c, Times[d, Cot[Plus[a, Times[b, x]]]]]]], x], Plus[Times[-1, Dist[Times[I, b, Plus[1, Times[-1, c], Times[-1, I, d]]], Int[Times[x, Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]], Power[Plus[1, Times[-1, c], Times[I, d], Times[-1, Plus[1, Times[-1, c], Times[-1, I, d]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]], Dist[Times[I, b, Plus[1, c, Times[I, d]]], Int[Times[x, Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]], Power[Plus[1, c, Times[-1, I, d], Times[-1, Plus[1, c, Times[I, d]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[Plus[c, Times[-1, I, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[ArcCoth[Plus[Optional[Pattern[c, Blank[]]], Times[Cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcCoth[Plus[c, Times[d, Cot[Plus[a, Times[b, x]]]]]]], x], Plus[Times[-1, Dist[Times[I, b, Plus[1, Times[-1, c], Times[-1, I, d]]], Int[Times[x, Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]], Power[Plus[1, Times[-1, c], Times[I, d], Times[-1, Plus[1, Times[-1, c], Times[-1, I, d]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]], Dist[Times[I, b, Plus[1, c, Times[I, d]]], Int[Times[x, Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]], Power[Plus[1, c, Times[-1, I, d], Times[-1, Plus[1, c, Times[I, d]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[Plus[c, Times[-1, I, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[Times[ArcTanh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], ArcTanh[Plus[c, Times[d, Tan[Plus[a, Times[b, x]]]]]], Power[Times[f, Plus[m, 1]], -1]], x], Dist[Times[I, b, Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[Plus[c, Times[I, d], Times[c, Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], ZeroQ[Plus[Power[Plus[c, Times[I, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[Times[ArcCoth[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], ArcCoth[Plus[c, Times[d, Tan[Plus[a, Times[b, x]]]]]], Power[Times[f, Plus[m, 1]], -1]], x], Dist[Times[I, b, Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[Plus[c, Times[I, d], Times[c, Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], ZeroQ[Plus[Power[Plus[c, Times[I, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[Times[ArcTanh[Plus[Optional[Pattern[c, Blank[]]], Times[Cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], ArcTanh[Plus[c, Times[d, Cot[Plus[a, Times[b, x]]]]]], Power[Times[f, Plus[m, 1]], -1]], x], Dist[Times[I, b, Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[Plus[c, Times[-1, I, d], Times[-1, c, Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], ZeroQ[Plus[Power[Plus[c, Times[-1, I, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[Times[ArcCoth[Plus[Optional[Pattern[c, Blank[]]], Times[Cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], ArcCoth[Plus[c, Times[d, Cot[Plus[a, Times[b, x]]]]]], Power[Times[f, Plus[m, 1]], -1]], x], Dist[Times[I, b, Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[Plus[c, Times[-1, I, d], Times[-1, c, Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], ZeroQ[Plus[Power[Plus[c, Times[-1, I, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[Times[ArcTanh[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], ArcTanh[Plus[c, Times[d, Tan[Plus[a, Times[b, x]]]]]], Power[Times[f, Plus[m, 1]], -1]], x], Plus[Times[-1, Dist[Times[I, b, Plus[1, c, Times[-1, I, d]], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]], Power[Plus[1, c, Times[I, d], Times[Plus[1, c, Times[-1, I, d]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]], Dist[Times[I, b, Plus[1, Times[-1, c], Times[I, d]], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]], Power[Plus[1, Times[-1, c], Times[-1, I, d], Times[Plus[1, Times[-1, c], Times[I, d]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], NonzeroQ[Plus[Power[Plus[c, Times[I, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[Times[ArcCoth[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], ArcCoth[Plus[c, Times[d, Tan[Plus[a, Times[b, x]]]]]], Power[Times[f, Plus[m, 1]], -1]], x], Plus[Times[-1, Dist[Times[I, b, Plus[1, c, Times[-1, I, d]], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]], Power[Plus[1, c, Times[I, d], Times[Plus[1, c, Times[-1, I, d]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]], Dist[Times[I, b, Plus[1, Times[-1, c], Times[I, d]], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]], Power[Plus[1, Times[-1, c], Times[-1, I, d], Times[Plus[1, Times[-1, c], Times[I, d]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], NonzeroQ[Plus[Power[Plus[c, Times[I, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[Times[ArcTanh[Plus[Optional[Pattern[c, Blank[]]], Times[Cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], ArcTanh[Plus[c, Times[d, Cot[Plus[a, Times[b, x]]]]]], Power[Times[f, Plus[m, 1]], -1]], x], Plus[Times[-1, Dist[Times[I, b, Plus[1, Times[-1, c], Times[-1, I, d]], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]], Power[Plus[1, Times[-1, c], Times[I, d], Times[-1, Plus[1, Times[-1, c], Times[-1, I, d]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]], Dist[Times[I, b, Plus[1, c, Times[I, d]], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]], Power[Plus[1, c, Times[-1, I, d], Times[-1, Plus[1, c, Times[I, d]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], NonzeroQ[Plus[Power[Plus[c, Times[-1, I, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[Times[ArcCoth[Plus[Optional[Pattern[c, Blank[]]], Times[Cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], ArcCoth[Plus[c, Times[d, Cot[Plus[a, Times[b, x]]]]]], Power[Times[f, Plus[m, 1]], -1]], x], Plus[Times[-1, Dist[Times[I, b, Plus[1, Times[-1, c], Times[-1, I, d]], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]], Power[Plus[1, Times[-1, c], Times[I, d], Times[-1, Plus[1, Times[-1, c], Times[-1, I, d]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]], Dist[Times[I, b, Plus[1, c, Times[I, d]], Power[Times[f, Plus[m, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]], Power[Plus[1, c, Times[-1, I, d], Times[-1, Plus[1, c, Times[I, d]], Power[E, Plus[Times[2, I, a], Times[2, I, b, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], NonzeroQ[Plus[Power[Plus[c, Times[-1, I, d]], 2], -1]]]]], RuleDelayed[HoldPattern[Int[ArcTanh[Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcTanh[u]], x], Times[-1, Int[SimplifyIntegrand[Times[x, D[u, x], Power[Plus[1, Times[-1, Power[u, 2]]], -1]], x], x]]], InverseFunctionFreeQ[u, x]]], RuleDelayed[HoldPattern[Int[ArcCoth[Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcCoth[u]], x], Times[-1, Int[SimplifyIntegrand[Times[x, D[u, x], Power[Plus[1, Times[-1, Power[u, 2]]], -1]], x], x]]], InverseFunctionFreeQ[u, x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Pattern[u, Blank[]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Plus[a, Times[b, ArcTanh[u]]], Power[Times[d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, Power[Times[d, Plus[m, 1]], -1]], Int[SimplifyIntegrand[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], D[u, x], Power[Plus[1, Times[-1, Power[u, 2]]], -1]], x], x], x]]], And[FreeQ[List[a, b, c, d, m], x], NonzeroQ[Plus[m, 1]], InverseFunctionFreeQ[u, x], Not[FunctionOfQ[Power[Plus[c, Times[d, x]], Plus[m, 1]], u, x]], FalseQ[PowerVariableExpn[u, Plus[m, 1], x]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Pattern[u, Blank[]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Plus[a, Times[b, ArcCoth[u]]], Power[Times[d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, Power[Times[d, Plus[m, 1]], -1]], Int[SimplifyIntegrand[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], D[u, x], Power[Plus[1, Times[-1, Power[u, 2]]], -1]], x], x], x]]], And[FreeQ[List[a, b, c, d, m], x], NonzeroQ[Plus[m, 1]], InverseFunctionFreeQ[u, x], Not[FunctionOfQ[Power[Plus[c, Times[d, x]], Plus[m, 1]], u, x]], FalseQ[PowerVariableExpn[u, Plus[m, 1], x]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcTanh[Pattern[u, Blank[]]], Optional[Pattern[b, Blank[]]]]], Pattern[v, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[w, IntHide[v, x]]], Condition[Plus[Dist[Plus[a, Times[b, ArcTanh[u]]], w, x], Times[-1, Dist[b, Int[SimplifyIntegrand[Times[w, D[u, x], Power[Plus[1, Times[-1, Power[u, 2]]], -1]], x], x], x]]], InverseFunctionFreeQ[w, x]]], And[FreeQ[List[a, b], x], InverseFunctionFreeQ[u, x], Not[MatchQ[v, Condition[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], x]], Optional[Pattern[m, Blank[]]]], FreeQ[List[c, d, m], x]]]], FalseQ[FunctionOfLinear[Times[v, Plus[a, Times[b, ArcTanh[u]]]], x]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCoth[Pattern[u, Blank[]]], Optional[Pattern[b, Blank[]]]]], Pattern[v, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[w, IntHide[v, x]]], Condition[Plus[Dist[Plus[a, Times[b, ArcCoth[u]]], w, x], Times[-1, Dist[b, Int[SimplifyIntegrand[Times[w, D[u, x], Power[Plus[1, Times[-1, Power[u, 2]]], -1]], x], x], x]]], InverseFunctionFreeQ[w, x]]], And[FreeQ[List[a, b], x], InverseFunctionFreeQ[u, x], Not[MatchQ[v, Condition[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], x]], Optional[Pattern[m, Blank[]]]], FreeQ[List[c, d, m], x]]]], FalseQ[FunctionOfLinear[Times[v, Plus[a, Times[b, ArcCoth[u]]]], x]]]]], RuleDelayed[HoldPattern[Int[ArcSech[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcSech[Times[c, x]]], x], Dist[Times[Sqrt[Plus[1, Times[c, x]]], Sqrt[Times[1, Power[Plus[1, Times[c, x]], -1]]]], Int[Times[1, Power[Times[Sqrt[Plus[1, Times[-1, c, x]]], Sqrt[Plus[1, Times[c, x]]]], -1]], x], x]], FreeQ[c, x]]], RuleDelayed[HoldPattern[Int[ArcCsch[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcCsch[Times[c, x]]], x], Dist[Times[1, Power[c, -1]], Int[Times[1, Power[Times[x, Sqrt[Plus[1, Times[1, Power[Times[Power[c, 2], Power[x, 2]], -1]]]]], -1]], x], x]], FreeQ[c, x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSech[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[c, -1], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Sech[x], Tanh[x]], x], x, ArcSech[Times[c, x]]], x]], FreeQ[List[a, b, c, n], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCsch[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[c, -1], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Csch[x], Coth[x]], x], x, ArcCsch[Times[c, x]]], x]], FreeQ[List[a, b, c, n], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSech[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Plus[a, Times[b, ArcCosh[Times[x, Power[c, -1]]]]], Power[x, -1]], x], x, Times[1, Power[x, -1]]]], FreeQ[List[a, b, c], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCsch[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Plus[a, Times[b, ArcSinh[Times[x, Power[c, -1]]]]], Power[x, -1]], x], x, Times[1, Power[x, -1]]]], FreeQ[List[a, b, c], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSech[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Plus[a, Times[b, ArcSech[Times[c, x]]]], Power[Plus[m, 1], -1]], x], Dist[Times[b, Sqrt[Plus[1, Times[c, x]]], Power[Plus[m, 1], -1], Sqrt[Times[1, Power[Plus[1, Times[c, x]], -1]]]], Int[Times[Power[x, m], Power[Times[Sqrt[Plus[1, Times[-1, c, x]]], Sqrt[Plus[1, Times[c, x]]]], -1]], x], x]], And[FreeQ[List[a, b, c, m], x], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCsch[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Plus[a, Times[b, ArcCsch[Times[c, x]]]], Power[Plus[m, 1], -1]], x], Dist[Times[b, Power[Times[c, Plus[m, 1]], -1]], Int[Times[Power[x, Plus[m, -1]], Power[Sqrt[Plus[1, Times[1, Power[Times[Power[c, 2], Power[x, 2]], -1]]]], -1]], x], x]], And[FreeQ[List[a, b, c, m], x], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSech[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[Power[c, Plus[m, 1]], -1], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Sech[x], Plus[m, 1]], Tanh[x]], x], x, ArcSech[Times[c, x]]], x]], And[FreeQ[List[a, b, c, n], x], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCsch[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[Power[c, Plus[m, 1]], -1], Subst[Int[Times[Power[Plus[a, Times[b, x]], n], Power[Csch[x], Plus[m, 1]], Coth[x]], x], x, ArcCsch[Times[c, x]]], x]], And[FreeQ[List[a, b, c, n], x], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSech[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[Plus[a, Times[b, ArcSech[Times[c, x]]]], n]], x], FreeQ[List[a, b, c, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCsch[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[Plus[a, Times[b, ArcCsch[Times[c, x]]]], n]], x], FreeQ[List[a, b, c, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSech[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Power[Plus[d, Times[e, Power[x, 2]]], p], x]]], Plus[Dist[Plus[a, Times[b, ArcSech[Times[c, x]]]], u, x], Dist[Times[b, Sqrt[Plus[1, Times[c, x]]], Sqrt[Times[1, Power[Plus[1, Times[c, x]], -1]]]], Int[SimplifyIntegrand[Times[u, Power[Times[x, Sqrt[Plus[1, Times[-1, c, x]]], Sqrt[Plus[1, Times[c, x]]]], -1]], x], x], x]]], And[FreeQ[List[a, b, c, d, e], x], Or[PositiveIntegerQ[p], NegativeIntegerQ[Plus[p, Times[1, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCsch[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Power[Plus[d, Times[e, Power[x, 2]]], p], x]]], Plus[Dist[Plus[a, Times[b, ArcCsch[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c, x, Power[Sqrt[Times[-1, Power[c, 2], Power[x, 2]]], -1]], Int[SimplifyIntegrand[Times[u, Power[Times[x, Sqrt[Plus[-1, Times[-1, Power[c, 2], Power[x, 2]]]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], Or[PositiveIntegerQ[p], NegativeIntegerQ[Plus[p, Times[1, Power[2, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSech[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[e, Times[d, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCosh[Times[x, Power[c, -1]]]]], n], Power[Power[x, Times[2, Plus[p, 1]]], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, b, c, d, e, n], x], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCsch[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[e, Times[d, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[x, Power[c, -1]]]]], n], Power[Power[x, Times[2, Plus[p, 1]]], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, b, c, d, e, n], x], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSech[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Sqrt[Power[x, 2]], Power[x, -1]], Subst[Int[Times[Power[Plus[e, Times[d, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCosh[Times[x, Power[c, -1]]]]], n], Power[Power[x, Times[2, Plus[p, 1]]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], IntegerQ[Plus[p, Times[1, Power[2, -1]]]], PositiveQ[e], Negative[d]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCsch[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Sqrt[Power[x, 2]], Power[x, -1]], Subst[Int[Times[Power[Plus[e, Times[d, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[x, Power[c, -1]]]]], n], Power[Power[x, Times[2, Plus[p, 1]]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], IntegerQ[Plus[p, Times[1, Power[2, -1]]]], PositiveQ[e], Negative[d]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSech[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Times[x, Sqrt[Plus[e, Times[d, Power[Power[x, 2], -1]]]]], -1]], Subst[Int[Times[Power[Plus[e, Times[d, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCosh[Times[x, Power[c, -1]]]]], n], Power[Power[x, Times[2, Plus[p, 1]]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], IntegerQ[Plus[p, Times[1, Power[2, -1]]]], Not[And[PositiveQ[e], Negative[d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCsch[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Times[x, Sqrt[Plus[e, Times[d, Power[Power[x, 2], -1]]]]], -1]], Subst[Int[Times[Power[Plus[e, Times[d, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[x, Power[c, -1]]]]], n], Power[Power[x, Times[2, Plus[p, 1]]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], IntegerQ[Plus[p, Times[1, Power[2, -1]]]], Not[And[PositiveQ[e], Negative[d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSech[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSech[Times[c, x]]]], n]], x], FreeQ[List[a, b, c, d, e, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCsch[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCsch[Times[c, x]]]], n]], x], FreeQ[List[a, b, c, d, e, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSech[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[x, Blank[]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Plus[a, Times[b, ArcSech[Times[c, x]]]], Power[Times[2, e, Plus[p, 1]], -1]], x], Dist[Times[b, Sqrt[Plus[1, Times[c, x]]], Power[Times[2, e, Plus[p, 1]], -1], Sqrt[Times[1, Power[Plus[1, Times[c, x]], -1]]]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Times[x, Sqrt[Plus[1, Times[-1, c, x]]], Sqrt[Plus[1, Times[c, x]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, p], x], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCsch[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[x, Blank[]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Plus[a, Times[b, ArcCsch[Times[c, x]]]], Power[Times[2, e, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[b, c, x, Power[Times[2, e, Plus[p, 1], Sqrt[Times[-1, Power[c, 2], Power[x, 2]]]], -1]], Int[Times[Power[Plus[d, Times[e, Power[x, 2]]], Plus[p, 1]], Power[Times[x, Sqrt[Plus[-1, Times[-1, Power[c, 2], Power[x, 2]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, p], x], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSech[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], p]], x]]], Plus[Dist[Plus[a, Times[b, ArcSech[Times[c, x]]]], u, x], Dist[Times[b, Sqrt[Plus[1, Times[c, x]]], Sqrt[Times[1, Power[Plus[1, Times[c, x]], -1]]]], Int[SimplifyIntegrand[Times[u, Power[Times[x, Sqrt[Plus[1, Times[-1, c, x]]], Sqrt[Plus[1, Times[c, x]]]], -1]], x], x], x]]], And[FreeQ[List[a, b, c, d, e, m, p], x], Or[And[PositiveIntegerQ[p], Not[And[NegativeIntegerQ[Times[Plus[m, -1], Power[2, -1]]], Greater[Plus[m, Times[2, p], 3], 0]]]], And[PositiveIntegerQ[Times[Plus[m, 1], Power[2, -1]]], Not[And[NegativeIntegerQ[p], Greater[Plus[m, Times[2, p], 3], 0]]]], And[NegativeIntegerQ[Times[Plus[m, Times[2, p], 1], Power[2, -1]]], Not[NegativeIntegerQ[Times[Plus[m, -1], Power[2, -1]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCsch[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[u, IntHide[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], p]], x]]], Plus[Dist[Plus[a, Times[b, ArcCsch[Times[c, x]]]], u, x], Times[-1, Dist[Times[b, c, x, Power[Sqrt[Times[-1, Power[c, 2], Power[x, 2]]], -1]], Int[SimplifyIntegrand[Times[u, Power[Times[x, Sqrt[Plus[-1, Times[-1, Power[c, 2], Power[x, 2]]]]], -1]], x], x], x]]]], And[FreeQ[List[a, b, c, d, e, m, p], x], Or[And[PositiveIntegerQ[p], Not[And[NegativeIntegerQ[Times[Plus[m, -1], Power[2, -1]]], Greater[Plus[m, Times[2, p], 3], 0]]]], And[PositiveIntegerQ[Times[Plus[m, 1], Power[2, -1]]], Not[And[NegativeIntegerQ[p], Greater[Plus[m, Times[2, p], 3], 0]]]], And[NegativeIntegerQ[Times[Plus[m, Times[2, p], 1], Power[2, -1]]], Not[NegativeIntegerQ[Times[Plus[m, -1], Power[2, -1]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSech[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[e, Times[d, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCosh[Times[x, Power[c, -1]]]]], n], Power[Power[x, Plus[m, Times[2, Plus[p, 1]]]], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, b, c, d, e, n], x], IntegersQ[m, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCsch[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[Power[Plus[e, Times[d, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[x, Power[c, -1]]]]], n], Power[Power[x, Plus[m, Times[2, Plus[p, 1]]]], -1]], x], x, Times[1, Power[x, -1]]]], And[FreeQ[List[a, b, c, d, e, n], x], IntegersQ[m, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSech[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Sqrt[Power[x, 2]], Power[x, -1]], Subst[Int[Times[Power[Plus[e, Times[d, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCosh[Times[x, Power[c, -1]]]]], n], Power[Power[x, Plus[m, Times[2, Plus[p, 1]]]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], IntegerQ[m], IntegerQ[Plus[p, Times[1, Power[2, -1]]]], PositiveQ[e], Negative[d]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCsch[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Sqrt[Power[x, 2]], Power[x, -1]], Subst[Int[Times[Power[Plus[e, Times[d, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[x, Power[c, -1]]]]], n], Power[Power[x, Plus[m, Times[2, Plus[p, 1]]]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], IntegerQ[m], IntegerQ[Plus[p, Times[1, Power[2, -1]]]], PositiveQ[e], Negative[d]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSech[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Times[x, Sqrt[Plus[e, Times[d, Power[Power[x, 2], -1]]]]], -1]], Subst[Int[Times[Power[Plus[e, Times[d, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCosh[Times[x, Power[c, -1]]]]], n], Power[Power[x, Plus[m, Times[2, Plus[p, 1]]]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[c, 2], d], e]], IntegerQ[m], IntegerQ[Plus[p, Times[1, Power[2, -1]]]], Not[And[PositiveQ[e], Negative[d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCsch[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Times[Sqrt[Plus[d, Times[e, Power[x, 2]]]], Power[Times[x, Sqrt[Plus[e, Times[d, Power[Power[x, 2], -1]]]]], -1]], Subst[Int[Times[Power[Plus[e, Times[d, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSinh[Times[x, Power[c, -1]]]]], n], Power[Power[x, Plus[m, Times[2, Plus[p, 1]]]], -1]], x], x, Times[1, Power[x, -1]]], x]], And[FreeQ[List[a, b, c, d, e, n], x], ZeroQ[Plus[e, Times[-1, Power[c, 2], d]]], IntegerQ[m], IntegerQ[Plus[p, Times[1, Power[2, -1]]]], Not[And[PositiveQ[e], Negative[d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSech[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcSech[Times[c, x]]]], n]], x], FreeQ[List[a, b, c, d, e, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCsch[Times[Optional[Pattern[c, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[Plus[d, Times[e, Power[x, 2]]], p], Power[Plus[a, Times[b, ArcCsch[Times[c, x]]]], n]], x], FreeQ[List[a, b, c, d, e, m, n, p], x]]], RuleDelayed[HoldPattern[Int[ArcSech[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[a, Times[b, x]], ArcSech[Plus[a, Times[b, x]]], Power[b, -1]], x], Int[Times[Sqrt[Times[Plus[1, Times[-1, a], Times[-1, b, x]], Power[Plus[1, a, Times[b, x]], -1]]], Power[Plus[1, Times[-1, a], Times[-1, b, x]], -1]], x]], FreeQ[List[a, b], x]]], RuleDelayed[HoldPattern[Int[ArcCsch[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[a, Times[b, x]], ArcCsch[Plus[a, Times[b, x]]], Power[b, -1]], x], Int[Times[1, Power[Times[Plus[a, Times[b, x]], Sqrt[Plus[1, Times[1, Power[Power[Plus[a, Times[b, x]], 2], -1]]]]], -1]], x]], FreeQ[List[a, b], x]]], RuleDelayed[HoldPattern[Int[Power[ArcSech[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[b, -1], Subst[Int[Times[Power[x, n], Sech[x], Tanh[x]], x], x, ArcSech[Plus[a, Times[b, x]]]], x]], FreeQ[List[a, b, n], x]]], RuleDelayed[HoldPattern[Int[Power[ArcCsch[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[b, -1], Subst[Int[Times[Power[x, n], Csch[x], Coth[x]], x], x, ArcCsch[Plus[a, Times[b, x]]]], x]], FreeQ[List[a, b, n], x]]], RuleDelayed[HoldPattern[Int[Times[ArcSech[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[Pattern[x, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[ArcSech[Plus[a, Times[b, x]]], Log[Plus[1, Power[E, Times[-2, ArcSech[Plus[a, Times[b, x]]]]]]]], x]], Plus[Simp[Times[ArcSech[Plus[a, Times[b, x]]], Log[Plus[1, Times[-1, Plus[1, Times[-1, Sqrt[Plus[1, Times[-1, Power[a, 2]]]]]], Power[Times[Power[E, ArcSech[Plus[a, Times[b, x]]]], a], -1]]]]], x], Simp[Times[ArcSech[Plus[a, Times[b, x]]], Log[Plus[1, Times[-1, Plus[1, Sqrt[Plus[1, Times[-1, Power[a, 2]]]]], Power[Times[Power[E, ArcSech[Plus[a, Times[b, x]]]], a], -1]]]]], x], Times[-1, Simp[PolyLog[2, Times[Plus[1, Times[-1, Sqrt[Plus[1, Times[-1, Power[a, 2]]]]]], Power[Times[Power[E, ArcSech[Plus[a, Times[b, x]]]], a], -1]]], x]], Times[-1, Simp[PolyLog[2, Times[Plus[1, Sqrt[Plus[1, Times[-1, Power[a, 2]]]]], Power[Times[Power[E, ArcSech[Plus[a, Times[b, x]]]], a], -1]]], x]], Simp[Times[1, Power[2, -1], PolyLog[2, Times[-1, Power[E, Times[-2, ArcSech[Plus[a, Times[b, x]]]]]]]], x]]], FreeQ[List[a, b], x]]], RuleDelayed[HoldPattern[Int[Times[ArcCsch[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[Pattern[x, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Power[ArcCsch[Plus[a, Times[b, x]]], 2], x]], Plus[Simp[Times[ArcCsch[Plus[a, Times[b, x]]], Log[Plus[1, Times[Plus[1, Times[-1, Sqrt[Plus[1, Power[a, 2]]]]], Power[E, ArcCsch[Plus[a, Times[b, x]]]], Power[a, -1]]]]], x], Simp[Times[ArcCsch[Plus[a, Times[b, x]]], Log[Plus[1, Times[Plus[1, Sqrt[Plus[1, Power[a, 2]]]], Power[E, ArcCsch[Plus[a, Times[b, x]]]], Power[a, -1]]]]], x], Times[-1, Simp[Times[ArcCsch[Plus[a, Times[b, x]]], Log[Plus[1, Times[-1, Power[E, Times[-2, ArcCsch[Plus[a, Times[b, x]]]]]]]]], x]], Simp[PolyLog[2, Times[-1, Plus[1, Times[-1, Sqrt[Plus[1, Power[a, 2]]]]], Power[E, ArcCsch[Plus[a, Times[b, x]]]], Power[a, -1]]], x], Simp[PolyLog[2, Times[-1, Plus[1, Sqrt[Plus[1, Power[a, 2]]]], Power[E, ArcCsch[Plus[a, Times[b, x]]]], Power[a, -1]]], x], Simp[Times[1, Power[2, -1], PolyLog[2, Power[E, Times[-2, ArcCsch[Plus[a, Times[b, x]]]]]]], x]]], FreeQ[List[a, b], x]]], RuleDelayed[HoldPattern[Int[Times[ArcSech[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Power[Times[-1, a], Plus[m, 1]], Times[-1, Power[b, Plus[m, 1]], Power[x, Plus[m, 1]]]], ArcSech[Plus[a, Times[b, x]]], Power[Times[Power[b, Plus[m, 1]], Plus[m, 1]], -1]], x]], Dist[Times[1, Power[Times[Power[b, Plus[m, 1]], Plus[m, 1]], -1]], Subst[Int[Times[Plus[Power[Times[-1, a, x], Plus[m, 1]], Times[-1, Power[Plus[1, Times[-1, a, x]], Plus[m, 1]]]], Power[Times[Power[x, Plus[m, 1]], Sqrt[Plus[-1, x]], Sqrt[Plus[1, x]]], -1]], x], x, Times[1, Power[Plus[a, Times[b, x]], -1]]], x]], And[FreeQ[List[a, b, m], x], IntegerQ[m], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[ArcCsch[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Power[Times[-1, a], Plus[m, 1]], Times[-1, Power[b, Plus[m, 1]], Power[x, Plus[m, 1]]]], ArcCsch[Plus[a, Times[b, x]]], Power[Times[Power[b, Plus[m, 1]], Plus[m, 1]], -1]], x]], Dist[Times[1, Power[Times[Power[b, Plus[m, 1]], Plus[m, 1]], -1]], Subst[Int[Times[Plus[Power[Times[-1, a, x], Plus[m, 1]], Times[-1, Power[Plus[1, Times[-1, a, x]], Plus[m, 1]]]], Power[Times[Power[x, Plus[m, 1]], Sqrt[Plus[1, Power[x, 2]]]], -1]], x], x, Times[1, Power[Plus[a, Times[b, x]], -1]]], x]], And[FreeQ[List[a, b, m], x], IntegerQ[m], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcSech[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[Power[b, Plus[m, 1]], -1], Subst[Int[Times[Power[x, n], Power[Plus[Times[-1, a], Sech[x]], m], Sech[x], Tanh[x]], x], x, ArcSech[Plus[a, Times[b, x]]]], x]], And[FreeQ[List[a, b, n], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcCsch[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[Power[b, Plus[m, 1]], -1], Subst[Int[Times[Power[x, n], Power[Plus[Times[-1, a], Csch[x]], m], Csch[x], Coth[x]], x], x, ArcCsch[Plus[a, Times[b, x]]]], x]], And[FreeQ[List[a, b, n], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcSech[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], -1]]], Optional[Pattern[m, Blank[]]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[ArcCosh[Plus[Times[a, Power[c, -1]], Times[b, Power[x, n], Power[c, -1]]]], m]], x], FreeQ[List[a, b, c, n, m], x]]], RuleDelayed[HoldPattern[Int[Times[Power[ArcCsch[Times[Optional[Pattern[c, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], -1]]], Optional[Pattern[m, Blank[]]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[ArcSinh[Plus[Times[a, Power[c, -1]], Times[b, Power[x, n], Power[c, -1]]]], m]], x], FreeQ[List[a, b, c, n, m], x]]], RuleDelayed[HoldPattern[Int[Power[E, ArcSech[Times[Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[E, ArcSech[Times[a, x]]]], x], Plus[Dist[Times[1, Power[a, -1]], Int[Times[1, Power[Times[x, Plus[1, Times[-1, a, x]]], -1], Sqrt[Times[Plus[1, Times[-1, a, x]], Power[Plus[1, Times[a, x]], -1]]]], x], x], Simp[Times[Log[x], Power[a, -1]], x]]], FreeQ[a, x]]], RuleDelayed[HoldPattern[Int[Power[E, ArcSech[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Pattern[p, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[E, ArcSech[Times[a, Power[x, p]]]]], x], Plus[Dist[Times[p, Power[a, -1]], Int[Times[1, Power[Power[x, p], -1]], x], x], Dist[Times[p, Sqrt[Plus[1, Times[a, Power[x, p]]]], Power[a, -1], Sqrt[Times[1, Power[Plus[1, Times[a, Power[x, p]]], -1]]]], Int[Times[1, Power[Times[Power[x, p], Sqrt[Plus[1, Times[a, Power[x, p]]]], Sqrt[Plus[1, Times[-1, a, Power[x, p]]]]], -1]], x], x]]], FreeQ[List[a, p], x]]], RuleDelayed[HoldPattern[Int[Power[E, ArcCsch[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[p, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[a, -1]], Int[Times[1, Power[Power[x, p], -1]], x], x], Int[Sqrt[Plus[1, Times[1, Power[Times[Power[a, 2], Power[x, Times[2, p]]], -1]]]], x]], FreeQ[List[a, p], x]]], RuleDelayed[HoldPattern[Int[Power[E, Times[ArcSech[Pattern[u, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[Times[1, Power[u, -1]], Sqrt[Times[Plus[1, Times[-1, u]], Power[Plus[1, u], -1]]], Times[1, Power[u, -1], Sqrt[Times[Plus[1, Times[-1, u]], Power[Plus[1, u], -1]]]]], n], x], IntegerQ[n]]], RuleDelayed[HoldPattern[Int[Power[E, Times[ArcCsch[Pattern[u, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[Times[1, Power[u, -1]], Sqrt[Plus[1, Times[1, Power[Power[u, 2], -1]]]]], n], x], IntegerQ[n]]], RuleDelayed[HoldPattern[Int[Times[Power[E, ArcSech[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[p, Blank[]]]]]]], Power[Pattern[x, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Power[Times[a, p, Power[x, p]], -1], x]], Dist[Times[Sqrt[Plus[1, Times[a, Power[x, p]]]], Power[a, -1], Sqrt[Times[1, Power[Plus[1, Times[a, Power[x, p]]], -1]]]], Int[Times[Sqrt[Plus[1, Times[a, Power[x, p]]]], Sqrt[Plus[1, Times[-1, a, Power[x, p]]]], Power[Power[x, Plus[p, 1]], -1]], x], x]], FreeQ[List[a, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[E, ArcSech[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[p, Blank[]]]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Power[E, ArcSech[Times[a, Power[x, p]]]], Power[Plus[m, 1], -1]], x], Plus[Dist[Times[p, Power[Times[a, Plus[m, 1]], -1]], Int[Power[x, Plus[m, Times[-1, p]]], x], x], Dist[Times[p, Sqrt[Plus[1, Times[a, Power[x, p]]]], Power[Times[a, Plus[m, 1]], -1], Sqrt[Times[1, Power[Plus[1, Times[a, Power[x, p]]], -1]]]], Int[Times[Power[x, Plus[m, Times[-1, p]]], Power[Times[Sqrt[Plus[1, Times[a, Power[x, p]]]], Sqrt[Plus[1, Times[-1, a, Power[x, p]]]]], -1]], x], x]]], And[FreeQ[List[a, m, p], x], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, ArcCsch[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[p, Blank[]]]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[a, -1]], Int[Power[x, Plus[m, Times[-1, p]]], x], x], Int[Times[Power[x, m], Sqrt[Plus[1, Times[1, Power[Times[Power[a, 2], Power[x, Times[2, p]]], -1]]]]], x]], FreeQ[List[a, m, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcSech[Pattern[u, Blank[]]], Optional[Pattern[n, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[Plus[Times[1, Power[u, -1]], Sqrt[Times[Plus[1, Times[-1, u]], Power[Plus[1, u], -1]]], Times[1, Power[u, -1], Sqrt[Times[Plus[1, Times[-1, u]], Power[Plus[1, u], -1]]]]], n]], x], And[FreeQ[m, x], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[E, Times[ArcCsch[Pattern[u, Blank[]]], Optional[Pattern[n, Blank[]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[x, m], Power[Plus[Times[1, Power[u, -1]], Sqrt[Plus[1, Times[1, Power[Power[u, 2], -1]]]]], n]], x], And[FreeQ[m, x], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[ArcSech[Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcSech[u]], x], Dist[Times[Sqrt[Plus[1, Times[-1, Power[u, 2]]]], Power[Times[u, Sqrt[Plus[-1, Times[1, Power[u, -1]]]], Sqrt[Plus[1, Times[1, Power[u, -1]]]]], -1]], Int[SimplifyIntegrand[Times[x, D[u, x], Power[Times[u, Sqrt[Plus[1, Times[-1, Power[u, 2]]]]], -1]], x], x], x]], And[InverseFunctionFreeQ[u, x], Not[FunctionOfExponentialQ[u, x]]]]], RuleDelayed[HoldPattern[Int[ArcCsch[Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, ArcCsch[u]], x], Times[-1, Dist[Times[u, Power[Sqrt[Times[-1, Power[u, 2]]], -1]], Int[SimplifyIntegrand[Times[x, D[u, x], Power[Times[u, Sqrt[Plus[-1, Times[-1, Power[u, 2]]]]], -1]], x], x], x]]], And[InverseFunctionFreeQ[u, x], Not[FunctionOfExponentialQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSech[Pattern[u, Blank[]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Plus[a, Times[b, ArcSech[u]]], Power[Times[d, Plus[m, 1]], -1]], x], Dist[Times[b, Sqrt[Plus[1, Times[-1, Power[u, 2]]]], Power[Times[d, Plus[m, 1], u, Sqrt[Plus[-1, Times[1, Power[u, -1]]]], Sqrt[Plus[1, Times[1, Power[u, -1]]]]], -1]], Int[SimplifyIntegrand[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], D[u, x], Power[Times[u, Sqrt[Plus[1, Times[-1, Power[u, 2]]]]], -1]], x], x], x]], And[FreeQ[List[a, b, c, d, m], x], NonzeroQ[Plus[m, 1]], InverseFunctionFreeQ[u, x], Not[FunctionOfQ[Power[Plus[c, Times[d, x]], Plus[m, 1]], u, x]], Not[FunctionOfExponentialQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCsch[Pattern[u, Blank[]]], Optional[Pattern[b, Blank[]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], Plus[a, Times[b, ArcCsch[u]]], Power[Times[d, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, u, Power[Times[d, Plus[m, 1], Sqrt[Times[-1, Power[u, 2]]]], -1]], Int[SimplifyIntegrand[Times[Power[Plus[c, Times[d, x]], Plus[m, 1]], D[u, x], Power[Times[u, Sqrt[Plus[-1, Times[-1, Power[u, 2]]]]], -1]], x], x], x]]], And[FreeQ[List[a, b, c, d, m], x], NonzeroQ[Plus[m, 1]], InverseFunctionFreeQ[u, x], Not[FunctionOfQ[Power[Plus[c, Times[d, x]], Plus[m, 1]], u, x]], Not[FunctionOfExponentialQ[u, x]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcSech[Pattern[u, Blank[]]], Optional[Pattern[b, Blank[]]]]], Pattern[v, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[w, IntHide[v, x]]], Condition[Plus[Dist[Plus[a, Times[b, ArcSech[u]]], w, x], Dist[Times[b, Sqrt[Plus[1, Times[-1, Power[u, 2]]]], Power[Times[u, Sqrt[Plus[-1, Times[1, Power[u, -1]]]], Sqrt[Plus[1, Times[1, Power[u, -1]]]]], -1]], Int[SimplifyIntegrand[Times[w, D[u, x], Power[Times[u, Sqrt[Plus[1, Times[-1, Power[u, 2]]]]], -1]], x], x], x]], InverseFunctionFreeQ[w, x]]], And[FreeQ[List[a, b], x], InverseFunctionFreeQ[u, x], Not[MatchQ[v, Condition[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], x]], Optional[Pattern[m, Blank[]]]], FreeQ[List[c, d, m], x]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[a, Blank[]]], Times[ArcCsch[Pattern[u, Blank[]]], Optional[Pattern[b, Blank[]]]]], Pattern[v, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[w, IntHide[v, x]]], Condition[Plus[Dist[Plus[a, Times[b, ArcCsch[u]]], w, x], Times[-1, Dist[Times[b, u, Power[Sqrt[Times[-1, Power[u, 2]]], -1]], Int[SimplifyIntegrand[Times[w, D[u, x], Power[Times[u, Sqrt[Plus[-1, Times[-1, Power[u, 2]]]]], -1]], x], x], x]]], InverseFunctionFreeQ[w, x]]], And[FreeQ[List[a, b], x], InverseFunctionFreeQ[u, x], Not[MatchQ[v, Condition[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], x]], Optional[Pattern[m, Blank[]]]], FreeQ[List[c, d, m], x]]]]]]]]