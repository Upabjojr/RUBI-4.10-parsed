List[RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Times[Optional[Pattern[d, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[c, Blank[]]], tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Tan[Plus[a, Times[b, x]]]], m], Power[Times[d, Cos[Plus[a, Times[b, x]]]], m], Power[Power[Times[d, Sin[Plus[a, Times[b, x]]]], m], -1]], Int[Times[ActivateTrig[u], Power[Times[d, Sin[Plus[a, Times[b, x]]]], Plus[m, n]], Power[Power[Times[d, Cos[Plus[a, Times[b, x]]]], m], -1]], x], x], And[FreeQ[List[a, b, c, d, m, n], x], KnownSineIntegrandQ[u, x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Optional[Pattern[n, Blank[]]]], Pattern[u, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Tan[Plus[a, Times[b, x]]]], m], Power[Times[d, Cos[Plus[a, Times[b, x]]]], m], Power[Power[Times[d, Sin[Plus[a, Times[b, x]]]], m], -1]], Int[Times[ActivateTrig[u], Power[Times[d, Sin[Plus[a, Times[b, x]]]], m], Power[Power[Times[d, Cos[Plus[a, Times[b, x]]]], Plus[m, Times[-1, n]]], -1]], x], x], And[FreeQ[List[a, b, c, d, m, n], x], KnownSineIntegrandQ[u, x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[c, Blank[]]]], Optional[Pattern[m, Blank[]]]], Pattern[u, Blank[]], Power[Times[Optional[Pattern[d, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Cot[Plus[a, Times[b, x]]]], m], Power[Times[d, Sin[Plus[a, Times[b, x]]]], m], Power[Power[Times[d, Cos[Plus[a, Times[b, x]]]], m], -1]], Int[Times[ActivateTrig[u], Power[Times[d, Cos[Plus[a, Times[b, x]]]], m], Power[Power[Times[d, Sin[Plus[a, Times[b, x]]]], Plus[m, Times[-1, n]]], -1]], x], x], And[FreeQ[List[a, b, c, d, m, n], x], KnownSineIntegrandQ[u, x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[c, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Optional[Pattern[n, Blank[]]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Cot[Plus[a, Times[b, x]]]], m], Power[Times[d, Sin[Plus[a, Times[b, x]]]], m], Power[Power[Times[d, Cos[Plus[a, Times[b, x]]]], m], -1]], Int[Times[ActivateTrig[u], Power[Times[d, Cos[Plus[a, Times[b, x]]]], Plus[m, n]], Power[Power[Times[d, Sin[Plus[a, Times[b, x]]]], m], -1]], x], x], And[FreeQ[List[a, b, c, d, m, n], x], KnownSineIntegrandQ[u, x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Optional[Pattern[n, Blank[]]]], Pattern[u, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Csc[Plus[a, Times[b, x]]]], m], Power[Times[d, Sin[Plus[a, Times[b, x]]]], m]], Int[Times[ActivateTrig[u], Power[Times[d, Sin[Plus[a, Times[b, x]]]], Plus[n, Times[-1, m]]]], x], x], And[FreeQ[List[a, b, c, d, m, n], x], KnownSineIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Tan[Plus[a, Times[b, x]]]], m], Power[Times[c, Cos[Plus[a, Times[b, x]]]], m], Power[Power[Times[c, Sin[Plus[a, Times[b, x]]]], m], -1]], Int[Times[ActivateTrig[u], Power[Times[c, Sin[Plus[a, Times[b, x]]]], m], Power[Power[Times[c, Cos[Plus[a, Times[b, x]]]], m], -1]], x], x], And[FreeQ[List[a, b, c, m], x], Not[IntegerQ[m]], KnownSineIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[c, Blank[]]]], Optional[Pattern[m, Blank[]]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Cot[Plus[a, Times[b, x]]]], m], Power[Times[c, Sin[Plus[a, Times[b, x]]]], m], Power[Power[Times[c, Cos[Plus[a, Times[b, x]]]], m], -1]], Int[Times[ActivateTrig[u], Power[Times[c, Cos[Plus[a, Times[b, x]]]], m], Power[Power[Times[c, Sin[Plus[a, Times[b, x]]]], m], -1]], x], x], And[FreeQ[List[a, b, c, m], x], Not[IntegerQ[m]], KnownSineIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Sec[Plus[a, Times[b, x]]]], m], Power[Times[c, Cos[Plus[a, Times[b, x]]]], m]], Int[Times[ActivateTrig[u], Power[Power[Times[c, Cos[Plus[a, Times[b, x]]]], m], -1]], x], x], And[FreeQ[List[a, b, c, m], x], Not[IntegerQ[m]], KnownSineIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[c, Blank[]]]], Optional[Pattern[m, Blank[]]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Csc[Plus[a, Times[b, x]]]], m], Power[Times[c, Sin[Plus[a, Times[b, x]]]], m]], Int[Times[ActivateTrig[u], Power[Power[Times[c, Sin[Plus[a, Times[b, x]]]], m], -1]], x], x], And[FreeQ[List[a, b, c, m], x], Not[IntegerQ[m]], KnownSineIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Times[csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]], Pattern[u, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[c, Int[Times[ActivateTrig[u], Power[Times[c, Sin[Plus[a, Times[b, x]]]], Plus[n, -1]], Plus[B, Times[A, Sin[Plus[a, Times[b, x]]]]]], x], x], And[FreeQ[List[a, b, c, A, B, n], x], KnownSineIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[c, Blank[]]]], Optional[Pattern[n, Blank[]]]], Pattern[u, Blank[]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[c, Int[Times[ActivateTrig[u], Power[Times[c, Cos[Plus[a, Times[b, x]]]], Plus[n, -1]], Plus[B, Times[A, Cos[Plus[a, Times[b, x]]]]]], x], x], And[FreeQ[List[a, b, c, A, B, n], x], KnownSineIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Times[csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Plus[B, Times[A, Sin[Plus[a, Times[b, x]]]]], Power[Sin[Plus[a, Times[b, x]]], -1]], x], And[FreeQ[List[a, b, A, B], x], KnownSineIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Plus[B, Times[A, Cos[Plus[a, Times[b, x]]]]], Power[Cos[Plus[a, Times[b, x]]], -1]], x], And[FreeQ[List[a, b, A, B], x], KnownSineIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Optional[Pattern[u, Blank[]]], Power[Times[Optional[Pattern[c, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, 2], Int[Times[ActivateTrig[u], Power[Times[c, Sin[Plus[a, Times[b, x]]]], Plus[n, -2]], Plus[C, Times[B, Sin[Plus[a, Times[b, x]]]], Times[A, Power[Sin[Plus[a, Times[b, x]]], 2]]]], x], x], And[FreeQ[List[a, b, c, A, B, C, n], x], KnownSineIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[c, Blank[]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[u, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, 2], Int[Times[ActivateTrig[u], Power[Times[c, Cos[Plus[a, Times[b, x]]]], Plus[n, -2]], Plus[C, Times[B, Cos[Plus[a, Times[b, x]]]], Times[A, Power[Cos[Plus[a, Times[b, x]]], 2]]]], x], x], And[FreeQ[List[a, b, c, A, B, C, n], x], KnownSineIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Plus[Times[Power[csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]], Pattern[A, Blank[]]], Power[Times[Optional[Pattern[c, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, 2], Int[Times[ActivateTrig[u], Power[Times[c, Sin[Plus[a, Times[b, x]]]], Plus[n, -2]], Plus[C, Times[A, Power[Sin[Plus[a, Times[b, x]]], 2]]]], x], x], And[FreeQ[List[a, b, c, A, C, n], x], KnownSineIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[c, Blank[]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[u, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, 2], Int[Times[ActivateTrig[u], Power[Times[c, Cos[Plus[a, Times[b, x]]]], Plus[n, -2]], Plus[C, Times[A, Power[Cos[Plus[a, Times[b, x]]], 2]]]], x], x], And[FreeQ[List[a, b, c, A, C, n], x], KnownSineIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Plus[C, Times[B, Sin[Plus[a, Times[b, x]]]], Times[A, Power[Sin[Plus[a, Times[b, x]]], 2]]], Power[Power[Sin[Plus[a, Times[b, x]]], 2], -1]], x], And[FreeQ[List[a, b, A, B, C], x], KnownSineIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Plus[C, Times[B, Cos[Plus[a, Times[b, x]]]], Times[A, Power[Cos[Plus[a, Times[b, x]]], 2]]], Power[Power[Cos[Plus[a, Times[b, x]]], 2], -1]], x], And[FreeQ[List[a, b, A, B, C], x], KnownSineIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Times[Power[csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]], Pattern[A, Blank[]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Plus[C, Times[A, Power[Sin[Plus[a, Times[b, x]]], 2]]], Power[Power[Sin[Plus[a, Times[b, x]]], 2], -1]], x], And[FreeQ[List[a, b, A, C], x], KnownSineIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Plus[C, Times[A, Power[Cos[Plus[a, Times[b, x]]], 2]]], Power[Power[Cos[Plus[a, Times[b, x]]], 2], -1]], x], And[FreeQ[List[a, b, A, C], x], KnownSineIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Plus[Optional[Pattern[A, Blank[]]], Times[csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[C, Blank[]]]], Times[Optional[Pattern[B, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Plus[C, Times[A, Sin[Plus[a, Times[b, x]]]], Times[B, Power[Sin[Plus[a, Times[b, x]]], 2]]], Power[Sin[Plus[a, Times[b, x]]], -1]], x], FreeQ[List[a, b, A, B, C], x]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Plus[Optional[Pattern[A, Blank[]]], Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Optional[Pattern[C, Blank[]]], sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Plus[C, Times[A, Cos[Plus[a, Times[b, x]]]], Times[B, Power[Cos[Plus[a, Times[b, x]]], 2]]], Power[Cos[Plus[a, Times[b, x]]], -1]], x], FreeQ[List[a, b, A, B, C], x]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Plus[Times[Optional[Pattern[A, Blank[]]], Power[sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[B, Blank[]]], Power[sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n1, Blank[]]]], Times[Optional[Pattern[C, Blank[]]], Power[sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n2, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Power[Sin[Plus[a, Times[b, x]]], n], Plus[A, Times[B, Sin[Plus[a, Times[b, x]]]], Times[C, Power[Sin[Plus[a, Times[b, x]]], 2]]]], x], And[FreeQ[List[a, b, A, B, C, n], x], ZeroQ[Plus[n1, Times[-1, n], -1]], ZeroQ[Plus[n2, Times[-1, n], -2]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Times[Power[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[A, Blank[]]]], Times[Power[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n1, Blank[]]], Optional[Pattern[B, Blank[]]]], Times[Power[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n2, Blank[]]], Optional[Pattern[C, Blank[]]]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Power[Cos[Plus[a, Times[b, x]]], n], Plus[A, Times[B, Cos[Plus[a, Times[b, x]]]], Times[C, Power[Cos[Plus[a, Times[b, x]]], 2]]]], x], And[FreeQ[List[a, b, A, B, C, n], x], ZeroQ[Plus[n1, Times[-1, n], -1]], ZeroQ[Plus[n2, Times[-1, n], -2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[c, Blank[]]]], Optional[Pattern[m, Blank[]]]], Pattern[u, Blank[]], Power[Times[Optional[Pattern[d, Blank[]]], tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Cot[Plus[a, Times[b, x]]]], m], Power[Times[d, Tan[Plus[a, Times[b, x]]]], m]], Int[Times[ActivateTrig[u], Power[Times[d, Tan[Plus[a, Times[b, x]]]], Plus[n, Times[-1, m]]]], x], x], And[FreeQ[List[a, b, c, d, m, n], x], KnownTangentIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Optional[Pattern[n, Blank[]]]], Pattern[u, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Tan[Plus[a, Times[b, x]]]], m], Power[Times[d, Cos[Plus[a, Times[b, x]]]], m], Power[Power[Times[d, Sin[Plus[a, Times[b, x]]]], m], -1]], Int[Times[ActivateTrig[u], Power[Times[d, Sin[Plus[a, Times[b, x]]]], m], Power[Power[Times[d, Cos[Plus[a, Times[b, x]]]], Plus[m, Times[-1, n]]], -1]], x], x], And[FreeQ[List[a, b, c, d, m, n], x], KnownCotangentIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[c, Blank[]]]], Optional[Pattern[m, Blank[]]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Cot[Plus[a, Times[b, x]]]], m], Power[Times[c, Tan[Plus[a, Times[b, x]]]], m]], Int[Times[ActivateTrig[u], Power[Power[Times[c, Tan[Plus[a, Times[b, x]]]], m], -1]], x], x], And[FreeQ[List[a, b, c, m], x], Not[IntegerQ[m]], KnownTangentIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Cot[Plus[a, Times[b, x]]]], m], Power[Times[c, Tan[Plus[a, Times[b, x]]]], m]], Int[Times[ActivateTrig[u], Power[Power[Times[c, Cot[Plus[a, Times[b, x]]]], m], -1]], x], x], And[FreeQ[List[a, b, c, m], x], Not[IntegerQ[m]], KnownCotangentIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Times[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]], Pattern[u, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[c, Int[Times[ActivateTrig[u], Power[Times[c, Tan[Plus[a, Times[b, x]]]], Plus[n, -1]], Plus[B, Times[A, Tan[Plus[a, Times[b, x]]]]]], x], x], And[FreeQ[List[a, b, c, A, B, n], x], KnownTangentIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[c, Blank[]]]], Optional[Pattern[n, Blank[]]]], Pattern[u, Blank[]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[c, Int[Times[ActivateTrig[u], Power[Times[c, Cot[Plus[a, Times[b, x]]]], Plus[n, -1]], Plus[B, Times[A, Cot[Plus[a, Times[b, x]]]]]], x], x], And[FreeQ[List[a, b, c, A, B, n], x], KnownCotangentIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Times[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Plus[B, Times[A, Tan[Plus[a, Times[b, x]]]]], Power[Tan[Plus[a, Times[b, x]]], -1]], x], And[FreeQ[List[a, b, A, B], x], KnownTangentIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Plus[B, Times[A, Cot[Plus[a, Times[b, x]]]]], Power[Cot[Plus[a, Times[b, x]]], -1]], x], And[FreeQ[List[a, b, A, B], x], KnownCotangentIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Optional[Pattern[u, Blank[]]], Power[Times[Optional[Pattern[c, Blank[]]], tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, 2], Int[Times[ActivateTrig[u], Power[Times[c, Tan[Plus[a, Times[b, x]]]], Plus[n, -2]], Plus[C, Times[B, Tan[Plus[a, Times[b, x]]]], Times[A, Power[Tan[Plus[a, Times[b, x]]], 2]]]], x], x], And[FreeQ[List[a, b, c, A, B, C, n], x], KnownTangentIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[c, Blank[]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[u, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, 2], Int[Times[ActivateTrig[u], Power[Times[c, Cot[Plus[a, Times[b, x]]]], Plus[n, -2]], Plus[C, Times[B, Cot[Plus[a, Times[b, x]]]], Times[A, Power[Cot[Plus[a, Times[b, x]]], 2]]]], x], x], And[FreeQ[List[a, b, c, A, B, C, n], x], KnownCotangentIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Plus[Times[Power[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]], Pattern[A, Blank[]]], Power[Times[Optional[Pattern[c, Blank[]]], tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, 2], Int[Times[ActivateTrig[u], Power[Times[c, Tan[Plus[a, Times[b, x]]]], Plus[n, -2]], Plus[C, Times[A, Power[Tan[Plus[a, Times[b, x]]], 2]]]], x], x], And[FreeQ[List[a, b, c, A, C, n], x], KnownTangentIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[c, Blank[]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[u, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[C, Blank[]]], Power[tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, 2], Int[Times[ActivateTrig[u], Power[Times[c, Cot[Plus[a, Times[b, x]]]], Plus[n, -2]], Plus[C, Times[A, Power[Cot[Plus[a, Times[b, x]]], 2]]]], x], x], And[FreeQ[List[a, b, c, A, C, n], x], KnownCotangentIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Plus[C, Times[B, Tan[Plus[a, Times[b, x]]]], Times[A, Power[Tan[Plus[a, Times[b, x]]], 2]]], Power[Power[Tan[Plus[a, Times[b, x]]], 2], -1]], x], And[FreeQ[List[a, b, A, B, C], x], KnownTangentIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Plus[C, Times[B, Cot[Plus[a, Times[b, x]]]], Times[A, Power[Cot[Plus[a, Times[b, x]]], 2]]], Power[Power[Cot[Plus[a, Times[b, x]]], 2], -1]], x], And[FreeQ[List[a, b, A, B, C], x], KnownCotangentIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Times[Power[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]], Pattern[A, Blank[]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Plus[C, Times[A, Power[Tan[Plus[a, Times[b, x]]], 2]]], Power[Power[Tan[Plus[a, Times[b, x]]], 2], -1]], x], And[FreeQ[List[a, b, A, C], x], KnownTangentIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[C, Blank[]]], Power[tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Plus[C, Times[A, Power[Cot[Plus[a, Times[b, x]]], 2]]], Power[Power[Cot[Plus[a, Times[b, x]]], 2], -1]], x], And[FreeQ[List[a, b, A, C], x], KnownCotangentIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Plus[Optional[Pattern[A, Blank[]]], Times[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[C, Blank[]]]], Times[Optional[Pattern[B, Blank[]]], tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Plus[C, Times[A, Tan[Plus[a, Times[b, x]]]], Times[B, Power[Tan[Plus[a, Times[b, x]]], 2]]], Power[Tan[Plus[a, Times[b, x]]], -1]], x], FreeQ[List[a, b, A, B, C], x]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Plus[Times[Optional[Pattern[A, Blank[]]], Power[tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[B, Blank[]]], Power[tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n1, Blank[]]]], Times[Optional[Pattern[C, Blank[]]], Power[tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n2, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Power[Tan[Plus[a, Times[b, x]]], n], Plus[A, Times[B, Tan[Plus[a, Times[b, x]]]], Times[C, Power[Tan[Plus[a, Times[b, x]]], 2]]]], x], And[FreeQ[List[a, b, A, B, C, n], x], ZeroQ[Plus[n1, Times[-1, n], -1]], ZeroQ[Plus[n2, Times[-1, n], -2]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Times[Power[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[A, Blank[]]]], Times[Power[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n1, Blank[]]], Optional[Pattern[B, Blank[]]]], Times[Power[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n2, Blank[]]], Optional[Pattern[C, Blank[]]]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Power[Cot[Plus[a, Times[b, x]]], n], Plus[A, Times[B, Cot[Plus[a, Times[b, x]]]], Times[C, Power[Cot[Plus[a, Times[b, x]]], 2]]]], x], And[FreeQ[List[a, b, A, B, C, n], x], ZeroQ[Plus[n1, Times[-1, n], -1]], ZeroQ[Plus[n2, Times[-1, n], -2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Optional[Pattern[n, Blank[]]]], Pattern[u, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Sin[Plus[a, Times[b, x]]]], m], Power[Times[d, Csc[Plus[a, Times[b, x]]]], m]], Int[Times[ActivateTrig[u], Power[Times[d, Csc[Plus[a, Times[b, x]]]], Plus[n, Times[-1, m]]]], x], x], And[FreeQ[List[a, b, c, d, m, n], x], KnownSecantIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[c, Blank[]]]], Optional[Pattern[m, Blank[]]]], Pattern[u, Blank[]], Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Cos[Plus[a, Times[b, x]]]], m], Power[Times[d, Sec[Plus[a, Times[b, x]]]], m]], Int[Times[ActivateTrig[u], Power[Times[d, Sec[Plus[a, Times[b, x]]]], Plus[n, Times[-1, m]]]], x], x], And[FreeQ[List[a, b, c, d, m, n], x], KnownSecantIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[c, Blank[]]], tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Tan[Plus[a, Times[b, x]]]], m], Power[Times[d, Csc[Plus[a, Times[b, x]]]], m], Power[Power[Times[d, Sec[Plus[a, Times[b, x]]]], m], -1]], Int[Times[ActivateTrig[u], Power[Times[d, Sec[Plus[a, Times[b, x]]]], Plus[m, n]], Power[Power[Times[d, Csc[Plus[a, Times[b, x]]]], m], -1]], x], x], And[FreeQ[List[a, b, c, d, m, n], x], KnownSecantIntegrandQ[u, x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Optional[Pattern[n, Blank[]]]], Pattern[u, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Tan[Plus[a, Times[b, x]]]], m], Power[Times[d, Csc[Plus[a, Times[b, x]]]], m], Power[Power[Times[d, Sec[Plus[a, Times[b, x]]]], m], -1]], Int[Times[ActivateTrig[u], Power[Times[d, Sec[Plus[a, Times[b, x]]]], m], Power[Power[Times[d, Csc[Plus[a, Times[b, x]]]], Plus[m, Times[-1, n]]], -1]], x], x], And[FreeQ[List[a, b, c, d, m, n], x], KnownSecantIntegrandQ[u, x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[c, Blank[]]]], Optional[Pattern[m, Blank[]]]], Pattern[u, Blank[]], Power[Times[Optional[Pattern[d, Blank[]]], sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Cot[Plus[a, Times[b, x]]]], m], Power[Times[d, Sec[Plus[a, Times[b, x]]]], m], Power[Power[Times[d, Csc[Plus[a, Times[b, x]]]], m], -1]], Int[Times[ActivateTrig[u], Power[Times[d, Csc[Plus[a, Times[b, x]]]], m], Power[Power[Times[d, Sec[Plus[a, Times[b, x]]]], Plus[m, Times[-1, n]]], -1]], x], x], And[FreeQ[List[a, b, c, d, m, n], x], KnownSecantIntegrandQ[u, x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[c, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Times[csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[d, Blank[]]]], Optional[Pattern[n, Blank[]]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Cot[Plus[a, Times[b, x]]]], m], Power[Times[d, Sec[Plus[a, Times[b, x]]]], m], Power[Power[Times[d, Csc[Plus[a, Times[b, x]]]], m], -1]], Int[Times[ActivateTrig[u], Power[Times[d, Csc[Plus[a, Times[b, x]]]], Plus[m, n]], Power[Power[Times[d, Sec[Plus[a, Times[b, x]]]], m], -1]], x], x], And[FreeQ[List[a, b, c, d, m, n], x], KnownSecantIntegrandQ[u, x], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Csc[Plus[a, Times[b, x]]]], m], Power[Times[c, Sin[Plus[a, Times[b, x]]]], m]], Int[Times[ActivateTrig[u], Power[Power[Times[c, Csc[Plus[a, Times[b, x]]]], m], -1]], x], x], And[FreeQ[List[a, b, c, m], x], Not[IntegerQ[m]], KnownSecantIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[c, Blank[]]]], Optional[Pattern[m, Blank[]]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Cos[Plus[a, Times[b, x]]]], m], Power[Times[c, Sec[Plus[a, Times[b, x]]]], m]], Int[Times[ActivateTrig[u], Power[Power[Times[c, Sec[Plus[a, Times[b, x]]]], m], -1]], x], x], And[FreeQ[List[a, b, c, m], x], Not[IntegerQ[m]], KnownSecantIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Tan[Plus[a, Times[b, x]]]], m], Power[Times[c, Csc[Plus[a, Times[b, x]]]], m], Power[Power[Times[c, Sec[Plus[a, Times[b, x]]]], m], -1]], Int[Times[ActivateTrig[u], Power[Times[c, Sec[Plus[a, Times[b, x]]]], m], Power[Power[Times[c, Csc[Plus[a, Times[b, x]]]], m], -1]], x], x], And[FreeQ[List[a, b, c, m], x], Not[IntegerQ[m]], KnownSecantIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[c, Blank[]]]], Optional[Pattern[m, Blank[]]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[c, Cot[Plus[a, Times[b, x]]]], m], Power[Times[c, Sec[Plus[a, Times[b, x]]]], m], Power[Power[Times[c, Csc[Plus[a, Times[b, x]]]], m], -1]], Int[Times[ActivateTrig[u], Power[Times[c, Csc[Plus[a, Times[b, x]]]], m], Power[Power[Times[c, Sec[Plus[a, Times[b, x]]]], m], -1]], x], x], And[FreeQ[List[a, b, c, m], x], Not[IntegerQ[m]], KnownSecantIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]], Pattern[u, Blank[]], Power[Times[Optional[Pattern[c, Blank[]]], sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[c, Int[Times[ActivateTrig[u], Power[Times[c, Sec[Plus[a, Times[b, x]]]], Plus[n, -1]], Plus[B, Times[A, Sec[Plus[a, Times[b, x]]]]]], x], x], And[FreeQ[List[a, b, c, A, B, n], x], KnownSecantIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[c, Blank[]]]], Optional[Pattern[n, Blank[]]]], Pattern[u, Blank[]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[c, Int[Times[ActivateTrig[u], Power[Times[c, Csc[Plus[a, Times[b, x]]]], Plus[n, -1]], Plus[B, Times[A, Csc[Plus[a, Times[b, x]]]]]], x], x], And[FreeQ[List[a, b, c, A, B, n], x], KnownSecantIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Plus[B, Times[A, Sec[Plus[a, Times[b, x]]]]], Power[Sec[Plus[a, Times[b, x]]], -1]], x], And[FreeQ[List[a, b, A, B], x], KnownSecantIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Plus[B, Times[A, Csc[Plus[a, Times[b, x]]]]], Power[Csc[Plus[a, Times[b, x]]], -1]], x], And[FreeQ[List[a, b, A, B], x], KnownSecantIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Optional[Pattern[u, Blank[]]], Power[Times[Optional[Pattern[c, Blank[]]], sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, 2], Int[Times[ActivateTrig[u], Power[Times[c, Sec[Plus[a, Times[b, x]]]], Plus[n, -2]], Plus[C, Times[B, Sec[Plus[a, Times[b, x]]]], Times[A, Power[Sec[Plus[a, Times[b, x]]], 2]]]], x], x], And[FreeQ[List[a, b, c, A, B, C, n], x], KnownSecantIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[c, Blank[]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[u, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, 2], Int[Times[ActivateTrig[u], Power[Times[c, Csc[Plus[a, Times[b, x]]]], Plus[n, -2]], Plus[C, Times[B, Csc[Plus[a, Times[b, x]]]], Times[A, Power[Csc[Plus[a, Times[b, x]]], 2]]]], x], x], And[FreeQ[List[a, b, c, A, B, C, n], x], KnownSecantIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Plus[Times[Power[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]], Pattern[A, Blank[]]], Power[Times[Optional[Pattern[c, Blank[]]], sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, 2], Int[Times[ActivateTrig[u], Power[Times[c, Sec[Plus[a, Times[b, x]]]], Plus[n, -2]], Plus[C, Times[A, Power[Sec[Plus[a, Times[b, x]]], 2]]]], x], x], And[FreeQ[List[a, b, c, A, C, n], x], KnownSecantIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[c, Blank[]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[u, Blank[]]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[C, Blank[]]], Power[sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[c, 2], Int[Times[ActivateTrig[u], Power[Times[c, Csc[Plus[a, Times[b, x]]]], Plus[n, -2]], Plus[C, Times[A, Power[Csc[Plus[a, Times[b, x]]], 2]]]], x], x], And[FreeQ[List[a, b, c, A, C, n], x], KnownSecantIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Times[Power[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Plus[C, Times[B, Sec[Plus[a, Times[b, x]]]], Times[A, Power[Sec[Plus[a, Times[b, x]]], 2]]], Power[Power[Sec[Plus[a, Times[b, x]]], 2], -1]], x], And[FreeQ[List[a, b, A, B, C], x], KnownSecantIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Times[Optional[Pattern[C, Blank[]]], Power[sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Plus[C, Times[B, Csc[Plus[a, Times[b, x]]]], Times[A, Power[Csc[Plus[a, Times[b, x]]], 2]]], Power[Power[Csc[Plus[a, Times[b, x]]], 2], -1]], x], And[FreeQ[List[a, b, A, B, C], x], KnownSecantIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Times[Power[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[C, Blank[]]]], Pattern[A, Blank[]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Plus[C, Times[A, Power[Sec[Plus[a, Times[b, x]]], 2]]], Power[Power[Sec[Plus[a, Times[b, x]]], 2], -1]], x], And[FreeQ[List[a, b, A, C], x], KnownSecantIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[C, Blank[]]], Power[sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Plus[C, Times[A, Power[Csc[Plus[a, Times[b, x]]], 2]]], Power[Power[Csc[Plus[a, Times[b, x]]], 2], -1]], x], And[FreeQ[List[a, b, A, C], x], KnownSecantIntegrandQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Plus[Times[Optional[Pattern[A, Blank[]]], Power[sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[B, Blank[]]], Power[sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n1, Blank[]]]], Times[Optional[Pattern[C, Blank[]]], Power[sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n2, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Power[Sec[Plus[a, Times[b, x]]], n], Plus[A, Times[B, Sec[Plus[a, Times[b, x]]]], Times[C, Power[Sec[Plus[a, Times[b, x]]], 2]]]], x], And[FreeQ[List[a, b, A, B, C, n], x], ZeroQ[Plus[n1, Times[-1, n], -1]], ZeroQ[Plus[n2, Times[-1, n], -2]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Times[Power[csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[A, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n1, Blank[]]], Optional[Pattern[B, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n2, Blank[]]], Optional[Pattern[C, Blank[]]]]], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Power[Csc[Plus[a, Times[b, x]]], n], Plus[A, Times[B, Csc[Plus[a, Times[b, x]]]], Times[C, Power[Csc[Plus[a, Times[b, x]]], 2]]]], x], And[FreeQ[List[a, b, A, B, C, n], x], ZeroQ[Plus[n1, Times[-1, n], -1]], ZeroQ[Plus[n2, Times[-1, n], -2]]]]], RuleDelayed[HoldPattern[Int[Times[sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Sin[Plus[a, Times[-1, c], Times[Plus[b, Times[-1, d]], x]]], Power[Times[2, Plus[b, Times[-1, d]]], -1]], x], Times[-1, Simp[Times[Sin[Plus[a, c, Times[Plus[b, d], x]]], Power[Times[2, Plus[b, d]], -1]], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[b, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], cos[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Sin[Plus[a, Times[-1, c], Times[Plus[b, Times[-1, d]], x]]], Power[Times[2, Plus[b, Times[-1, d]]], -1]], x], Simp[Times[Sin[Plus[a, c, Times[Plus[b, d], x]]], Power[Times[2, Plus[b, d]], -1]], x]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[b, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[cos[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Cos[Plus[a, Times[-1, c], Times[Plus[b, Times[-1, d]], x]]], Power[Times[2, Plus[b, Times[-1, d]]], -1]], x]], Times[-1, Simp[Times[Cos[Plus[a, c, Times[Plus[b, d], x]]], Power[Times[2, Plus[b, d]], -1]], x]]], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[Power[b, 2], Times[-1, Power[d, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Power[Times[g, Sin[Plus[c, Times[d, x]]]], p], x], x], Dist[Times[1, Power[2, -1]], Int[Times[Cos[Plus[c, Times[d, x]]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p]], x], x]], And[FreeQ[List[a, b, c, d, g], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], PositiveIntegerQ[Times[p, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Power[Times[g, Sin[Plus[c, Times[d, x]]]], p], x], x], Times[-1, Dist[Times[1, Power[2, -1]], Int[Times[Cos[Plus[c, Times[d, x]]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p]], x], x]]], And[FreeQ[List[a, b, c, d, g], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], PositiveIntegerQ[Times[p, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[2, p], Power[Power[e, p], -1]], Int[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, p]], Power[Sin[Plus[a, Times[b, x]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, m], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[2, p], Power[Power[f, p], -1]], Int[Times[Power[Cos[Plus[a, Times[b, x]]], p], Power[Times[f, Sin[Plus[a, Times[b, x]]]], Plus[n, p]]], x], x], And[FreeQ[List[a, b, c, d, f, n], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[e, 2], Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, -2]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 1]], Power[Times[2, b, g, Plus[p, 1]], -1]], x], And[FreeQ[List[a, b, c, d, e, g, m, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], ZeroQ[Plus[m, p, -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Power[e, 2], Power[Times[e, Sin[Plus[a, Times[b, x]]]], Plus[m, -2]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 1]], Power[Times[2, b, g, Plus[p, 1]], -1]], x]], And[FreeQ[List[a, b, c, d, e, g, m, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], ZeroQ[Plus[m, p, -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], m], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 1]], Power[Times[b, g, m], -1]], x]], And[FreeQ[List[a, b, c, d, e, g, m, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], ZeroQ[Plus[m, Times[2, p], 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Times[e, Sin[Plus[a, Times[b, x]]]], m], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 1]], Power[Times[b, g, m], -1]], x], And[FreeQ[List[a, b, c, d, e, g, m, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], ZeroQ[Plus[m, Times[2, p], 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[e, 2], Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, -2]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 1]], Power[Times[2, b, g, Plus[p, 1]], -1]], x], Dist[Times[Power[e, 4], Plus[m, p, -1], Power[Times[4, Power[g, 2], Plus[p, 1]], -1]], Int[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, -4]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 2]]], x], x]], And[FreeQ[List[a, b, c, d, e, g], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[m, p], Greater[m, 2], Less[p, -1], Or[Greater[m, 3], Equal[p, Times[-3, Power[2, -1]]]], IntegersQ[Times[2, m], Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[e, 2], Power[Times[e, Sin[Plus[a, Times[b, x]]]], Plus[m, -2]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 1]], Power[Times[2, b, g, Plus[p, 1]], -1]], x]], Dist[Times[Power[e, 4], Plus[m, p, -1], Power[Times[4, Power[g, 2], Plus[p, 1]], -1]], Int[Times[Power[Times[e, Sin[Plus[a, Times[b, x]]]], Plus[m, -4]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 2]]], x], x]], And[FreeQ[List[a, b, c, d, e, g], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[m, p], Greater[m, 2], Less[p, -1], Or[Greater[m, 3], Equal[p, Times[-3, Power[2, -1]]]], IntegersQ[Times[2, m], Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], m], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 1]], Power[Times[2, b, g, Plus[p, 1]], -1]], x], Dist[Times[Power[e, 2], Plus[m, Times[2, p], 2], Power[Times[4, Power[g, 2], Plus[p, 1]], -1]], Int[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, -2]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 2]]], x], x]], And[FreeQ[List[a, b, c, d, e, g], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[m, p], Greater[m, 1], Less[p, -1], NonzeroQ[Plus[m, Times[2, p], 2]], Or[Less[p, -2], Equal[m, 2]], IntegersQ[Times[2, m], Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[e, Sin[Plus[a, Times[b, x]]]], m], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 1]], Power[Times[2, b, g, Plus[p, 1]], -1]], x]], Dist[Times[Power[e, 2], Plus[m, Times[2, p], 2], Power[Times[4, Power[g, 2], Plus[p, 1]], -1]], Int[Times[Power[Times[e, Sin[Plus[a, Times[b, x]]]], Plus[m, -2]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 2]]], x], x]], And[FreeQ[List[a, b, c, d, e, g], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[m, p], Greater[m, 1], Less[p, -1], NonzeroQ[Plus[m, Times[2, p], 2]], Or[Less[p, -2], Equal[m, 2]], IntegersQ[Times[2, m], Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[e, 2], Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, -2]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 1]], Power[Times[2, b, g, Plus[m, Times[2, p]]], -1]], x], Dist[Times[Power[e, 2], Plus[m, p, -1], Power[Plus[m, Times[2, p]], -1]], Int[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, -2]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, g, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[m], Greater[m, 1], NonzeroQ[Plus[m, Times[2, p]]], IntegersQ[Times[2, m], Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[e, 2], Power[Times[e, Sin[Plus[a, Times[b, x]]]], Plus[m, -2]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 1]], Power[Times[2, b, g, Plus[m, Times[2, p]]], -1]], x]], Dist[Times[Power[e, 2], Plus[m, p, -1], Power[Plus[m, Times[2, p]], -1]], Int[Times[Power[Times[e, Sin[Plus[a, Times[b, x]]]], Plus[m, -2]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, g, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[m], Greater[m, 1], NonzeroQ[Plus[m, Times[2, p]]], IntegersQ[Times[2, m], Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], m], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 1]], Power[Times[2, b, g, Plus[m, p, 1]], -1]], x]], Dist[Times[Plus[m, Times[2, p], 2], Power[Times[Power[e, 2], Plus[m, p, 1]], -1]], Int[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, 2]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, g, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[m], Less[m, -1], NonzeroQ[Plus[m, Times[2, p], 2]], NonzeroQ[Plus[m, p, 1]], IntegersQ[Times[2, m], Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[e, Sin[Plus[a, Times[b, x]]]], m], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 1]], Power[Times[2, b, g, Plus[m, p, 1]], -1]], x], Dist[Times[Plus[m, Times[2, p], 2], Power[Times[Power[e, 2], Plus[m, p, 1]], -1]], Int[Times[Power[Times[e, Sin[Plus[a, Times[b, x]]]], Plus[m, 2]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, g, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[m], Less[m, -1], NonzeroQ[Plus[m, Times[2, p], 2]], NonzeroQ[Plus[m, p, 1]], IntegersQ[Times[2, m], Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, Sin[Plus[a, Times[b, x]]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p], Power[Times[d, Plus[Times[2, p], 1]], -1]], x], Dist[Times[2, p, g, Power[Plus[Times[2, p], 1], -1]], Int[Times[Sin[Plus[a, Times[b, x]]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, d, g], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[p], Greater[p, 0], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, Cos[Plus[a, Times[b, x]]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p], Power[Times[d, Plus[Times[2, p], 1]], -1]], x], Dist[Times[2, p, g, Power[Plus[Times[2, p], 1], -1]], Int[Times[Cos[Plus[a, Times[b, x]]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, d, g], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[p], Greater[p, 0], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Cos[Plus[a, Times[b, x]]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 1]], Power[Times[2, b, g, Plus[p, 1]], -1]], x], Dist[Times[Plus[Times[2, p], 3], Power[Times[2, g, Plus[p, 1]], -1]], Int[Times[Sin[Plus[a, Times[b, x]]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, d, g], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[p], Less[p, -1], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Sin[Plus[a, Times[b, x]]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 1]], Power[Times[2, b, g, Plus[p, 1]], -1]], x]], Dist[Times[Plus[Times[2, p], 3], Power[Times[2, g, Plus[p, 1]], -1]], Int[Times[Cos[Plus[a, Times[b, x]]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, d, g], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[p], Less[p, -1], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[ArcSin[Plus[Cos[Plus[a, Times[b, x]]], Times[-1, Sin[Plus[a, Times[b, x]]]]]], Power[d, -1]], x]], Simp[Times[Log[Plus[Cos[Plus[a, Times[b, x]]], Sin[Plus[a, Times[b, x]]], Sqrt[Sin[Plus[c, Times[d, x]]]]]], Power[d, -1]], x]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]]]]], RuleDelayed[HoldPattern[Int[Times[sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[ArcSin[Plus[Cos[Plus[a, Times[b, x]]], Times[-1, Sin[Plus[a, Times[b, x]]]]]], Power[d, -1]], x]], Times[-1, Simp[Times[Log[Plus[Cos[Plus[a, Times[b, x]]], Sin[Plus[a, Times[b, x]]], Sqrt[Sin[Plus[c, Times[d, x]]]]]], Power[d, -1]], x]]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], -1], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, g], Int[Times[Sin[Plus[a, Times[b, x]]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, -1]]], x], x], And[FreeQ[List[a, b, c, d, g, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], -1], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, g], Int[Times[Cos[Plus[a, Times[b, x]]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, -1]]], x], x], And[FreeQ[List[a, b, c, d, g, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[g, Sin[Plus[c, Times[d, x]]]], p], Power[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], p], Power[Sin[Plus[a, Times[b, x]]], p]], -1]], Int[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, p]], Power[Sin[Plus[a, Times[b, x]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, g, m, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[f, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[g, Sin[Plus[c, Times[d, x]]]], p], Power[Times[Power[Cos[Plus[a, Times[b, x]]], p], Power[Times[f, Sin[Plus[a, Times[b, x]]]], p]], -1]], Int[Times[Power[Cos[Plus[a, Times[b, x]]], p], Power[Times[f, Sin[Plus[a, Times[b, x]]]], Plus[n, p]]], x], x], And[FreeQ[List[a, b, c, d, f, g, n, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[4, -1]], Int[Power[Times[g, Sin[Plus[c, Times[d, x]]]], p], x], x], Times[-1, Dist[Times[1, Power[4, -1]], Int[Times[Power[Cos[Plus[c, Times[d, x]]], 2], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p]], x], x]]], And[FreeQ[List[a, b, c, d, g], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], PositiveIntegerQ[Times[p, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[2, p], Power[Times[Power[e, p], Power[f, p]], -1]], Int[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, p]], Power[Times[f, Sin[Plus[a, Times[b, x]]]], Plus[n, p]]], x], x], And[FreeQ[List[a, b, c, d, e, f, m, n], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[e, Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, -1]], Power[Times[f, Sin[Plus[a, Times[b, x]]]], Plus[n, 1]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p], Power[Times[b, f, Plus[n, p, 1]], -1]], x], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], ZeroQ[Plus[m, p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[f, Blank[]]]], Pattern[n, Blank[]]], Power[Times[Optional[Pattern[e, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[e, Power[Times[e, Sin[Plus[a, Times[b, x]]]], Plus[m, -1]], Power[Times[f, Cos[Plus[a, Times[b, x]]]], Plus[n, 1]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p], Power[Times[b, f, Plus[n, p, 1]], -1]], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], ZeroQ[Plus[m, p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, 1]], Power[Times[f, Sin[Plus[a, Times[b, x]]]], Plus[n, 1]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p], Power[Times[b, e, f, Plus[m, p, 1]], -1]], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], ZeroQ[Plus[m, n, Times[2, p], 2]], NonzeroQ[Plus[m, p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[f, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[e, 2], Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, -2]], Power[Times[f, Sin[Plus[a, Times[b, x]]]], n], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 1]], Power[Times[2, b, g, Plus[n, p, 1]], -1]], x], Dist[Times[Power[e, 4], Plus[m, p, -1], Power[Times[4, Power[g, 2], Plus[n, p, 1]], -1]], Int[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, -4]], Power[Times[f, Sin[Plus[a, Times[b, x]]]], n], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 2]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, n], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[m, p], Greater[m, 3], Less[p, -1], NonzeroQ[Plus[n, p, 1]], IntegersQ[Times[2, m], Times[2, n], Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[f, Blank[]]]], Pattern[n, Blank[]]], Power[Times[Optional[Pattern[e, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[e, 2], Power[Times[e, Sin[Plus[a, Times[b, x]]]], Plus[m, -2]], Power[Times[f, Cos[Plus[a, Times[b, x]]]], n], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 1]], Power[Times[2, b, g, Plus[n, p, 1]], -1]], x]], Dist[Times[Power[e, 4], Plus[m, p, -1], Power[Times[4, Power[g, 2], Plus[n, p, 1]], -1]], Int[Times[Power[Times[e, Sin[Plus[a, Times[b, x]]]], Plus[m, -4]], Power[Times[f, Cos[Plus[a, Times[b, x]]]], n], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 2]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, n], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[m, p], Greater[m, 3], Less[p, -1], NonzeroQ[Plus[n, p, 1]], IntegersQ[Times[2, m], Times[2, n], Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[f, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], m], Power[Times[f, Sin[Plus[a, Times[b, x]]]], n], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 1]], Power[Times[2, b, g, Plus[n, p, 1]], -1]], x], Dist[Times[Power[e, 2], Plus[m, n, Times[2, p], 2], Power[Times[4, Power[g, 2], Plus[n, p, 1]], -1]], Int[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, -2]], Power[Times[f, Sin[Plus[a, Times[b, x]]]], n], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 2]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, n], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[m, p], Greater[m, 1], Less[p, -1], NonzeroQ[Plus[m, n, Times[2, p], 2]], NonzeroQ[Plus[n, p, 1]], IntegersQ[Times[2, m], Times[2, n], Times[2, p]], Or[Less[p, -2], Equal[m, 2], Equal[m, 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[f, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[e, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[e, Sin[Plus[a, Times[b, x]]]], m], Power[Times[f, Cos[Plus[a, Times[b, x]]]], n], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 1]], Power[Times[2, b, g, Plus[n, p, 1]], -1]], x]], Dist[Times[Power[e, 2], Plus[m, n, Times[2, p], 2], Power[Times[4, Power[g, 2], Plus[n, p, 1]], -1]], Int[Times[Power[Times[e, Sin[Plus[a, Times[b, x]]]], Plus[m, -2]], Power[Times[f, Cos[Plus[a, Times[b, x]]]], n], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 2]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, n], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[m, p], Greater[m, 1], Less[p, -1], NonzeroQ[Plus[m, n, Times[2, p], 2]], NonzeroQ[Plus[n, p, 1]], IntegersQ[Times[2, m], Times[2, n], Times[2, p]], Or[Less[p, -2], Equal[m, 2], Equal[m, 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[f, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, -1]], Power[Times[f, Sin[Plus[a, Times[b, x]]]], Plus[n, 1]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p], Power[Times[b, f, Plus[n, p, 1]], -1]], x], Dist[Times[Power[e, 2], Plus[m, p, -1], Power[Times[Power[f, 2], Plus[n, p, 1]], -1]], Int[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, -2]], Power[Times[f, Sin[Plus[a, Times[b, x]]]], Plus[n, 2]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[m, n], Greater[m, 1], Less[n, -1], NonzeroQ[Plus[n, p, 1]], IntegersQ[Times[2, m], Times[2, n], Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[f, Blank[]]]], Pattern[n, Blank[]]], Power[Times[Optional[Pattern[e, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[e, Power[Times[e, Sin[Plus[a, Times[b, x]]]], Plus[m, -1]], Power[Times[f, Cos[Plus[a, Times[b, x]]]], Plus[n, 1]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p], Power[Times[b, f, Plus[n, p, 1]], -1]], x]], Dist[Times[Power[e, 2], Plus[m, p, -1], Power[Times[Power[f, 2], Plus[n, p, 1]], -1]], Int[Times[Power[Times[e, Sin[Plus[a, Times[b, x]]]], Plus[m, -2]], Power[Times[f, Cos[Plus[a, Times[b, x]]]], Plus[n, 2]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[m, n], Greater[m, 1], Less[n, -1], NonzeroQ[Plus[n, p, 1]], IntegersQ[Times[2, m], Times[2, n], Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[f, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, -1]], Power[Times[f, Sin[Plus[a, Times[b, x]]]], Plus[n, 1]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p], Power[Times[b, f, Plus[m, n, Times[2, p]]], -1]], x], Dist[Times[Power[e, 2], Plus[m, p, -1], Power[Plus[m, n, Times[2, p]], -1]], Int[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, -2]], Power[Times[f, Sin[Plus[a, Times[b, x]]]], n], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, n, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[m], Greater[m, 1], NonzeroQ[Plus[m, n, Times[2, p]]], IntegersQ[Times[2, m], Times[2, n], Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[f, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[e, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[e, Power[Times[e, Sin[Plus[a, Times[b, x]]]], Plus[m, -1]], Power[Times[f, Cos[Plus[a, Times[b, x]]]], Plus[n, 1]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p], Power[Times[b, f, Plus[m, n, Times[2, p]]], -1]], x]], Dist[Times[Power[e, 2], Plus[m, p, -1], Power[Plus[m, n, Times[2, p]], -1]], Int[Times[Power[Times[e, Sin[Plus[a, Times[b, x]]]], Plus[m, -2]], Power[Times[f, Cos[Plus[a, Times[b, x]]]], n], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, n, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[m], Greater[m, 1], NonzeroQ[Plus[m, n, Times[2, p]]], IntegersQ[Times[2, m], Times[2, n], Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[f, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[f, Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, 1]], Power[Times[f, Sin[Plus[a, Times[b, x]]]], Plus[n, -1]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p], Power[Times[b, e, Plus[m, n, Times[2, p]]], -1]], x]], Dist[Times[2, f, g, Plus[n, p, -1], Power[Times[e, Plus[m, n, Times[2, p]]], -1]], Int[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, 1]], Power[Times[f, Sin[Plus[a, Times[b, x]]]], Plus[n, -1]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[m, n, p], Less[m, -1], Greater[n, 0], Greater[p, 0], NonzeroQ[Plus[m, n, Times[2, p]]], IntegersQ[Times[2, m], Times[2, n], Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[f, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[e, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[f, Power[Times[e, Sin[Plus[a, Times[b, x]]]], Plus[m, 1]], Power[Times[f, Cos[Plus[a, Times[b, x]]]], Plus[n, -1]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p], Power[Times[b, e, Plus[m, n, Times[2, p]]], -1]], x], Dist[Times[2, f, g, Plus[n, p, -1], Power[Times[e, Plus[m, n, Times[2, p]]], -1]], Int[Times[Power[Times[e, Sin[Plus[a, Times[b, x]]]], Plus[m, 1]], Power[Times[f, Cos[Plus[a, Times[b, x]]]], Plus[n, -1]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[m, n, p], Less[m, -1], Greater[n, 0], Greater[p, 0], NonzeroQ[Plus[m, n, Times[2, p]]], IntegersQ[Times[2, m], Times[2, n], Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[f, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, 1]], Power[Times[f, Sin[Plus[a, Times[b, x]]]], Plus[n, 1]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p], Power[Times[b, e, f, Plus[m, p, 1]], -1]], x]], Dist[Times[f, Plus[m, n, Times[2, p], 2], Power[Times[2, e, g, Plus[m, p, 1]], -1]], Int[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, 1]], Power[Times[f, Sin[Plus[a, Times[b, x]]]], Plus[n, -1]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[m, n, p], Less[m, -1], Greater[n, 0], Less[p, -1], NonzeroQ[Plus[m, n, Times[2, p], 2]], NonzeroQ[Plus[m, p, 1]], IntegersQ[Times[2, m], Times[2, n], Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[f, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[e, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[e, Sin[Plus[a, Times[b, x]]]], Plus[m, 1]], Power[Times[f, Cos[Plus[a, Times[b, x]]]], Plus[n, 1]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p], Power[Times[b, e, f, Plus[m, p, 1]], -1]], x], Dist[Times[f, Plus[m, n, Times[2, p], 2], Power[Times[2, e, g, Plus[m, p, 1]], -1]], Int[Times[Power[Times[e, Sin[Plus[a, Times[b, x]]]], Plus[m, 1]], Power[Times[f, Cos[Plus[a, Times[b, x]]]], Plus[n, -1]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[m, n, p], Less[m, -1], Greater[n, 0], Less[p, -1], NonzeroQ[Plus[m, n, Times[2, p], 2]], NonzeroQ[Plus[m, p, 1]], IntegersQ[Times[2, m], Times[2, n], Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[f, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, 1]], Power[Times[f, Sin[Plus[a, Times[b, x]]]], Plus[n, 1]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p], Power[Times[b, e, f, Plus[m, p, 1]], -1]], x]], Dist[Times[Plus[m, n, Times[2, p], 2], Power[Times[Power[e, 2], Plus[m, p, 1]], -1]], Int[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, 2]], Power[Times[f, Sin[Plus[a, Times[b, x]]]], n], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, n, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[m], Less[m, -1], NonzeroQ[Plus[m, n, Times[2, p], 2]], NonzeroQ[Plus[m, p, 1]], IntegersQ[Times[2, m], Times[2, n], Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[f, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[e, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[m, Blank[]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Times[e, Sin[Plus[a, Times[b, x]]]], Plus[m, 1]], Power[Times[f, Cos[Plus[a, Times[b, x]]]], Plus[n, 1]], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p], Power[Times[b, e, f, Plus[m, p, 1]], -1]], x], Dist[Times[Plus[m, n, Times[2, p], 2], Power[Times[Power[e, 2], Plus[m, p, 1]], -1]], Int[Times[Power[Times[e, Sin[Plus[a, Times[b, x]]]], Plus[m, 2]], Power[Times[f, Cos[Plus[a, Times[b, x]]]], n], Power[Times[g, Sin[Plus[c, Times[d, x]]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, n, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]], RationalQ[m], Less[m, -1], NonzeroQ[Plus[m, n, Times[2, p], 2]], NonzeroQ[Plus[m, p, 1]], IntegersQ[Times[2, m], Times[2, n], Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Times[Optional[Pattern[f, Blank[]]], sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]], Power[Times[Optional[Pattern[g, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[g, Sin[Plus[c, Times[d, x]]]], p], Power[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], p], Power[Times[f, Sin[Plus[a, Times[b, x]]]], p]], -1]], Int[Times[Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, p]], Power[Times[f, Sin[Plus[a, Times[b, x]]]], Plus[n, p]]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], -2]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[e, Blank[]]]], Optional[Pattern[m, Blank[]]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Plus[m, 2], Power[Times[e, Cos[Plus[a, Times[b, x]]]], Plus[m, 1]], Cos[Times[Plus[m, 1], Plus[a, Times[b, x]]]], Power[Times[d, e, Plus[m, 1]], -1]], x]], And[FreeQ[List[a, b, c, d, e, m], x], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], ZeroQ[Plus[Times[d, Power[b, -1]], Times[-1, Abs[Plus[m, 2]]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]][Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Expand[Power[Plus[a, Times[b, Power[F[Plus[c, Times[d, x]]], n]]], p], x], x], And[FreeQ[List[a, b, c, d], x], InertTrigQ[F], IntegerQ[n], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]][Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, Power[Times[a, n], -1]], Sum[Int[Times[1, Power[Plus[1, Times[-1, Power[F[Plus[c, Times[d, x]]], 2], Power[Times[Power[-1, Times[4, k, Power[n, -1]]], Rt[Times[-1, a, Power[b, -1]], Times[n, Power[2, -1]]]], -1]]], -1]], x], List[k, 1, Times[n, Power[2, -1]]]], x], And[FreeQ[List[a, b, c, d], x], InertTrigQ[F], EvenQ[n], Greater[n, 2]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]][Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrig[Times[1, Power[Plus[a, Times[b, Power[F[Plus[c, Times[d, x]]], n]]], -1]], x], x], And[FreeQ[List[a, b, c, d], x], InertTrigQ[F], OddQ[n], Greater[n, 2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]][Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]]], -1], Power[Pattern[G, Blank[]][Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrig[Power[G[Plus[c, Times[d, x]]], m], Times[1, Power[Plus[a, Times[b, Power[F[Plus[c, Times[d, x]]], n]]], -1]], x], x], And[FreeQ[List[a, b, c, d, m], x], InertTrigQ[F, G], IntegerQ[n], Greater[n, 2]]]], RuleDelayed[HoldPattern[Int[Power[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[F, Blank[]][Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[n, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[v, ActivateTrig[F[Plus[c, Times[d, x]]]]]], Dist[Times[Power[a, IntPart[n]], Power[Times[v, Power[NonfreeFactors[v, x], -1]], Times[p, IntPart[n]]], Power[Times[a, Power[v, p]], FracPart[n]], Power[Power[NonfreeFactors[v, x], Times[p, FracPart[n]]], -1]], Int[Power[NonfreeFactors[v, x], Times[n, p]], x], x]], And[FreeQ[List[a, c, d, n, p], x], InertTrigQ[F], Not[IntegerQ[n]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Power[Times[Optional[Pattern[a, Blank[]]], Power[Times[Optional[Pattern[b, Blank[]]], Pattern[F, Blank[]][Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[v, ActivateTrig[F[Plus[c, Times[d, x]]]]]], Dist[Times[Power[a, IntPart[n]], Power[Times[a, Power[Times[b, v], p]], FracPart[n]], Power[Power[Times[b, v], Times[p, FracPart[n]]], -1]], Int[Power[Times[b, v], Times[n, p]], x], x]], And[FreeQ[List[a, b, c, d, n, p], x], InertTrigQ[F], Not[IntegerQ[n]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Pattern[F, Blank[]][Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[d, FreeFactors[Sin[Times[c, Plus[a, Times[b, x]]]], x]]], Condition[Dist[Times[d, Power[Times[b, c], -1]], Subst[Int[SubstFor[1, Times[Sin[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x], x], x, Times[Sin[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]]], x], FunctionOfQ[Times[Sin[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x, True]]], And[FreeQ[List[a, b, c], x], Or[SameQ[F, Cos], SameQ[F, cos]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Pattern[F, Blank[]][Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[d, FreeFactors[Cos[Times[c, Plus[a, Times[b, x]]]], x]]], Condition[Times[-1, Dist[Times[d, Power[Times[b, c], -1]], Subst[Int[SubstFor[1, Times[Cos[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x], x], x, Times[Cos[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]]], x]], FunctionOfQ[Times[Cos[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x, True]]], And[FreeQ[List[a, b, c], x], Or[SameQ[F, Sin], SameQ[F, sin]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Pattern[F, Blank[]][Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[d, FreeFactors[Sin[Times[c, Plus[a, Times[b, x]]]], x]]], Condition[Dist[Times[1, Power[Times[b, c], -1]], Subst[Int[SubstFor[Times[1, Power[x, -1]], Times[Sin[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x], x], x, Times[Sin[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]]], x], FunctionOfQ[Times[Sin[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x, True]]], And[FreeQ[List[a, b, c], x], Or[SameQ[F, Cot], SameQ[F, cot]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Pattern[F, Blank[]][Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[d, FreeFactors[Cos[Times[c, Plus[a, Times[b, x]]]], x]]], Condition[Times[-1, Dist[Power[Times[b, c], -1], Subst[Int[SubstFor[Times[1, Power[x, -1]], Times[Cos[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x], x], x, Times[Cos[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]]], x]], FunctionOfQ[Times[Cos[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x, True]]], And[FreeQ[List[a, b, c], x], Or[SameQ[F, Tan], SameQ[F, tan]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Pattern[F, Blank[]][Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], 2]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[d, FreeFactors[Tan[Times[c, Plus[a, Times[b, x]]]], x]]], Condition[Dist[Times[d, Power[Times[b, c], -1]], Subst[Int[SubstFor[1, Times[Tan[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x], x], x, Times[Tan[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]]], x], FunctionOfQ[Times[Tan[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x, True]]], And[FreeQ[List[a, b, c], x], NonsumQ[u], Or[SameQ[F, Sec], SameQ[F, sec]]]]], RuleDelayed[HoldPattern[Int[Times[Power[cos[Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], -2], Pattern[u, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[d, FreeFactors[Tan[Times[c, Plus[a, Times[b, x]]]], x]]], Condition[Dist[Times[d, Power[Times[b, c], -1]], Subst[Int[SubstFor[1, Times[Tan[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x], x], x, Times[Tan[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]]], x], FunctionOfQ[Times[Tan[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x, True]]], And[FreeQ[List[a, b, c], x], NonsumQ[u]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Pattern[F, Blank[]][Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], 2]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[d, FreeFactors[Cot[Times[c, Plus[a, Times[b, x]]]], x]]], Condition[Times[-1, Dist[Times[d, Power[Times[b, c], -1]], Subst[Int[SubstFor[1, Times[Cot[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x], x], x, Times[Cot[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]]], x]], FunctionOfQ[Times[Cot[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x, True]]], And[FreeQ[List[a, b, c], x], NonsumQ[u], Or[SameQ[F, Csc], SameQ[F, csc]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[sin[Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], -2]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[d, FreeFactors[Cot[Times[c, Plus[a, Times[b, x]]]], x]]], Condition[Times[-1, Dist[Times[d, Power[Times[b, c], -1]], Subst[Int[SubstFor[1, Times[Cot[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x], x], x, Times[Cot[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]]], x]], FunctionOfQ[Times[Cot[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x, True]]], And[FreeQ[List[a, b, c], x], NonsumQ[u]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Pattern[F, Blank[]][Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[d, FreeFactors[Tan[Times[c, Plus[a, Times[b, x]]]], x]]], Condition[Dist[Times[1, Power[Times[b, c, Power[d, Plus[n, -1]]], -1]], Subst[Int[SubstFor[Times[1, Power[Times[Power[x, n], Plus[1, Times[Power[d, 2], Power[x, 2]]]], -1]], Times[Tan[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x], x], x, Times[Tan[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]]], x], And[FunctionOfQ[Times[Tan[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x, True], TryPureTanSubst[Times[ActivateTrig[u], Power[Cot[Times[c, Plus[a, Times[b, x]]]], n]], x]]]], And[FreeQ[List[a, b, c], x], IntegerQ[n], Or[SameQ[F, Cot], SameQ[F, cot]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Pattern[F, Blank[]][Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[d, FreeFactors[Cot[Times[c, Plus[a, Times[b, x]]]], x]]], Condition[Times[-1, Dist[Power[Times[b, c, Power[d, Plus[n, -1]]], -1], Subst[Int[SubstFor[Times[1, Power[Times[Power[x, n], Plus[1, Times[Power[d, 2], Power[x, 2]]]], -1]], Times[Cot[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x], x], x, Times[Cot[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]]], x]], And[FunctionOfQ[Times[Cot[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x, True], TryPureTanSubst[Times[ActivateTrig[u], Power[Tan[Times[c, Plus[a, Times[b, x]]]], n]], x]]]], And[FreeQ[List[a, b, c], x], IntegerQ[n], Or[SameQ[F, Tan], SameQ[F, tan]]]]], RuleDelayed[HoldPattern[Int[Pattern[u, Blank[]], Pattern[x, Blank[Symbol]]]], With[List[Set[v, FunctionOfTrig[u, x]]], Condition[Simp[With[List[Set[d, FreeFactors[Cot[v], x]]], Dist[Times[-1, d, Power[Coefficient[v, x, 1], -1]], Subst[Int[SubstFor[Times[1, Power[Plus[1, Times[Power[d, 2], Power[x, 2]]], -1]], Times[Cot[v], Power[d, -1]], u, x], x], x, Times[Cot[v], Power[d, -1]]], x]], x], And[Not[FalseQ[v]], FunctionOfQ[NonfreeFactors[Cot[v], x], u, x, True], TryPureTanSubst[ActivateTrig[u], x]]]]], RuleDelayed[HoldPattern[Int[Pattern[u, Blank[]], Pattern[x, Blank[Symbol]]]], With[List[Set[v, FunctionOfTrig[u, x]]], Condition[Simp[With[List[Set[d, FreeFactors[Tan[v], x]]], Dist[Times[d, Power[Coefficient[v, x, 1], -1]], Subst[Int[SubstFor[Times[1, Power[Plus[1, Times[Power[d, 2], Power[x, 2]]], -1]], Times[Tan[v], Power[d, -1]], u, x], x], x, Times[Tan[v], Power[d, -1]]], x]], x], And[Not[FalseQ[v]], FunctionOfQ[NonfreeFactors[Tan[v], x], u, x, True], TryPureTanSubst[ActivateTrig[u], x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]][Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[G, Blank[]][Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[ActivateTrig[Times[Power[F[Plus[a, Times[b, x]]], p], Power[G[Plus[c, Times[d, x]]], q]]], x], x], And[FreeQ[List[a, b, c, d], x], Or[SameQ[F, sin], SameQ[F, cos]], Or[SameQ[G, sin], SameQ[G, cos]], PositiveIntegerQ[p, q]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]][Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[G, Blank[]][Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Pattern[H, Blank[]][Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[r, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[ActivateTrig[Times[Power[F[Plus[a, Times[b, x]]], p], Power[G[Plus[c, Times[d, x]]], q], Power[H[Plus[e, Times[f, x]]], r]]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], Or[SameQ[F, sin], SameQ[F, cos]], Or[SameQ[G, sin], SameQ[G, cos]], Or[SameQ[H, sin], SameQ[H, cos]], PositiveIntegerQ[p, q, r]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Pattern[F, Blank[]][Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[d, FreeFactors[Sin[Times[c, Plus[a, Times[b, x]]]], x]]], Condition[Dist[Times[d, Power[Times[b, c], -1]], Subst[Int[SubstFor[1, Times[Sin[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x], x], x, Times[Sin[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]]], x], FunctionOfQ[Times[Sin[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x]]], And[FreeQ[List[a, b, c], x], Or[SameQ[F, Cos], SameQ[F, cos]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Pattern[F, Blank[]][Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[d, FreeFactors[Cos[Times[c, Plus[a, Times[b, x]]]], x]]], Condition[Times[-1, Dist[Times[d, Power[Times[b, c], -1]], Subst[Int[SubstFor[1, Times[Cos[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x], x], x, Times[Cos[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]]], x]], FunctionOfQ[Times[Cos[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x]]], And[FreeQ[List[a, b, c], x], Or[SameQ[F, Sin], SameQ[F, sin]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Pattern[F, Blank[]][Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[d, FreeFactors[Sin[Times[c, Plus[a, Times[b, x]]]], x]]], Condition[Dist[Times[1, Power[Times[b, c], -1]], Subst[Int[SubstFor[Times[1, Power[x, -1]], Times[Sin[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x], x], x, Times[Sin[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]]], x], FunctionOfQ[Times[Sin[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x]]], And[FreeQ[List[a, b, c], x], Or[SameQ[F, Cot], SameQ[F, cot]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Pattern[F, Blank[]][Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[d, FreeFactors[Cos[Times[c, Plus[a, Times[b, x]]]], x]]], Condition[Times[-1, Dist[Power[Times[b, c], -1], Subst[Int[SubstFor[Times[1, Power[x, -1]], Times[Cos[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x], x], x, Times[Cos[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]]], x]], FunctionOfQ[Times[Cos[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x]]], And[FreeQ[List[a, b, c], x], Or[SameQ[F, Tan], SameQ[F, tan]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Pattern[F, Blank[]][Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[d, FreeFactors[Sin[Times[c, Plus[a, Times[b, x]]]], x]]], Condition[Dist[Times[d, Power[Times[b, c], -1]], Subst[Int[SubstFor[Power[Plus[1, Times[-1, Power[d, 2], Power[x, 2]]], Times[Plus[n, -1], Power[2, -1]]], Times[Sin[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x], x], x, Times[Sin[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]]], x], FunctionOfQ[Times[Sin[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x]]], And[FreeQ[List[a, b, c], x], OddQ[n], NonsumQ[u], Or[SameQ[F, Cos], SameQ[F, cos]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Pattern[F, Blank[]][Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[d, FreeFactors[Sin[Times[c, Plus[a, Times[b, x]]]], x]]], Condition[Dist[Times[d, Power[Times[b, c], -1]], Subst[Int[SubstFor[Power[Plus[1, Times[-1, Power[d, 2], Power[x, 2]]], Times[Plus[Times[-1, n], -1], Power[2, -1]]], Times[Sin[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x], x], x, Times[Sin[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]]], x], FunctionOfQ[Times[Sin[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x]]], And[FreeQ[List[a, b, c], x], OddQ[n], NonsumQ[u], Or[SameQ[F, Sec], SameQ[F, sec]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Pattern[F, Blank[]][Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[d, FreeFactors[Cos[Times[c, Plus[a, Times[b, x]]]], x]]], Condition[Times[-1, Dist[Times[d, Power[Times[b, c], -1]], Subst[Int[SubstFor[Power[Plus[1, Times[-1, Power[d, 2], Power[x, 2]]], Times[Plus[n, -1], Power[2, -1]]], Times[Cos[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x], x], x, Times[Cos[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]]], x]], FunctionOfQ[Times[Cos[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x]]], And[FreeQ[List[a, b, c], x], OddQ[n], NonsumQ[u], Or[SameQ[F, Sin], SameQ[F, sin]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Pattern[F, Blank[]][Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[d, FreeFactors[Cos[Times[c, Plus[a, Times[b, x]]]], x]]], Condition[Times[-1, Dist[Times[d, Power[Times[b, c], -1]], Subst[Int[SubstFor[Power[Plus[1, Times[-1, Power[d, 2], Power[x, 2]]], Times[Plus[Times[-1, n], -1], Power[2, -1]]], Times[Cos[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x], x], x, Times[Cos[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]]], x]], FunctionOfQ[Times[Cos[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x]]], And[FreeQ[List[a, b, c], x], OddQ[n], NonsumQ[u], Or[SameQ[F, Csc], SameQ[F, csc]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Pattern[F, Blank[]][Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[d, FreeFactors[Sin[Times[c, Plus[a, Times[b, x]]]], x]]], Condition[Dist[Times[1, Power[Times[b, c, Power[d, Plus[n, -1]]], -1]], Subst[Int[SubstFor[Times[Power[Plus[1, Times[-1, Power[d, 2], Power[x, 2]]], Times[Plus[n, -1], Power[2, -1]]], Power[Power[x, n], -1]], Times[Sin[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x], x], x, Times[Sin[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]]], x], FunctionOfQ[Times[Sin[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x]]], And[FreeQ[List[a, b, c], x], OddQ[n], NonsumQ[u], Or[SameQ[F, Cot], SameQ[F, cot]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Pattern[F, Blank[]][Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[d, FreeFactors[Cos[Times[c, Plus[a, Times[b, x]]]], x]]], Condition[Times[-1, Dist[Power[Times[b, c, Power[d, Plus[n, -1]]], -1], Subst[Int[SubstFor[Times[Power[Plus[1, Times[-1, Power[d, 2], Power[x, 2]]], Times[Plus[n, -1], Power[2, -1]]], Power[Power[x, n], -1]], Times[Cos[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x], x], x, Times[Cos[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]]], x]], FunctionOfQ[Times[Cos[Times[c, Plus[a, Times[b, x]]]], Power[d, -1]], u, x]]], And[FreeQ[List[a, b, c], x], OddQ[n], NonsumQ[u], Or[SameQ[F, Tan], SameQ[F, tan]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Plus[Pattern[v, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[F, Blank[]][Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[e, FreeFactors[Sin[Times[c, Plus[a, Times[b, x]]]], x]]], Condition[Plus[Int[ActivateTrig[Times[u, v]], x], Dist[d, Int[Times[ActivateTrig[u], Power[Cos[Times[c, Plus[a, Times[b, x]]]], n]], x], x]], FunctionOfQ[Times[Sin[Times[c, Plus[a, Times[b, x]]]], Power[e, -1]], u, x]]], And[FreeQ[List[a, b, c, d], x], Not[FreeQ[v, x]], OddQ[n], NonsumQ[u], Or[SameQ[F, Cos], SameQ[F, cos]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Plus[Pattern[v, Blank[]], Times[Optional[Pattern[d, Blank[]]], Power[Pattern[F, Blank[]][Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[e, FreeFactors[Cos[Times[c, Plus[a, Times[b, x]]]], x]]], Condition[Plus[Int[ActivateTrig[Times[u, v]], x], Dist[d, Int[Times[ActivateTrig[u], Power[Sin[Times[c, Plus[a, Times[b, x]]]], n]], x], x]], FunctionOfQ[Times[Cos[Times[c, Plus[a, Times[b, x]]]], Power[e, -1]], u, x]]], And[FreeQ[List[a, b, c, d], x], Not[FreeQ[v, x]], OddQ[n], NonsumQ[u], Or[SameQ[F, Sin], SameQ[F, sin]]]]], RuleDelayed[HoldPattern[Int[Pattern[u, Blank[]], Pattern[x, Blank[Symbol]]]], With[List[Set[v, FunctionOfTrig[u, x]]], Condition[Simp[With[List[Set[d, FreeFactors[Sin[v], x]]], Dist[Times[d, Power[Coefficient[v, x, 1], -1]], Subst[Int[SubstFor[1, Times[Sin[v], Power[d, -1]], Times[u, Power[Cos[v], -1]], x], x], x, Times[Sin[v], Power[d, -1]]], x]], x], And[Not[FalseQ[v]], FunctionOfQ[NonfreeFactors[Sin[v], x], Times[u, Power[Cos[v], -1]], x]]]]], RuleDelayed[HoldPattern[Int[Pattern[u, Blank[]], Pattern[x, Blank[Symbol]]]], With[List[Set[v, FunctionOfTrig[u, x]]], Condition[Simp[With[List[Set[d, FreeFactors[Cos[v], x]]], Dist[Times[-1, d, Power[Coefficient[v, x, 1], -1]], Subst[Int[SubstFor[1, Times[Cos[v], Power[d, -1]], Times[u, Power[Sin[v], -1]], x], x], x, Times[Cos[v], Power[d, -1]]], x]], x], And[Not[FalseQ[v]], FunctionOfQ[NonfreeFactors[Cos[v], x], Times[u, Power[Sin[v], -1]], x]]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Power[cos[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[b, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[sin[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Plus[a, c], p], Int[ActivateTrig[u], x], x], And[FreeQ[List[a, b, c, d, e, p], x], ZeroQ[Plus[b, Times[-1, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2]], Times[Optional[Pattern[b, Blank[]]], Power[tan[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Plus[a, c], p], Int[ActivateTrig[u], x], x], And[FreeQ[List[a, b, c, d, e, p], x], ZeroQ[Plus[b, c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Power[cot[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[b, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[c, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Plus[a, c], p], Int[ActivateTrig[u], x], x], And[FreeQ[List[a, b, c, d, e, p], x], ZeroQ[Plus[b, c]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Pattern[y, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, DerivativeDivides[ActivateTrig[y], ActivateTrig[u], x]]], Condition[Simp[Times[q, Log[RemoveContent[ActivateTrig[y], x]]], x], Not[FalseQ[q]]]], Not[InertTrigFreeQ[u]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Pattern[w, Blank[]], -1], Power[Pattern[y, Blank[]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, DerivativeDivides[ActivateTrig[Times[y, w]], ActivateTrig[u], x]]], Condition[Simp[Times[q, Log[RemoveContent[ActivateTrig[Times[y, w]], x]]], x], Not[FalseQ[q]]]], Not[InertTrigFreeQ[u]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Pattern[y, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, DerivativeDivides[ActivateTrig[y], ActivateTrig[u], x]]], Condition[Simp[Times[q, ActivateTrig[Power[y, Plus[m, 1]]], Power[Plus[m, 1], -1]], x], Not[FalseQ[q]]]], And[FreeQ[m, x], NonzeroQ[Plus[m, 1]], Not[InertTrigFreeQ[u]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Pattern[y, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Pattern[z, Blank[]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, DerivativeDivides[ActivateTrig[Times[y, z]], ActivateTrig[Times[u, Power[z, Plus[n, Times[-1, m]]]]], x]]], Condition[Simp[Times[q, ActivateTrig[Times[Power[y, Plus[m, 1]], Power[z, Plus[m, 1]]]], Power[Plus[m, 1], -1]], x], Not[FalseQ[q]]]], And[FreeQ[List[m, n], x], NonzeroQ[Plus[m, 1]], Not[InertTrigFreeQ[u]]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Times[Optional[Pattern[a, Blank[]]], Power[Pattern[F, Blank[]][Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[v, ActivateTrig[F[Plus[c, Times[d, x]]]]]], Dist[Times[Power[a, IntPart[n]], Power[Times[v, Power[NonfreeFactors[v, x], -1]], Times[p, IntPart[n]]], Power[Times[a, Power[v, p]], FracPart[n]], Power[Power[NonfreeFactors[v, x], Times[p, FracPart[n]]], -1]], Int[Times[ActivateTrig[u], Power[NonfreeFactors[v, x], Times[n, p]]], x], x]], And[FreeQ[List[a, c, d, n, p], x], InertTrigQ[F], Not[IntegerQ[n]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Times[Optional[Pattern[a, Blank[]]], Power[Times[Optional[Pattern[b, Blank[]]], Pattern[F, Blank[]][Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[p, Blank[]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[v, ActivateTrig[F[Plus[c, Times[d, x]]]]]], Dist[Times[Power[a, IntPart[n]], Power[Times[a, Power[Times[b, v], p]], FracPart[n]], Power[Power[Times[b, v], Times[p, FracPart[n]]], -1]], Int[Times[ActivateTrig[u], Power[Times[b, v], Times[n, p]]], x], x]], And[FreeQ[List[a, b, c, d, n, p], x], InertTrigQ[F], Not[IntegerQ[n]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Pattern[u, Blank[]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[v, FunctionOfTrig[u, x]]], Condition[With[List[Set[d, FreeFactors[Tan[v], x]]], Dist[Times[d, Power[Coefficient[v, x, 1], -1]], Subst[Int[SubstFor[Times[1, Power[Plus[1, Times[Power[d, 2], Power[x, 2]]], -1]], Times[Tan[v], Power[d, -1]], u, x], x], x, Times[Tan[v], Power[d, -1]]], x]], And[Not[FalseQ[v]], FunctionOfQ[NonfreeFactors[Tan[v], x], u, x]]]], InverseFunctionFreeQ[u, x]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Power[sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Times[Optional[Pattern[a, Blank[]]], Power[tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Power[Sec[Plus[c, Times[d, x]]], Times[n, p]], Power[Plus[b, Times[a, Power[Sin[Plus[c, Times[d, x]]], n]]], p]], x], And[FreeQ[List[a, b, c, d], x], IntegersQ[n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Power[cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[a, Blank[]]]], Times[Power[csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[b, Blank[]]]]], Pattern[p, Blank[]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Power[Csc[Plus[c, Times[d, x]]], Times[n, p]], Power[Plus[b, Times[a, Power[Cos[Plus[c, Times[d, x]]], n]]], p]], x], And[FreeQ[List[a, b, c, d], x], IntegersQ[n, p]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Plus[Times[Pattern[a, Blank[]], Power[Pattern[F, Blank[]][Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]][Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ActivateTrig[Times[u, Power[F[Plus[c, Times[d, x]]], Times[n, p]], Power[Plus[a, Times[b, Power[F[Plus[c, Times[d, x]]], Plus[q, Times[-1, p]]]]], n]]], x], And[FreeQ[List[a, b, c, d, p, q], x], InertTrigQ[F], IntegerQ[n], PosQ[Plus[q, Times[-1, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Plus[Times[Pattern[a, Blank[]], Power[Pattern[F, Blank[]][Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]][Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[F, Blank[]][Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[r, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ActivateTrig[Times[u, Power[F[Plus[d, Times[e, x]]], Times[n, p]], Power[Plus[a, Times[b, Power[F[Plus[d, Times[e, x]]], Plus[q, Times[-1, p]]]], Times[c, Power[F[Plus[d, Times[e, x]]], Plus[r, Times[-1, p]]]]], n]]], x], And[FreeQ[List[a, b, c, d, e, p, q, r], x], InertTrigQ[F], IntegerQ[n], PosQ[Plus[q, Times[-1, p]]], PosQ[Plus[r, Times[-1, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[u, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Pattern[F, Blank[]][Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[F, Blank[]][Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[q, Blank[]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ActivateTrig[Times[u, Power[F[Plus[d, Times[e, x]]], Times[n, p]], Power[Plus[b, Times[a, Power[F[Plus[d, Times[e, x]]], Times[-1, p]]], Times[c, Power[F[Plus[d, Times[e, x]]], Plus[q, Times[-1, p]]]]], n]]], x], And[FreeQ[List[a, b, c, d, e, p, q], x], InertTrigQ[F], IntegerQ[n], NegQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Plus[Times[cos[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[a, Blank[]]]], Times[Optional[Pattern[b, Blank[]]], sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[ActivateTrig[u], Power[Times[a, Power[E, Times[-1, a, Power[b, -1], Plus[c, Times[d, x]]]]], n]], x], And[FreeQ[List[a, b, c, d, n], x], ZeroQ[Plus[Power[a, 2], Power[b, 2]]]]]], RuleDelayed[HoldPattern[Int[Pattern[u, Blank[]], Pattern[x, Blank[Symbol]]]], Condition[Int[TrigSimplify[u], x], TrigSimplifyQ[u]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Times[Pattern[a, Blank[]], Pattern[v, Blank[]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[uu, ActivateTrig[u]], Set[vv, ActivateTrig[v]]], Dist[Times[Power[a, IntPart[p]], Power[Times[a, vv], FracPart[p]], Power[Power[vv, FracPart[p]], -1]], Int[Times[uu, Power[vv, p]], x], x]], And[FreeQ[List[a, p], x], Not[IntegerQ[p]], Not[InertTrigFreeQ[v]]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Power[Pattern[v, Blank[]], Pattern[m, Blank[]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[uu, ActivateTrig[u]], Set[vv, ActivateTrig[v]]], Dist[Times[Power[Power[vv, m], FracPart[p]], Power[Power[vv, Times[m, FracPart[p]]], -1]], Int[Times[uu, Power[vv, Times[m, p]]], x], x]], And[FreeQ[List[m, p], x], Not[IntegerQ[p]], Not[InertTrigFreeQ[v]]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Times[Power[Pattern[v, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Pattern[w, Blank[]], Optional[Pattern[n, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[uu, ActivateTrig[u]], Set[vv, ActivateTrig[v]], Set[ww, ActivateTrig[w]]], Dist[Times[Power[Times[Power[vv, m], Power[ww, n]], FracPart[p]], Power[Times[Power[vv, Times[m, FracPart[p]]], Power[ww, Times[n, FracPart[p]]]], -1]], Int[Times[uu, Power[vv, Times[m, p]], Power[ww, Times[n, p]]], x], x]], And[FreeQ[List[m, n, p], x], Not[IntegerQ[p]], Or[Not[InertTrigFreeQ[v]], Not[InertTrigFreeQ[w]]]]]], RuleDelayed[HoldPattern[Int[Pattern[u, Blank[]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[v, ExpandTrig[u, x]]], Condition[Int[v, x], SumQ[v]]], Not[InertTrigFreeQ[u]]]], RuleDelayed[HoldPattern[Int[Pattern[u, Blank[]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[w, Block[List[Set[ShowSteps, False], Set[StepCounter, Null]], Int[SubstFor[Times[1, Power[Plus[1, Times[Power[FreeFactors[Tan[Times[FunctionOfTrig[u, x], Power[2, -1]]], x], 2], Power[x, 2]]], -1]], Times[Tan[Times[FunctionOfTrig[u, x], Power[2, -1]]], Power[FreeFactors[Tan[Times[FunctionOfTrig[u, x], Power[2, -1]]], x], -1]], u, x], x]]]], Condition[Module[List[Set[v, FunctionOfTrig[u, x]], d], Simp[CompoundExpression[Set[d, FreeFactors[Tan[Times[v, Power[2, -1]]], x]], Dist[Times[2, d, Power[Coefficient[v, x, 1], -1]], Subst[Int[SubstFor[Times[1, Power[Plus[1, Times[Power[d, 2], Power[x, 2]]], -1]], Times[Tan[Times[v, Power[2, -1]]], Power[d, -1]], u, x], x], x, Times[Tan[Times[v, Power[2, -1]]], Power[d, -1]]], x]], x]], FreeQ[w, Int]]], And[InverseFunctionFreeQ[u, x], Not[FalseQ[FunctionOfTrig[u, x]]]]]], RuleDelayed[HoldPattern[Int[Pattern[u, Blank[]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[v, ActivateTrig[u]]], Int[v, x]], Not[InertTrigFreeQ[u]]]], RuleDelayed[HoldPattern[Int[Times[Cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], m], Power[Sin[Plus[a, Times[b, x]]], Plus[n, 1]], Power[Times[b, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[d, m, Power[Times[b, Plus[n, 1]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Sin[Plus[a, Times[b, x]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, n], x], PositiveIntegerQ[m], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[c, Times[d, x]], m], Power[Cos[Plus[a, Times[b, x]]], Plus[n, 1]], Power[Times[b, Plus[n, 1]], -1]], x]], Dist[Times[d, m, Power[Times[b, Plus[n, 1]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Cos[Plus[a, Times[b, x]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, c, d, n], x], PositiveIntegerQ[m], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[Plus[c, Times[d, x]], m], Times[Power[Sin[Plus[a, Times[b, x]]], n], Power[Cos[Plus[a, Times[b, x]]], p]], x], x], And[FreeQ[List[a, b, c, d, m], x], PositiveIntegerQ[n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Int[Times[Power[Plus[c, Times[d, x]], m], Power[Sin[Plus[a, Times[b, x]]], n], Power[Tan[Plus[a, Times[b, x]]], Plus[p, -2]]], x]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Sin[Plus[a, Times[b, x]]], Plus[n, -2]], Power[Tan[Plus[a, Times[b, x]]], p]], x]], And[FreeQ[List[a, b, c, d, m], x], PositiveIntegerQ[n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Int[Times[Power[Plus[c, Times[d, x]], m], Power[Cos[Plus[a, Times[b, x]]], n], Power[Cot[Plus[a, Times[b, x]]], Plus[p, -2]]], x]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Cos[Plus[a, Times[b, x]]], Plus[n, -2]], Power[Cot[Plus[a, Times[b, x]]], p]], x]], And[FreeQ[List[a, b, c, d, m], x], PositiveIntegerQ[n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], m], Power[Sec[Plus[a, Times[b, x]]], n], Power[Times[b, n], -1]], x], Times[-1, Dist[Times[d, m, Power[Times[b, n], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Sec[Plus[a, Times[b, x]]], n]], x], x]]], And[FreeQ[List[a, b, c, d, n], x], SameQ[p, 1], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[c, Times[d, x]], m], Power[Csc[Plus[a, Times[b, x]]], n], Power[Times[b, n], -1]], x]], Dist[Times[d, m, Power[Times[b, n], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Csc[Plus[a, Times[b, x]]], n]], x], x]], And[FreeQ[List[a, b, c, d, n], x], SameQ[p, 1], RationalQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[c, Times[d, x]], m], Power[Tan[Plus[a, Times[b, x]]], Plus[n, 1]], Power[Times[b, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[d, m, Power[Times[b, Plus[n, 1]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Tan[Plus[a, Times[b, x]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, n], x], PositiveIntegerQ[m], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[c, Times[d, x]], m], Power[Cot[Plus[a, Times[b, x]]], Plus[n, 1]], Power[Times[b, Plus[n, 1]], -1]], x]], Dist[Times[d, m, Power[Times[b, Plus[n, 1]], -1]], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], Power[Cot[Plus[a, Times[b, x]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, c, d, n], x], PositiveIntegerQ[m], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[Tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Int[Times[Power[Plus[c, Times[d, x]], m], Sec[Plus[a, Times[b, x]]], Power[Tan[Plus[a, Times[b, x]]], Plus[p, -2]]], x]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Sec[Plus[a, Times[b, x]]], 3], Power[Tan[Plus[a, Times[b, x]]], Plus[p, -2]]], x]], And[FreeQ[List[a, b, c, d, m], x], PositiveIntegerQ[Times[p, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Int[Times[Power[Plus[c, Times[d, x]], m], Power[Sec[Plus[a, Times[b, x]]], n], Power[Tan[Plus[a, Times[b, x]]], Plus[p, -2]]], x]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Sec[Plus[a, Times[b, x]]], Plus[n, 2]], Power[Tan[Plus[a, Times[b, x]]], Plus[p, -2]]], x]], And[FreeQ[List[a, b, c, d, m, n], x], PositiveIntegerQ[Times[p, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[p, Blank[]]], Csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Int[Times[Power[Plus[c, Times[d, x]], m], Csc[Plus[a, Times[b, x]]], Power[Cot[Plus[a, Times[b, x]]], Plus[p, -2]]], x]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Csc[Plus[a, Times[b, x]]], 3], Power[Cot[Plus[a, Times[b, x]]], Plus[p, -2]]], x]], And[FreeQ[List[a, b, c, d, m], x], PositiveIntegerQ[Times[p, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Pattern[p, Blank[]]], Power[Csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Int[Times[Power[Plus[c, Times[d, x]], m], Power[Csc[Plus[a, Times[b, x]]], n], Power[Cot[Plus[a, Times[b, x]]], Plus[p, -2]]], x]], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Csc[Plus[a, Times[b, x]]], Plus[n, 2]], Power[Cot[Plus[a, Times[b, x]]], Plus[p, -2]]], x]], And[FreeQ[List[a, b, c, d, m, n], x], PositiveIntegerQ[Times[p, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[u, IntHide[Times[Power[Sec[Plus[a, Times[b, x]]], n], Power[Tan[Plus[a, Times[b, x]]], p]], x]]], Plus[Dist[Power[Plus[c, Times[d, x]], m], u, x], Times[-1, Dist[Times[d, m], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], u], x], x]]]], And[FreeQ[List[a, b, c, d, n, p], x], PositiveIntegerQ[m], Or[EvenQ[n], OddQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[u, IntHide[Times[Power[Csc[Plus[a, Times[b, x]]], n], Power[Cot[Plus[a, Times[b, x]]], p]], x]]], Plus[Dist[Power[Plus[c, Times[d, x]], m], u, x], Times[-1, Dist[Times[d, m], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], u], x], x]]]], And[FreeQ[List[a, b, c, d, n, p], x], PositiveIntegerQ[m], Or[EvenQ[n], OddQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[2, n], Int[Times[Power[Plus[c, Times[d, x]], m], Power[Csc[Plus[Times[2, a], Times[2, b, x]]], n]], x], x], And[FreeQ[List[a, b, c, d], x], RationalQ[m], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[u, IntHide[Times[Power[Csc[Plus[a, Times[b, x]]], n], Power[Sec[Plus[a, Times[b, x]]], p]], x]]], Plus[Dist[Power[Plus[c, Times[d, x]], m], u, x], Times[-1, Dist[Times[d, m], Int[Times[Power[Plus[c, Times[d, x]], Plus[m, -1]], u], x], x]]]], And[FreeQ[List[a, b, c, d], x], IntegersQ[n, p], RationalQ[m], Greater[m, 0], Unequal[n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Pattern[F, Blank[]][Pattern[v, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[G, Blank[]][Pattern[w, Blank[]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[u, x], m], Power[F[ExpandToSum[v, x]], n], Power[G[ExpandToSum[v, x]], p]], x], And[FreeQ[List[m, n, p], x], TrigQ[F], TrigQ[G], ZeroQ[Plus[v, Times[-1, w]]], LinearQ[List[u, v, w], x], Not[LinearMatchQ[List[u, v, w], x]]]]], RuleDelayed[HoldPattern[Int[Times[Cos[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[a, Times[b, Sin[Plus[c, Times[d, x]]]]], Plus[n, 1]], Power[Times[b, d, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[f, m, Power[Times[b, d, Plus[n, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, -1]], Power[Plus[a, Times[b, Sin[Plus[c, Times[d, x]]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, n], x], PositiveIntegerQ[m], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cos[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[a, Times[b, Cos[Plus[c, Times[d, x]]]]], Plus[n, 1]], Power[Times[b, d, Plus[n, 1]], -1]], x]], Dist[Times[f, m, Power[Times[b, d, Plus[n, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, -1]], Power[Plus[a, Times[b, Cos[Plus[c, Times[d, x]]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, n], x], PositiveIntegerQ[m], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[a, Times[b, Tan[Plus[c, Times[d, x]]]]], Plus[n, 1]], Power[Times[b, d, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[f, m, Power[Times[b, d, Plus[n, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, -1]], Power[Plus[a, Times[b, Tan[Plus[c, Times[d, x]]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, n], x], PositiveIntegerQ[m], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Times[Cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[a, Times[b, Cot[Plus[c, Times[d, x]]]]], Plus[n, 1]], Power[Times[b, d, Plus[n, 1]], -1]], x]], Dist[Times[f, m, Power[Times[b, d, Plus[n, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, -1]], Power[Plus[a, Times[b, Cot[Plus[c, Times[d, x]]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, n], x], PositiveIntegerQ[m], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sec[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]], Tan[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], Plus[n, 1]], Power[Times[b, d, Plus[n, 1]], -1]], x], Times[-1, Dist[Times[f, m, Power[Times[b, d, Plus[n, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, -1]], Power[Plus[a, Times[b, Sec[Plus[c, Times[d, x]]]]], Plus[n, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, n], x], PositiveIntegerQ[m], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Cot[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Times[Csc[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], Plus[n, 1]], Power[Times[b, d, Plus[n, 1]], -1]], x]], Dist[Times[f, m, Power[Times[b, d, Plus[n, 1]], -1]], Int[Times[Power[Plus[e, Times[f, x]], Plus[m, -1]], Power[Plus[a, Times[b, Csc[Plus[c, Times[d, x]]]]], Plus[n, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, n], x], PositiveIntegerQ[m], NonzeroQ[Plus[n, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[Plus[e, Times[f, x]], m], Times[Power[Sin[Plus[a, Times[b, x]]], p], Power[Sin[Plus[c, Times[d, x]]], q]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[p, q], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Cos[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[Plus[e, Times[f, x]], m], Times[Power[Cos[Plus[a, Times[b, x]]], p], Power[Cos[Plus[c, Times[d, x]]], q]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[p, q], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[Plus[e, Times[f, x]], m], Times[Power[Sin[Plus[a, Times[b, x]]], p], Power[Cos[Plus[c, Times[d, x]]], q]], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], PositiveIntegerQ[p, q]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Pattern[F, Blank[]][Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[G, Blank[]][Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigExpand[Times[Power[Plus[e, Times[f, x]], m], Power[G[Plus[c, Times[d, x]]], q]], F, Plus[c, Times[d, x]], p, Times[b, Power[d, -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, m], x], MemberQ[List[Sin, Cos], F], MemberQ[List[Sec, Csc], G], PositiveIntegerQ[p, q], ZeroQ[Plus[Times[b, c], Times[-1, a, d]]], PositiveIntegerQ[Plus[Times[b, Power[d, -1]], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Sin[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Sin[Plus[d, Times[e, x]]], Power[Plus[Power[e, 2], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]], x], Times[-1, Simp[Times[e, Power[F, Times[c, Plus[a, Times[b, x]]]], Cos[Plus[d, Times[e, x]]], Power[Plus[Power[e, 2], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]], x]]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Power[e, 2], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Cos[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Cos[Plus[d, Times[e, x]]], Power[Plus[Power[e, 2], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]], x], Simp[Times[e, Power[F, Times[c, Plus[a, Times[b, x]]]], Sin[Plus[d, Times[e, x]]], Power[Plus[Power[e, 2], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]], x]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Power[e, 2], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sin[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sin[Plus[d, Times[e, x]]], n], Power[Plus[Times[Power[e, 2], Power[n, 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]], x], Plus[Dist[Times[Times[n, Plus[n, -1], Power[e, 2]], Power[Plus[Times[Power[e, 2], Power[n, 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sin[Plus[d, Times[e, x]]], Plus[n, -2]]], x], x], Times[-1, Simp[Times[e, n, Power[F, Times[c, Plus[a, Times[b, x]]]], Cos[Plus[d, Times[e, x]]], Power[Sin[Plus[d, Times[e, x]]], Plus[n, -1]], Power[Plus[Times[Power[e, 2], Power[n, 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]], x]]]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Times[Power[e, 2], Power[n, 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]]], RationalQ[n], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[m, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Cos[Plus[d, Times[e, x]]], m], Power[Plus[Times[Power[e, 2], Power[m, 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]], x], Plus[Dist[Times[Times[m, Plus[m, -1], Power[e, 2]], Power[Plus[Times[Power[e, 2], Power[m, 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Cos[Plus[d, Times[e, x]]], Plus[m, -2]]], x], x], Simp[Times[e, m, Power[F, Times[c, Plus[a, Times[b, x]]]], Sin[Plus[d, Times[e, x]]], Power[Cos[Plus[d, Times[e, x]]], Plus[m, -1]], Power[Plus[Times[Power[e, 2], Power[m, 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]], x]]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Times[Power[e, 2], Power[m, 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]]], RationalQ[m], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sin[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sin[Plus[d, Times[e, x]]], Plus[n, 2]], Power[Times[Power[e, 2], Plus[n, 1], Plus[n, 2]], -1]], x]], Simp[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Cos[Plus[d, Times[e, x]]], Power[Sin[Plus[d, Times[e, x]]], Plus[n, 1]], Power[Times[e, Plus[n, 1]], -1]], x]], And[FreeQ[List[F, a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[e, 2], Power[Plus[n, 2], 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]]], NonzeroQ[Plus[n, 1]], NonzeroQ[Plus[n, 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Cos[Plus[d, Times[e, x]]], Plus[n, 2]], Power[Times[Power[e, 2], Plus[n, 1], Plus[n, 2]], -1]], x]], Times[-1, Simp[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Sin[Plus[d, Times[e, x]]], Power[Cos[Plus[d, Times[e, x]]], Plus[n, 1]], Power[Times[e, Plus[n, 1]], -1]], x]]], And[FreeQ[List[F, a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[e, 2], Power[Plus[n, 2], 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]]], NonzeroQ[Plus[n, 1]], NonzeroQ[Plus[n, 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sin[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sin[Plus[d, Times[e, x]]], Plus[n, 2]], Power[Times[Power[e, 2], Plus[n, 1], Plus[n, 2]], -1]], x]], Plus[Dist[Times[Plus[Times[Power[e, 2], Power[Plus[n, 2], 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]], Power[Times[Power[e, 2], Plus[n, 1], Plus[n, 2]], -1]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sin[Plus[d, Times[e, x]]], Plus[n, 2]]], x], x], Simp[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Cos[Plus[d, Times[e, x]]], Power[Sin[Plus[d, Times[e, x]]], Plus[n, 1]], Power[Times[e, Plus[n, 1]], -1]], x]]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Times[Power[e, 2], Power[Plus[n, 2], 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]]], RationalQ[n], Less[n, -1], Unequal[n, -2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Cos[Plus[d, Times[e, x]]], Plus[n, 2]], Power[Times[Power[e, 2], Plus[n, 1], Plus[n, 2]], -1]], x]], Plus[Dist[Times[Plus[Times[Power[e, 2], Power[Plus[n, 2], 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]], Power[Times[Power[e, 2], Plus[n, 1], Plus[n, 2]], -1]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Cos[Plus[d, Times[e, x]]], Plus[n, 2]]], x], x], Times[-1, Simp[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Sin[Plus[d, Times[e, x]]], Power[Cos[Plus[d, Times[e, x]]], Plus[n, 1]], Power[Times[e, Plus[n, 1]], -1]], x]]]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Times[Power[e, 2], Power[Plus[n, 2], 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]]], RationalQ[n], Less[n, -1], Unequal[n, -2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sin[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[E, Times[I, n, Plus[d, Times[e, x]]]], Power[Sin[Plus[d, Times[e, x]]], n], Power[Power[Plus[-1, Power[E, Times[2, I, Plus[d, Times[e, x]]]]], n], -1]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Plus[-1, Power[E, Times[2, I, Plus[d, Times[e, x]]]]], n], Power[Power[E, Times[I, n, Plus[d, Times[e, x]]]], -1]], x], x], And[FreeQ[List[F, a, b, c, d, e, n], x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[E, Times[I, n, Plus[d, Times[e, x]]]], Power[Cos[Plus[d, Times[e, x]]], n], Power[Power[Plus[1, Power[E, Times[2, I, Plus[d, Times[e, x]]]]], n], -1]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Plus[1, Power[E, Times[2, I, Plus[d, Times[e, x]]]]], n], Power[Power[E, Times[I, n, Plus[d, Times[e, x]]]], -1]], x], x], And[FreeQ[List[F, a, b, c, d, e, n], x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Tan[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[I, n], Int[ExpandIntegrand[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Plus[1, Times[-1, Power[E, Times[2, I, Plus[d, Times[e, x]]]]]], n], Power[Power[Plus[1, Power[E, Times[2, I, Plus[d, Times[e, x]]]]], n], -1]], x], x], x], And[FreeQ[List[F, a, b, c, d, e], x], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cot[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Times[-1, I], n], Int[ExpandIntegrand[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Plus[1, Power[E, Times[2, I, Plus[d, Times[e, x]]]]], n], Power[Power[Plus[1, Times[-1, Power[E, Times[2, I, Plus[d, Times[e, x]]]]]], n], -1]], x], x], x], And[FreeQ[List[F, a, b, c, d, e], x], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Times[Power[Sec[Plus[d, Times[e, x]]], n], Power[Plus[Times[Power[e, 2], Power[n, 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]]], x], Plus[Dist[Times[Power[e, 2], n, Times[Plus[n, 1], Power[Plus[Times[Power[e, 2], Power[n, 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sec[Plus[d, Times[e, x]]], Plus[n, 2]]], x], x], Times[-1, Simp[Times[e, n, Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sec[Plus[d, Times[e, x]]], Plus[n, 1]], Times[Sin[Plus[d, Times[e, x]]], Power[Plus[Times[Power[e, 2], Power[n, 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]]], x]]]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Times[Power[e, 2], Power[n, 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]]], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Times[Power[Csc[Plus[d, Times[e, x]]], n], Power[Plus[Times[Power[e, 2], Power[n, 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]]], x], Plus[Dist[Times[Power[e, 2], n, Times[Plus[n, 1], Power[Plus[Times[Power[e, 2], Power[n, 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Csc[Plus[d, Times[e, x]]], Plus[n, 2]]], x], x], Simp[Times[e, n, Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Csc[Plus[d, Times[e, x]]], Plus[n, 1]], Times[Cos[Plus[d, Times[e, x]]], Power[Plus[Times[Power[e, 2], Power[n, 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]], -1]]], x]]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Times[Power[e, 2], Power[n, 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]]], RationalQ[n], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sec[Plus[d, Times[e, x]]], Plus[n, -2]], Power[Times[Power[e, 2], Plus[n, -1], Plus[n, -2]], -1]], x]], Simp[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sec[Plus[d, Times[e, x]]], Plus[n, -1]], Sin[Plus[d, Times[e, x]]], Power[Times[e, Plus[n, -1]], -1]], x]], And[FreeQ[List[F, a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]], Times[Power[e, 2], Power[Plus[n, -2], 2]]]], NonzeroQ[Plus[n, -1]], NonzeroQ[Plus[n, -2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Csc[Plus[d, Times[e, x]]], Plus[n, -2]], Power[Times[Power[e, 2], Plus[n, -1], Plus[n, -2]], -1]], x]], Simp[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Csc[Plus[d, Times[e, x]]], Plus[n, -1]], Cos[Plus[d, Times[e, x]]], Power[Times[e, Plus[n, -1]], -1]], x]], And[FreeQ[List[F, a, b, c, d, e, n], x], ZeroQ[Plus[Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]], Times[Power[e, 2], Power[Plus[n, -2], 2]]]], NonzeroQ[Plus[n, -1]], NonzeroQ[Plus[n, -2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sec[Plus[d, Times[e, x]]], Plus[n, -2]], Power[Times[Power[e, 2], Plus[n, -1], Plus[n, -2]], -1]], x]], Plus[Dist[Times[Plus[Times[Power[e, 2], Power[Plus[n, -2], 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]], Power[Times[Power[e, 2], Plus[n, -1], Plus[n, -2]], -1]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sec[Plus[d, Times[e, x]]], Plus[n, -2]]], x], x], Simp[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sec[Plus[d, Times[e, x]]], Plus[n, -1]], Sin[Plus[d, Times[e, x]]], Power[Times[e, Plus[n, -1]], -1]], x]]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]], Times[Power[e, 2], Power[Plus[n, -2], 2]]]], RationalQ[n], Greater[n, 1], Unequal[n, 2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, c, Log[F], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Csc[Plus[d, Times[e, x]]], Plus[n, -2]], Power[Times[Power[e, 2], Plus[n, -1], Plus[n, -2]], -1]], x]], Plus[Dist[Times[Plus[Times[Power[e, 2], Power[Plus[n, -2], 2]], Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]]], Power[Times[Power[e, 2], Plus[n, -1], Plus[n, -2]], -1]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Csc[Plus[d, Times[e, x]]], Plus[n, -2]]], x], x], Times[-1, Simp[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Csc[Plus[d, Times[e, x]]], Plus[n, -1]], Cos[Plus[d, Times[e, x]]], Power[Times[e, Plus[n, -1]], -1]], x]]]], And[FreeQ[List[F, a, b, c, d, e], x], NonzeroQ[Plus[Times[Power[b, 2], Power[c, 2], Power[Log[F], 2]], Times[Power[e, 2], Power[Plus[n, -2], 2]]]], RationalQ[n], Greater[n, 1], Unequal[n, 2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[2, n], Power[E, Times[I, n, Plus[d, Times[e, x]]]], Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Plus[Times[I, e, n], Times[b, c, Log[F]]], -1], Hypergeometric2F1[n, Plus[Times[n, Power[2, -1]], Times[-1, I, b, c, Log[F], Power[Times[2, e], -1]]], Plus[1, Times[n, Power[2, -1]], Times[-1, I, b, c, Log[F], Power[Times[2, e], -1]]], Times[-1, Power[E, Times[2, I, Plus[d, Times[e, x]]]]]]], x], And[FreeQ[List[F, a, b, c, d, e], x], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Times[-2, I], n], Power[E, Times[I, n, Plus[d, Times[e, x]]]], Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Plus[Times[I, e, n], Times[b, c, Log[F]]], -1]], Hypergeometric2F1[n, Plus[Times[n, Power[2, -1]], Times[-1, I, b, c, Log[F], Power[Times[2, e], -1]]], Plus[1, Times[n, Power[2, -1]], Times[-1, I, b, c, Log[F], Power[Times[2, e], -1]]], Power[E, Times[2, I, Plus[d, Times[e, x]]]]]], x], And[FreeQ[List[F, a, b, c, d, e], x], IntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[1, Power[E, Times[2, I, Plus[d, Times[e, x]]]]], n], Power[Sec[Plus[d, Times[e, x]]], n], Power[Power[E, Times[I, n, Plus[d, Times[e, x]]]], -1]], Int[SimplifyIntegrand[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[E, Times[I, n, Plus[d, Times[e, x]]]], Power[Power[Plus[1, Power[E, Times[2, I, Plus[d, Times[e, x]]]]], n], -1]], x], x], x], And[FreeQ[List[F, a, b, c, d, e], x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[1, Times[-1, Power[E, Times[-2, I, Plus[d, Times[e, x]]]]]], n], Power[Csc[Plus[d, Times[e, x]]], n], Power[Power[E, Times[-1, I, n, Plus[d, Times[e, x]]]], -1]], Int[SimplifyIntegrand[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[E, Times[-1, I, n, Plus[d, Times[e, x]]]], Power[Power[Plus[1, Times[-1, Power[E, Times[-2, I, Plus[d, Times[e, x]]]]]], n], -1]], x], x], x], And[FreeQ[List[F, a, b, c, d, e], x], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Sin[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[2, n], Power[f, n]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Cos[Plus[Times[d, Power[2, -1]], Times[e, x, Power[2, -1]], Times[-1, f, Pi, Power[Times[4, g], -1]]]], Times[2, n]]], x], x], And[FreeQ[List[F, a, b, c, d, e, f, g], x], ZeroQ[Plus[Power[f, 2], Times[-1, Power[g, 2]]]], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cos[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Pattern[f, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[2, n], Power[f, n]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Cos[Plus[Times[d, Power[2, -1]], Times[e, x, Power[2, -1]]]], Times[2, n]]], x], x], And[FreeQ[List[F, a, b, c, d, e, f, g], x], ZeroQ[Plus[f, Times[-1, g]]], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cos[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Pattern[f, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[2, n], Power[f, n]], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sin[Plus[Times[d, Power[2, -1]], Times[e, x, Power[2, -1]]]], Times[2, n]]], x], x], And[FreeQ[List[F, a, b, c, d, e, f, g], x], ZeroQ[Plus[f, g]], NegativeIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Sin[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[g, n], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Tan[Plus[Times[f, Pi, Power[Times[4, g], -1]], Times[-1, d, Power[2, -1]], Times[-1, e, x, Power[2, -1]]]], m]], x], x], And[FreeQ[List[F, a, b, c, d, e, f, g], x], ZeroQ[Plus[Power[f, 2], Times[-1, Power[g, 2]]]], IntegersQ[m, n], Equal[Plus[m, n], 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cos[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Pattern[f, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sin[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[f, n], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Tan[Plus[Times[d, Power[2, -1]], Times[e, x, Power[2, -1]]]], m]], x], x], And[FreeQ[List[F, a, b, c, d, e, f, g], x], ZeroQ[Plus[f, Times[-1, g]]], IntegersQ[m, n], Equal[Plus[m, n], 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cos[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Pattern[f, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sin[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[f, n], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Cot[Plus[Times[d, Power[2, -1]], Times[e, x, Power[2, -1]]]], m]], x], x], And[FreeQ[List[F, a, b, c, d, e, f, g], x], ZeroQ[Plus[f, g]], IntegersQ[m, n], Equal[Plus[m, n], 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Plus[Times[Cos[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[i, Blank[]]]], Pattern[h, Blank[]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Sin[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[2, i], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Times[Cos[Plus[d, Times[e, x]]], Power[Plus[f, Times[g, Sin[Plus[d, Times[e, x]]]]], -1]]], x], x], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Times[Plus[h, Times[-1, i, Cos[Plus[d, Times[e, x]]]]], Power[Plus[f, Times[g, Sin[Plus[d, Times[e, x]]]]], -1]]], x]], And[FreeQ[List[F, a, b, c, d, e, f, g, h, i], x], ZeroQ[Plus[Power[f, 2], Times[-1, Power[g, 2]]]], ZeroQ[Plus[Power[h, 2], Times[-1, Power[i, 2]]]], ZeroQ[Plus[Times[g, h], Times[-1, f, i]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cos[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[g, Blank[]]]], Pattern[f, Blank[]]], -1], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Plus[Pattern[h, Blank[]], Times[Optional[Pattern[i, Blank[]]], Sin[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[2, i], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Times[Sin[Plus[d, Times[e, x]]], Power[Plus[f, Times[g, Cos[Plus[d, Times[e, x]]]]], -1]]], x], x], Int[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Times[Plus[h, Times[-1, i, Sin[Plus[d, Times[e, x]]]]], Power[Plus[f, Times[g, Cos[Plus[d, Times[e, x]]]]], -1]]], x]], And[FreeQ[List[F, a, b, c, d, e, f, g, h, i], x], ZeroQ[Plus[Power[f, 2], Times[-1, Power[g, 2]]]], ZeroQ[Plus[Power[h, 2], Times[-1, Power[i, 2]]]], ZeroQ[Plus[Times[g, h], Times[f, i]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Pattern[u, Blank[]]]], Power[Pattern[G, Blank[]][Pattern[v, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[F, Times[c, ExpandToSum[u, x]]], Power[G[ExpandToSum[v, x]], n]], x], And[FreeQ[List[F, c, n], x], TrigQ[G], LinearQ[List[u, v], x], Not[LinearMatchQ[List[u, v], x]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sin[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[u, IntHide[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Sin[Plus[d, Times[e, x]]], n]], x]]], Plus[Dist[Power[x, m], u, x], Times[-1, Dist[m, Int[Times[Power[x, Plus[m, -1]], u], x], x]]]], And[FreeQ[List[F, a, b, c, d, e], x], RationalQ[m], Greater[m, 0], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[u, IntHide[Times[Power[F, Times[c, Plus[a, Times[b, x]]]], Power[Cos[Plus[d, Times[e, x]]], n]], x]]], Plus[Dist[Power[x, m], u, x], Times[-1, Dist[m, Int[Times[Power[x, Plus[m, -1]], u], x], x]]]], And[FreeQ[List[F, a, b, c, d, e], x], RationalQ[m], Greater[m, 0], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Sin[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[F, Times[c, Plus[a, Times[b, x]]]], Times[Power[Sin[Plus[d, Times[e, x]]], m], Power[Cos[Plus[f, Times[g, x]]], n]], x], x], And[FreeQ[List[F, a, b, c, d, e, f, g], x], PositiveIntegerQ[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[p, Blank[]]]], Power[Sin[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Times[Power[x, p], Power[F, Times[c, Plus[a, Times[b, x]]]]], Times[Power[Sin[Plus[d, Times[e, x]]], m], Power[Cos[Plus[f, Times[g, x]]], n]], x], x], And[FreeQ[List[F, a, b, c, d, e, f, g], x], PositiveIntegerQ[m, n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Times[Optional[Pattern[c, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]]], Power[Pattern[G, Blank[]][Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Pattern[H, Blank[]][Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigToExp[Power[F, Times[c, Plus[a, Times[b, x]]]], Times[Power[G[Plus[d, Times[e, x]]], m], Power[H[Plus[d, Times[e, x]]], n]], x], x], And[FreeQ[List[F, a, b, c, d, e], x], PositiveIntegerQ[m, n], TrigQ[G], TrigQ[H]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[F, Blank[]], Pattern[u, Blank[]]], Power[Sin[Pattern[v, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigToExp[Power[F, u], Power[Sin[v], n], x], x], And[FreeQ[F, x], Or[LinearQ[u, x], PolyQ[u, x, 2]], Or[LinearQ[v, x], PolyQ[v, x, 2]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Pattern[v, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigToExp[Power[F, u], Power[Cos[v], n], x], x], And[FreeQ[F, x], Or[LinearQ[u, x], PolyQ[u, x, 2]], Or[LinearQ[v, x], PolyQ[v, x, 2]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Pattern[v, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Pattern[F, Blank[]], Pattern[u, Blank[]]], Power[Sin[Pattern[v, Blank[]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigToExp[Power[F, u], Times[Power[Sin[v], m], Power[Cos[v], n]], x], x], And[FreeQ[F, x], Or[LinearQ[u, x], PolyQ[u, x, 2]], Or[LinearQ[v, x], PolyQ[v, x, 2]], PositiveIntegerQ[m, n]]]], RuleDelayed[HoldPattern[Int[Power[Sin[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Plus[p, 2], Power[Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Plus[p, 1], -1]], x], Simp[Times[x, Cot[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[b, n, Plus[p, 1]], -1]], x]], And[FreeQ[List[a, b, c, n, p], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], 1]], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Power[Cos[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Plus[p, 2], Power[Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Plus[p, 1], -1]], x], Times[-1, Simp[Times[x, Tan[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[b, n, Plus[p, 1]], -1]], x]]], And[FreeQ[List[a, b, c, n, p], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], 1]], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Power[Sin[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[Times[Power[E, Times[a, b, n, p]], Power[Times[2, b, n, p], -1], Power[Times[c, Power[x, n]], Times[-1, Power[Times[n, p], -1]]]], Times[-1, Power[E, Times[-1, a, b, n, p]], Power[Times[2, b, n, p], -1], Power[Times[c, Power[x, n]], Times[1, Power[Times[n, p], -1]]]]], p], x], x], And[FreeQ[List[a, b, c, n], x], PositiveIntegerQ[p], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Cos[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[Times[Power[E, Times[a, b, n, p]], Power[2, -1], Power[Times[c, Power[x, n]], Times[-1, Power[Times[n, p], -1]]]], Times[-1, Power[E, Times[-1, a, b, n, p]], Power[2, -1], Power[Times[c, Power[x, n]], Times[1, Power[Times[n, p], -1]]]]], p], x], x], And[FreeQ[List[a, b, c, n], x], PositiveIntegerQ[p], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], 1]]]]], RuleDelayed[HoldPattern[Int[Sin[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Plus[Times[Power[b, 2], Power[n, 2]], 1], -1]], x], Times[-1, Simp[Times[b, n, x, Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Plus[Times[Power[b, 2], Power[n, 2]], 1], -1]], x]]], And[FreeQ[List[a, b, c, n], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2]], 1]]]]], RuleDelayed[HoldPattern[Int[Cos[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Plus[1, Times[Power[b, 2], Power[n, 2]]], -1]], x], Simp[Times[b, n, x, Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Plus[Times[Power[b, 2], Power[n, 2]], 1], -1]], x]], And[FreeQ[List[a, b, c, n], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2]], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Sin[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], p], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], 1], -1]], x], Plus[Dist[Times[Power[b, 2], Power[n, 2], p, Plus[p, -1], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], 1], -1]], Int[Power[Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], x], x], Times[-1, Simp[Times[b, n, p, x, Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -1]], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], 1], -1]], x]]]], And[FreeQ[List[a, b, c, n], x], RationalQ[p], Greater[p, 1], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Cos[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Power[Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], p], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], 1], -1]], x], Plus[Dist[Times[Power[b, 2], Power[n, 2], p, Plus[p, -1], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], 1], -1]], Int[Power[Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], x], x], Simp[Times[b, n, p, x, Power[Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -1]], Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], 1], -1]], x]]], And[FreeQ[List[a, b, c, n], x], RationalQ[p], Greater[p, 1], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Sin[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Cot[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[b, n, Plus[p, 1]], -1]], x], Plus[Dist[Times[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], 1], Power[Times[Power[b, 2], Power[n, 2], Plus[p, 1], Plus[p, 2]], -1]], Int[Power[Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], x], x], Times[-1, Simp[Times[x, Power[Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, 1], Plus[p, 2]], -1]], x]]]], And[FreeQ[List[a, b, c, n], x], RationalQ[p], Less[p, -1], Unequal[p, -2], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Cos[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Tan[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[b, n, Plus[p, 1]], -1]], x]], Plus[Dist[Times[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], 1], Power[Times[Power[b, 2], Power[n, 2], Plus[p, 1], Plus[p, 2]], -1]], Int[Power[Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], x], x], Times[-1, Simp[Times[x, Power[Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, 1], Plus[p, 2]], -1]], x]]]], And[FreeQ[List[a, b, c, n], x], RationalQ[p], Less[p, -1], Unequal[p, -2], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Sin[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[x, Power[Plus[Times[I, Power[Times[Power[E, Times[I, a]], Power[Times[c, Power[x, n]], Times[I, b]]], -1]], Times[-1, I, Power[E, Times[I, a]], Power[Times[c, Power[x, n]], Times[I, b]]]], p], Power[Times[Plus[1, Times[-1, I, b, n, p]], Power[Plus[2, Times[-1, 2, Power[E, Times[2, I, a]], Power[Times[c, Power[x, n]], Times[2, I, b]]]], p]], -1], Hypergeometric2F1[Times[-1, p], Times[Plus[1, Times[-1, I, b, n, p]], Power[Times[2, I, b, n], -1]], Plus[1, Times[Plus[1, Times[-1, I, b, n, p]], Power[Times[2, I, b, n], -1]]], Times[Power[E, Times[2, I, a]], Power[Times[c, Power[x, n]], Times[2, I, b]]]]], x], And[FreeQ[List[a, b, c, n, p], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Cos[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[x, Power[Plus[Times[1, Power[Times[Power[E, Times[I, a]], Power[Times[c, Power[x, n]], Times[I, b]]], -1]], Times[Power[E, Times[I, a]], Power[Times[c, Power[x, n]], Times[I, b]]]], p], Power[Times[Plus[1, Times[-1, I, b, n, p]], Power[Plus[2, Times[2, Power[E, Times[2, I, a]], Power[Times[c, Power[x, n]], Times[2, I, b]]]], p]], -1], Hypergeometric2F1[Times[-1, p], Times[Plus[1, Times[-1, I, b, n, p]], Power[Times[2, I, b, n], -1]], Plus[1, Times[Plus[1, Times[-1, I, b, n, p]], Power[Times[2, I, b, n], -1]]], Times[-1, Power[E, Times[2, I, a]], Power[Times[c, Power[x, n]], Times[2, I, b]]]]], x], And[FreeQ[List[a, b, c, n, p], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sin[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[p, 2], Power[x, Plus[m, 1]], Power[Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[Plus[m, 1], Plus[p, 1]], -1]], x], Simp[Times[Power[x, Plus[m, 1]], Cot[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[b, n, Plus[p, 1]], -1]], x]], And[FreeQ[List[a, b, c, m, n, p], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], Power[Plus[m, 1], 2]]], NonzeroQ[Plus[p, 1]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[p, 2], Power[x, Plus[m, 1]], Power[Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[Plus[m, 1], Plus[p, 1]], -1]], x], Times[-1, Simp[Times[Power[x, Plus[m, 1]], Tan[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[b, n, Plus[p, 1]], -1]], x]]], And[FreeQ[List[a, b, c, m, n, p], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], Power[Plus[m, 1], 2]]], NonzeroQ[Plus[p, 1]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sin[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[2, p], -1]], Int[ExpandIntegrand[Times[Power[x, m], Power[Plus[Times[Plus[m, 1], Power[Times[b, n, p], -1], Power[E, Times[a, b, n, p, Power[Plus[m, 1], -1]]], Power[Times[c, Power[x, n]], Times[-1, Plus[m, 1], Power[Times[n, p], -1]]]], Times[-1, Plus[m, 1], Power[Times[b, n, p], -1], Power[E, Times[-1, a, b, n, p, Power[Plus[m, 1], -1]]], Power[Times[c, Power[x, n]], Times[Plus[m, 1], Power[Times[n, p], -1]]]]], p]], x], x], x], And[FreeQ[List[a, b, c, m, n], x], PositiveIntegerQ[p], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Power[Plus[m, 1], 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[2, p], -1]], Int[ExpandIntegrand[Times[Power[x, m], Power[Plus[Times[Power[E, Times[a, b, n, p, Power[Plus[m, 1], -1]]], Power[Times[c, Power[x, n]], Times[-1, Plus[m, 1], Power[Times[n, p], -1]]]], Times[-1, Power[E, Times[-1, a, b, n, p, Power[Plus[m, 1], -1]]], Power[Times[c, Power[x, n]], Times[Plus[m, 1], Power[Times[n, p], -1]]]]], p]], x], x], x], And[FreeQ[List[a, b, c, m, n], x], PositiveIntegerQ[p], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Power[Plus[m, 1], 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Sin[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[m, 1], Power[x, Plus[m, 1]], Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Plus[Times[Power[b, 2], Power[n, 2]], Power[Plus[m, 1], 2]], -1]], x], Times[-1, Simp[Times[b, n, Power[x, Plus[m, 1]], Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Plus[Times[Power[b, 2], Power[n, 2]], Power[Plus[m, 1], 2]], -1]], x]]], And[FreeQ[List[a, b, c, m, n], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2]], Power[Plus[m, 1], 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Cos[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[m, 1], Power[x, Plus[m, 1]], Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Plus[Times[Power[b, 2], Power[n, 2]], Power[Plus[m, 1], 2]], -1]], x], Simp[Times[b, n, Power[x, Plus[m, 1]], Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Plus[Times[Power[b, 2], Power[n, 2]], Power[Plus[m, 1], 2]], -1]], x]], And[FreeQ[List[a, b, c, m, n], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2]], Power[Plus[m, 1], 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sin[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[m, 1], Power[x, Plus[m, 1]], Power[Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], p], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Power[Plus[m, 1], 2]], -1]], x], Plus[Dist[Times[Power[b, 2], Power[n, 2], p, Plus[p, -1], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Power[Plus[m, 1], 2]], -1]], Int[Times[Power[x, m], Power[Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]]], x], x], Times[-1, Simp[Times[b, n, p, Power[x, Plus[m, 1]], Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -1]], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Power[Plus[m, 1], 2]], -1]], x]]]], And[FreeQ[List[a, b, c, m, n], x], RationalQ[p], Greater[p, 1], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Power[Plus[m, 1], 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[m, 1], Power[x, Plus[m, 1]], Power[Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], p], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Power[Plus[m, 1], 2]], -1]], x], Plus[Dist[Times[Power[b, 2], Power[n, 2], p, Plus[p, -1], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Power[Plus[m, 1], 2]], -1]], Int[Times[Power[x, m], Power[Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]]], x], x], Simp[Times[b, n, p, Power[x, Plus[m, 1]], Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -1]], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Power[Plus[m, 1], 2]], -1]], x]]], And[FreeQ[List[a, b, c, m, n], x], RationalQ[p], Greater[p, 1], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Power[Plus[m, 1], 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sin[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Cot[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[b, n, Plus[p, 1]], -1]], x], Plus[Dist[Times[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], Power[Plus[m, 1], 2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, 1], Plus[p, 2]], -1]], Int[Times[Power[x, m], Power[Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]]], x], x], Times[-1, Simp[Times[Plus[m, 1], Power[x, Plus[m, 1]], Power[Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, 1], Plus[p, 2]], -1]], x]]]], And[FreeQ[List[a, b, c, m, n], x], RationalQ[p], Less[p, -1], Unequal[p, -2], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], Power[Plus[m, 1], 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[m, 1]], Tan[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[b, n, Plus[p, 1]], -1]], x]], Plus[Dist[Times[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], Power[Plus[m, 1], 2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, 1], Plus[p, 2]], -1]], Int[Times[Power[x, m], Power[Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]]], x], x], Times[-1, Simp[Times[Plus[m, 1], Power[x, Plus[m, 1]], Power[Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, 1], Plus[p, 2]], -1]], x]]]], And[FreeQ[List[a, b, c, m, n], x], RationalQ[p], Less[p, -1], Unequal[p, -2], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, 2], 2]], Power[Plus[m, 1], 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sin[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[x, Plus[m, 1]], Power[Plus[Times[I, Power[E, Times[-1, I, a]], Power[Times[c, Power[x, n]], Times[-1, I, b]]], Times[-1, I, Power[E, Times[I, a]], Power[Times[c, Power[x, n]], Times[I, b]]]], p], Power[Times[Plus[m, 1, Times[-1, I, b, n, p]], Power[Plus[2, Times[-1, 2, Power[E, Times[2, I, a]], Power[Times[c, Power[x, n]], Times[2, I, b]]]], p]], -1], Hypergeometric2F1[Times[-1, p], Times[Plus[m, 1, Times[-1, I, b, n, p]], Power[Times[2, I, b, n], -1]], Plus[1, Times[Plus[m, 1, Times[-1, I, b, n, p]], Power[Times[2, I, b, n], -1]]], Times[Power[E, Times[2, I, a]], Power[Times[c, Power[x, n]], Times[2, I, b]]]]], x], And[FreeQ[List[a, b, c, m, n, p], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Power[Plus[m, 1], 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[x, Plus[m, 1]], Power[Plus[Times[Power[E, Times[-1, I, a]], Power[Times[c, Power[x, n]], Times[-1, I, b]]], Times[Power[E, Times[I, a]], Power[Times[c, Power[x, n]], Times[I, b]]]], p], Power[Times[Plus[m, 1, Times[-1, I, b, n, p]], Power[Plus[2, Times[2, Power[E, Times[2, I, a]], Power[Times[c, Power[x, n]], Times[2, I, b]]]], p]], -1], Hypergeometric2F1[Times[-1, p], Times[Plus[m, 1, Times[-1, I, b, n, p]], Power[Times[2, I, b, n], -1]], Plus[1, Times[Plus[m, 1, Times[-1, I, b, n, p]], Power[Times[2, I, b, n], -1]]], Times[-1, Power[E, Times[2, I, a]], Power[Times[c, Power[x, n]], Times[2, I, b]]]]], x], And[FreeQ[List[a, b, c, m, n, p], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Power[Plus[m, 1], 2]]]]]], RuleDelayed[HoldPattern[Int[Sec[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, Power[E, Times[a, b, n]]], Int[Times[Power[Times[c, Power[x, n]], Times[1, Power[n, -1]]], Power[Plus[Power[E, Times[2, a, b, n]], Power[Times[c, Power[x, n]], Times[2, Power[n, -1]]]], -1]], x], x], And[FreeQ[List[a, b, c, n], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2]], 1]]]]], RuleDelayed[HoldPattern[Int[Csc[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, b, n, Power[E, Times[a, b, n]]], Int[Times[Power[Times[c, Power[x, n]], Times[1, Power[n, -1]]], Power[Plus[Power[E, Times[2, a, b, n]], Times[-1, Power[Times[c, Power[x, n]], Times[2, Power[n, -1]]]]], -1]], x], x], And[FreeQ[List[a, b, c, n], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2]], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Sec[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[p, -2], x, Power[Sec[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Plus[p, -1], -1]], x], Simp[Times[x, Tan[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Sec[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[b, n, Plus[p, -1]], -1]], x]], And[FreeQ[List[a, b, c, n, p], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], 1]], NonzeroQ[Plus[p, -1]]]]], RuleDelayed[HoldPattern[Int[Power[Csc[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[p, -2], x, Power[Csc[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Plus[p, -1], -1]], x], Times[-1, Simp[Times[x, Cot[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Csc[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[b, n, Plus[p, -1]], -1]], x]]], And[FreeQ[List[a, b, c, n, p], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], 1]], NonzeroQ[Plus[p, -1]]]]], RuleDelayed[HoldPattern[Int[Power[Sec[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[x, Tan[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Sec[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[b, n, Plus[p, -1]], -1]], x], Plus[Dist[Times[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], 1], Power[Times[Power[b, 2], Power[n, 2], Plus[p, -1], Plus[p, -2]], -1]], Int[Power[Sec[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], x], x], Times[-1, Simp[Times[x, Power[Sec[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, -1], Plus[p, -2]], -1]], x]]]], And[FreeQ[List[a, b, c, n], x], RationalQ[p], Greater[p, 1], Unequal[p, 2], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Csc[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Cot[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Csc[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[b, n, Plus[p, -1]], -1]], x]], Plus[Dist[Times[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], 1], Power[Times[Power[b, 2], Power[n, 2], Plus[p, -1], Plus[p, -2]], -1]], Int[Power[Csc[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], x], x], Times[-1, Simp[Times[x, Power[Csc[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, -1], Plus[p, -2]], -1]], x]]]], And[FreeQ[List[a, b, c, n], x], RationalQ[p], Greater[p, 1], Unequal[p, 2], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Sec[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, n, p, x, Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Sec[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 1]], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], 1], -1]], x]], Plus[Dist[Times[Power[b, 2], Power[n, 2], p, Plus[p, 1], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], 1], -1]], Int[Power[Sec[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], x], x], Simp[Times[x, Power[Sec[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], p], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], 1], -1]], x]]], And[FreeQ[List[a, b, c, n], x], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Csc[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, n, p, x, Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Csc[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 1]], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], 1], -1]], x], Plus[Dist[Times[Power[b, 2], Power[n, 2], p, Plus[p, 1], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], 1], -1]], Int[Power[Csc[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]], x], x], Simp[Times[x, Power[Csc[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], p], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], 1], -1]], x]]], And[FreeQ[List[a, b, c, n], x], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Sec[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[x, Power[Plus[2, Times[2, Power[E, Times[2, I, a]], Power[Times[c, Power[x, n]], Times[2, I, b]]]], p], Power[Plus[1, Times[I, b, n, p]], -1], Power[Times[Power[E, Times[I, a]], Power[Times[c, Power[x, n]], Times[I, b]], Power[Plus[1, Times[Power[E, Times[2, I, a]], Power[Times[c, Power[x, n]], Times[2, I, b]]]], -1]], p], Hypergeometric2F1[p, Times[Plus[1, Times[I, b, n, p]], Power[Times[2, I, b, n], -1]], Plus[1, Times[Plus[1, Times[I, b, n, p]], Power[Times[2, I, b, n], -1]]], Times[-1, Power[E, Times[2, I, a]], Power[Times[c, Power[x, n]], Times[2, I, b]]]]], x], And[FreeQ[List[a, b, c, n, p], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Csc[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[x, Power[Plus[2, Times[-1, 2, Power[E, Times[2, I, a]], Power[Times[c, Power[x, n]], Times[2, I, b]]]], p], Power[Plus[1, Times[I, b, n, p]], -1], Power[Times[-1, I, Power[E, Times[I, a]], Power[Times[c, Power[x, n]], Times[I, b]], Power[Plus[1, Times[-1, Power[E, Times[2, I, a]], Power[Times[c, Power[x, n]], Times[2, I, b]]]], -1]], p], Hypergeometric2F1[p, Times[Plus[1, Times[I, b, n, p]], Power[Times[2, I, b, n], -1]], Plus[1, Times[Plus[1, Times[I, b, n, p]], Power[Times[2, I, b, n], -1]]], Times[Power[E, Times[2, I, a]], Power[Times[c, Power[x, n]], Times[2, I, b]]]]], x], And[FreeQ[List[a, b, c, n, p], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Sec[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, Power[E, Times[a, b, n, Power[Plus[m, 1], -1]]]], Int[Times[Power[x, m], Power[Times[c, Power[x, n]], Times[Plus[m, 1], Power[n, -1]]], Power[Plus[Power[E, Times[2, a, b, n, Power[Plus[m, 1], -1]]], Power[Times[c, Power[x, n]], Times[2, Plus[m, 1], Power[n, -1]]]], -1]], x], x], And[FreeQ[List[a, b, c, m, n], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2]], Power[Plus[m, 1], 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Csc[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, b, n, Power[Plus[m, 1], -1], Power[E, Times[a, b, n, Power[Plus[m, 1], -1]]]], Int[Times[Power[x, m], Power[Times[c, Power[x, n]], Times[Plus[m, 1], Power[n, -1]]], Power[Plus[Power[E, Times[2, a, b, n, Power[Plus[m, 1], -1]]], Times[-1, Power[Times[c, Power[x, n]], Times[2, Plus[m, 1], Power[n, -1]]]]], -1]], x], x], And[FreeQ[List[a, b, c, m, n], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2]], Power[Plus[m, 1], 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sec[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[p, -2], Power[x, Plus[m, 1]], Power[Sec[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[Plus[m, 1], Plus[p, -1]], -1]], x], Simp[Times[Power[x, Plus[m, 1]], Tan[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Sec[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[b, n, Plus[p, -1]], -1]], x]], And[FreeQ[List[a, b, c, m, n, p], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], Power[Plus[m, 1], 2]]], NonzeroQ[Plus[m, 1]], NonzeroQ[Plus[p, -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csc[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[p, -2], Power[x, Plus[m, 1]], Power[Csc[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[Plus[m, 1], Plus[p, -1]], -1]], x], Times[-1, Simp[Times[Power[x, Plus[m, 1]], Cot[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Csc[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[b, n, Plus[p, -1]], -1]], x]]], And[FreeQ[List[a, b, c, m, n, p], x], ZeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], Power[Plus[m, 1], 2]]], NonzeroQ[Plus[m, 1]], NonzeroQ[Plus[p, -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sec[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, 1]], Tan[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Sec[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[b, n, Plus[p, -1]], -1]], x], Plus[Dist[Times[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], Power[Plus[m, 1], 2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, -1], Plus[p, -2]], -1]], Int[Times[Power[x, m], Power[Sec[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]]], x], x], Times[-1, Simp[Times[Plus[m, 1], Power[x, Plus[m, 1]], Power[Sec[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, -1], Plus[p, -2]], -1]], x]]]], And[FreeQ[List[a, b, c, m, n], x], RationalQ[p], Greater[p, 1], Unequal[p, 2], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], Power[Plus[m, 1], 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csc[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[m, 1]], Cot[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Csc[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[b, n, Plus[p, -1]], -1]], x]], Plus[Dist[Times[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], Power[Plus[m, 1], 2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, -1], Plus[p, -2]], -1]], Int[Times[Power[x, m], Power[Csc[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]]], x], x], Times[-1, Simp[Times[Plus[m, 1], Power[x, Plus[m, 1]], Power[Csc[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, -2]], Power[Times[Power[b, 2], Power[n, 2], Plus[p, -1], Plus[p, -2]], -1]], x]]]], And[FreeQ[List[a, b, c, m, n], x], RationalQ[p], Greater[p, 1], Unequal[p, 2], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[Plus[p, -2], 2]], Power[Plus[m, 1], 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sec[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, n, p, Power[x, Plus[m, 1]], Sin[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Sec[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 1]], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Power[Plus[m, 1], 2]], -1]], x]], Plus[Dist[Times[Power[b, 2], Power[n, 2], p, Plus[p, 1], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Power[Plus[m, 1], 2]], -1]], Int[Times[Power[x, m], Power[Sec[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]]], x], x], Simp[Times[Plus[m, 1], Power[x, Plus[m, 1]], Power[Sec[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], p], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Power[Plus[m, 1], 2]], -1]], x]]], And[FreeQ[List[a, b, c, m, n], x], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Power[Plus[m, 1], 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csc[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Pattern[p, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[b, n, p, Power[x, Plus[m, 1]], Cos[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Power[Csc[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 1]], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Power[Plus[m, 1], 2]], -1]], x], Plus[Dist[Times[Power[b, 2], Power[n, 2], p, Plus[p, 1], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Power[Plus[m, 1], 2]], -1]], Int[Times[Power[x, m], Power[Csc[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], Plus[p, 2]]], x], x], Simp[Times[Plus[m, 1], Power[x, Plus[m, 1]], Power[Csc[Plus[a, Times[b, Log[Times[c, Power[x, n]]]]]], p], Power[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Power[Plus[m, 1], 2]], -1]], x]]], And[FreeQ[List[a, b, c, m, n], x], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Power[Plus[m, 1], 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sec[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[x, Plus[m, 1]], Power[Plus[2, Times[2, Power[E, Times[2, I, a]], Power[Times[c, Power[x, n]], Times[2, I, b]]]], p], Power[Plus[m, 1, Times[I, b, n, p]], -1], Power[Times[Power[E, Times[I, a]], Power[Times[c, Power[x, n]], Times[I, b]], Power[Plus[1, Times[Power[E, Times[2, I, a]], Power[Times[c, Power[x, n]], Times[2, I, b]]]], -1]], p], Hypergeometric2F1[p, Times[Plus[m, 1, Times[I, b, n, p]], Power[Times[2, I, b, n], -1]], Plus[1, Times[Plus[m, 1, Times[I, b, n, p]], Power[Times[2, I, b, n], -1]]], Times[-1, Power[E, Times[2, I, a]], Power[Times[c, Power[x, n]], Times[2, I, b]]]]], x], And[FreeQ[List[a, b, c, m, n, p], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Power[Plus[m, 1], 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csc[Plus[Optional[Pattern[a, Blank[]]], Times[Log[Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Optional[Pattern[b, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[x, Plus[m, 1]], Power[Plus[2, Times[-1, 2, Power[E, Times[2, I, a]], Power[Times[c, Power[x, n]], Times[2, I, b]]]], p], Power[Plus[m, 1, Times[I, b, n, p]], -1], Power[Times[-1, I, Power[E, Times[I, a]], Power[Times[c, Power[x, n]], Times[I, b]], Power[Plus[1, Times[-1, Power[E, Times[2, I, a]], Power[Times[c, Power[x, n]], Times[2, I, b]]]], -1]], p], Hypergeometric2F1[p, Times[Plus[m, 1, Times[I, b, n, p]], Power[Times[2, I, b, n], -1]], Plus[1, Times[Plus[m, 1, Times[I, b, n, p]], Power[Times[2, I, b, n], -1]]], Times[Power[E, Times[2, I, a]], Power[Times[c, Power[x, n]], Times[2, I, b]]]]], x], And[FreeQ[List[a, b, c, m, n, p], x], NonzeroQ[Plus[Times[Power[b, 2], Power[n, 2], Power[p, 2]], Power[Plus[m, 1], 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Sin[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Cos[Times[a, x, Power[Log[Times[b, x]], p]]], Power[a, -1]], x]], Times[-1, Dist[p, Int[Times[Sin[Times[a, x, Power[Log[Times[b, x]], p]]], Power[Log[Times[b, x]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b], x], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Cos[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[a, Blank[]]], Pattern[x, Blank[]]]], Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Sin[Times[a, x, Power[Log[Times[b, x]], p]]], Power[a, -1]], x], Times[-1, Dist[p, Int[Times[Cos[Times[a, x, Power[Log[Times[b, x]], p]]], Power[Log[Times[b, x]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b], x], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Sin[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Cos[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Times[a, n, Power[x, Plus[n, -1]]], -1]], x]], Plus[Times[-1, Dist[Times[p, Power[n, -1]], Int[Times[Sin[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Log[Times[b, x]], Plus[p, -1]]], x], x]], Times[-1, Dist[Times[Plus[n, -1], Power[Times[a, n], -1]], Int[Times[Cos[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Power[x, n], -1]], x], x]]]], And[FreeQ[List[a, b], x], RationalQ[n, p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Cos[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Pattern[n, Blank[]]]]], Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Sin[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Times[a, n, Power[x, Plus[n, -1]]], -1]], x], Plus[Times[-1, Dist[Times[p, Power[n, -1]], Int[Times[Cos[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Log[Times[b, x]], Plus[p, -1]]], x], x]], Dist[Times[Plus[n, -1], Power[Times[a, n], -1]], Int[Times[Sin[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Power[x, n], -1]], x], x]]], And[FreeQ[List[a, b], x], RationalQ[n, p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Sin[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Cos[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Times[a, n], -1]], x]], Times[-1, Dist[Times[p, Power[n, -1]], Int[Times[Power[x, m], Sin[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Log[Times[b, x]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, m, n], x], ZeroQ[Plus[m, Times[-1, n], 1]], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Cos[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Sin[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Times[a, n], -1]], x], Times[-1, Dist[Times[p, Power[n, -1]], Int[Times[Power[x, m], Cos[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Log[Times[b, x]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, m, n], x], ZeroQ[Plus[m, Times[-1, n], 1]], RationalQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Sin[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Cos[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Times[a, n], -1]], x]], Plus[Times[-1, Dist[Times[p, Power[n, -1]], Int[Times[Power[x, m], Sin[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Log[Times[b, x]], Plus[p, -1]]], x], x]], Dist[Times[Plus[m, Times[-1, n], 1], Power[Times[a, n], -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Cos[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]]], x], x]]], And[FreeQ[List[a, b, m, n], x], RationalQ[p], Greater[p, 0], NonzeroQ[Plus[m, Times[-1, n], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Cos[Times[Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[a, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]]]], Power[Log[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[p, Blank[]]]], Power[Pattern[x, Blank[]], Pattern[m, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, Plus[m, Times[-1, n], 1]], Sin[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Times[a, n], -1]], x], Plus[Times[-1, Dist[Times[p, Power[n, -1]], Int[Times[Power[x, m], Cos[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]], Power[Log[Times[b, x]], Plus[p, -1]]], x], x]], Times[-1, Dist[Times[Plus[m, Times[-1, n], 1], Power[Times[a, n], -1]], Int[Times[Power[x, Plus[m, Times[-1, n]]], Sin[Times[a, Power[x, n], Power[Log[Times[b, x]], p]]]], x], x]]]], And[FreeQ[List[a, b, m, n], x], RationalQ[p], Greater[p, 0], NonzeroQ[Plus[m, Times[-1, n], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Sin[Times[Optional[Pattern[a, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[d, -1], Subst[Int[Times[Power[Sin[Times[a, x]], n], Power[Power[x, 2], -1]], x], x, Times[1, Power[Plus[c, Times[d, x]], -1]]], x]], And[FreeQ[List[a, c, d], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Power[Cos[Times[Optional[Pattern[a, Blank[]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[d, -1], Subst[Int[Times[Power[Cos[Times[a, x]], n], Power[Power[x, 2], -1]], x], x, Times[1, Power[Plus[c, Times[d, x]], -1]]], x]], And[FreeQ[List[a, c, d], x], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Power[Sin[Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[d, -1], Subst[Int[Times[Power[Sin[Plus[Times[b, e, Power[d, -1]], Times[-1, e, Plus[Times[b, c], Times[-1, a, d]], x, Power[d, -1]]]], n], Power[Power[x, 2], -1]], x], x, Times[1, Power[Plus[c, Times[d, x]], -1]]], x]], And[FreeQ[List[a, b, c, d], x], PositiveIntegerQ[n], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Power[Cos[Times[Optional[Pattern[e, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], -1]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Dist[Power[d, -1], Subst[Int[Times[Power[Cos[Plus[Times[b, e, Power[d, -1]], Times[-1, e, Plus[Times[b, c], Times[-1, a, d]], x, Power[d, -1]]]], n], Power[Power[x, 2], -1]], x], x, Times[1, Power[Plus[c, Times[d, x]], -1]]], x]], And[FreeQ[List[a, b, c, d], x], PositiveIntegerQ[n], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Power[Sin[Pattern[u, Blank[]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[lst, QuotientOfLinearsParts[u, x]]], Int[Power[Sin[Times[Plus[Part[lst, 1], Times[Part[lst, 2], x]], Power[Plus[Part[lst, 3], Times[Part[lst, 4], x]], -1]]], n], x]], And[PositiveIntegerQ[n], QuotientOfLinearsQ[u, x]]]], RuleDelayed[HoldPattern[Int[Power[Cos[Pattern[u, Blank[]]], Optional[Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Module[List[Set[lst, QuotientOfLinearsParts[u, x]]], Int[Power[Cos[Times[Plus[Part[lst, 1], Times[Part[lst, 2], x]], Power[Plus[Part[lst, 3], Times[Part[lst, 4], x]], -1]]], n], x]], And[PositiveIntegerQ[n], QuotientOfLinearsQ[u, x]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Sin[Pattern[v, Blank[]]], Optional[Pattern[p, Blank[]]]], Power[Sin[Pattern[w, Blank[]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[Sin[v], Plus[p, q]]], x], ZeroQ[Plus[v, Times[-1, w]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Pattern[v, Blank[]]], Optional[Pattern[p, Blank[]]]], Power[Cos[Pattern[w, Blank[]]], Optional[Pattern[q, Blank[]]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[Cos[v], Plus[p, q]]], x], ZeroQ[Plus[v, Times[-1, w]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Sin[Pattern[v, Blank[]]], Optional[Pattern[p, Blank[]]]], Power[Sin[Pattern[w, Blank[]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Times[Power[Sin[v], p], Power[Sin[w], q]], x], x], And[Or[And[PolynomialQ[v, x], PolynomialQ[w, x]], And[BinomialQ[List[v, w], x], IndependentQ[Cancel[Times[v, Power[w, -1]]], x]]], PositiveIntegerQ[p, q]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Pattern[v, Blank[]]], Optional[Pattern[p, Blank[]]]], Power[Cos[Pattern[w, Blank[]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Times[Power[Cos[v], p], Power[Cos[w], q]], x], x], And[Or[And[PolynomialQ[v, x], PolynomialQ[w, x]], And[BinomialQ[List[v, w], x], IndependentQ[Cancel[Times[v, Power[w, -1]]], x]]], PositiveIntegerQ[p, q]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sin[Pattern[v, Blank[]]], Optional[Pattern[p, Blank[]]]], Power[Sin[Pattern[w, Blank[]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[x, m], Times[Power[Sin[v], p], Power[Sin[w], q]], x], x], And[PositiveIntegerQ[m, p, q], Or[And[PolynomialQ[v, x], PolynomialQ[w, x]], And[BinomialQ[List[v, w], x], IndependentQ[Cancel[Times[v, Power[w, -1]]], x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Pattern[v, Blank[]]], Optional[Pattern[p, Blank[]]]], Power[Cos[Pattern[w, Blank[]]], Optional[Pattern[q, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[x, m], Times[Power[Cos[v], p], Power[Cos[w], q]], x], x], And[PositiveIntegerQ[m, p, q], Or[And[PolynomialQ[v, x], PolynomialQ[w, x]], And[BinomialQ[List[v, w], x], IndependentQ[Cancel[Times[v, Power[w, -1]]], x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Pattern[w, Blank[]]], Optional[Pattern[p, Blank[]]]], Optional[Pattern[u, Blank[]]], Power[Sin[Pattern[v, Blank[]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[2, p], -1]], Int[Times[u, Power[Sin[Times[2, v]], p]], x], x], And[ZeroQ[Plus[v, Times[-1, w]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Pattern[w, Blank[]]], Optional[Pattern[q, Blank[]]]], Power[Sin[Pattern[v, Blank[]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Times[Power[Sin[v], p], Power[Cos[w], q]], x], x], And[PositiveIntegerQ[p, q], Or[And[PolynomialQ[v, x], PolynomialQ[w, x]], And[BinomialQ[List[v, w], x], IndependentQ[Cancel[Times[v, Power[w, -1]]], x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Pattern[w, Blank[]]], Optional[Pattern[q, Blank[]]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Sin[Pattern[v, Blank[]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[Power[x, m], Times[Power[Sin[v], p], Power[Cos[w], q]], x], x], And[PositiveIntegerQ[m, p, q], Or[And[PolynomialQ[v, x], PolynomialQ[w, x]], And[BinomialQ[List[v, w], x], IndependentQ[Cancel[Times[v, Power[w, -1]]], x]]]]]], RuleDelayed[HoldPattern[Int[Times[Sin[Pattern[v, Blank[]]], Power[Tan[Pattern[w, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Int[Times[Cos[v], Power[Tan[w], Plus[n, -1]]], x]], Dist[Cos[Plus[v, Times[-1, w]]], Int[Times[Sec[w], Power[Tan[w], Plus[n, -1]]], x], x]], And[RationalQ[n], Greater[n, 0], FreeQ[Plus[v, Times[-1, w]], x], NonzeroQ[Plus[v, Times[-1, w]]]]]], RuleDelayed[HoldPattern[Int[Times[Cos[Pattern[v, Blank[]]], Power[Cot[Pattern[w, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Int[Times[Sin[v], Power[Cot[w], Plus[n, -1]]], x]], Dist[Cos[Plus[v, Times[-1, w]]], Int[Times[Csc[w], Power[Cot[w], Plus[n, -1]]], x], x]], And[RationalQ[n], Greater[n, 0], FreeQ[Plus[v, Times[-1, w]], x], NonzeroQ[Plus[v, Times[-1, w]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cot[Pattern[w, Blank[]]], Optional[Pattern[n, Blank[]]]], Sin[Pattern[v, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Int[Times[Cos[v], Power[Cot[w], Plus[n, -1]]], x], Dist[Sin[Plus[v, Times[-1, w]]], Int[Times[Csc[w], Power[Cot[w], Plus[n, -1]]], x], x]], And[RationalQ[n], Greater[n, 0], FreeQ[Plus[v, Times[-1, w]], x], NonzeroQ[Plus[v, Times[-1, w]]]]]], RuleDelayed[HoldPattern[Int[Times[Cos[Pattern[v, Blank[]]], Power[Tan[Pattern[w, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Int[Times[Sin[v], Power[Tan[w], Plus[n, -1]]], x], Times[-1, Dist[Sin[Plus[v, Times[-1, w]]], Int[Times[Sec[w], Power[Tan[w], Plus[n, -1]]], x], x]]], And[RationalQ[n], Greater[n, 0], FreeQ[Plus[v, Times[-1, w]], x], NonzeroQ[Plus[v, Times[-1, w]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Sec[Pattern[w, Blank[]]], Optional[Pattern[n, Blank[]]]], Sin[Pattern[v, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Cos[Plus[v, Times[-1, w]]], Int[Times[Tan[w], Power[Sec[w], Plus[n, -1]]], x], x], Dist[Sin[Plus[v, Times[-1, w]]], Int[Power[Sec[w], Plus[n, -1]], x], x]], And[RationalQ[n], Greater[n, 0], FreeQ[Plus[v, Times[-1, w]], x], NonzeroQ[Plus[v, Times[-1, w]]]]]], RuleDelayed[HoldPattern[Int[Times[Cos[Pattern[v, Blank[]]], Power[Csc[Pattern[w, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Cos[Plus[v, Times[-1, w]]], Int[Times[Cot[w], Power[Csc[w], Plus[n, -1]]], x], x], Times[-1, Dist[Sin[Plus[v, Times[-1, w]]], Int[Power[Csc[w], Plus[n, -1]], x], x]]], And[RationalQ[n], Greater[n, 0], FreeQ[Plus[v, Times[-1, w]], x], NonzeroQ[Plus[v, Times[-1, w]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csc[Pattern[w, Blank[]]], Optional[Pattern[n, Blank[]]]], Sin[Pattern[v, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Sin[Plus[v, Times[-1, w]]], Int[Times[Cot[w], Power[Csc[w], Plus[n, -1]]], x], x], Dist[Cos[Plus[v, Times[-1, w]]], Int[Power[Csc[w], Plus[n, -1]], x], x]], And[RationalQ[n], Greater[n, 0], FreeQ[Plus[v, Times[-1, w]], x], NonzeroQ[Plus[v, Times[-1, w]]]]]], RuleDelayed[HoldPattern[Int[Times[Cos[Pattern[v, Blank[]]], Power[Sec[Pattern[w, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Sin[Plus[v, Times[-1, w]]], Int[Times[Tan[w], Power[Sec[w], Plus[n, -1]]], x], x]], Dist[Cos[Plus[v, Times[-1, w]]], Int[Power[Sec[w], Plus[n, -1]], x], x]], And[RationalQ[n], Greater[n, 0], FreeQ[Plus[v, Times[-1, w]], x], NonzeroQ[Plus[v, Times[-1, w]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Cos[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]], Sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[e, Times[f, x]], m], Power[Plus[a, Times[b, Sin[Plus[Times[2, c], Times[2, d, x]]], Power[2, -1]]], n]], x], FreeQ[List[a, b, c, d, e, f, m, n], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Power[Sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], 2]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[2, n], -1]], Int[Times[Power[x, m], Power[Plus[Times[2, a], b, Times[-1, b, Cos[Plus[Times[2, c], Times[2, d, x]]]]], n]], x], x], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[a, b]], IntegersQ[m, n], Greater[m, 0], Less[n, 0], Or[Equal[n, -1], And[Equal[m, 1], Equal[n, -2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Power[Cos[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Pattern[n, Blank[]]], Power[Pattern[x, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[2, n], -1]], Int[Times[Power[x, m], Power[Plus[Times[2, a], b, Times[b, Cos[Plus[Times[2, c], Times[2, d, x]]]]], n]], x], x], And[FreeQ[List[a, b, c, d], x], NonzeroQ[Plus[a, b]], IntegersQ[m, n], Greater[m, 0], Less[n, 0], Or[Equal[n, -1], And[Equal[m, 1], Equal[n, -2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[d, Plus[m, 1]], -1]], Subst[Int[Times[Power[Plus[Times[d, e], Times[-1, c, f], Times[f, x]], m], Power[Sin[Plus[a, Times[b, Power[x, n]]]], p]], x], x, Plus[c, Times[d, x]]], x], And[FreeQ[List[a, b, c, d, e, f, n], x], PositiveIntegerQ[m], RationalQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Power[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]]]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[d, Plus[m, 1]], -1]], Subst[Int[Times[Power[Plus[Times[d, e], Times[-1, c, f], Times[f, x]], m], Power[Cos[Plus[a, Times[b, Power[x, n]]]], p]], x], x, Plus[c, Times[d, x]]], x], And[FreeQ[List[a, b, c, d, e, f, n], x], PositiveIntegerQ[m], RationalQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Power[Cos[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[b, Blank[]]]], Times[Optional[Pattern[c, Blank[]]], Power[Sin[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[2, Int[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[Times[2, a], b, c, Times[Plus[b, Times[-1, c]], Cos[Plus[Times[2, d], Times[2, e, x]]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, g], x], PositiveIntegerQ[m], NonzeroQ[Plus[a, b]], NonzeroQ[Plus[a, c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Pattern[b, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Tan[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[2, Int[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[b, c, Times[Plus[b, Times[-1, c]], Cos[Plus[Times[2, d], Times[2, e, x]]]]], -1]], x], x], And[FreeQ[List[b, c, d, e, f, g], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Optional[Pattern[b, Blank[]]], Times[Optional[Pattern[a, Blank[]]], Power[Sec[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2]], Times[Optional[Pattern[c, Blank[]]], Power[Tan[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[2, Int[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[Times[2, a], b, c, Times[Plus[b, Times[-1, c]], Cos[Plus[Times[2, d], Times[2, e, x]]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, g], x], PositiveIntegerQ[m], NonzeroQ[Plus[a, b]], NonzeroQ[Plus[a, c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Times[Power[Cot[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[b, Blank[]]]], Pattern[c, Blank[]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[2, Int[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[b, c, Times[Plus[b, Times[-1, c]], Cos[Plus[Times[2, d], Times[2, e, x]]]]], -1]], x], x], And[FreeQ[List[b, c, d, e, f, g], x], PositiveIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Power[Plus[Times[Power[Csc[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[a, Blank[]]]], Times[Power[Cot[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]]], 2], Optional[Pattern[b, Blank[]]]], Optional[Pattern[c, Blank[]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[2, Int[Times[Power[Plus[f, Times[g, x]], m], Power[Plus[Times[2, a], b, c, Times[Plus[b, Times[-1, c]], Cos[Plus[Times[2, d], Times[2, e, x]]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, g], x], PositiveIntegerQ[m], NonzeroQ[Plus[a, b]], NonzeroQ[Plus[a, c]]]]], RuleDelayed[HoldPattern[Int[Times[Cos[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[I, Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[Times[b, f, Plus[m, 1]], -1]], x]], Plus[Int[Times[Power[Plus[e, Times[f, x]], m], Power[E, Times[I, Plus[c, Times[d, x]]]], Power[Plus[a, Times[-1, Rt[Plus[Power[a, 2], Times[-1, Power[b, 2]]], 2]], Times[-1, I, b, Power[E, Times[I, Plus[c, Times[d, x]]]]]], -1]], x], Int[Times[Power[Plus[e, Times[f, x]], m], Power[E, Times[I, Plus[c, Times[d, x]]]], Power[Plus[a, Rt[Plus[Power[a, 2], Times[-1, Power[b, 2]]], 2], Times[-1, I, b, Power[E, Times[I, Plus[c, Times[d, x]]]]]], -1]], x]]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], PosQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cos[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[I, Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[Times[b, f, Plus[m, 1]], -1]], x], Plus[Times[-1, Dist[I, Int[Times[Power[Plus[e, Times[f, x]], m], Power[E, Times[I, Plus[c, Times[d, x]]]], Power[Plus[a, Times[-1, Rt[Plus[Power[a, 2], Times[-1, Power[b, 2]]], 2]], Times[b, Power[E, Times[I, Plus[c, Times[d, x]]]]]], -1]], x], x]], Times[-1, Dist[I, Int[Times[Power[Plus[e, Times[f, x]], m], Power[E, Times[I, Plus[c, Times[d, x]]]], Power[Plus[a, Rt[Plus[Power[a, 2], Times[-1, Power[b, 2]]], 2], Times[b, Power[E, Times[I, Plus[c, Times[d, x]]]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], PosQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Cos[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[I, Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[Times[b, f, Plus[m, 1]], -1]], x]], Plus[Dist[I, Int[Times[Power[Plus[e, Times[f, x]], m], Power[E, Times[I, Plus[c, Times[d, x]]]], Power[Plus[Times[I, a], Times[-1, Rt[Plus[Times[-1, Power[a, 2]], Power[b, 2]], 2]], Times[b, Power[E, Times[I, Plus[c, Times[d, x]]]]]], -1]], x], x], Dist[I, Int[Times[Power[Plus[e, Times[f, x]], m], Power[E, Times[I, Plus[c, Times[d, x]]]], Power[Plus[Times[I, a], Rt[Plus[Times[-1, Power[a, 2]], Power[b, 2]], 2], Times[b, Power[E, Times[I, Plus[c, Times[d, x]]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], NegQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cos[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[I, Power[Plus[e, Times[f, x]], Plus[m, 1]], Power[Times[b, f, Plus[m, 1]], -1]], x], Plus[Int[Times[Power[Plus[e, Times[f, x]], m], Power[E, Times[I, Plus[c, Times[d, x]]]], Power[Plus[Times[I, a], Times[-1, Rt[Plus[Times[-1, Power[a, 2]], Power[b, 2]], 2]], Times[I, b, Power[E, Times[I, Plus[c, Times[d, x]]]]]], -1]], x], Int[Times[Power[Plus[e, Times[f, x]], m], Power[E, Times[I, Plus[c, Times[d, x]]]], Power[Plus[Times[I, a], Rt[Plus[Times[-1, Power[a, 2]], Power[b, 2]], 2], Times[I, b, Power[E, Times[I, Plus[c, Times[d, x]]]]]], -1]], x]]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], NegQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[a, -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Cos[Plus[c, Times[d, x]]], Plus[n, -2]]], x], x], Times[-1, Dist[Times[1, Power[b, -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Cos[Plus[c, Times[d, x]]], Plus[n, -2]], Sin[Plus[c, Times[d, x]]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], IntegerQ[n], Greater[n, 1], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cos[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[a, -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Sin[Plus[c, Times[d, x]]], Plus[n, -2]]], x], x], Times[-1, Dist[Times[1, Power[b, -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Sin[Plus[c, Times[d, x]]], Plus[n, -2]], Cos[Plus[c, Times[d, x]]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], IntegerQ[n], Greater[n, 1], ZeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[a, Power[Power[b, 2], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Cos[Plus[c, Times[d, x]]], Plus[n, -2]]], x], x], Plus[Times[-1, Dist[Times[1, Power[b, -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Cos[Plus[c, Times[d, x]]], Plus[n, -2]], Sin[Plus[c, Times[d, x]]]], x], x]], Times[-1, Dist[Times[Plus[Power[a, 2], Times[-1, Power[b, 2]]], Power[Power[b, 2], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Cos[Plus[c, Times[d, x]]], Plus[n, -2]], Power[Plus[a, Times[b, Sin[Plus[c, Times[d, x]]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], IntegerQ[n], Greater[n, 1], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cos[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -1], Power[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Pattern[n, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[a, Power[Power[b, 2], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Sin[Plus[c, Times[d, x]]], Plus[n, -2]]], x], x], Plus[Times[-1, Dist[Times[1, Power[b, -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Sin[Plus[c, Times[d, x]]], Plus[n, -2]], Cos[Plus[c, Times[d, x]]]], x], x]], Times[-1, Dist[Times[Plus[Power[a, 2], Times[-1, Power[b, 2]]], Power[Power[b, 2], -1]], Int[Times[Power[Plus[e, Times[f, x]], m], Power[Sin[Plus[c, Times[d, x]]], Plus[n, -2]], Power[Plus[a, Times[b, Cos[Plus[c, Times[d, x]]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], PositiveIntegerQ[m], IntegerQ[n], Greater[n, 1], NonzeroQ[Plus[Power[a, 2], Times[-1, Power[b, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]], -2], Plus[Pattern[A, Blank[]], Times[Optional[Pattern[B, Blank[]]], Sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[B, Plus[e, Times[f, x]], Cos[Plus[c, Times[d, x]]], Power[Times[a, d, Plus[a, Times[b, Sin[Plus[c, Times[d, x]]]]]], -1]], x]], Dist[Times[B, f, Power[Times[a, d], -1]], Int[Times[Cos[Plus[c, Times[d, x]]], Power[Plus[a, Times[b, Sin[Plus[c, Times[d, x]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, A, B], x], ZeroQ[Plus[Times[a, A], Times[-1, b, B]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Times[Cos[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], -2], Plus[Times[Cos[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[B, Blank[]]]], Pattern[A, Blank[]]], Plus[Optional[Pattern[e, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Pattern[x, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[B, Plus[e, Times[f, x]], Sin[Plus[c, Times[d, x]]], Power[Times[a, d, Plus[a, Times[b, Cos[Plus[c, Times[d, x]]]]]], -1]], x], Times[-1, Dist[Times[B, f, Power[Times[a, d], -1]], Int[Times[Sin[Plus[c, Times[d, x]]], Power[Plus[a, Times[b, Cos[Plus[c, Times[d, x]]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, A, B], x], ZeroQ[Plus[Times[a, A], Times[-1, b, B]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Sec[Pattern[v, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Tan[Pattern[v, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[Times[a, Cos[v]], Times[b, Sin[v]]], n], x], And[FreeQ[List[a, b], x], IntegersQ[m, n], Equal[Plus[m, n], 0], OddQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Csc[Pattern[v, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Cot[Pattern[v, Blank[]]], Optional[Pattern[b, Blank[]]]], Pattern[a, Blank[]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Power[Plus[Times[b, Cos[v]], Times[a, Sin[v]]], n], x], And[FreeQ[List[a, b], x], IntegersQ[m, n], Equal[Plus[m, n], 0], OddQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Sin[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Sin[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[u, Times[Power[Sin[Plus[a, Times[b, x]]], m], Power[Sin[Plus[c, Times[d, x]]], n]], x], x], And[FreeQ[List[a, b, c, d], x], PositiveIntegerQ[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Cos[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[m, Blank[]]]], Power[Cos[Plus[Optional[Pattern[c, Blank[]]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]], Optional[Pattern[n, Blank[]]]], Optional[Pattern[u, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandTrigReduce[u, Times[Power[Cos[Plus[a, Times[b, x]]], m], Power[Cos[Plus[c, Times[d, x]]], n]], x], x], And[FreeQ[List[a, b, c, d], x], PositiveIntegerQ[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Sec[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Sec[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Csc[Times[Plus[Times[b, c], Times[-1, a, d]], Power[d, -1]]], Int[Tan[Plus[a, Times[b, x]]], x], x]], Dist[Csc[Times[Plus[Times[b, c], Times[-1, a, d]], Power[b, -1]]], Int[Tan[Plus[c, Times[d, x]]], x], x]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[b, 2], Times[-1, Power[d, 2]]]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Csc[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Csc[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Csc[Times[Plus[Times[b, c], Times[-1, a, d]], Power[b, -1]]], Int[Cot[Plus[a, Times[b, x]]], x], x], Times[-1, Dist[Csc[Times[Plus[Times[b, c], Times[-1, a, d]], Power[d, -1]]], Int[Cot[Plus[c, Times[d, x]]], x], x]]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[b, 2], Times[-1, Power[d, 2]]]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Tan[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Tan[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, x, Power[d, -1]], x]], Dist[Times[b, Power[d, -1], Cos[Times[Plus[Times[b, c], Times[-1, a, d]], Power[d, -1]]]], Int[Times[Sec[Plus[a, Times[b, x]]], Sec[Plus[c, Times[d, x]]]], x], x]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[b, 2], Times[-1, Power[d, 2]]]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Cot[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]]]], Cot[Plus[Pattern[c, Blank[]], Times[Optional[Pattern[d, Blank[]]], Pattern[x, Blank[]]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[b, x, Power[d, -1]], x]], Dist[Cos[Times[Plus[Times[b, c], Times[-1, a, d]], Power[d, -1]]], Int[Times[Csc[Plus[a, Times[b, x]]], Csc[Plus[c, Times[d, x]]]], x], x]], And[FreeQ[List[a, b, c, d], x], ZeroQ[Plus[Power[b, 2], Times[-1, Power[d, 2]]]], NonzeroQ[Plus[Times[b, c], Times[-1, a, d]]]]]], RuleDelayed[HoldPattern[Int[Times[Optional[Pattern[u, Blank[]]], Power[Plus[Times[Cos[Pattern[v, Blank[]]], Optional[Pattern[a, Blank[]]]], Times[Optional[Pattern[b, Blank[]]], Sin[Pattern[v, Blank[]]]]], Optional[Pattern[n, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[u, Power[Times[a, Power[E, Times[-1, a, Power[b, -1], v]]], n]], x], And[FreeQ[List[a, b, n], x], ZeroQ[Plus[Power[a, 2], Power[b, 2]]]]]]]